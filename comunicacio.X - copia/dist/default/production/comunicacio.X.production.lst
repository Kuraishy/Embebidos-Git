

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 14 19:50:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0013D2                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _nivel
    82  0013D2  07                 	db	7
    83  0000                     _PORTCbits	set	3970
    84  0000                     _TRISC	set	3988
    85  0000                     _OSCCON	set	4051
    86  0000                     _RCREG	set	4014
    87  0000                     _TXREG	set	4013
    88  0000                     _RCSTA	set	4011
    89  0000                     _TXSTA	set	4012
    90  0000                     _SPBRG	set	4015
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTDbits	set	3971
    93  0000                     _TRISDbits	set	3989
    94  0000                     _ADRESL	set	4035
    95  0000                     _ADRESH	set	4036
    96  0000                     _PORTA	set	3968
    97  0000                     _TRISD	set	3989
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TRISAbits	set	3986
   101  0000                     _ADCON2bits	set	4032
   102  0000                     _ADCON0bits	set	4034
   103  0000                     _ADCON0	set	4034
   104  0000                     _TRISB	set	3987
   105  0000                     _TRISA	set	3986
   106  0000                     _ADCON1bits	set	4033
   107  0000                     _T0CONbits	set	4053
   108  0000                     _INTCONbits	set	4082
   109  0000                     _TMR0L	set	4054
   110  0000                     _RCIF	set	31989
   111  0000                     _TXIF	set	31988
   112  0000                     _TRISC7	set	31911
   113  0000                     _TRISC6	set	31910
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0ON	set	32431
   116  0000                     _T08BIT	set	32430
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	opt stack 0
   121  000800  00                 	db	0
   122  000801                     STR_1:
   123  000801  6F                 	db	111	;'o'
   124  000802  6E                 	db	110	;'n'
   125  000803  00                 	db	0
   126                           
   127                           ; #config settings
   128  000804  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  0012B8                     __pcinit:
   132                           	opt stack 0
   133  0012B8                     start_initialization:
   134                           	opt stack 0
   135  0012B8                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Initialize objects allocated to COMRAM (1 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140  0012B8  0ED2               	movlw	low __pidataCOMRAM
   141  0012BA  6EF6               	movwf	tblptrl,c
   142  0012BC  0E13               	movlw	high __pidataCOMRAM
   143  0012BE  6EF7               	movwf	tblptrh,c
   144  0012C0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   145  0012C2  6EF8               	movwf	tblptru,c
   146  0012C4  0009               	tblrd		*+	;fetch initializer
   147  0012C6  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   148                           
   149                           ; Clear objects allocated to COMRAM (11 bytes)
   150  0012CA  EE00  F041         	lfsr	0,__pbssCOMRAM
   151  0012CE  0E0B               	movlw	11
   152  0012D0                     clear_0:
   153  0012D0  6AEE               	clrf	postinc0,c
   154  0012D2  06E8               	decf	wreg,f,c
   155  0012D4  E1FD               	bnz	clear_0
   156  0012D6                     end_of_initialization:
   157                           	opt stack 0
   158  0012D6                     __end_of__initialization:
   159                           	opt stack 0
   160  0012D6  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   161  0012D8  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   162  0012DA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  0012DC  6EF8               	movwf	tblptru,c
   164  0012DE  0E08               	movlw	high __Lsmallconst
   165  0012E0  6EF7               	movwf	tblptrh,c
   166  0012E2  0100               	movlb	0
   167  0012E4  EF45  F007         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  000041                     __pbssCOMRAM:
   177                           	opt stack 0
   178  000041                     _puntuacion:
   179                           	opt stack 0
   180  000041                     	ds	2
   181  000043                     _cantidadBotones:
   182                           	opt stack 0
   183  000043                     	ds	1
   184  000044                     _presionoBoton:
   185                           	opt stack 0
   186  000044                     	ds	1
   187  000045                     _numTopos:
   188                           	opt stack 0
   189  000045                     	ds	1
   190  000046                     main@temp:
   191                           	opt stack 0
   192  000046                     	ds	6
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	dataCOMRAM
   201  00004C                     __pdataCOMRAM:
   202                           	opt stack 0
   203  00004C                     _nivel:
   204                           	opt stack 0
   205  00004C                     	ds	1
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           
   213                           	psect	cstackBANK0
   214  000060                     __pcstackBANK0:
   215                           	opt stack 0
   216  000060                     ___fttol@sign1:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  000060                     	ds	1
   221  000061                     ___fttol@lval:
   222                           	opt stack 0
   223                           
   224                           ; 4 bytes @ 0x1
   225  000061                     	ds	4
   226  000065                     ___fttol@exp1:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x5
   230  000065                     	ds	1
   231  000066                     wait_in_ms@flag:
   232                           	opt stack 0
   233  000066                     USART_Init@baud_rate:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x6
   237  000066                     	ds	2
   238  000068                     wait_in_ms@count:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x8
   242  000068                     	ds	2
   243  00006A                     wait_in_ms@count_ms:
   244                           	opt stack 0
   245  00006A                     USART_Init@temp:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0xA
   249  00006A                     	ds	2
   250  00006C                     lcd_orden@orden:
   251                           	opt stack 0
   252  00006C                     lcd_caracter@caracter:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256  00006C                     	ds	2
   257  00006E                     ??_lcd_orden:
   258  00006E                     ??_lcd_caracter:
   259                           
   260                           ; 1 bytes @ 0xE
   261  00006E                     	ds	5
   262  000073                     lcd_texto@cadena:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x13
   266  000073                     	ds	2
   267  000075                     ??_lcd_texto:
   268                           
   269                           ; 1 bytes @ 0x15
   270  000075                     	ds	1
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           postinc0	equ	0xFEE
   276                           wreg	equ	0xFE8
   277                           
   278                           	psect	cstackCOMRAM
   279  000001                     __pcstackCOMRAM:
   280                           	opt stack 0
   281  000001                     ??_ADCint:
   282  000001                     
   283                           ; 1 bytes @ 0x0
   284  000001                     	ds	18
   285  000013                     ?_strcmp:
   286                           	opt stack 0
   287  000013                     ?___ftpack:
   288                           	opt stack 0
   289  000013                     USART_TransmitChar@out:
   290                           	opt stack 0
   291  000013                     MSdelay@val:
   292                           	opt stack 0
   293  000013                     USART_ReceiveString@Input:
   294                           	opt stack 0
   295  000013                     memset@p1:
   296                           	opt stack 0
   297  000013                     strcmp@s1:
   298                           	opt stack 0
   299  000013                     ___ftpack@arg:
   300                           	opt stack 0
   301                           
   302                           ; 3 bytes @ 0x12
   303  000013                     	ds	1
   304  000014                     USART_SendString@out:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x13
   308  000014                     	ds	1
   309  000015                     USART_ReceiveString@length:
   310                           	opt stack 0
   311  000015                     MSdelay@i:
   312                           	opt stack 0
   313  000015                     memset@c:
   314                           	opt stack 0
   315  000015                     strcmp@s2:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x14
   319  000015                     	ds	1
   320  000016                     ??_USART_ReceiveString:
   321  000016                     ___ftpack@exp:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x15
   325  000016                     	ds	1
   326  000017                     ??_strcmp:
   327  000017                     ___ftpack@sign:
   328                           	opt stack 0
   329  000017                     MSdelay@j:
   330                           	opt stack 0
   331  000017                     memset@n:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x16
   335  000017                     	ds	1
   336  000018                     ??___ftpack:
   337  000018                     strcmp@r:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x17
   341  000018                     	ds	1
   342  000019                     memset@p:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x18
   346  000019                     	ds	2
   347  00001B                     ?___altoft:
   348                           	opt stack 0
   349  00001B                     ?___awtoft:
   350                           	opt stack 0
   351  00001B                     USART_ReceiveString@i:
   352                           	opt stack 0
   353  00001B                     ___awtoft@c:
   354                           	opt stack 0
   355  00001B                     ___altoft@c:
   356                           	opt stack 0
   357                           
   358                           ; 4 bytes @ 0x1A
   359  00001B                     	ds	2
   360  00001D                     USART_ReceiveString@temp:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1C
   364  00001D                     	ds	1
   365  00001E                     ___awtoft@sign:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x1D
   369  00001E                     	ds	1
   370  00001F                     ??___altoft:
   371                           
   372                           ; 1 bytes @ 0x1E
   373  00001F                     	ds	4
   374  000023                     ___altoft@exp:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x22
   378  000023                     	ds	1
   379  000024                     ___altoft@sign:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x23
   383  000024                     	ds	1
   384  000025                     ?___ftdiv:
   385                           	opt stack 0
   386  000025                     ___ftdiv@f1:
   387                           	opt stack 0
   388                           
   389                           ; 3 bytes @ 0x24
   390  000025                     	ds	3
   391  000028                     ___ftdiv@f2:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x27
   395  000028                     	ds	3
   396  00002B                     ??___ftdiv:
   397                           
   398                           ; 1 bytes @ 0x2A
   399  00002B                     	ds	3
   400  00002E                     ___ftdiv@cntr:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x2D
   404  00002E                     	ds	1
   405  00002F                     ___ftdiv@f3:
   406                           	opt stack 0
   407                           
   408                           ; 3 bytes @ 0x2E
   409  00002F                     	ds	3
   410  000032                     ___ftdiv@exp:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x31
   414  000032                     	ds	1
   415  000033                     ___ftdiv@sign:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x32
   419  000033                     	ds	1
   420  000034                     ?___ftadd:
   421                           	opt stack 0
   422  000034                     ?___fttol:
   423                           	opt stack 0
   424  000034                     ___ftadd@f1:
   425                           	opt stack 0
   426  000034                     ___fttol@f1:
   427                           	opt stack 0
   428                           
   429                           ; 3 bytes @ 0x33
   430  000034                     	ds	3
   431  000037                     ___ftadd@f2:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x36
   435  000037                     	ds	1
   436  000038                     ??___fttol:
   437                           
   438                           ; 1 bytes @ 0x37
   439  000038                     	ds	2
   440  00003A                     ??___ftadd:
   441                           
   442                           ; 1 bytes @ 0x39
   443  00003A                     	ds	3
   444  00003D                     ___ftadd@sign:
   445                           	opt stack 0
   446  00003D                     wait_in_ms@time_in_ms:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x3C
   450  00003D                     	ds	1
   451  00003E                     ___ftadd@exp2:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x3D
   455  00003E                     	ds	1
   456  00003F                     ??_wait_in_ms:
   457  00003F                     ___ftadd@exp1:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x3E
   461  00003F                     	ds	1
   462  000040                     
   463                           ; 1 bytes @ 0x3F
   464  000040                     	ds	1
   465  000041                     tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           wreg	equ	0xFE8
   471                           
   472                           ; 1 bytes @ 0x40
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 33 in file "comuni.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         0       0       0       0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels required when called:    7
   498 ;; This function calls:
   499 ;;		_MSdelay
   500 ;;		_USART_Init
   501 ;;		_USART_ReceiveString
   502 ;;		_USART_SendString
   503 ;;		_configBoard
   504 ;;		_lcd_iniciar
   505 ;;		_lcd_limpiar
   506 ;;		_lcd_origen
   507 ;;		_lcd_texto
   508 ;;		_memset
   509 ;;		_strcmp
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516  000E8A                     __ptext0:
   517                           	opt stack 0
   518  000E8A                     _main:
   519                           	opt stack 24
   520                           
   521                           ;comuni.c: 35: OSCCON=0x72;
   522                           
   523                           ;incstack = 0
   524  000E8A  0E72               	movlw	114
   525  000E8C  6ED3               	movwf	4051,c	;volatile
   526                           
   527                           ;comuni.c: 39: TRISC=0;
   528  000E8E  0E00               	movlw	0
   529  000E90  6E94               	movwf	3988,c	;volatile
   530                           
   531                           ;comuni.c: 40: configBoard();
   532  000E92  EC5D  F008         	call	_configBoard	;wreg free
   533                           
   534                           ;comuni.c: 41: lcd_iniciar();
   535  000E96  ECC8  F005         	call	_lcd_iniciar	;wreg free
   536                           
   537                           ;comuni.c: 42: USART_Init(9600);
   538  000E9A  0E80               	movlw	128
   539  000E9C  0100               	movlb	0	; () banked
   540  000E9E  6F66               	movwf	USART_Init@baud_rate& (0+255),b
   541  000EA0  0E25               	movlw	37
   542  000EA2  6F67               	movwf	(USART_Init@baud_rate+1)& (0+255),b
   543  000EA4  0E00               	movlw	0
   544  000EA6  6F68               	movwf	(USART_Init@baud_rate+2)& (0+255),b
   545  000EA8  0E00               	movlw	0
   546  000EAA  6F69               	movwf	(USART_Init@baud_rate+3)& (0+255),b
   547  000EAC  ECE4  F007         	call	_USART_Init	;wreg free
   548                           
   549                           ;comuni.c: 43: MSdelay(50);
   550  000EB0  0E00               	movlw	0
   551  000EB2  6E14               	movwf	MSdelay@val+1,c
   552  000EB4  0E32               	movlw	50
   553  000EB6  6E13               	movwf	MSdelay@val,c
   554  000EB8  EC41  F009         	call	_MSdelay	;wreg free
   555  000EBC                     
   556                           ;comuni.c: 45: lcd_origen();
   557  000EBC  ECC3  F009         	call	_lcd_origen	;wreg free
   558                           
   559                           ;comuni.c: 48: static char temp[6];
   560                           ;comuni.c: 53: USART_ReceiveString(&temp, sizeof temp );
   561  000EC0  0E46               	movlw	low main@temp
   562  000EC2  6E13               	movwf	USART_ReceiveString@Input,c
   563  000EC4  0E00               	movlw	high main@temp
   564  000EC6  6E14               	movwf	USART_ReceiveString@Input+1,c
   565  000EC8  0E06               	movlw	6
   566  000ECA  6E15               	movwf	USART_ReceiveString@length,c
   567  000ECC  ECF2  F006         	call	_USART_ReceiveString	;wreg free
   568                           
   569                           ;comuni.c: 55: USART_SendString(temp);
   570  000ED0  0E46               	movlw	low main@temp
   571  000ED2  6E14               	movwf	USART_SendString@out,c
   572  000ED4  0E00               	movlw	high main@temp
   573  000ED6  6E15               	movwf	USART_SendString@out+1,c
   574  000ED8  ECA2  F009         	call	_USART_SendString	;wreg free
   575                           
   576                           ;comuni.c: 56: lcd_limpiar();
   577  000EDC  ECD1  F009         	call	_lcd_limpiar	;wreg free
   578                           
   579                           ;comuni.c: 57: lcd_texto(temp);
   580  000EE0  0E46               	movlw	low main@temp
   581  000EE2  0100               	movlb	0	; () banked
   582  000EE4  6F73               	movwf	lcd_texto@cadena& (0+255),b
   583  000EE6  0E00               	movlw	high main@temp
   584  000EE8  6F74               	movwf	(lcd_texto@cadena+1)& (0+255),b
   585  000EEA  EC74  F009         	call	_lcd_texto	;wreg free
   586                           
   587                           ;comuni.c: 58: if(!strcmp("on",temp)){
   588  000EEE  0E01               	movlw	low STR_1
   589  000EF0  6E13               	movwf	strcmp@s1,c
   590  000EF2  0E08               	movlw	high STR_1
   591  000EF4  6E14               	movwf	strcmp@s1+1,c
   592  000EF6  0E46               	movlw	low main@temp
   593  000EF8  6E15               	movwf	strcmp@s2,c
   594  000EFA  0E00               	movlw	high main@temp
   595  000EFC  6E16               	movwf	strcmp@s2+1,c
   596  000EFE  ECFF  F008         	call	_strcmp	;wreg free
   597  000F02  5013               	movf	?_strcmp,w,c
   598  000F04  1014               	iorwf	?_strcmp+1,w,c
   599  000F06  A4D8               	btfss	status,2,c
   600  000F08  D002               	goto	l262
   601                           
   602                           ;comuni.c: 59: PORTCbits.RC2=1;
   603  000F0A  8482               	bsf	3970,2,c	;volatile
   604                           
   605                           ;comuni.c: 60: }
   606  000F0C  D001               	goto	l263
   607  000F0E                     l262:
   608                           
   609                           ;comuni.c: 61: else{
   610                           ;comuni.c: 62: PORTCbits.RC2=0;
   611  000F0E  9482               	bcf	3970,2,c	;volatile
   612  000F10                     l263:
   613                           
   614                           ;comuni.c: 63: }
   615                           ;comuni.c: 64: memset(temp, 0, sizeof temp);
   616  000F10  0E46               	movlw	low main@temp
   617  000F12  6E13               	movwf	memset@p1,c
   618  000F14  0E00               	movlw	high main@temp
   619  000F16  6E14               	movwf	memset@p1+1,c
   620  000F18  0E00               	movlw	0
   621  000F1A  6E16               	movwf	memset@c+1,c
   622  000F1C  0E00               	movlw	0
   623  000F1E  6E15               	movwf	memset@c,c
   624  000F20  0E00               	movlw	0
   625  000F22  6E18               	movwf	memset@n+1,c
   626  000F24  0E06               	movlw	6
   627  000F26  6E17               	movwf	memset@n,c
   628  000F28  EC8C  F009         	call	_memset	;wreg free
   629  000F2C  D7C7               	goto	l259
   630  000F2E                     __end_of_main:
   631                           	opt stack 0
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           status	equ	0xFD8
   639                           
   640 ;; *************** function _strcmp *****************
   641 ;; Defined at:
   642 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  s1              2   18[COMRAM] PTR const unsigned char 
   645 ;;		 -> STR_1(3), 
   646 ;;  s2              2   20[COMRAM] PTR const unsigned char 
   647 ;;		 -> main@temp(6), 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  r               1   23[COMRAM] char 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  2   18[COMRAM] int 
   652 ;; Registers used:
   653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         4       0       0       0       0       0       0       0       0
   660 ;;      Locals:         1       0       0       0       0       0       0       0       0
   661 ;;      Temps:          1       0       0       0       0       0       0       0       0
   662 ;;      Totals:         6       0       0       0       0       0       0       0       0
   663 ;;Total ram usage:        6 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text1
   674  0011FE                     __ptext1:
   675                           	opt stack 0
   676  0011FE                     _strcmp:
   677                           	opt stack 29
   678                           
   679                           ;incstack = 0
   680  0011FE  D004               	goto	l820
   681  001200  4A13               	infsnz	strcmp@s1,f,c
   682  001202  2A14               	incf	strcmp@s1+1,f,c
   683  001204  4A15               	infsnz	strcmp@s2,f,c
   684  001206  2A16               	incf	strcmp@s2+1,f,c
   685  001208                     l820:
   686  001208  C013  FFF6         	movff	strcmp@s1,tblptrl
   687  00120C  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   688  001210                     	if	0	;tblptru may be non-zero
   689  001210                     	endif
   690  001210                     	if	0	;tblptru may be non-zero
   691  001210                     	endif
   692  001210  0008               	tblrd		*
   693  001212  CFF5 F017          	movff	tablat,??_strcmp
   694  001216  C015  FFD9         	movff	strcmp@s2,fsr2l
   695  00121A  C016  FFDA         	movff	strcmp@s2+1,fsr2h
   696  00121E  50DF               	movf	indf2,w,c
   697  001220  0800               	sublw	0
   698  001222  2417               	addwf	??_strcmp,w,c
   699  001224  6E18               	movwf	strcmp@r,c
   700  001226  5018               	movf	strcmp@r,w,c
   701  001228  A4D8               	btfss	status,2,c
   702  00122A  D009               	goto	u1540
   703  00122C  C013  FFF6         	movff	strcmp@s1,tblptrl
   704  001230  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   705  001234                     	if	0	;tblptru may be non-zero
   706  001234                     	endif
   707  001234                     	if	0	;tblptru may be non-zero
   708  001234                     	endif
   709  001234  0008               	tblrd		*
   710  001236  50F5               	movf	tablat,w,c
   711  001238  0900               	iorlw	0
   712  00123A  A4D8               	btfss	status,2,c
   713  00123C  D7E1               	goto	l821
   714  00123E                     u1540:
   715  00123E  5018               	movf	strcmp@r,w,c
   716  001240  6E13               	movwf	?_strcmp,c
   717  001242  6A14               	clrf	?_strcmp+1,c
   718  001244  BE13               	btfsc	?_strcmp,7,c
   719  001246  0614               	decf	?_strcmp+1,f,c
   720  001248  0012               	return	
   721  00124A                     __end_of_strcmp:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           indf2	equ	0xFDF
   730                           fsr2h	equ	0xFDA
   731                           fsr2l	equ	0xFD9
   732                           status	equ	0xFD8
   733                           
   734 ;; *************** function _memset *****************
   735 ;; Defined at:
   736 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  p1              2   18[COMRAM] PTR void 
   739 ;;		 -> main@temp(6), 
   740 ;;  c               2   20[COMRAM] int 
   741 ;;  n               2   22[COMRAM] unsigned int 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  p               2   24[COMRAM] PTR unsigned char 
   744 ;;		 -> main@temp(6), 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  2   18[COMRAM] PTR void 
   747 ;; Registers used:
   748 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   754 ;;      Params:         6       0       0       0       0       0       0       0       0
   755 ;;      Locals:         2       0       0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0
   757 ;;      Totals:         8       0       0       0       0       0       0       0       0
   758 ;;Total ram usage:        8 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text2
   769  001318                     __ptext2:
   770                           	opt stack 0
   771  001318                     _memset:
   772                           	opt stack 29
   773                           
   774                           ;incstack = 0
   775  001318  C013  F019         	movff	memset@p1,memset@p
   776  00131C  C014  F01A         	movff	memset@p1+1,memset@p+1
   777  001320  D008               	goto	l694
   778  001322                     l1858:
   779  001322  C019  FFD9         	movff	memset@p,fsr2l
   780  001326  C01A  FFDA         	movff	memset@p+1,fsr2h
   781  00132A  C015  FFDF         	movff	memset@c,indf2
   782  00132E  4A19               	infsnz	memset@p,f,c
   783  001330  2A1A               	incf	memset@p+1,f,c
   784  001332                     l694:
   785  001332  0617               	decf	memset@n,f,c
   786  001334  A0D8               	btfss	status,0,c
   787  001336  0618               	decf	memset@n+1,f,c
   788  001338  2817               	incf	memset@n,w,c
   789  00133A  E1F3               	bnz	l1858
   790  00133C  2818               	incf	memset@n+1,w,c
   791  00133E  B4D8               	btfsc	status,2,c
   792  001340  0012               	return	
   793  001342  D7EF               	goto	l695
   794  001344                     __end_of_memset:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           indf2	equ	0xFDF
   803                           fsr2h	equ	0xFDA
   804                           fsr2l	equ	0xFD9
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _lcd_texto *****************
   808 ;; Defined at:
   809 ;;		line 296 in file "lcd.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  cadena          2   19[BANK0 ] PTR unsigned char 
   812 ;;		 -> main@temp(6), 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   824 ;;      Params:         0       2       0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0       0       0
   826 ;;      Temps:          0       1       0       0       0       0       0       0       0
   827 ;;      Totals:         0       3       0       0       0       0       0       0       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    6
   831 ;; This function calls:
   832 ;;		_lcd_caracter
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text3
   839  0012E8                     __ptext3:
   840                           	opt stack 0
   841  0012E8                     _lcd_texto:
   842                           	opt stack 24
   843                           
   844                           ;lcd.c: 297: while(*cadena != 0x00){
   845                           
   846                           ;incstack = 0
   847  0012E8  D00F               	goto	l127
   848  0012EA                     
   849                           ;lcd.c: 298: lcd_caracter(*cadena);
   850  0012EA  C073  FFD9         	movff	lcd_texto@cadena,fsr2l
   851  0012EE  C074  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   852  0012F2  50DF               	movf	indf2,w,c
   853  0012F4  0100               	movlb	0	; () banked
   854  0012F6  6F75               	movwf	??_lcd_texto& (0+255),b
   855  0012F8  5175               	movf	??_lcd_texto& (0+255),w,b
   856  0012FA  6F6C               	movwf	lcd_caracter@caracter& (0+255),b
   857  0012FC  6B6D               	clrf	(lcd_caracter@caracter+1)& (0+255),b
   858  0012FE  EC94  F008         	call	_lcd_caracter	;wreg free
   859                           
   860                           ;lcd.c: 299: cadena++;
   861  001302  0100               	movlb	0	; () banked
   862  001304  4B73               	infsnz	lcd_texto@cadena& (0+255),f,b
   863  001306  2B74               	incf	(lcd_texto@cadena+1)& (0+255),f,b
   864  001308                     l127:
   865                           
   866                           ; BSR set to: 0
   867  001308  C073  FFD9         	movff	lcd_texto@cadena,fsr2l
   868  00130C  C074  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   869  001310  50DF               	movf	indf2,w,c
   870  001312  B4D8               	btfsc	status,2,c
   871  001314  0012               	return	
   872  001316  D7E9               	goto	l128
   873  001318                     __end_of_lcd_texto:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           indf2	equ	0xFDF
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           status	equ	0xFD8
   885                           
   886 ;; *************** function _lcd_caracter *****************
   887 ;; Defined at:
   888 ;;		line 286 in file "lcd.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  caracter        2   12[BANK0 ] unsigned int 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         0       2       0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0       0       0
   904 ;;      Temps:          0       5       0       0       0       0       0       0       0
   905 ;;      Totals:         0       7       0       0       0       0       0       0       0
   906 ;;Total ram usage:        7 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    5
   909 ;; This function calls:
   910 ;;		_lcd_pulso
   911 ;; This function is called by:
   912 ;;		_lcd_texto
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text4
   917  001128                     __ptext4:
   918                           	opt stack 0
   919  001128                     _lcd_caracter:
   920                           	opt stack 24
   921                           
   922                           ;lcd.c: 287: PORTDbits.RD1=1;
   923                           
   924                           ;incstack = 0
   925  001128  8283               	bsf	3971,1,c	;volatile
   926                           
   927                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   928  00112A  CF83 F06E          	movff	3971,??_lcd_caracter	;volatile
   929  00112E  0E0F               	movlw	15
   930  001130  0100               	movlb	0	; () banked
   931  001132  176E               	andwf	??_lcd_caracter& (0+255),f,b
   932  001134  C06C  F06F         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   933  001138  C06D  F070         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   934  00113C  0E04               	movlw	4
   935  00113E  6F71               	movwf	(??_lcd_caracter+3)& (0+255),b
   936  001140                     u2035:
   937  001140  90D8               	bcf	status,0,c
   938  001142  3370               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
   939  001144  336F               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
   940  001146  2F71               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
   941  001148  D7FB               	goto	u2035
   942  00114A  0E0F               	movlw	15
   943  00114C  176F               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   944  00114E  3883               	swapf	3971,w,c	;volatile
   945  001150  0B0F               	andlw	15
   946  001152  0B0F               	andlw	15
   947  001154  090F               	iorlw	15
   948  001156  156F               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   949  001158  6F72               	movwf	(??_lcd_caracter+4)& (0+255),b
   950  00115A  3972               	swapf	(??_lcd_caracter+4)& (0+255),w,b
   951  00115C  0BF0               	andlw	240
   952  00115E  116E               	iorwf	??_lcd_caracter& (0+255),w,b
   953  001160  6E83               	movwf	3971,c	;volatile
   954                           
   955                           ; BSR set to: 0
   956                           ;lcd.c: 290: lcd_pulso();
   957  001162  ECB4  F009         	call	_lcd_pulso	;wreg free
   958                           
   959                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   960  001166  CF83 F06E          	movff	3971,??_lcd_caracter	;volatile
   961  00116A  0E0F               	movlw	15
   962  00116C  0100               	movlb	0	; () banked
   963  00116E  176E               	andwf	??_lcd_caracter& (0+255),f,b
   964  001170  C06C  F06F         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   965  001174  0E0F               	movlw	15
   966  001176  176F               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   967  001178  3883               	swapf	3971,w,c	;volatile
   968  00117A  0B0F               	andlw	15
   969  00117C  0B0F               	andlw	15
   970  00117E  090F               	iorlw	15
   971  001180  156F               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   972  001182  6F70               	movwf	(??_lcd_caracter+2)& (0+255),b
   973  001184  3970               	swapf	(??_lcd_caracter+2)& (0+255),w,b
   974  001186  0BF0               	andlw	240
   975  001188  116E               	iorwf	??_lcd_caracter& (0+255),w,b
   976  00118A  6E83               	movwf	3971,c	;volatile
   977                           
   978                           ;lcd.c: 292: lcd_pulso();
   979  00118C  ECB4  F009         	call	_lcd_pulso	;wreg free
   980                           
   981                           ;lcd.c: 293: PORTDbits.RD1=0;
   982  001190  9283               	bcf	3971,1,c	;volatile
   983  001192  0012               	return		;funcret
   984  001194                     __end_of_lcd_caracter:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           indf2	equ	0xFDF
   993                           fsr2h	equ	0xFDA
   994                           fsr2l	equ	0xFD9
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _lcd_origen *****************
   998 ;; Defined at:
   999 ;;		line 308 in file "lcd.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    6
  1020 ;; This function calls:
  1021 ;;		_lcd_orden
  1022 ;;		_wait_in_ms
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;;		_lcd_ubicarXY
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text5
  1030  001386                     __ptext5:
  1031                           	opt stack 0
  1032  001386                     _lcd_origen:
  1033                           	opt stack 24
  1034                           
  1035                           ;lcd.c: 309: lcd_orden(0x02);
  1036                           
  1037                           ;incstack = 0
  1038  001386  0E00               	movlw	0
  1039  001388  0100               	movlb	0	; () banked
  1040  00138A  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1041  00138C  0E02               	movlw	2
  1042  00138E  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1043  001390  ECCA  F008         	call	_lcd_orden	;wreg free
  1044                           
  1045                           ;lcd.c: 310: wait_in_ms(4);
  1046  001394  0E00               	movlw	0
  1047  001396  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1048  001398  0E04               	movlw	4
  1049  00139A  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1050  00139C  EC33  F006         	call	_wait_in_ms	;wreg free
  1051  0013A0  0012               	return		;funcret
  1052  0013A2                     __end_of_lcd_origen:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           indf2	equ	0xFDF
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _lcd_limpiar *****************
  1066 ;; Defined at:
  1067 ;;		line 303 in file "lcd.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    6
  1088 ;; This function calls:
  1089 ;;		_lcd_orden
  1090 ;;		_wait_in_ms
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text6
  1097  0013A2                     __ptext6:
  1098                           	opt stack 0
  1099  0013A2                     _lcd_limpiar:
  1100                           	opt stack 24
  1101                           
  1102                           ;lcd.c: 304: lcd_orden(0x01);
  1103                           
  1104                           ;incstack = 0
  1105  0013A2  0E00               	movlw	0
  1106  0013A4  0100               	movlb	0	; () banked
  1107  0013A6  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1108  0013A8  0E01               	movlw	1
  1109  0013AA  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1110  0013AC  ECCA  F008         	call	_lcd_orden	;wreg free
  1111                           
  1112                           ;lcd.c: 305: wait_in_ms(2);
  1113  0013B0  0E00               	movlw	0
  1114  0013B2  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1115  0013B4  0E02               	movlw	2
  1116  0013B6  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1117  0013B8  EC33  F006         	call	_wait_in_ms	;wreg free
  1118  0013BC  0012               	return		;funcret
  1119  0013BE                     __end_of_lcd_limpiar:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           indf2	equ	0xFDF
  1128                           fsr2h	equ	0xFDA
  1129                           fsr2l	equ	0xFD9
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _lcd_iniciar *****************
  1133 ;; Defined at:
  1134 ;;		line 224 in file "lcd.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    6
  1155 ;; This function calls:
  1156 ;;		_lcd_orden
  1157 ;;		_lcd_pulso
  1158 ;;		_wait_in_ms
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text7
  1165  000B90                     __ptext7:
  1166                           	opt stack 0
  1167  000B90                     _lcd_iniciar:
  1168                           	opt stack 24
  1169                           
  1170                           ;lcd.c: 225: TRISDbits.TRISD1=0;
  1171                           
  1172                           ;incstack = 0
  1173  000B90  9295               	bcf	3989,1,c	;volatile
  1174                           
  1175                           ;lcd.c: 226: TRISDbits.TRISD2=0;
  1176  000B92  9495               	bcf	3989,2,c	;volatile
  1177                           
  1178                           ;lcd.c: 227: TRISDbits.TRISD3=0;
  1179  000B94  9695               	bcf	3989,3,c	;volatile
  1180                           
  1181                           ;lcd.c: 228: TRISDbits.TRISD4=0;
  1182  000B96  9895               	bcf	3989,4,c	;volatile
  1183                           
  1184                           ;lcd.c: 229: TRISDbits.TRISD5=0;
  1185  000B98  9A95               	bcf	3989,5,c	;volatile
  1186                           
  1187                           ;lcd.c: 230: TRISDbits.TRISD6=0;
  1188  000B9A  9C95               	bcf	3989,6,c	;volatile
  1189                           
  1190                           ;lcd.c: 231: TRISDbits.TRISD7=0;
  1191  000B9C  9E95               	bcf	3989,7,c	;volatile
  1192                           
  1193                           ;lcd.c: 233: PORTDbits.RD1=0;
  1194  000B9E  9283               	bcf	3971,1,c	;volatile
  1195                           
  1196                           ;lcd.c: 234: PORTDbits.RD2=0;
  1197  000BA0  9483               	bcf	3971,2,c	;volatile
  1198                           
  1199                           ;lcd.c: 235: PORTDbits.RD3=0;
  1200  000BA2  9683               	bcf	3971,3,c	;volatile
  1201                           
  1202                           ;lcd.c: 236: PORTDbits.RD4=0;
  1203  000BA4  9883               	bcf	3971,4,c	;volatile
  1204                           
  1205                           ;lcd.c: 237: PORTDbits.RD5=0;
  1206  000BA6  9A83               	bcf	3971,5,c	;volatile
  1207                           
  1208                           ;lcd.c: 238: PORTDbits.RD6=0;
  1209  000BA8  9C83               	bcf	3971,6,c	;volatile
  1210                           
  1211                           ;lcd.c: 239: PORTDbits.RD7=0;
  1212  000BAA  9E83               	bcf	3971,7,c	;volatile
  1213                           
  1214                           ;lcd.c: 241: wait_in_ms(20);
  1215  000BAC  0E00               	movlw	0
  1216  000BAE  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1217  000BB0  0E14               	movlw	20
  1218  000BB2  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1219  000BB4  EC33  F006         	call	_wait_in_ms	;wreg free
  1220                           
  1221                           ;lcd.c: 242: PORTD=0X03<<4;
  1222  000BB8  0E30               	movlw	48
  1223  000BBA  6E83               	movwf	3971,c	;volatile
  1224                           
  1225                           ;lcd.c: 243: lcd_pulso();
  1226  000BBC  ECB4  F009         	call	_lcd_pulso	;wreg free
  1227                           
  1228                           ;lcd.c: 244: wait_in_ms(4);
  1229  000BC0  0E00               	movlw	0
  1230  000BC2  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1231  000BC4  0E04               	movlw	4
  1232  000BC6  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1233  000BC8  EC33  F006         	call	_wait_in_ms	;wreg free
  1234                           
  1235                           ;lcd.c: 246: PORTD=0X03<<4;
  1236  000BCC  0E30               	movlw	48
  1237  000BCE  6E83               	movwf	3971,c	;volatile
  1238                           
  1239                           ;lcd.c: 247: lcd_pulso();
  1240  000BD0  ECB4  F009         	call	_lcd_pulso	;wreg free
  1241                           
  1242                           ;lcd.c: 248: wait_in_ms(4);
  1243  000BD4  0E00               	movlw	0
  1244  000BD6  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1245  000BD8  0E04               	movlw	4
  1246  000BDA  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1247  000BDC  EC33  F006         	call	_wait_in_ms	;wreg free
  1248                           
  1249                           ;lcd.c: 250: PORTD=0X03<<4;
  1250  000BE0  0E30               	movlw	48
  1251  000BE2  6E83               	movwf	3971,c	;volatile
  1252                           
  1253                           ;lcd.c: 251: lcd_pulso();
  1254  000BE4  ECB4  F009         	call	_lcd_pulso	;wreg free
  1255                           
  1256                           ;lcd.c: 252: wait_in_ms(1);
  1257  000BE8  0E00               	movlw	0
  1258  000BEA  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1259  000BEC  0E01               	movlw	1
  1260  000BEE  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1261  000BF0  EC33  F006         	call	_wait_in_ms	;wreg free
  1262                           
  1263                           ;lcd.c: 254: PORTD=0X02<<4;
  1264  000BF4  0E20               	movlw	32
  1265  000BF6  6E83               	movwf	3971,c	;volatile
  1266                           
  1267                           ;lcd.c: 255: lcd_pulso();
  1268  000BF8  ECB4  F009         	call	_lcd_pulso	;wreg free
  1269                           
  1270                           ;lcd.c: 257: lcd_orden(0x28);
  1271  000BFC  0E00               	movlw	0
  1272  000BFE  0100               	movlb	0	; () banked
  1273  000C00  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1274  000C02  0E28               	movlw	40
  1275  000C04  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1276  000C06  ECCA  F008         	call	_lcd_orden	;wreg free
  1277                           
  1278                           ;lcd.c: 258: wait_in_ms(8);
  1279  000C0A  0E00               	movlw	0
  1280  000C0C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1281  000C0E  0E08               	movlw	8
  1282  000C10  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1283  000C12  EC33  F006         	call	_wait_in_ms	;wreg free
  1284                           
  1285                           ;lcd.c: 260: lcd_orden(0x0c);
  1286  000C16  0E00               	movlw	0
  1287  000C18  0100               	movlb	0	; () banked
  1288  000C1A  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1289  000C1C  0E0C               	movlw	12
  1290  000C1E  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1291  000C20  ECCA  F008         	call	_lcd_orden	;wreg free
  1292                           
  1293                           ;lcd.c: 261: wait_in_ms(8);
  1294  000C24  0E00               	movlw	0
  1295  000C26  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1296  000C28  0E08               	movlw	8
  1297  000C2A  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1298  000C2C  EC33  F006         	call	_wait_in_ms	;wreg free
  1299                           
  1300                           ;lcd.c: 263: lcd_orden(0x01);
  1301  000C30  0E00               	movlw	0
  1302  000C32  0100               	movlb	0	; () banked
  1303  000C34  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1304  000C36  0E01               	movlw	1
  1305  000C38  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1306  000C3A  ECCA  F008         	call	_lcd_orden	;wreg free
  1307                           
  1308                           ;lcd.c: 264: wait_in_ms(2);
  1309  000C3E  0E00               	movlw	0
  1310  000C40  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1311  000C42  0E02               	movlw	2
  1312  000C44  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1313  000C46  EC33  F006         	call	_wait_in_ms	;wreg free
  1314                           
  1315                           ;lcd.c: 266: lcd_orden(0x06);
  1316  000C4A  0E00               	movlw	0
  1317  000C4C  0100               	movlb	0	; () banked
  1318  000C4E  6F6D               	movwf	(lcd_orden@orden+1)& (0+255),b
  1319  000C50  0E06               	movlw	6
  1320  000C52  6F6C               	movwf	lcd_orden@orden& (0+255),b
  1321  000C54  ECCA  F008         	call	_lcd_orden	;wreg free
  1322                           
  1323                           ;lcd.c: 267: wait_in_ms(8);
  1324  000C58  0E00               	movlw	0
  1325  000C5A  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1326  000C5C  0E08               	movlw	8
  1327  000C5E  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1328  000C60  EC33  F006         	call	_wait_in_ms	;wreg free
  1329  000C64  0012               	return		;funcret
  1330  000C66                     __end_of_lcd_iniciar:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           indf2	equ	0xFDF
  1339                           fsr2h	equ	0xFDA
  1340                           fsr2l	equ	0xFD9
  1341                           status	equ	0xFD8
  1342                           
  1343 ;; *************** function _lcd_orden *****************
  1344 ;; Defined at:
  1345 ;;		line 277 in file "lcd.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  orden           2   12[BANK0 ] unsigned int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         0       2       0       0       0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1362 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        7 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    5
  1366 ;; This function calls:
  1367 ;;		_lcd_pulso
  1368 ;; This function is called by:
  1369 ;;		_lcd_iniciar
  1370 ;;		_lcd_limpiar
  1371 ;;		_lcd_origen
  1372 ;;		_lcd_ubicarXY
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text8
  1377  001194                     __ptext8:
  1378                           	opt stack 0
  1379  001194                     _lcd_orden:
  1380                           	opt stack 24
  1381                           
  1382                           ;lcd.c: 278: PORTDbits.RD1=0;
  1383                           
  1384                           ;incstack = 0
  1385  001194  9283               	bcf	3971,1,c	;volatile
  1386                           
  1387                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  1388  001196  CF83 F06E          	movff	3971,??_lcd_orden	;volatile
  1389  00119A  0E0F               	movlw	15
  1390  00119C  0100               	movlb	0	; () banked
  1391  00119E  176E               	andwf	??_lcd_orden& (0+255),f,b
  1392  0011A0  C06C  F06F         	movff	lcd_orden@orden,??_lcd_orden+1
  1393  0011A4  C06D  F070         	movff	lcd_orden@orden+1,??_lcd_orden+2
  1394  0011A8  0E04               	movlw	4
  1395  0011AA  6F71               	movwf	(??_lcd_orden+3)& (0+255),b
  1396  0011AC                     u2025:
  1397  0011AC  90D8               	bcf	status,0,c
  1398  0011AE  3370               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  1399  0011B0  336F               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  1400  0011B2  2F71               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  1401  0011B4  D7FB               	goto	u2025
  1402  0011B6  0E0F               	movlw	15
  1403  0011B8  176F               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1404  0011BA  3883               	swapf	3971,w,c	;volatile
  1405  0011BC  0B0F               	andlw	15
  1406  0011BE  0B0F               	andlw	15
  1407  0011C0  090F               	iorlw	15
  1408  0011C2  156F               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1409  0011C4  6F72               	movwf	(??_lcd_orden+4)& (0+255),b
  1410  0011C6  3972               	swapf	(??_lcd_orden+4)& (0+255),w,b
  1411  0011C8  0BF0               	andlw	240
  1412  0011CA  116E               	iorwf	??_lcd_orden& (0+255),w,b
  1413  0011CC  6E83               	movwf	3971,c	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;lcd.c: 281: lcd_pulso();
  1417  0011CE  ECB4  F009         	call	_lcd_pulso	;wreg free
  1418                           
  1419                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  1420  0011D2  CF83 F06E          	movff	3971,??_lcd_orden	;volatile
  1421  0011D6  0E0F               	movlw	15
  1422  0011D8  0100               	movlb	0	; () banked
  1423  0011DA  176E               	andwf	??_lcd_orden& (0+255),f,b
  1424  0011DC  C06C  F06F         	movff	lcd_orden@orden,??_lcd_orden+1
  1425  0011E0  0E0F               	movlw	15
  1426  0011E2  176F               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1427  0011E4  3883               	swapf	3971,w,c	;volatile
  1428  0011E6  0B0F               	andlw	15
  1429  0011E8  0B0F               	andlw	15
  1430  0011EA  090F               	iorlw	15
  1431  0011EC  156F               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1432  0011EE  6F70               	movwf	(??_lcd_orden+2)& (0+255),b
  1433  0011F0  3970               	swapf	(??_lcd_orden+2)& (0+255),w,b
  1434  0011F2  0BF0               	andlw	240
  1435  0011F4  116E               	iorwf	??_lcd_orden& (0+255),w,b
  1436  0011F6  6E83               	movwf	3971,c	;volatile
  1437                           
  1438                           ;lcd.c: 283: lcd_pulso();
  1439  0011F8  ECB4  F009         	call	_lcd_pulso	;wreg free
  1440  0011FC  0012               	return		;funcret
  1441  0011FE                     __end_of_lcd_orden:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           indf2	equ	0xFDF
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _lcd_pulso *****************
  1455 ;; Defined at:
  1456 ;;		line 270 in file "lcd.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    4
  1477 ;; This function calls:
  1478 ;;		_wait_in_ms
  1479 ;; This function is called by:
  1480 ;;		_lcd_iniciar
  1481 ;;		_lcd_orden
  1482 ;;		_lcd_caracter
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text9
  1487  001368                     __ptext9:
  1488                           	opt stack 0
  1489  001368                     _lcd_pulso:
  1490                           	opt stack 24
  1491                           
  1492                           ;lcd.c: 271: PORTDbits.RD3=1;
  1493                           
  1494                           ;incstack = 0
  1495  001368  8683               	bsf	3971,3,c	;volatile
  1496                           
  1497                           ;lcd.c: 272: wait_in_ms(2);
  1498  00136A  0E00               	movlw	0
  1499  00136C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1500  00136E  0E02               	movlw	2
  1501  001370  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1502  001372  EC33  F006         	call	_wait_in_ms	;wreg free
  1503                           
  1504                           ;lcd.c: 273: PORTDbits.RD3=0;
  1505  001376  9683               	bcf	3971,3,c	;volatile
  1506                           
  1507                           ;lcd.c: 274: wait_in_ms(2);
  1508  001378  0E00               	movlw	0
  1509  00137A  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1510  00137C  0E02               	movlw	2
  1511  00137E  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1512  001380  EC33  F006         	call	_wait_in_ms	;wreg free
  1513  001384  0012               	return		;funcret
  1514  001386                     __end_of_lcd_pulso:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           tblptrh	equ	0xFF7
  1518                           tblptrl	equ	0xFF6
  1519                           tablat	equ	0xFF5
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           indf2	equ	0xFDF
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _wait_in_ms *****************
  1528 ;; Defined at:
  1529 ;;		line 79 in file "config.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  time_in_ms      2   60[COMRAM] int 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  count_ms        2   10[BANK0 ] unsigned int 
  1534 ;;  count           2    8[BANK0 ] unsigned int 
  1535 ;;  flag            2    6[BANK0 ] unsigned int 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1545 ;;      Params:         2       0       0       0       0       0       0       0       0
  1546 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1547 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1548 ;;      Totals:         4       6       0       0       0       0       0       0       0
  1549 ;;Total ram usage:       10 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		___awtoft
  1554 ;;		___ftdiv
  1555 ;;		___fttol
  1556 ;; This function is called by:
  1557 ;;		_lcd_iniciar
  1558 ;;		_lcd_pulso
  1559 ;;		_lcd_limpiar
  1560 ;;		_lcd_origen
  1561 ;;		_ADC_Read
  1562 ;;		_Lcd_Cmd
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text10
  1567  000C66                     __ptext10:
  1568                           	opt stack 0
  1569  000C66                     _wait_in_ms:
  1570                           	opt stack 24
  1571                           
  1572                           ;config.c: 80: unsigned int count = 0;
  1573                           
  1574                           ;incstack = 0
  1575  000C66  0E00               	movlw	0
  1576  000C68  0100               	movlb	0	; () banked
  1577  000C6A  6F69               	movwf	(wait_in_ms@count+1)& (0+255),b
  1578  000C6C  0E00               	movlw	0
  1579  000C6E  6F68               	movwf	wait_in_ms@count& (0+255),b
  1580                           
  1581                           ;config.c: 81: unsigned int count_ms = 0;
  1582  000C70  0E00               	movlw	0
  1583  000C72  6F6B               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  1584  000C74  0E00               	movlw	0
  1585  000C76  6F6A               	movwf	wait_in_ms@count_ms& (0+255),b
  1586                           
  1587                           ;config.c: 82: unsigned int flag = 0;
  1588  000C78  0E00               	movlw	0
  1589  000C7A  6F67               	movwf	(wait_in_ms@flag+1)& (0+255),b
  1590  000C7C  0E00               	movlw	0
  1591  000C7E  6F66               	movwf	wait_in_ms@flag& (0+255),b
  1592                           
  1593                           ;config.c: 84: TMR0L = 131;
  1594  000C80  0E83               	movlw	131
  1595  000C82  6ED6               	movwf	4054,c	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;config.c: 87: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1599  000C84  50D6               	movf	4054,w,c	;volatile
  1600  000C86  6E3F               	movwf	??_wait_in_ms& (0+255),c
  1601  000C88  6A40               	clrf	(??_wait_in_ms+1)& (0+255),c
  1602  000C8A  1E3F               	comf	??_wait_in_ms,f,c
  1603  000C8C  1E40               	comf	??_wait_in_ms+1,f,c
  1604  000C8E  4A3F               	infsnz	??_wait_in_ms,f,c
  1605  000C90  2A40               	incf	??_wait_in_ms+1,f,c
  1606  000C92  0E05               	movlw	5
  1607  000C94                     u1975:
  1608  000C94  90D8               	bcf	status,0,c
  1609  000C96  363F               	rlcf	??_wait_in_ms,f,c
  1610  000C98  3640               	rlcf	??_wait_in_ms+1,f,c
  1611  000C9A  2EE8               	decfsz	wreg,f,c
  1612  000C9C  D7FB               	goto	u1975
  1613  000C9E  0E00               	movlw	0
  1614  000CA0  243F               	addwf	??_wait_in_ms,w,c
  1615  000CA2  6E1B               	movwf	___awtoft@c,c
  1616  000CA4  0E20               	movlw	32
  1617  000CA6  2040               	addwfc	??_wait_in_ms+1,w,c
  1618  000CA8  6E1C               	movwf	___awtoft@c+1,c
  1619  000CAA  EC25  F009         	call	___awtoft	;wreg free
  1620  000CAE  C01B  F028         	movff	?___awtoft,___ftdiv@f2
  1621  000CB2  C01C  F029         	movff	?___awtoft+1,___ftdiv@f2+1
  1622  000CB6  C01D  F02A         	movff	?___awtoft+2,___ftdiv@f2+2
  1623  000CBA  0E00               	movlw	0
  1624  000CBC  6E25               	movwf	___ftdiv@f1,c
  1625  000CBE  0EFA               	movlw	250
  1626  000CC0  6E26               	movwf	___ftdiv@f1+1,c
  1627  000CC2  0E45               	movlw	69
  1628  000CC4  6E27               	movwf	___ftdiv@f1+2,c
  1629  000CC6  EC55  F005         	call	___ftdiv	;wreg free
  1630  000CCA  C025  F034         	movff	?___ftdiv,___fttol@f1
  1631  000CCE  C026  F035         	movff	?___ftdiv+1,___fttol@f1+1
  1632  000CD2  C027  F036         	movff	?___ftdiv+2,___fttol@f1+2
  1633  000CD6  ECD9  F004         	call	___fttol	;wreg free
  1634  000CDA  C034  F06A         	movff	?___fttol,wait_in_ms@count_ms
  1635  000CDE  C035  F06B         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1636                           
  1637                           ;config.c: 89: TMR0ON = 1;
  1638  000CE2  8ED5               	bsf	4053,7,c	;volatile
  1639                           
  1640                           ;config.c: 91: while (count < count_ms){
  1641  000CE4  D020               	goto	l47
  1642  000CE6                     l43:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;config.c: 92: if(TMR0IF == 1){
  1646  000CE6  A4F2               	btfss	intcon,2,c	;volatile
  1647  000CE8  D01E               	goto	l47
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;config.c: 93: TMR0IF = 0;
  1651  000CEA  94F2               	bcf	intcon,2,c	;volatile
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;config.c: 94: TMR0L = 131;
  1655  000CEC  0E83               	movlw	131
  1656  000CEE  6ED6               	movwf	4054,c	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;config.c: 95: count ++;
  1660  000CF0  4B68               	infsnz	wait_in_ms@count& (0+255),f,b
  1661  000CF2  2B69               	incf	(wait_in_ms@count+1)& (0+255),f,b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;config.c: 96: if (count == count_ms){
  1665  000CF4  516A               	movf	wait_in_ms@count_ms& (0+255),w,b
  1666  000CF6  1968               	xorwf	wait_in_ms@count& (0+255),w,b
  1667  000CF8  E116               	bnz	l2136
  1668  000CFA  516B               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1669  000CFC  1969               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  1670  000CFE  A4D8               	btfss	status,2,c
  1671  000D00  D012               	goto	l47
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;config.c: 97: flag++;
  1675  000D02  4B66               	infsnz	wait_in_ms@flag& (0+255),f,b
  1676  000D04  2B67               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;config.c: 98: if (flag != time_in_ms){
  1680  000D06  5166               	movf	wait_in_ms@flag& (0+255),w,b
  1681  000D08  183D               	xorwf	wait_in_ms@time_in_ms,w,c
  1682  000D0A  E104               	bnz	u2000
  1683  000D0C  5167               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  1684  000D0E  183E               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1685  000D10  B4D8               	btfsc	status,2,c
  1686  000D12  D005               	goto	l46
  1687  000D14                     u2000:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;config.c: 99: count = 0;
  1691  000D14  0E00               	movlw	0
  1692  000D16  6F69               	movwf	(wait_in_ms@count+1)& (0+255),b
  1693  000D18  0E00               	movlw	0
  1694  000D1A  6F68               	movwf	wait_in_ms@count& (0+255),b
  1695                           
  1696                           ;config.c: 100: }
  1697  000D1C  D004               	goto	l47
  1698  000D1E                     l46:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;config.c: 101: else{
  1702                           ;config.c: 102: count = count_ms;
  1703  000D1E  C06A  F068         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1704  000D22  C06B  F069         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1705  000D26                     l47:
  1706  000D26                     l2136:
  1707  000D26  0100               	movlb	0	; () banked
  1708  000D28  516A               	movf	wait_in_ms@count_ms& (0+255),w,b
  1709  000D2A  5D68               	subwf	wait_in_ms@count& (0+255),w,b
  1710  000D2C  516B               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1711  000D2E  5969               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  1712  000D30  B0D8               	btfsc	status,0,c
  1713  000D32  0012               	return	
  1714  000D34  D7D8               	goto	l43
  1715  000D36                     __end_of_wait_in_ms:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           intcon	equ	0xFF2
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           indf2	equ	0xFDF
  1725                           fsr2h	equ	0xFDA
  1726                           fsr2l	equ	0xFD9
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function ___awtoft *****************
  1730 ;; Defined at:
  1731 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  c               2   26[COMRAM] int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  sign            1   29[COMRAM] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  3   26[COMRAM] float 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1745 ;;      Params:         3       0       0       0       0       0       0       0       0
  1746 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1748 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1749 ;;Total ram usage:        4 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    2
  1752 ;; This function calls:
  1753 ;;		___ftpack
  1754 ;; This function is called by:
  1755 ;;		_wait_in_ms
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text11
  1760  00124A                     __ptext11:
  1761                           	opt stack 0
  1762  00124A                     ___awtoft:
  1763                           	opt stack 24
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;incstack = 0
  1767  00124A  0E00               	movlw	0
  1768  00124C  6E1E               	movwf	___awtoft@sign,c
  1769  00124E  AE1C               	btfss	___awtoft@c+1,7,c
  1770  001250  D006               	goto	l462
  1771  001252  6C1B               	negf	___awtoft@c,c
  1772  001254  1E1C               	comf	___awtoft@c+1,f,c
  1773  001256  B0D8               	btfsc	status,0,c
  1774  001258  2A1C               	incf	___awtoft@c+1,f,c
  1775  00125A  0E01               	movlw	1
  1776  00125C  6E1E               	movwf	___awtoft@sign,c
  1777  00125E                     l462:
  1778  00125E  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  1779  001262  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  1780  001266  6A15               	clrf	___ftpack@arg+2,c
  1781  001268  0E8E               	movlw	142
  1782  00126A  6E16               	movwf	___ftpack@exp,c
  1783  00126C  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  1784  001270  EC9B  F006         	call	___ftpack	;wreg free
  1785  001274  C013  F01B         	movff	?___ftpack,?___awtoft
  1786  001278  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  1787  00127C  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  1788  001280  0012               	return	
  1789  001282                     __end_of___awtoft:
  1790                           	opt stack 0
  1791                           tblptru	equ	0xFF8
  1792                           tblptrh	equ	0xFF7
  1793                           tblptrl	equ	0xFF6
  1794                           tablat	equ	0xFF5
  1795                           intcon	equ	0xFF2
  1796                           postinc0	equ	0xFEE
  1797                           wreg	equ	0xFE8
  1798                           indf2	equ	0xFDF
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _configBoard *****************
  1804 ;; Defined at:
  1805 ;;		line 11 in file "config.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text12
  1834  0010BA                     __ptext12:
  1835                           	opt stack 0
  1836  0010BA                     _configBoard:
  1837                           	opt stack 29
  1838                           
  1839                           ;config.c: 15: INTCONbits.GIE = 1;
  1840                           
  1841                           ;incstack = 0
  1842  0010BA  8EF2               	bsf	intcon,7,c	;volatile
  1843                           
  1844                           ;config.c: 16: INTCONbits.PEIE = 1;
  1845  0010BC  8CF2               	bsf	intcon,6,c	;volatile
  1846                           
  1847                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1848  0010BE  8ED5               	bsf	4053,7,c	;volatile
  1849                           
  1850                           ;config.c: 26: T08BIT = 1;
  1851  0010C0  8CD5               	bsf	4053,6,c	;volatile
  1852                           
  1853                           ;config.c: 27: T0CONbits.T0CS = 0;
  1854  0010C2  9AD5               	bcf	4053,5,c	;volatile
  1855                           
  1856                           ;config.c: 29: T0CONbits.PSA = 0;
  1857  0010C4  96D5               	bcf	4053,3,c	;volatile
  1858                           
  1859                           ;config.c: 30: T0CONbits.T0PS = 100;
  1860  0010C6  50D5               	movf	4053,w,c	;volatile
  1861  0010C8  0BF8               	andlw	-8
  1862  0010CA  0904               	iorlw	4
  1863  0010CC  6ED5               	movwf	4053,c	;volatile
  1864                           
  1865                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1866  0010CE  94F2               	bcf	intcon,2,c	;volatile
  1867                           
  1868                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1869  0010D0  80C1               	bsf	4033,0,c	;volatile
  1870  0010D2  82C1               	bsf	4033,1,c	;volatile
  1871  0010D4  84C1               	bsf	4033,2,c	;volatile
  1872  0010D6  86C1               	bsf	4033,3,c	;volatile
  1873                           
  1874                           ;config.c: 36: TRISA=0b00000000;
  1875  0010D8  0E00               	movlw	0
  1876  0010DA  6E92               	movwf	3986,c	;volatile
  1877                           
  1878                           ;config.c: 37: TRISB=0b00000000;
  1879  0010DC  0E00               	movlw	0
  1880  0010DE  6E93               	movwf	3987,c	;volatile
  1881                           
  1882                           ;config.c: 44: ADCON0 = 0b00000111;
  1883  0010E0  0E07               	movlw	7
  1884  0010E2  6EC2               	movwf	4034,c	;volatile
  1885                           
  1886                           ;config.c: 47: ADCON0bits.ADON = 0;
  1887  0010E4  90C2               	bcf	4034,0,c	;volatile
  1888                           
  1889                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1890  0010E6  8EC0               	bsf	4032,7,c	;volatile
  1891                           
  1892                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1893  0010E8  50C0               	movf	4032,w,c	;volatile
  1894  0010EA  0BF8               	andlw	-8
  1895  0010EC  0906               	iorlw	6
  1896  0010EE  6EC0               	movwf	4032,c	;volatile
  1897                           
  1898                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1899  0010F0  50C0               	movf	4032,w,c	;volatile
  1900  0010F2  0BC7               	andlw	-57
  1901  0010F4  0928               	iorlw	40
  1902  0010F6  6EC0               	movwf	4032,c	;volatile
  1903                           
  1904                           ;config.c: 54: ADCON1bits.PCFG=0b1101;
  1905  0010F8  50C1               	movf	4033,w,c	;volatile
  1906  0010FA  0BF0               	andlw	-16
  1907  0010FC  090D               	iorlw	13
  1908  0010FE  6EC1               	movwf	4033,c	;volatile
  1909                           
  1910                           ;config.c: 55: TRISAbits.RA1=1;
  1911  001100  8292               	bsf	3986,1,c	;volatile
  1912                           
  1913                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1914  001102  50C0               	movf	4032,w,c	;volatile
  1915  001104  0BF8               	andlw	-8
  1916  001106  0906               	iorlw	6
  1917  001108  6EC0               	movwf	4032,c	;volatile
  1918                           
  1919                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1920  00110A  9AC1               	bcf	4033,5,c	;volatile
  1921                           
  1922                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1923  00110C  98C1               	bcf	4033,4,c	;volatile
  1924                           
  1925                           ;config.c: 60: ADCON2bits.ADFM=1;
  1926  00110E  8EC0               	bsf	4032,7,c	;volatile
  1927                           
  1928                           ;config.c: 64: ADCON0bits.ADON=1;
  1929  001110  80C2               	bsf	4034,0,c	;volatile
  1930                           
  1931                           ;config.c: 66: PIE1bits.ADIE=1;
  1932  001112  8C9D               	bsf	3997,6,c	;volatile
  1933                           
  1934                           ;config.c: 67: PIR1bits.ADIF=0;
  1935  001114  9C9E               	bcf	3998,6,c	;volatile
  1936                           
  1937                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1938  001116  86C0               	bsf	4032,3,c	;volatile
  1939  001118  88C0               	bsf	4032,4,c	;volatile
  1940  00111A  8AC0               	bsf	4032,5,c	;volatile
  1941                           
  1942                           ;config.c: 70: ADCON0bits.GO=1;
  1943  00111C  82C2               	bsf	4034,1,c	;volatile
  1944                           
  1945                           ;config.c: 74: TRISD=0;
  1946  00111E  0E00               	movlw	0
  1947  001120  6E95               	movwf	3989,c	;volatile
  1948                           
  1949                           ;config.c: 75: PORTA=0;
  1950  001122  0E00               	movlw	0
  1951  001124  6E80               	movwf	3968,c	;volatile
  1952  001126  0012               	return		;funcret
  1953  001128                     __end_of_configBoard:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           intcon	equ	0xFF2
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           indf2	equ	0xFDF
  1963                           fsr2h	equ	0xFDA
  1964                           fsr2l	equ	0xFD9
  1965                           status	equ	0xFD8
  1966                           
  1967 ;; *************** function _USART_SendString *****************
  1968 ;; Defined at:
  1969 ;;		line 40 in file "USART_Source_File.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  out             2   19[COMRAM] PTR const unsigned char 
  1972 ;;		 -> main@temp(6), 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1984 ;;      Params:         2       0       0       0       0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1987 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    2
  1991 ;; This function calls:
  1992 ;;		_USART_TransmitChar
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text13
  1999  001344                     __ptext13:
  2000                           	opt stack 0
  2001  001344                     _USART_SendString:
  2002                           	opt stack 28
  2003                           
  2004                           ;USART_Source_File.c: 42: while(*out!='\0')
  2005                           
  2006                           ;incstack = 0
  2007  001344  D009               	goto	l203
  2008  001346                     
  2009                           ;USART_Source_File.c: 43: {
  2010                           ;USART_Source_File.c: 44: USART_TransmitChar(*out);
  2011  001346  C014  FFD9         	movff	USART_SendString@out,fsr2l
  2012  00134A  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  2013  00134E  50DF               	movf	indf2,w,c
  2014  001350  ECDF  F009         	call	_USART_TransmitChar
  2015                           
  2016                           ;USART_Source_File.c: 45: out++;
  2017  001354  4A14               	infsnz	USART_SendString@out,f,c
  2018  001356  2A15               	incf	USART_SendString@out+1,f,c
  2019  001358                     l203:
  2020  001358  C014  FFD9         	movff	USART_SendString@out,fsr2l
  2021  00135C  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  2022  001360  50DF               	movf	indf2,w,c
  2023  001362  B4D8               	btfsc	status,2,c
  2024  001364  0012               	return	
  2025  001366  D7EF               	goto	l204
  2026  001368                     __end_of_USART_SendString:
  2027                           	opt stack 0
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           intcon	equ	0xFF2
  2033                           postinc0	equ	0xFEE
  2034                           wreg	equ	0xFE8
  2035                           indf2	equ	0xFDF
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _USART_TransmitChar *****************
  2041 ;; Defined at:
  2042 ;;		line 22 in file "USART_Source_File.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  out             1    wreg     unsigned char 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  out             1   18[COMRAM] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0
  2057 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2059 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2060 ;;Total ram usage:        1 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_USART_SendString
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text14
  2071  0013BE                     __ptext14:
  2072                           	opt stack 0
  2073  0013BE                     _USART_TransmitChar:
  2074                           	opt stack 28
  2075                           
  2076                           ;incstack = 0
  2077                           ;USART_TransmitChar@out stored from wreg
  2078  0013BE  6E13               	movwf	USART_TransmitChar@out,c
  2079  0013C0                     
  2080                           ;USART_Source_File.c: 24: while(TXIF==0);
  2081  0013C0  A89E               	btfss	3998,4,c	;volatile
  2082  0013C2  D7FE               	goto	l1104
  2083                           
  2084                           ;USART_Source_File.c: 25: TXREG=out;
  2085  0013C4  C013  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2086  0013C8  0012               	return		;funcret
  2087  0013CA                     __end_of_USART_TransmitChar:
  2088                           	opt stack 0
  2089                           tblptru	equ	0xFF8
  2090                           tblptrh	equ	0xFF7
  2091                           tblptrl	equ	0xFF6
  2092                           tablat	equ	0xFF5
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf2	equ	0xFDF
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _USART_ReceiveString *****************
  2102 ;; Defined at:
  2103 ;;		line 57 in file "USART_Source_File.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  Input           2   18[COMRAM] PTR unsigned char 
  2106 ;;		 -> main@temp(6), 
  2107 ;;  length          1   20[COMRAM] unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  temp            1   28[COMRAM] unsigned char 
  2110 ;;  i               2   26[COMRAM] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2120 ;;      Params:         3       0       0       0       0       0       0       0       0
  2121 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2122 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2123 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:       11 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    2
  2127 ;; This function calls:
  2128 ;;		_USART_ReceiveChar
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text15
  2135  000DE4                     __ptext15:
  2136                           	opt stack 0
  2137  000DE4                     _USART_ReceiveString:
  2138                           	opt stack 28
  2139                           
  2140                           ;USART_Source_File.c: 61: for(int i=0;i<=length-2;i++) {
  2141                           
  2142                           ;incstack = 0
  2143  000DE4  0E00               	movlw	0
  2144  000DE6  6E1C               	movwf	USART_ReceiveString@i+1,c
  2145  000DE8  0E00               	movlw	0
  2146  000DEA  6E1B               	movwf	USART_ReceiveString@i,c
  2147  000DEC  D038               	goto	l217
  2148  000DEE                     
  2149                           ;USART_Source_File.c: 64: Input[i]=0;
  2150  000DEE  501B               	movf	USART_ReceiveString@i,w,c
  2151  000DF0  2413               	addwf	USART_ReceiveString@Input,w,c
  2152  000DF2  6ED9               	movwf	fsr2l,c
  2153  000DF4  501C               	movf	USART_ReceiveString@i+1,w,c
  2154  000DF6  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2155  000DF8  6EDA               	movwf	fsr2h,c
  2156  000DFA  0E00               	movlw	0
  2157  000DFC  6EDF               	movwf	indf2,c
  2158                           
  2159                           ;USART_Source_File.c: 65: RCREG=0;
  2160  000DFE  0E00               	movlw	0
  2161  000E00  6EAE               	movwf	4014,c	;volatile
  2162                           
  2163                           ;USART_Source_File.c: 67: char temp=USART_ReceiveChar();
  2164  000E02  ECE5  F009         	call	_USART_ReceiveChar	;wreg free
  2165  000E06  6E1D               	movwf	USART_ReceiveString@temp,c
  2166                           
  2167                           ;USART_Source_File.c: 68: if(temp>=97 && temp <=122 || temp==32){
  2168  000E08  0E60               	movlw	96
  2169  000E0A  641D               	cpfsgt	USART_ReceiveString@temp,c
  2170  000E0C  D003               	goto	u1500
  2171  000E0E  0E7A               	movlw	122
  2172  000E10  641D               	cpfsgt	USART_ReceiveString@temp,c
  2173  000E12  D004               	goto	u1510
  2174  000E14                     u1500:
  2175  000E14  0E20               	movlw	32
  2176  000E16  181D               	xorwf	USART_ReceiveString@temp,w,c
  2177  000E18  A4D8               	btfss	status,2,c
  2178  000E1A  D009               	goto	l219
  2179  000E1C                     u1510:
  2180                           
  2181                           ;USART_Source_File.c: 69: Input[i] =temp;
  2182  000E1C  501B               	movf	USART_ReceiveString@i,w,c
  2183  000E1E  2413               	addwf	USART_ReceiveString@Input,w,c
  2184  000E20  6ED9               	movwf	fsr2l,c
  2185  000E22  501C               	movf	USART_ReceiveString@i+1,w,c
  2186  000E24  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2187  000E26  6EDA               	movwf	fsr2h,c
  2188  000E28  C01D  FFDF         	movff	USART_ReceiveString@temp,indf2
  2189                           
  2190                           ;USART_Source_File.c: 70: }else{
  2191  000E2C  D014               	goto	l224
  2192  000E2E                     l219:
  2193                           
  2194                           ;USART_Source_File.c: 71: Input[i+1]=0;
  2195  000E2E  0E01               	movlw	1
  2196  000E30  241B               	addwf	USART_ReceiveString@i,w,c
  2197  000E32  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2198  000E34  0E00               	movlw	0
  2199  000E36  201C               	addwfc	USART_ReceiveString@i+1,w,c
  2200  000E38  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2201  000E3A  5016               	movf	??_USART_ReceiveString,w,c
  2202  000E3C  2413               	addwf	USART_ReceiveString@Input,w,c
  2203  000E3E  6ED9               	movwf	fsr2l,c
  2204  000E40  5017               	movf	??_USART_ReceiveString+1,w,c
  2205  000E42  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2206  000E44  6EDA               	movwf	fsr2h,c
  2207  000E46  0E00               	movlw	0
  2208  000E48  6EDF               	movwf	indf2,c
  2209                           
  2210                           ;USART_Source_File.c: 72: i=length-1;
  2211  000E4A  0EFF               	movlw	255
  2212  000E4C  2415               	addwf	USART_ReceiveString@length,w,c
  2213  000E4E  6E1B               	movwf	USART_ReceiveString@i,c
  2214  000E50  6A1C               	clrf	USART_ReceiveString@i+1,c
  2215  000E52  0EFF               	movlw	255
  2216  000E54  221C               	addwfc	USART_ReceiveString@i+1,f,c
  2217  000E56                     l224:
  2218                           
  2219                           ;USART_Source_File.c: 74: }
  2220                           ;USART_Source_File.c: 75: temp=0;
  2221  000E56  0E00               	movlw	0
  2222  000E58  6E1D               	movwf	USART_ReceiveString@temp,c
  2223  000E5A  4A1B               	infsnz	USART_ReceiveString@i,f,c
  2224  000E5C  2A1C               	incf	USART_ReceiveString@i+1,f,c
  2225  000E5E                     l217:
  2226  000E5E  0EFE               	movlw	254
  2227  000E60  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2228  000E62  0EFF               	movlw	255
  2229  000E64  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2230  000E66  5015               	movf	USART_ReceiveString@length,w,c
  2231  000E68  6E18               	movwf	(??_USART_ReceiveString+2)& (0+255),c
  2232  000E6A  6A19               	clrf	(??_USART_ReceiveString+3)& (0+255),c
  2233  000E6C  5016               	movf	??_USART_ReceiveString,w,c
  2234  000E6E  2618               	addwf	??_USART_ReceiveString+2,f,c
  2235  000E70  5017               	movf	??_USART_ReceiveString+1,w,c
  2236  000E72  2219               	addwfc	??_USART_ReceiveString+3,f,c
  2237  000E74  501B               	movf	USART_ReceiveString@i,w,c
  2238  000E76  5C18               	subwf	??_USART_ReceiveString+2,w,c
  2239  000E78  5019               	movf	??_USART_ReceiveString+3,w,c
  2240  000E7A  0A80               	xorlw	128
  2241  000E7C  6E1A               	movwf	(??_USART_ReceiveString+4)& (0+255),c
  2242  000E7E  501C               	movf	USART_ReceiveString@i+1,w,c
  2243  000E80  0A80               	xorlw	128
  2244  000E82  581A               	subwfb	(??_USART_ReceiveString+4)& (0+255),w,c
  2245  000E84  A0D8               	btfss	status,0,c
  2246  000E86  0012               	return	
  2247  000E88  D7B2               	goto	l218
  2248  000E8A                     __end_of_USART_ReceiveString:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           intcon	equ	0xFF2
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           indf2	equ	0xFDF
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262 ;; *************** function _USART_ReceiveChar *****************
  2263 ;; Defined at:
  2264 ;;		line 29 in file "USART_Source_File.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      unsigned char 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        0 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_USART_ReceiveString
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text16
  2293  0013CA                     __ptext16:
  2294                           	opt stack 0
  2295  0013CA                     _USART_ReceiveChar:
  2296                           	opt stack 28
  2297                           
  2298                           ;USART_Source_File.c: 32: while(RCIF==0);
  2299                           
  2300                           ;incstack = 0
  2301  0013CA  AA9E               	btfss	3998,5,c	;volatile
  2302  0013CC  D7FE               	goto	_USART_ReceiveChar
  2303                           
  2304                           ;USART_Source_File.c: 33: return(RCREG);
  2305  0013CE  50AE               	movf	4014,w,c	;volatile
  2306  0013D0  0012               	return	
  2307  0013D2                     __end_of_USART_ReceiveChar:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           intcon	equ	0xFF2
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           indf2	equ	0xFDF
  2317                           fsr2h	equ	0xFDA
  2318                           fsr2l	equ	0xFD9
  2319                           status	equ	0xFD8
  2320                           
  2321 ;; *************** function _USART_Init *****************
  2322 ;; Defined at:
  2323 ;;		line 10 in file "USART_Source_File.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  baud_rate       4    6[BANK0 ] long 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  temp            3   10[BANK0 ] float 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         0       4       0       0       0       0       0       0       0
  2338 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2340 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2341 ;;Total ram usage:        7 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    3
  2344 ;; This function calls:
  2345 ;;		___altoft
  2346 ;;		___ftadd
  2347 ;;		___ftdiv
  2348 ;;		___fttol
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text17
  2355  000FC8                     __ptext17:
  2356                           	opt stack 0
  2357  000FC8                     _USART_Init:
  2358                           	opt stack 27
  2359                           
  2360                           ;USART_Source_File.c: 12: float temp;
  2361                           ;USART_Source_File.c: 13: TRISC6=0;
  2362                           
  2363                           ;incstack = 0
  2364  000FC8  9C94               	bcf	3988,6,c	;volatile
  2365                           
  2366                           ;USART_Source_File.c: 14: TRISC7=1;
  2367  000FCA  8E94               	bsf	3988,7,c	;volatile
  2368                           
  2369                           ;USART_Source_File.c: 15: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  2370  000FCC  C066  F01B         	movff	USART_Init@baud_rate,___altoft@c
  2371  000FD0  C067  F01C         	movff	USART_Init@baud_rate+1,___altoft@c+1
  2372  000FD4  C068  F01D         	movff	USART_Init@baud_rate+2,___altoft@c+2
  2373  000FD8  C069  F01E         	movff	USART_Init@baud_rate+3,___altoft@c+3
  2374  000FDC  EC21  F008         	call	___altoft	;wreg free
  2375  000FE0  C01B  F028         	movff	?___altoft,___ftdiv@f2
  2376  000FE4  C01C  F029         	movff	?___altoft+1,___ftdiv@f2+1
  2377  000FE8  C01D  F02A         	movff	?___altoft+2,___ftdiv@f2+2
  2378  000FEC  0E24               	movlw	36
  2379  000FEE  6E25               	movwf	___ftdiv@f1,c
  2380  000FF0  0EF4               	movlw	244
  2381  000FF2  6E26               	movwf	___ftdiv@f1+1,c
  2382  000FF4  0E47               	movlw	71
  2383  000FF6  6E27               	movwf	___ftdiv@f1+2,c
  2384  000FF8  EC55  F005         	call	___ftdiv	;wreg free
  2385  000FFC  C025  F034         	movff	?___ftdiv,___ftadd@f1
  2386  001000  C026  F035         	movff	?___ftdiv+1,___ftadd@f1+1
  2387  001004  C027  F036         	movff	?___ftdiv+2,___ftadd@f1+2
  2388  001008  0E00               	movlw	0
  2389  00100A  6E37               	movwf	___ftadd@f2,c
  2390  00100C  0E80               	movlw	128
  2391  00100E  6E38               	movwf	___ftadd@f2+1,c
  2392  001010  0EBF               	movlw	191
  2393  001012  6E39               	movwf	___ftadd@f2+2,c
  2394  001014  EC03  F004         	call	___ftadd	;wreg free
  2395  001018  C034  F06A         	movff	?___ftadd,USART_Init@temp
  2396  00101C  C035  F06B         	movff	?___ftadd+1,USART_Init@temp+1
  2397  001020  C036  F06C         	movff	?___ftadd+2,USART_Init@temp+2
  2398                           
  2399                           ;USART_Source_File.c: 16: SPBRG=(int)temp;
  2400  001024  C06A  F034         	movff	USART_Init@temp,___fttol@f1
  2401  001028  C06B  F035         	movff	USART_Init@temp+1,___fttol@f1+1
  2402  00102C  C06C  F036         	movff	USART_Init@temp+2,___fttol@f1+2
  2403  001030  ECD9  F004         	call	___fttol	;wreg free
  2404  001034  5034               	movf	?___fttol,w,c
  2405  001036  6EAF               	movwf	4015,c	;volatile
  2406                           
  2407                           ;USART_Source_File.c: 17: TXSTA=0x20;
  2408  001038  0E20               	movlw	32
  2409  00103A  6EAC               	movwf	4012,c	;volatile
  2410                           
  2411                           ;USART_Source_File.c: 19: RCSTA=0x94;
  2412  00103C  0E94               	movlw	148
  2413  00103E  6EAB               	movwf	4011,c	;volatile
  2414  001040  0012               	return		;funcret
  2415  001042                     __end_of_USART_Init:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function ___fttol *****************
  2430 ;; Defined at:
  2431 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  f1              3   51[COMRAM] float 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  lval            4    1[BANK0 ] unsigned long 
  2436 ;;  exp1            1    5[BANK0 ] unsigned char 
  2437 ;;  sign1           1    0[BANK0 ] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  4   51[COMRAM] long 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2447 ;;      Params:         4       0       0       0       0       0       0       0       0
  2448 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2449 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2450 ;;      Totals:         9       6       0       0       0       0       0       0       0
  2451 ;;Total ram usage:       15 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_wait_in_ms
  2458 ;;		_USART_Init
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text18
  2463  0009B2                     __ptext18:
  2464                           	opt stack 0
  2465  0009B2                     ___fttol:
  2466                           	opt stack 25
  2467                           
  2468                           ;incstack = 0
  2469  0009B2  C036  F038         	movff	___fttol@f1+2,??___fttol
  2470  0009B6  6A39               	clrf	(??___fttol+1)& (0+255),c
  2471  0009B8  6A3A               	clrf	(??___fttol+2)& (0+255),c
  2472  0009BA  3435               	rlcf	___fttol@f1+1,w,c
  2473  0009BC  3638               	rlcf	??___fttol& (0+255),f,c
  2474  0009BE  E301               	bnc	u1891
  2475  0009C0  8039               	bsf	(??___fttol+1)& (0+255),0,c
  2476  0009C2                     u1891:
  2477  0009C2  5038               	movf	??___fttol,w,c
  2478  0009C4  0100               	movlb	0	; () banked
  2479  0009C6  6F65               	movwf	___fttol@exp1& (0+255),b
  2480  0009C8  5165               	movf	___fttol@exp1& (0+255),w,b
  2481  0009CA  A4D8               	btfss	status,2,c
  2482  0009CC  D009               	goto	l581
  2483                           
  2484                           ; BSR set to: 0
  2485  0009CE  0E00               	movlw	0
  2486  0009D0  6E34               	movwf	?___fttol,c
  2487  0009D2  0E00               	movlw	0
  2488  0009D4  6E35               	movwf	?___fttol+1,c
  2489  0009D6  0E00               	movlw	0
  2490  0009D8  6E36               	movwf	?___fttol+2,c
  2491  0009DA  0E00               	movlw	0
  2492  0009DC  6E37               	movwf	?___fttol+3,c
  2493                           
  2494                           ; BSR set to: 0
  2495  0009DE  0012               	return	
  2496  0009E0                     l581:
  2497                           
  2498                           ; BSR set to: 0
  2499                           
  2500                           ; BSR set to: 0
  2501  0009E0  0E17               	movlw	23
  2502  0009E2  6E38               	movwf	??___fttol& (0+255),c
  2503  0009E4  C034  F039         	movff	___fttol@f1,??___fttol+1
  2504  0009E8  C035  F03A         	movff	___fttol@f1+1,??___fttol+2
  2505  0009EC  C036  F03B         	movff	___fttol@f1+2,??___fttol+3
  2506  0009F0  2838               	incf	??___fttol,w,c
  2507  0009F2  6E3C               	movwf	(??___fttol+4)& (0+255),c
  2508  0009F4  D004               	goto	u1910
  2509  0009F6                     u1915:
  2510  0009F6  90D8               	bcf	status,0,c
  2511  0009F8  323B               	rrcf	??___fttol+3,f,c
  2512  0009FA  323A               	rrcf	??___fttol+2,f,c
  2513  0009FC  3239               	rrcf	??___fttol+1,f,c
  2514  0009FE                     u1910:
  2515  0009FE  2E3C               	decfsz	(??___fttol+4)& (0+255),f,c
  2516  000A00  D7FA               	goto	u1915
  2517  000A02  5039               	movf	??___fttol+1,w,c
  2518  000A04  0100               	movlb	0	; () banked
  2519  000A06  6F60               	movwf	___fttol@sign1& (0+255),b
  2520                           
  2521                           ; BSR set to: 0
  2522  000A08  8E35               	bsf	___fttol@f1+1,7,c
  2523                           
  2524                           ; BSR set to: 0
  2525  000A0A  0EFF               	movlw	255
  2526  000A0C  1634               	andwf	___fttol@f1,f,c
  2527  000A0E  0EFF               	movlw	255
  2528  000A10  1635               	andwf	___fttol@f1+1,f,c
  2529  000A12  0E00               	movlw	0
  2530  000A14  1636               	andwf	___fttol@f1+2,f,c
  2531                           
  2532                           ; BSR set to: 0
  2533  000A16  5034               	movf	___fttol@f1,w,c
  2534  000A18  6F61               	movwf	___fttol@lval& (0+255),b
  2535  000A1A  5035               	movf	___fttol@f1+1,w,c
  2536  000A1C  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  2537  000A1E  5036               	movf	___fttol@f1+2,w,c
  2538  000A20  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  2539  000A22  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  2540                           
  2541                           ; BSR set to: 0
  2542  000A24  0E8E               	movlw	142
  2543  000A26  5F65               	subwf	___fttol@exp1& (0+255),f,b
  2544                           
  2545                           ; BSR set to: 0
  2546  000A28  AF65               	btfss	___fttol@exp1& (0+255),7,b
  2547  000A2A  D016               	goto	l583
  2548                           
  2549                           ; BSR set to: 0
  2550  000A2C  5165               	movf	___fttol@exp1& (0+255),w,b
  2551  000A2E  0A80               	xorlw	128
  2552  000A30  0F8F               	addlw	143
  2553  000A32  B0D8               	btfsc	status,0,c
  2554  000A34  D009               	goto	l584
  2555                           
  2556                           ; BSR set to: 0
  2557  000A36  0E00               	movlw	0
  2558  000A38  6E34               	movwf	?___fttol,c
  2559  000A3A  0E00               	movlw	0
  2560  000A3C  6E35               	movwf	?___fttol+1,c
  2561  000A3E  0E00               	movlw	0
  2562  000A40  6E36               	movwf	?___fttol+2,c
  2563  000A42  0E00               	movlw	0
  2564  000A44  6E37               	movwf	?___fttol+3,c
  2565                           
  2566                           ; BSR set to: 0
  2567  000A46  0012               	return	
  2568  000A48                     l584:
  2569                           
  2570                           ; BSR set to: 0
  2571                           
  2572                           ; BSR set to: 0
  2573                           
  2574                           ; BSR set to: 0
  2575  000A48  90D8               	bcf	status,0,c
  2576  000A4A  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2577  000A4C  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2578  000A4E  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2579  000A50  3361               	rrcf	___fttol@lval& (0+255),f,b
  2580                           
  2581                           ; BSR set to: 0
  2582  000A52  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  2583  000A54  D7F9               	goto	l584
  2584                           
  2585                           ; BSR set to: 0
  2586  000A56  D015               	goto	u1950
  2587  000A58                     l583:
  2588                           
  2589                           ; BSR set to: 0
  2590                           
  2591                           ; BSR set to: 0
  2592  000A58  0E17               	movlw	23
  2593  000A5A  6565               	cpfsgt	___fttol@exp1& (0+255),b
  2594  000A5C  D00F               	goto	l589
  2595                           
  2596                           ; BSR set to: 0
  2597  000A5E  0E00               	movlw	0
  2598  000A60  6E34               	movwf	?___fttol,c
  2599  000A62  0E00               	movlw	0
  2600  000A64  6E35               	movwf	?___fttol+1,c
  2601  000A66  0E00               	movlw	0
  2602  000A68  6E36               	movwf	?___fttol+2,c
  2603  000A6A  0E00               	movlw	0
  2604  000A6C  6E37               	movwf	?___fttol+3,c
  2605                           
  2606                           ; BSR set to: 0
  2607  000A6E  0012               	return	
  2608  000A70                     
  2609                           ; BSR set to: 0
  2610                           
  2611                           ; BSR set to: 0
  2612  000A70  90D8               	bcf	status,0,c
  2613  000A72  3761               	rlcf	___fttol@lval& (0+255),f,b
  2614  000A74  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2615  000A76  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2616  000A78  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2617  000A7A  0765               	decf	___fttol@exp1& (0+255),f,b
  2618  000A7C                     l589:
  2619                           
  2620                           ; BSR set to: 0
  2621                           
  2622                           ; BSR set to: 0
  2623  000A7C  5165               	movf	___fttol@exp1& (0+255),w,b
  2624  000A7E  A4D8               	btfss	status,2,c
  2625  000A80  D7F7               	goto	l590
  2626  000A82                     u1950:
  2627                           
  2628                           ; BSR set to: 0
  2629                           
  2630                           ; BSR set to: 0
  2631                           
  2632                           ; BSR set to: 0
  2633  000A82  5160               	movf	___fttol@sign1& (0+255),w,b
  2634  000A84  B4D8               	btfsc	status,2,c
  2635  000A86  D008               	goto	l592
  2636                           
  2637                           ; BSR set to: 0
  2638  000A88  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  2639  000A8A  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  2640  000A8C  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  2641  000A8E  6D61               	negf	___fttol@lval& (0+255),b
  2642  000A90  0E00               	movlw	0
  2643  000A92  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2644  000A94  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2645  000A96  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2646  000A98                     l592:
  2647                           
  2648                           ; BSR set to: 0
  2649                           
  2650                           ; BSR set to: 0
  2651  000A98  C061  F034         	movff	___fttol@lval,?___fttol
  2652  000A9C  C062  F035         	movff	___fttol@lval+1,?___fttol+1
  2653  000AA0  C063  F036         	movff	___fttol@lval+2,?___fttol+2
  2654  000AA4  C064  F037         	movff	___fttol@lval+3,?___fttol+3
  2655  000AA8  0012               	return	
  2656  000AAA                     __end_of___fttol:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           intcon	equ	0xFF2
  2663                           postinc0	equ	0xFEE
  2664                           wreg	equ	0xFE8
  2665                           indf2	equ	0xFDF
  2666                           fsr2h	equ	0xFDA
  2667                           fsr2l	equ	0xFD9
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function ___ftdiv *****************
  2671 ;; Defined at:
  2672 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  f1              3   36[COMRAM] float 
  2675 ;;  f2              3   39[COMRAM] float 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  f3              3   46[COMRAM] float 
  2678 ;;  sign            1   50[COMRAM] unsigned char 
  2679 ;;  exp             1   49[COMRAM] unsigned char 
  2680 ;;  cntr            1   45[COMRAM] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  3   36[COMRAM] float 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2690 ;;      Params:         6       0       0       0       0       0       0       0       0
  2691 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2692 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2693 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2694 ;;Total ram usage:       15 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		___ftpack
  2699 ;; This function is called by:
  2700 ;;		_wait_in_ms
  2701 ;;		_USART_Init
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text19
  2706  000AAA                     __ptext19:
  2707                           	opt stack 0
  2708  000AAA                     ___ftdiv:
  2709                           	opt stack 24
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;incstack = 0
  2713  000AAA  C027  F02B         	movff	___ftdiv@f1+2,??___ftdiv
  2714  000AAE  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2715  000AB0  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2716  000AB2  3426               	rlcf	___ftdiv@f1+1,w,c
  2717  000AB4  362B               	rlcf	??___ftdiv& (0+255),f,c
  2718  000AB6  E301               	bnc	u1831
  2719  000AB8  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2720  000ABA                     u1831:
  2721  000ABA  502B               	movf	??___ftdiv,w,c
  2722  000ABC  6E32               	movwf	___ftdiv@exp,c
  2723  000ABE  5032               	movf	___ftdiv@exp,w,c
  2724  000AC0  A4D8               	btfss	status,2,c
  2725  000AC2  D007               	goto	l545
  2726  000AC4  0E00               	movlw	0
  2727  000AC6  6E25               	movwf	?___ftdiv,c
  2728  000AC8  0E00               	movlw	0
  2729  000ACA  6E26               	movwf	?___ftdiv+1,c
  2730  000ACC  0E00               	movlw	0
  2731  000ACE  6E27               	movwf	?___ftdiv+2,c
  2732  000AD0  0012               	return	
  2733  000AD2                     l545:
  2734  000AD2  C02A  F02B         	movff	___ftdiv@f2+2,??___ftdiv
  2735  000AD6  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2736  000AD8  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2737  000ADA  3429               	rlcf	___ftdiv@f2+1,w,c
  2738  000ADC  362B               	rlcf	??___ftdiv& (0+255),f,c
  2739  000ADE  E301               	bnc	u1851
  2740  000AE0  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2741  000AE2                     u1851:
  2742  000AE2  502B               	movf	??___ftdiv,w,c
  2743  000AE4  6E33               	movwf	___ftdiv@sign,c
  2744  000AE6  5033               	movf	___ftdiv@sign,w,c
  2745  000AE8  A4D8               	btfss	status,2,c
  2746  000AEA  D007               	goto	l547
  2747  000AEC  0E00               	movlw	0
  2748  000AEE  6E25               	movwf	?___ftdiv,c
  2749  000AF0  0E00               	movlw	0
  2750  000AF2  6E26               	movwf	?___ftdiv+1,c
  2751  000AF4  0E00               	movlw	0
  2752  000AF6  6E27               	movwf	?___ftdiv+2,c
  2753  000AF8  0012               	return	
  2754  000AFA                     l547:
  2755  000AFA  0E00               	movlw	0
  2756  000AFC  6E2F               	movwf	___ftdiv@f3,c
  2757  000AFE  0E00               	movlw	0
  2758  000B00  6E30               	movwf	___ftdiv@f3+1,c
  2759  000B02  0E00               	movlw	0
  2760  000B04  6E31               	movwf	___ftdiv@f3+2,c
  2761  000B06  5033               	movf	___ftdiv@sign,w,c
  2762  000B08  0F89               	addlw	137
  2763  000B0A  5E32               	subwf	___ftdiv@exp,f,c
  2764  000B0C  C027  F033         	movff	___ftdiv@f1+2,___ftdiv@sign
  2765  000B10  502A               	movf	___ftdiv@f2+2,w,c
  2766  000B12  1A33               	xorwf	___ftdiv@sign,f,c
  2767  000B14  0E80               	movlw	128
  2768  000B16  1633               	andwf	___ftdiv@sign,f,c
  2769  000B18  8E26               	bsf	___ftdiv@f1+1,7,c
  2770  000B1A  0EFF               	movlw	255
  2771  000B1C  1625               	andwf	___ftdiv@f1,f,c
  2772  000B1E  0EFF               	movlw	255
  2773  000B20  1626               	andwf	___ftdiv@f1+1,f,c
  2774  000B22  0E00               	movlw	0
  2775  000B24  1627               	andwf	___ftdiv@f1+2,f,c
  2776  000B26  8E29               	bsf	___ftdiv@f2+1,7,c
  2777  000B28  0EFF               	movlw	255
  2778  000B2A  1628               	andwf	___ftdiv@f2,f,c
  2779  000B2C  0EFF               	movlw	255
  2780  000B2E  1629               	andwf	___ftdiv@f2+1,f,c
  2781  000B30  0E00               	movlw	0
  2782  000B32  162A               	andwf	___ftdiv@f2+2,f,c
  2783  000B34  0E18               	movlw	24
  2784  000B36  6E2E               	movwf	___ftdiv@cntr,c
  2785  000B38  90D8               	bcf	status,0,c
  2786  000B3A  362F               	rlcf	___ftdiv@f3,f,c
  2787  000B3C  3630               	rlcf	___ftdiv@f3+1,f,c
  2788  000B3E  3631               	rlcf	___ftdiv@f3+2,f,c
  2789  000B40  5028               	movf	___ftdiv@f2,w,c
  2790  000B42  5C25               	subwf	___ftdiv@f1,w,c
  2791  000B44  5029               	movf	___ftdiv@f2+1,w,c
  2792  000B46  5826               	subwfb	___ftdiv@f1+1,w,c
  2793  000B48  502A               	movf	___ftdiv@f2+2,w,c
  2794  000B4A  5827               	subwfb	___ftdiv@f1+2,w,c
  2795  000B4C  A0D8               	btfss	status,0,c
  2796  000B4E  D007               	goto	l549
  2797  000B50  5028               	movf	___ftdiv@f2,w,c
  2798  000B52  5E25               	subwf	___ftdiv@f1,f,c
  2799  000B54  5029               	movf	___ftdiv@f2+1,w,c
  2800  000B56  5A26               	subwfb	___ftdiv@f1+1,f,c
  2801  000B58  502A               	movf	___ftdiv@f2+2,w,c
  2802  000B5A  5A27               	subwfb	___ftdiv@f1+2,f,c
  2803  000B5C  802F               	bsf	___ftdiv@f3,0,c
  2804  000B5E                     l549:
  2805  000B5E  90D8               	bcf	status,0,c
  2806  000B60  3625               	rlcf	___ftdiv@f1,f,c
  2807  000B62  3626               	rlcf	___ftdiv@f1+1,f,c
  2808  000B64  3627               	rlcf	___ftdiv@f1+2,f,c
  2809  000B66  2E2E               	decfsz	___ftdiv@cntr,f,c
  2810  000B68  D7E7               	goto	l548
  2811  000B6A  C02F  F013         	movff	___ftdiv@f3,___ftpack@arg
  2812  000B6E  C030  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2813  000B72  C031  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2814  000B76  C032  F016         	movff	___ftdiv@exp,___ftpack@exp
  2815  000B7A  C033  F017         	movff	___ftdiv@sign,___ftpack@sign
  2816  000B7E  EC9B  F006         	call	___ftpack	;wreg free
  2817  000B82  C013  F025         	movff	?___ftpack,?___ftdiv
  2818  000B86  C014  F026         	movff	?___ftpack+1,?___ftdiv+1
  2819  000B8A  C015  F027         	movff	?___ftpack+2,?___ftdiv+2
  2820  000B8E  0012               	return	
  2821  000B90                     __end_of___ftdiv:
  2822                           	opt stack 0
  2823                           tblptru	equ	0xFF8
  2824                           tblptrh	equ	0xFF7
  2825                           tblptrl	equ	0xFF6
  2826                           tablat	equ	0xFF5
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf2	equ	0xFDF
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function ___ftadd *****************
  2836 ;; Defined at:
  2837 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  f1              3   51[COMRAM] float 
  2840 ;;  f2              3   54[COMRAM] float 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  exp1            1   62[COMRAM] unsigned char 
  2843 ;;  exp2            1   61[COMRAM] unsigned char 
  2844 ;;  sign            1   60[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  3   51[COMRAM] float 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         6       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2857 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:       12 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    2
  2861 ;; This function calls:
  2862 ;;		___ftpack
  2863 ;; This function is called by:
  2864 ;;		_USART_Init
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text20
  2869  000806                     __ptext20:
  2870                           	opt stack 0
  2871  000806                     ___ftadd:
  2872                           	opt stack 27
  2873                           
  2874                           ;incstack = 0
  2875  000806  C036  F03A         	movff	___ftadd@f1+2,??___ftadd
  2876  00080A  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2877  00080C  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2878  00080E  3435               	rlcf	___ftadd@f1+1,w,c
  2879  000810  363A               	rlcf	??___ftadd& (0+255),f,c
  2880  000812  E301               	bnc	u2061
  2881  000814  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2882  000816                     u2061:
  2883  000816  503A               	movf	??___ftadd,w,c
  2884  000818  6E3F               	movwf	___ftadd@exp1,c
  2885  00081A  C039  F03A         	movff	___ftadd@f2+2,??___ftadd
  2886  00081E  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2887  000820  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2888  000822  3438               	rlcf	___ftadd@f2+1,w,c
  2889  000824  363A               	rlcf	??___ftadd& (0+255),f,c
  2890  000826  E301               	bnc	u2071
  2891  000828  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2892  00082A                     u2071:
  2893  00082A  503A               	movf	??___ftadd,w,c
  2894  00082C  6E3E               	movwf	___ftadd@exp2,c
  2895  00082E  503F               	movf	___ftadd@exp1,w,c
  2896  000830  B4D8               	btfsc	status,2,c
  2897  000832  D00B               	goto	u2100
  2898  000834  503E               	movf	___ftadd@exp2,w,c
  2899  000836  5C3F               	subwf	___ftadd@exp1,w,c
  2900  000838  B0D8               	btfsc	status,0,c
  2901  00083A  D00E               	goto	l512
  2902  00083C  503F               	movf	___ftadd@exp1,w,c
  2903  00083E  0800               	sublw	0
  2904  000840  243E               	addwf	___ftadd@exp2,w,c
  2905  000842  6E3A               	movwf	??___ftadd& (0+255),c
  2906  000844  0E18               	movlw	24
  2907  000846  643A               	cpfsgt	??___ftadd,c
  2908  000848  D007               	goto	l512
  2909  00084A                     u2100:
  2910  00084A  C037  F034         	movff	___ftadd@f2,?___ftadd
  2911  00084E  C038  F035         	movff	___ftadd@f2+1,?___ftadd+1
  2912  000852  C039  F036         	movff	___ftadd@f2+2,?___ftadd+2
  2913  000856  0012               	return	
  2914  000858                     l512:
  2915  000858  503E               	movf	___ftadd@exp2,w,c
  2916  00085A  B4D8               	btfsc	status,2,c
  2917  00085C  D00B               	goto	u2130
  2918  00085E  503F               	movf	___ftadd@exp1,w,c
  2919  000860  5C3E               	subwf	___ftadd@exp2,w,c
  2920  000862  B0D8               	btfsc	status,0,c
  2921  000864  D00E               	goto	l516
  2922  000866  503E               	movf	___ftadd@exp2,w,c
  2923  000868  0800               	sublw	0
  2924  00086A  243F               	addwf	___ftadd@exp1,w,c
  2925  00086C  6E3A               	movwf	??___ftadd& (0+255),c
  2926  00086E  0E18               	movlw	24
  2927  000870  643A               	cpfsgt	??___ftadd,c
  2928  000872  D007               	goto	l516
  2929  000874                     u2130:
  2930  000874  C034  F034         	movff	___ftadd@f1,?___ftadd
  2931  000878  C035  F035         	movff	___ftadd@f1+1,?___ftadd+1
  2932  00087C  C036  F036         	movff	___ftadd@f1+2,?___ftadd+2
  2933  000880  0012               	return	
  2934  000882                     l516:
  2935  000882  0E06               	movlw	6
  2936  000884  6E3D               	movwf	___ftadd@sign,c
  2937  000886  BE36               	btfsc	___ftadd@f1+2,7,c
  2938  000888  8E3D               	bsf	___ftadd@sign,7,c
  2939  00088A  BE39               	btfsc	___ftadd@f2+2,7,c
  2940  00088C  8C3D               	bsf	___ftadd@sign,6,c
  2941  00088E  8E35               	bsf	___ftadd@f1+1,7,c
  2942  000890  0EFF               	movlw	255
  2943  000892  1634               	andwf	___ftadd@f1,f,c
  2944  000894  0EFF               	movlw	255
  2945  000896  1635               	andwf	___ftadd@f1+1,f,c
  2946  000898  0E00               	movlw	0
  2947  00089A  1636               	andwf	___ftadd@f1+2,f,c
  2948  00089C  8E38               	bsf	___ftadd@f2+1,7,c
  2949  00089E  0EFF               	movlw	255
  2950  0008A0  1637               	andwf	___ftadd@f2,f,c
  2951  0008A2  0EFF               	movlw	255
  2952  0008A4  1638               	andwf	___ftadd@f2+1,f,c
  2953  0008A6  0E00               	movlw	0
  2954  0008A8  1639               	andwf	___ftadd@f2+2,f,c
  2955  0008AA  503E               	movf	___ftadd@exp2,w,c
  2956  0008AC  5C3F               	subwf	___ftadd@exp1,w,c
  2957  0008AE  B0D8               	btfsc	status,0,c
  2958  0008B0  D01B               	goto	l521
  2959  0008B2                     u2160:
  2960  0008B2  90D8               	bcf	status,0,c
  2961  0008B4  3637               	rlcf	___ftadd@f2,f,c
  2962  0008B6  3638               	rlcf	___ftadd@f2+1,f,c
  2963  0008B8  3639               	rlcf	___ftadd@f2+2,f,c
  2964  0008BA  063E               	decf	___ftadd@exp2,f,c
  2965  0008BC  503F               	movf	___ftadd@exp1,w,c
  2966  0008BE  183E               	xorwf	___ftadd@exp2,w,c
  2967  0008C0  B4D8               	btfsc	status,2,c
  2968  0008C2  D00D               	goto	l526
  2969  0008C4  063D               	decf	___ftadd@sign,f,c
  2970  0008C6  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  2971  0008CA  0E07               	movlw	7
  2972  0008CC  163A               	andwf	??___ftadd,f,c
  2973  0008CE  B4D8               	btfsc	status,2,c
  2974  0008D0  D006               	goto	l526
  2975  0008D2  D7EF               	goto	u2160
  2976  0008D4  90D8               	bcf	status,0,c
  2977  0008D6  3236               	rrcf	___ftadd@f1+2,f,c
  2978  0008D8  3235               	rrcf	___ftadd@f1+1,f,c
  2979  0008DA  3234               	rrcf	___ftadd@f1,f,c
  2980  0008DC  2A3F               	incf	___ftadd@exp1,f,c
  2981  0008DE                     l526:
  2982  0008DE  503E               	movf	___ftadd@exp2,w,c
  2983  0008E0  183F               	xorwf	___ftadd@exp1,w,c
  2984  0008E2  B4D8               	btfsc	status,2,c
  2985  0008E4  D01F               	goto	u2230
  2986  0008E6  D7F6               	goto	l527
  2987  0008E8                     l521:
  2988  0008E8  503F               	movf	___ftadd@exp1,w,c
  2989  0008EA  5C3E               	subwf	___ftadd@exp2,w,c
  2990  0008EC  B0D8               	btfsc	status,0,c
  2991  0008EE  D01A               	goto	u2230
  2992  0008F0                     u2200:
  2993  0008F0  90D8               	bcf	status,0,c
  2994  0008F2  3634               	rlcf	___ftadd@f1,f,c
  2995  0008F4  3635               	rlcf	___ftadd@f1+1,f,c
  2996  0008F6  3636               	rlcf	___ftadd@f1+2,f,c
  2997  0008F8  063F               	decf	___ftadd@exp1,f,c
  2998  0008FA  503F               	movf	___ftadd@exp1,w,c
  2999  0008FC  183E               	xorwf	___ftadd@exp2,w,c
  3000  0008FE  B4D8               	btfsc	status,2,c
  3001  000900  D00D               	goto	l535
  3002  000902  063D               	decf	___ftadd@sign,f,c
  3003  000904  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  3004  000908  0E07               	movlw	7
  3005  00090A  163A               	andwf	??___ftadd,f,c
  3006  00090C  B4D8               	btfsc	status,2,c
  3007  00090E  D006               	goto	l535
  3008  000910  D7EF               	goto	u2200
  3009  000912  90D8               	bcf	status,0,c
  3010  000914  3239               	rrcf	___ftadd@f2+2,f,c
  3011  000916  3238               	rrcf	___ftadd@f2+1,f,c
  3012  000918  3237               	rrcf	___ftadd@f2,f,c
  3013  00091A  2A3E               	incf	___ftadd@exp2,f,c
  3014  00091C                     l535:
  3015  00091C  503E               	movf	___ftadd@exp2,w,c
  3016  00091E  183F               	xorwf	___ftadd@exp1,w,c
  3017  000920  A4D8               	btfss	status,2,c
  3018  000922  D7F7               	goto	l536
  3019  000924                     u2230:
  3020  000924  AE3D               	btfss	___ftadd@sign,7,c
  3021  000926  D00C               	goto	l538
  3022  000928  0EFF               	movlw	255
  3023  00092A  1A34               	xorwf	___ftadd@f1,f,c
  3024  00092C  0EFF               	movlw	255
  3025  00092E  1A35               	xorwf	___ftadd@f1+1,f,c
  3026  000930  0EFF               	movlw	255
  3027  000932  1A36               	xorwf	___ftadd@f1+2,f,c
  3028  000934  0E01               	movlw	1
  3029  000936  2634               	addwf	___ftadd@f1,f,c
  3030  000938  0E00               	movlw	0
  3031  00093A  2235               	addwfc	___ftadd@f1+1,f,c
  3032  00093C  0E00               	movlw	0
  3033  00093E  2236               	addwfc	___ftadd@f1+2,f,c
  3034  000940                     l538:
  3035  000940  AC3D               	btfss	___ftadd@sign,6,c
  3036  000942  D00C               	goto	l539
  3037  000944  0EFF               	movlw	255
  3038  000946  1A37               	xorwf	___ftadd@f2,f,c
  3039  000948  0EFF               	movlw	255
  3040  00094A  1A38               	xorwf	___ftadd@f2+1,f,c
  3041  00094C  0EFF               	movlw	255
  3042  00094E  1A39               	xorwf	___ftadd@f2+2,f,c
  3043  000950  0E01               	movlw	1
  3044  000952  2637               	addwf	___ftadd@f2,f,c
  3045  000954  0E00               	movlw	0
  3046  000956  2238               	addwfc	___ftadd@f2+1,f,c
  3047  000958  0E00               	movlw	0
  3048  00095A  2239               	addwfc	___ftadd@f2+2,f,c
  3049  00095C                     l539:
  3050  00095C  0E00               	movlw	0
  3051  00095E  6E3D               	movwf	___ftadd@sign,c
  3052  000960  5034               	movf	___ftadd@f1,w,c
  3053  000962  2637               	addwf	___ftadd@f2,f,c
  3054  000964  5035               	movf	___ftadd@f1+1,w,c
  3055  000966  2238               	addwfc	___ftadd@f2+1,f,c
  3056  000968  5036               	movf	___ftadd@f1+2,w,c
  3057  00096A  2239               	addwfc	___ftadd@f2+2,f,c
  3058  00096C  AE39               	btfss	___ftadd@f2+2,7,c
  3059  00096E  D00E               	goto	l540
  3060  000970  0EFF               	movlw	255
  3061  000972  1A37               	xorwf	___ftadd@f2,f,c
  3062  000974  0EFF               	movlw	255
  3063  000976  1A38               	xorwf	___ftadd@f2+1,f,c
  3064  000978  0EFF               	movlw	255
  3065  00097A  1A39               	xorwf	___ftadd@f2+2,f,c
  3066  00097C  0E01               	movlw	1
  3067  00097E  2637               	addwf	___ftadd@f2,f,c
  3068  000980  0E00               	movlw	0
  3069  000982  2238               	addwfc	___ftadd@f2+1,f,c
  3070  000984  0E00               	movlw	0
  3071  000986  2239               	addwfc	___ftadd@f2+2,f,c
  3072  000988  0E01               	movlw	1
  3073  00098A  6E3D               	movwf	___ftadd@sign,c
  3074  00098C                     l540:
  3075  00098C  C037  F013         	movff	___ftadd@f2,___ftpack@arg
  3076  000990  C038  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  3077  000994  C039  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  3078  000998  C03F  F016         	movff	___ftadd@exp1,___ftpack@exp
  3079  00099C  C03D  F017         	movff	___ftadd@sign,___ftpack@sign
  3080  0009A0  EC9B  F006         	call	___ftpack	;wreg free
  3081  0009A4  C013  F034         	movff	?___ftpack,?___ftadd
  3082  0009A8  C014  F035         	movff	?___ftpack+1,?___ftadd+1
  3083  0009AC  C015  F036         	movff	?___ftpack+2,?___ftadd+2
  3084  0009B0  0012               	return	
  3085  0009B2                     __end_of___ftadd:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           intcon	equ	0xFF2
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           indf2	equ	0xFDF
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099 ;; *************** function ___altoft *****************
  3100 ;; Defined at:
  3101 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  c               4   26[COMRAM] long 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  sign            1   35[COMRAM] unsigned char 
  3106 ;;  exp             1   34[COMRAM] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  3   26[COMRAM] float 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3116 ;;      Params:         4       0       0       0       0       0       0       0       0
  3117 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3118 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3119 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3120 ;;Total ram usage:       10 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    2
  3123 ;; This function calls:
  3124 ;;		___ftpack
  3125 ;; This function is called by:
  3126 ;;		_USART_Init
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text21
  3131  001042                     __ptext21:
  3132                           	opt stack 0
  3133  001042                     ___altoft:
  3134                           	opt stack 27
  3135                           
  3136                           ;incstack = 0
  3137  001042  0E00               	movlw	0
  3138  001044  6E24               	movwf	___altoft@sign,c
  3139  001046  0E8E               	movlw	142
  3140  001048  6E23               	movwf	___altoft@exp,c
  3141  00104A  AE1E               	btfss	___altoft@c+3,7,c
  3142  00104C  D011               	goto	l351
  3143  00104E  1E1E               	comf	___altoft@c+3,f,c
  3144  001050  1E1D               	comf	___altoft@c+2,f,c
  3145  001052  1E1C               	comf	___altoft@c+1,f,c
  3146  001054  6C1B               	negf	___altoft@c,c
  3147  001056  0E00               	movlw	0
  3148  001058  221C               	addwfc	___altoft@c+1,f,c
  3149  00105A  221D               	addwfc	___altoft@c+2,f,c
  3150  00105C  221E               	addwfc	___altoft@c+3,f,c
  3151  00105E  0E01               	movlw	1
  3152  001060  6E24               	movwf	___altoft@sign,c
  3153  001062  D006               	goto	l351
  3154  001064  90D8               	bcf	status,0,c
  3155  001066  321E               	rrcf	___altoft@c+3,f,c
  3156  001068  321D               	rrcf	___altoft@c+2,f,c
  3157  00106A  321C               	rrcf	___altoft@c+1,f,c
  3158  00106C  321B               	rrcf	___altoft@c,f,c
  3159  00106E  2A23               	incf	___altoft@exp,f,c
  3160  001070                     l351:
  3161  001070  0E00               	movlw	0
  3162  001072  141B               	andwf	___altoft@c,w,c
  3163  001074  6E1F               	movwf	??___altoft& (0+255),c
  3164  001076  0E00               	movlw	0
  3165  001078  141C               	andwf	___altoft@c+1,w,c
  3166  00107A  6E20               	movwf	(??___altoft+1)& (0+255),c
  3167  00107C  0E00               	movlw	0
  3168  00107E  141D               	andwf	___altoft@c+2,w,c
  3169  001080  6E21               	movwf	(??___altoft+2)& (0+255),c
  3170  001082  0EFF               	movlw	255
  3171  001084  141E               	andwf	___altoft@c+3,w,c
  3172  001086  6E22               	movwf	(??___altoft+3)& (0+255),c
  3173  001088  501F               	movf	??___altoft,w,c
  3174  00108A  1020               	iorwf	??___altoft+1,w,c
  3175  00108C  1021               	iorwf	??___altoft+2,w,c
  3176  00108E  1022               	iorwf	??___altoft+3,w,c
  3177  001090  A4D8               	btfss	status,2,c
  3178  001092  D7E8               	goto	l352
  3179  001094  C01B  F013         	movff	___altoft@c,___ftpack@arg
  3180  001098  C01C  F014         	movff	___altoft@c+1,___ftpack@arg+1
  3181  00109C  C01D  F015         	movff	___altoft@c+2,___ftpack@arg+2
  3182  0010A0  C023  F016         	movff	___altoft@exp,___ftpack@exp
  3183  0010A4  C024  F017         	movff	___altoft@sign,___ftpack@sign
  3184  0010A8  EC9B  F006         	call	___ftpack	;wreg free
  3185  0010AC  C013  F01B         	movff	?___ftpack,?___altoft
  3186  0010B0  C014  F01C         	movff	?___ftpack+1,?___altoft+1
  3187  0010B4  C015  F01D         	movff	?___ftpack+2,?___altoft+2
  3188  0010B8  0012               	return	
  3189  0010BA                     __end_of___altoft:
  3190                           	opt stack 0
  3191                           tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           intcon	equ	0xFF2
  3196                           postinc0	equ	0xFEE
  3197                           wreg	equ	0xFE8
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function ___ftpack *****************
  3204 ;; Defined at:
  3205 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  arg             3   18[COMRAM] unsigned um
  3208 ;;  exp             1   21[COMRAM] unsigned char 
  3209 ;;  sign            1   22[COMRAM] unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  3   18[COMRAM] float 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3221 ;;      Params:         5       0       0       0       0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3223 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3224 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3225 ;;Total ram usage:        8 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		___altoft
  3232 ;;		___awtoft
  3233 ;;		___ftadd
  3234 ;;		___ftdiv
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text22
  3239  000D36                     __ptext22:
  3240                           	opt stack 0
  3241  000D36                     ___ftpack:
  3242                           	opt stack 24
  3243                           
  3244                           ;incstack = 0
  3245  000D36  5016               	movf	___ftpack@exp,w,c
  3246  000D38  B4D8               	btfsc	status,2,c
  3247  000D3A  D005               	goto	u1760
  3248  000D3C  5013               	movf	___ftpack@arg,w,c
  3249  000D3E  1014               	iorwf	___ftpack@arg+1,w,c
  3250  000D40  1015               	iorwf	___ftpack@arg+2,w,c
  3251  000D42  A4D8               	btfss	status,2,c
  3252  000D44  D00C               	goto	l481
  3253  000D46                     u1760:
  3254  000D46  0E00               	movlw	0
  3255  000D48  6E13               	movwf	?___ftpack,c
  3256  000D4A  0E00               	movlw	0
  3257  000D4C  6E14               	movwf	?___ftpack+1,c
  3258  000D4E  0E00               	movlw	0
  3259  000D50  6E15               	movwf	?___ftpack+2,c
  3260  000D52  0012               	return	
  3261  000D54  2A16               	incf	___ftpack@exp,f,c
  3262  000D56  90D8               	bcf	status,0,c
  3263  000D58  3215               	rrcf	___ftpack@arg+2,f,c
  3264  000D5A  3214               	rrcf	___ftpack@arg+1,f,c
  3265  000D5C  3213               	rrcf	___ftpack@arg,f,c
  3266  000D5E                     l481:
  3267  000D5E  0E00               	movlw	0
  3268  000D60  1413               	andwf	___ftpack@arg,w,c
  3269  000D62  6E18               	movwf	??___ftpack& (0+255),c
  3270  000D64  0E00               	movlw	0
  3271  000D66  1414               	andwf	___ftpack@arg+1,w,c
  3272  000D68  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3273  000D6A  0EFE               	movlw	254
  3274  000D6C  1415               	andwf	___ftpack@arg+2,w,c
  3275  000D6E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3276  000D70  5018               	movf	??___ftpack,w,c
  3277  000D72  1019               	iorwf	??___ftpack+1,w,c
  3278  000D74  101A               	iorwf	??___ftpack+2,w,c
  3279  000D76  B4D8               	btfsc	status,2,c
  3280  000D78  D00C               	goto	l484
  3281  000D7A  D7EC               	goto	l482
  3282  000D7C  2A16               	incf	___ftpack@exp,f,c
  3283  000D7E  0E01               	movlw	1
  3284  000D80  2613               	addwf	___ftpack@arg,f,c
  3285  000D82  0E00               	movlw	0
  3286  000D84  2214               	addwfc	___ftpack@arg+1,f,c
  3287  000D86  0E00               	movlw	0
  3288  000D88  2215               	addwfc	___ftpack@arg+2,f,c
  3289  000D8A  90D8               	bcf	status,0,c
  3290  000D8C  3215               	rrcf	___ftpack@arg+2,f,c
  3291  000D8E  3214               	rrcf	___ftpack@arg+1,f,c
  3292  000D90  3213               	rrcf	___ftpack@arg,f,c
  3293  000D92                     l484:
  3294  000D92  0E00               	movlw	0
  3295  000D94  1413               	andwf	___ftpack@arg,w,c
  3296  000D96  6E18               	movwf	??___ftpack& (0+255),c
  3297  000D98  0E00               	movlw	0
  3298  000D9A  1414               	andwf	___ftpack@arg+1,w,c
  3299  000D9C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3300  000D9E  0EFF               	movlw	255
  3301  000DA0  1415               	andwf	___ftpack@arg+2,w,c
  3302  000DA2  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3303  000DA4  5018               	movf	??___ftpack,w,c
  3304  000DA6  1019               	iorwf	??___ftpack+1,w,c
  3305  000DA8  101A               	iorwf	??___ftpack+2,w,c
  3306  000DAA  B4D8               	btfsc	status,2,c
  3307  000DAC  D006               	goto	l487
  3308  000DAE  D7E6               	goto	l485
  3309  000DB0  0616               	decf	___ftpack@exp,f,c
  3310  000DB2  90D8               	bcf	status,0,c
  3311  000DB4  3613               	rlcf	___ftpack@arg,f,c
  3312  000DB6  3614               	rlcf	___ftpack@arg+1,f,c
  3313  000DB8  3615               	rlcf	___ftpack@arg+2,f,c
  3314  000DBA                     l487:
  3315  000DBA  BE14               	btfsc	___ftpack@arg+1,7,c
  3316  000DBC  D003               	goto	u1800
  3317  000DBE  0E02               	movlw	2
  3318  000DC0  6016               	cpfslt	___ftpack@exp,c
  3319  000DC2  D7F6               	goto	l488
  3320  000DC4                     u1800:
  3321  000DC4  A016               	btfss	___ftpack@exp,0,c
  3322  000DC6  9E14               	bcf	___ftpack@arg+1,7,c
  3323  000DC8  90D8               	bcf	status,0,c
  3324  000DCA  3216               	rrcf	___ftpack@exp,f,c
  3325  000DCC  5016               	movf	___ftpack@exp,w,c
  3326  000DCE  1215               	iorwf	___ftpack@arg+2,f,c
  3327  000DD0  5017               	movf	___ftpack@sign,w,c
  3328  000DD2  A4D8               	btfss	status,2,c
  3329  000DD4  8E15               	bsf	___ftpack@arg+2,7,c
  3330  000DD6  C013  F013         	movff	___ftpack@arg,?___ftpack
  3331  000DDA  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3332  000DDE  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3333  000DE2  0012               	return	
  3334  000DE4                     __end_of___ftpack:
  3335                           	opt stack 0
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           intcon	equ	0xFF2
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf2	equ	0xFDF
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _MSdelay *****************
  3349 ;; Defined at:
  3350 ;;		line 49 in file "USART_Source_File.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  val             2   18[COMRAM] unsigned int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  j               2   22[COMRAM] unsigned int 
  3355 ;;  i               2   20[COMRAM] unsigned int 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3365 ;;      Params:         2       0       0       0       0       0       0       0       0
  3366 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3368 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:        6 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text23
  3380  001282                     __ptext23:
  3381                           	opt stack 0
  3382  001282                     _MSdelay:
  3383                           	opt stack 29
  3384                           
  3385                           ;USART_Source_File.c: 51: unsigned int i,j;
  3386                           ;USART_Source_File.c: 52: for(i=0;i<=val;i++)
  3387                           
  3388                           ;incstack = 0
  3389  001282  0E00               	movlw	0
  3390  001284  6E16               	movwf	MSdelay@i+1,c
  3391  001286  0E00               	movlw	0
  3392  001288  6E15               	movwf	MSdelay@i,c
  3393  00128A  D00F               	goto	l209
  3394  00128C                     
  3395                           ;USART_Source_File.c: 53: for(j=0;j<81;j++);
  3396  00128C  0E00               	movlw	0
  3397  00128E  6E18               	movwf	MSdelay@j+1,c
  3398  001290  0E00               	movlw	0
  3399  001292  6E17               	movwf	MSdelay@j,c
  3400  001294                     l1806:
  3401  001294  5018               	movf	MSdelay@j+1,w,c
  3402  001296  E107               	bnz	l1814
  3403  001298  0E51               	movlw	81
  3404  00129A  5C17               	subwf	MSdelay@j,w,c
  3405  00129C  B0D8               	btfsc	status,0,c
  3406  00129E  D003               	goto	u1470
  3407  0012A0  4A17               	infsnz	MSdelay@j,f,c
  3408  0012A2  2A18               	incf	MSdelay@j+1,f,c
  3409  0012A4  D7F7               	goto	l1806
  3410  0012A6                     u1470:
  3411  0012A6                     l1814:
  3412  0012A6  4A15               	infsnz	MSdelay@i,f,c
  3413  0012A8  2A16               	incf	MSdelay@i+1,f,c
  3414  0012AA                     l209:
  3415  0012AA  5015               	movf	MSdelay@i,w,c
  3416  0012AC  5C13               	subwf	MSdelay@val,w,c
  3417  0012AE  5016               	movf	MSdelay@i+1,w,c
  3418  0012B0  5814               	subwfb	MSdelay@val+1,w,c
  3419  0012B2  A0D8               	btfss	status,0,c
  3420  0012B4  0012               	return	
  3421  0012B6  D7EA               	goto	l210
  3422  0012B8                     __end_of_MSdelay:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           intcon	equ	0xFF2
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           indf2	equ	0xFDF
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _ADCint *****************
  3437 ;; Defined at:
  3438 ;;		line 28 in file "funciones.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		None
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3454 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3455 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3456 ;;Total ram usage:       18 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		Interrupt level 2
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	intcode
  3466  000008                     __pintcode:
  3467                           	opt stack 0
  3468  000008                     _ADCint:
  3469                           	opt stack 24
  3470                           
  3471                           ;incstack = 0
  3472  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3473  00000A  ED97  F007         	call	int_func,f	;refresh shadow registers
  3474                           tblptru	equ	0xFF8
  3475                           tblptrh	equ	0xFF7
  3476                           tblptrl	equ	0xFF6
  3477                           tablat	equ	0xFF5
  3478                           intcon	equ	0xFF2
  3479                           postinc0	equ	0xFEE
  3480                           wreg	equ	0xFE8
  3481                           indf2	equ	0xFDF
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486                           	psect	intcode_body
  3487  000F2E                     __pintcode_body:
  3488                           	opt stack 24
  3489  000F2E                     int_func:
  3490                           	opt stack 24
  3491  000F2E  0006               	pop		; remove dummy address from shadow register refresh
  3492  000F30  CFFA F001          	movff	pclath,??_ADCint
  3493  000F34  CFFB F002          	movff	pclatu,??_ADCint+1
  3494  000F38  CFE9 F003          	movff	fsr0l,??_ADCint+2
  3495  000F3C  CFEA F004          	movff	fsr0h,??_ADCint+3
  3496  000F40  CFE1 F005          	movff	fsr1l,??_ADCint+4
  3497  000F44  CFE2 F006          	movff	fsr1h,??_ADCint+5
  3498  000F48  CFD9 F007          	movff	fsr2l,??_ADCint+6
  3499  000F4C  CFDA F008          	movff	fsr2h,??_ADCint+7
  3500  000F50  CFF3 F009          	movff	prodl,??_ADCint+8
  3501  000F54  CFF4 F00A          	movff	prodh,??_ADCint+9
  3502  000F58  CFF6 F00B          	movff	tblptrl,??_ADCint+10
  3503  000F5C  CFF7 F00C          	movff	tblptrh,??_ADCint+11
  3504  000F60  CFF8 F00D          	movff	tblptru,??_ADCint+12
  3505  000F64  CFF5 F00E          	movff	tablat,??_ADCint+13
  3506  000F68  C04D  F00F         	movff	btemp,??_ADCint+14
  3507  000F6C  C04E  F010         	movff	btemp+1,??_ADCint+15
  3508  000F70  C04F  F011         	movff	btemp+2,??_ADCint+16
  3509  000F74  C050  F012         	movff	btemp+3,??_ADCint+17
  3510                           
  3511                           ;funciones.c: 30: if(PIR1bits.ADIF == 1)
  3512  000F78  BC9E               	btfsc	3998,6,c	;volatile
  3513                           
  3514                           ;funciones.c: 31: {
  3515                           ;funciones.c: 32: PIR1bits.ADIF = 0;
  3516  000F7A  9C9E               	bcf	3998,6,c	;volatile
  3517  000F7C  C012  F050         	movff	??_ADCint+17,btemp+3
  3518  000F80  C011  F04F         	movff	??_ADCint+16,btemp+2
  3519  000F84  C010  F04E         	movff	??_ADCint+15,btemp+1
  3520  000F88  C00F  F04D         	movff	??_ADCint+14,btemp
  3521  000F8C  C00E  FFF5         	movff	??_ADCint+13,tablat
  3522  000F90  C00D  FFF8         	movff	??_ADCint+12,tblptru
  3523  000F94  C00C  FFF7         	movff	??_ADCint+11,tblptrh
  3524  000F98  C00B  FFF6         	movff	??_ADCint+10,tblptrl
  3525  000F9C  C00A  FFF4         	movff	??_ADCint+9,prodh
  3526  000FA0  C009  FFF3         	movff	??_ADCint+8,prodl
  3527  000FA4  C008  FFDA         	movff	??_ADCint+7,fsr2h
  3528  000FA8  C007  FFD9         	movff	??_ADCint+6,fsr2l
  3529  000FAC  C006  FFE2         	movff	??_ADCint+5,fsr1h
  3530  000FB0  C005  FFE1         	movff	??_ADCint+4,fsr1l
  3531  000FB4  C004  FFEA         	movff	??_ADCint+3,fsr0h
  3532  000FB8  C003  FFE9         	movff	??_ADCint+2,fsr0l
  3533  000FBC  C002  FFFB         	movff	??_ADCint+1,pclatu
  3534  000FC0  C001  FFFA         	movff	??_ADCint,pclath
  3535  000FC4  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3536  000FC6  0011               	retfie		f
  3537  000FC8                     __end_of_ADCint:
  3538                           	opt stack 0
  3539                           pclatu	equ	0xFFB
  3540                           pclath	equ	0xFFA
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           postinc0	equ	0xFEE
  3549                           fsr0h	equ	0xFEA
  3550                           fsr0l	equ	0xFE9
  3551                           wreg	equ	0xFE8
  3552                           fsr1h	equ	0xFE2
  3553                           fsr1l	equ	0xFE1
  3554                           indf2	equ	0xFDF
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           pclatu	equ	0xFFB
  3559                           pclath	equ	0xFFA
  3560                           tblptru	equ	0xFF8
  3561                           tblptrh	equ	0xFF7
  3562                           tblptrl	equ	0xFF6
  3563                           tablat	equ	0xFF5
  3564                           prodh	equ	0xFF4
  3565                           prodl	equ	0xFF3
  3566                           intcon	equ	0xFF2
  3567                           postinc0	equ	0xFEE
  3568                           fsr0h	equ	0xFEA
  3569                           fsr0l	equ	0xFE9
  3570                           wreg	equ	0xFE8
  3571                           fsr1h	equ	0xFE2
  3572                           fsr1l	equ	0xFE1
  3573                           indf2	equ	0xFDF
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578                           	psect	rparam
  3579  0000                     pclatu	equ	0xFFB
  3580                           pclath	equ	0xFFA
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           postinc0	equ	0xFEE
  3589                           fsr0h	equ	0xFEA
  3590                           fsr0l	equ	0xFE9
  3591                           wreg	equ	0xFE8
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599                           	psect	temp
  3600  00004D                     btemp:
  3601                           	opt stack 0
  3602  00004D                     	ds	1
  3603  0000                     int$flags	set	btemp
  3604  0000                     wtemp6	set	btemp+1
  3605                           pclatu	equ	0xFFB
  3606                           pclath	equ	0xFFA
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           fsr0h	equ	0xFEA
  3616                           fsr0l	equ	0xFE9
  3617                           wreg	equ	0xFE8
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           indf2	equ	0xFDF
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      76
    BANK0           160     22      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    memset@p1	PTR void  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    memset@p	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    USART_ReceiveString@Input	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _lcd_origen->_wait_in_ms
    _lcd_limpiar->_wait_in_ms
    _lcd_iniciar->_wait_in_ms
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___awtoft->___ftpack
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___ftadd
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _ADCint in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_limpiar->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    _USART_Init->___fttol

Critical Paths under _ADCint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ADCint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88099
                            _MSdelay
                         _USART_Init
                _USART_ReceiveString
                   _USART_SendString
                        _configBoard
                        _lcd_iniciar
                        _lcd_limpiar
                         _lcd_origen
                          _lcd_texto
                             _memset
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     243
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     324
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            3     1      2    9288
                                             19 BANK0      3     1      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    9133
                                             12 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_limpiar                                          0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   27725
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    9763
                                             12 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    8981
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (4) _wait_in_ms                                          10     8      2    8981
                                             60 COMRAM     4     2      2
                                              6 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3116
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     136
                                             19 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveString                                 11     8      3     443
                                             18 COMRAM    11     8      3
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (2) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4   12284
                                              6 BANK0      7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             51 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3813
                                             36 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4578
                                             51 COMRAM    12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3187
                                             26 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ADCint                                              18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _USART_ReceiveString
     _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_limpiar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _memset
   _strcmp

 _ADCint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      16       5       13.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      20        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 14 19:50:32 2018

                ___altoft@exp 0023                 ___altoft@sign 0024                            l43 0CE6  
                          l46 0D1E                            l47 0D26                   __CFG_BORV$3 000000  
                ___ftadd@exp1 003F                  ___ftadd@exp2 003E                  ___ftadd@sign 003D  
                         l210 128C                           l203 1358                           l204 1346  
                         l127 1308                           l224 0E56                           l128 12EA  
                         l209 12AA                           l217 0E5E                           l218 0DEE  
                         l219 0E2E                           l262 0F0E                           l351 1070  
                         l263 0F10                           l352 1064                           l512 0858  
                         l521 08E8                           l259 0EBC                           l540 098C  
                         l516 0882                           l526 08DE                           l462 125E  
                         l535 091C                           l527 08D4                           l536 0912  
                         l481 0D5E                           l545 0AD2                           l482 0D54  
                         l538 0940                           l539 095C                           l547 0AFA  
                         l484 0D92                           l548 0B38                           l820 1208  
                         l485 0D7C                           l549 0B5E                           l581 09E0  
                         l821 1200                           l590 0A70                           l487 0DBA  
                         l583 0A58                           l488 0DB0                           l592 0A98  
                         l584 0A48                           l589 0A7C                           l694 1332  
                         l695 1322                           wreg 000FE8                ??_lcd_caracter 006E  
                __CFG_LVP$OFF 000000                  ___ftdiv@cntr 002E                  ___ftdiv@sign 0033  
                __CFG_WDT$OFF 000000                          l1104 13C0                          l2136 0D26  
                        l1814 12A6                          l1806 1294                          l1858 1322  
                        STR_1 0801                          u2000 0D14                          u2100 084A  
                        u2200 08F0                          u2025 11AC                          u2130 0874  
                        u2035 1140                          u1500 0E14                          u2061 0816  
                        u2230 0924                          u1510 0E1C                          u2071 082A  
                        u2160 08B2                          u1540 123E                          u1470 12A6  
                        u1800 0DC4                          u1910 09FE                          u1831 0ABA  
                        u1760 0D46                          u1851 0AE2                          u1915 09F6  
                        u1950 0A82                          u1891 09C2                          u1975 0C94  
                        _RCIF 007CF5                          _TXIF 007CF4                          _main 0E8A  
                ___ftpack@arg 0013                  ___ftpack@exp 0016                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 004D      __end_of_USART_SendString 1368                          prodh 000FF4  
                        prodl 000FF3                          start 000E               __end_of_MSdelay 12B8  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000          lcd_caracter@caracter 006C  
                ___fttol@exp1 0065                  ___fttol@lval 0061                 __CFG_PLLDIV$2 000000  
                       ?_main 0001               __end_of___ftadd 09B2               __end_of___ftdiv 0B90  
             __end_of___fttol 0AAA                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _TMR0L 000FD6                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TXREG 000FAD  
                       _TXSTA 000FAC                __CFG_FCMEN$OFF 000000                 ___awtoft@sign 001E  
                       _nivel 004C                 ___ftpack@sign 0017                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8                         wtemp6 004E  
                 ?_USART_Init 0066               __initialization 12B8                  __end_of_main 0F2E  
                      ??_main 0041                 ___fttol@sign1 0060                 __activetblptr 000001  
__size_of_USART_ReceiveString 00A6          USART_ReceiveString@i 001B                        _ADCON0 000FC2  
            __end_of___altoft 10BA                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _T08BIT 007EAE                        _ADCint 0008              __end_of___awtoft 1282  
            __end_of___ftpack 0DE4                     ??_MSdelay 0015                        _OSCCON 000FD3  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                        _TRISC6 007CA6  
                      _TRISC7 007CA7          __size_of_configBoard 006E          __end_of_lcd_caracter 1194  
        __size_of_lcd_iniciar 00D6                     ??___ftadd 003A                     ??___ftdiv 002B  
                   ??___fttol 0038          __size_of_lcd_limpiar 001C                        _memset 1318  
                      clear_0 12D0               _cantidadBotones 0043                        _strcmp 11FE  
                __pdataCOMRAM 004C    __end_of_USART_TransmitChar 13CA                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
         __size_of_USART_Init 007A                    __accesstop 0060       __end_of__initialization 12D6  
                  ___altoft@c 001B                    ___ftadd@f1 0034                    ___ftadd@f2 0037  
               ___rparam_used 000001                    ___ftdiv@f1 0025                    ___ftdiv@f2 0028  
                  ___ftdiv@f3 002F                    ___awtoft@c 001B                    ___fttol@f1 0034  
              __pcstackCOMRAM 0001            __size_of_lcd_orden 006A            __size_of_lcd_texto 0030  
          __size_of_lcd_pulso 001E                       ?_ADCint 0001             ?_USART_SendString 0014  
     USART_ReceiveString@temp 001D            ??_USART_SendString 0016                lcd_orden@orden 006C  
                   ?___altoft 001B                       ?_memset 0013                     ?___awtoft 001B  
                   ?___ftpack 0013                       ?_strcmp 0013                    _lcd_origen 1386  
             __size_of_ADCint 0FC0                       _MSdelay 1282         __size_of_lcd_caracter 006C  
                ??_USART_Init 0040                       __Hparam 0000                       __Lparam 0000  
         _USART_ReceiveString 0DE4             __end_of_lcd_orden 11FE             __end_of_lcd_texto 1318  
           __end_of_lcd_pulso 1386                       ___ftadd 0806                       ___ftdiv 0AAA  
                     ___fttol 09B2                  __psmallconst 0800                    ??___altoft 001F  
                     __pcinit 12B8                    ??___awtoft 001E                    ??___ftpack 0018  
             __size_of_memset 002C                       __ramtop 0800                       __ptext0 0E8A  
                     __ptext1 11FE                       __ptext2 1318                       __ptext3 12E8  
                     __ptext4 1128                       __ptext5 1386                       __ptext6 13A2  
                     __ptext7 0B90                       __ptext8 1194                       __ptext9 1368  
         USART_SendString@out 0014                     _T0CONbits 000FD5               __size_of_strcmp 004C  
              USART_Init@temp 006A          ?_USART_ReceiveString 0013            __end_of_USART_Init 1042  
                _lcd_caracter 1128                __pintcode_body 0F2E          end_of_initialization 12D6  
                     memset@c 0015                       memset@n 0017                       memset@p 0019  
        wait_in_ms@time_in_ms 003D                       int_func 0F2E                       postinc0 000FEE  
                  _wait_in_ms 0C66                       strcmp@r 0018                     _PORTCbits 000F82  
                   _PORTDbits 000F83         ??_USART_ReceiveString 0016                     _TRISAbits 000F92  
                   _TRISDbits 000F95                   ?_lcd_origen 0001           USART_Init@baud_rate 0066  
       USART_TransmitChar@out 0013                __end_of_ADCint 0FC8                   ___ftdiv@exp 0032  
               ??_configBoard 0013                    _puntuacion 0041            _USART_TransmitChar 13BE  
               ??_lcd_iniciar 0041                 ??_lcd_limpiar 0041           ?_USART_TransmitChar 0001  
               __pidataCOMRAM 13D2                __end_of_memset 1344                __end_of_strcmp 124A  
         start_initialization 12B8          ??_USART_TransmitChar 0013               wait_in_ms@count 0068  
                    ??_ADCint 0001            wait_in_ms@count_ms 006A             _USART_ReceiveChar 13CA  
          ?_USART_ReceiveChar 0001           __end_of_configBoard 1128           __size_of_lcd_origen 001C  
                 ?_wait_in_ms 003D           __end_of_lcd_iniciar 0C66                      ??_memset 0019  
         __end_of_lcd_limpiar 13BE           ??_USART_ReceiveChar 0013                      ??_strcmp 0017  
   __size_of_USART_SendString 0024             __size_of___altoft 0078             __size_of___awtoft 0038  
           __size_of___ftpack 00AE                   __pbssCOMRAM 0041                 __pcstackBANK0 0060  
                    ?_MSdelay 0013      USART_ReceiveString@Input 0013     __end_of_USART_ReceiveChar 13D2  
                   __pintcode 0008                      ?___ftadd 0034                      ?___ftdiv 0025  
                    ?___fttol 0034                     _lcd_orden 1194                     _lcd_texto 12E8  
                   _lcd_pulso 1368                   __smallconst 0800           __size_of_wait_in_ms 00D0  
                    MSdelay@i 0015                      MSdelay@j 0017                   _configBoard 10BA  
                    _PIE1bits 000F9D                   _lcd_iniciar 0B90                      _PIR1bits 000F9E  
                 _lcd_limpiar 13A2                    ?_lcd_orden 006C                    ?_lcd_texto 0073  
                  ?_lcd_pulso 0001                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                  ??_lcd_origen 0041              __size_of_MSdelay 0036  
              wait_in_ms@flag 0066    __size_of_USART_ReceiveChar 0008                      __Hrparam 0000  
                    __Lrparam 0000                  __Lsmallconst 0800            __end_of_lcd_origen 13A2  
            __size_of___ftadd 01AC              __size_of___ftdiv 00E6                      ___altoft 1042  
            __size_of___fttol 00F8   __end_of_USART_ReceiveString 0E8A                      ___awtoft 124A  
                    ___ftpack 0D36              _USART_SendString 1344                      __ptext10 0C66  
                    __ptext11 124A                      __ptext20 0806                      __ptext12 10BA  
                    __ptext21 1042                      __ptext13 1344                      __ptext22 0D36  
                    __ptext14 13BE                      __ptext23 1282                      __ptext15 0DE4  
                    __ptext16 13CA                      __ptext17 0FC8                      __ptext18 09B2  
                    __ptext19 0AAA               lcd_texto@cadena 0073                 __size_of_main 00A4  
                  MSdelay@val 0013                      _numTopos 0045                      int$flags 004D  
                ??_wait_in_ms 003F                      main@temp 0046                   ??_lcd_orden 006E  
                 ??_lcd_texto 0075                   ??_lcd_pulso 0041         __CFG_CPUDIV$OSC1_PLL2 000000  
               _presionoBoton 0044                    _INTCONbits 000FF2                      memset@p1 0013  
 __size_of_USART_TransmitChar 000C     USART_ReceiveString@length 0015                      intlevel2 0000  
          __end_of_wait_in_ms 0D36                      strcmp@s1 0013                      strcmp@s2 0015  
               ?_lcd_caracter 006C            __CFG_FOSC$HSPLL_HS 000000                  ?_configBoard 0001  
                ?_lcd_iniciar 0001                    _USART_Init 0FC8                  ?_lcd_limpiar 0001  
