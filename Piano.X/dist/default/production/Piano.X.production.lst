

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 19 17:44:01 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _CCPR1L	set	4030
    53  0000                     _T2CON	set	4042
    54  0000                     _PR2	set	4043
    55  0000                     _PORTEbits	set	3972
    56  0000                     _CCP1CON	set	4029
    57  0000                     _PORTBbits	set	3969
    58  0000                     _PORTDbits	set	3971
    59  0000                     _TRISE	set	3990
    60  0000                     _PORTC	set	3970
    61  0000                     _TRISC	set	3988
    62  0000                     _OSCCON	set	4051
    63  0000                     _PORTA	set	3968
    64  0000                     _TRISD	set	3989
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PIE1bits	set	3997
    67  0000                     _TRISAbits	set	3986
    68  0000                     _ADCON2bits	set	4032
    69  0000                     _ADCON0bits	set	4034
    70  0000                     _ADCON0	set	4034
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISA	set	3986
    73  0000                     _ADCON1bits	set	4033
    74  0000                     _T0CONbits	set	4053
    75  0000                     _INTCONbits	set	4082
    76  0000                     _TMR0L	set	4054
    77  0000                     _TMR0IF	set	32658
    78  0000                     _TMR0ON	set	32431
    79  0000                     _RCIF	set	31989
    80  0000                     _T08BIT	set	32430
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  00782E                     __pcinit:
    86                           	opt stack 0
    87  00782E                     start_initialization:
    88                           	opt stack 0
    89  00782E                     __initialization:
    90                           	opt stack 0
    91  00782E                     end_of_initialization:
    92                           	opt stack 0
    93  00782E                     __end_of__initialization:
    94                           	opt stack 0
    95  00782E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    96  007830  6EF8               	movwf	tblptru,c
    97  007832  0100               	movlb	0
    98  007834  EFB7  F03E         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     ?___ftpack:
   105                           	opt stack 0
   106  000001                     tocarNota@nota:
   107                           	opt stack 0
   108  000001                     ___ftpack@arg:
   109                           	opt stack 0
   110                           
   111                           ; 3 bytes @ 0x0
   112  000001                     	ds	3
   113  000004                     ___ftpack@exp:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x3
   117  000004                     	ds	1
   118  000005                     ___ftpack@sign:
   119                           	opt stack 0
   120                           
   121                           ; 1 bytes @ 0x4
   122  000005                     	ds	1
   123  000006                     ??___ftpack:
   124                           
   125                           ; 1 bytes @ 0x5
   126  000006                     	ds	3
   127  000009                     ?___awtoft:
   128                           	opt stack 0
   129  000009                     ___awtoft@c:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x8
   133  000009                     	ds	3
   134  00000C                     ___awtoft@sign:
   135                           	opt stack 0
   136                           
   137                           ; 1 bytes @ 0xB
   138  00000C                     	ds	1
   139  00000D                     ?___ftdiv:
   140                           	opt stack 0
   141  00000D                     ___ftdiv@f1:
   142                           	opt stack 0
   143                           
   144                           ; 3 bytes @ 0xC
   145  00000D                     	ds	3
   146  000010                     ___ftdiv@f2:
   147                           	opt stack 0
   148                           
   149                           ; 3 bytes @ 0xF
   150  000010                     	ds	3
   151  000013                     ??___ftdiv:
   152                           
   153                           ; 1 bytes @ 0x12
   154  000013                     	ds	3
   155  000016                     ___ftdiv@cntr:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x15
   159  000016                     	ds	1
   160  000017                     ___ftdiv@f3:
   161                           	opt stack 0
   162                           
   163                           ; 3 bytes @ 0x16
   164  000017                     	ds	3
   165  00001A                     ___ftdiv@exp:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x19
   169  00001A                     	ds	1
   170  00001B                     ___ftdiv@sign:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x1A
   174  00001B                     	ds	1
   175  00001C                     ?___fttol:
   176                           	opt stack 0
   177  00001C                     ___fttol@f1:
   178                           	opt stack 0
   179                           
   180                           ; 3 bytes @ 0x1B
   181  00001C                     	ds	4
   182  000020                     ??___fttol:
   183                           
   184                           ; 1 bytes @ 0x1F
   185  000020                     	ds	5
   186  000025                     ___fttol@sign1:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x24
   190  000025                     	ds	1
   191  000026                     ___fttol@lval:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0x25
   195  000026                     	ds	4
   196  00002A                     ___fttol@exp1:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x29
   200  00002A                     	ds	1
   201  00002B                     wait_in_ms@time_in_ms:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x2A
   205  00002B                     	ds	2
   206  00002D                     ??_wait_in_ms:
   207                           
   208                           ; 1 bytes @ 0x2C
   209  00002D                     	ds	2
   210  00002F                     wait_in_ms@flag:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x2E
   214  00002F                     	ds	2
   215  000031                     wait_in_ms@count:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0x30
   219  000031                     	ds	2
   220  000033                     wait_in_ms@count_ms:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x32
   224  000033                     	ds	2
   225  000035                     tblptru	equ	0xFF8
   226                           
   227                           ; 1 bytes @ 0x34
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 45 in file "PianoMain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  dc              1    0        unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called:    3
   253 ;; This function calls:
   254 ;;		_configBoard
   255 ;;		_tocarNota
   256 ;;		_wait_in_ms
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  007D6E                     __ptext0:
   264                           	opt stack 0
   265  007D6E                     _main:
   266                           	opt stack 28
   267                           
   268                           ;PianoMain.c: 48: OSCCON=0x72;
   269                           
   270                           ;incstack = 0
   271  007D6E  0E72               	movlw	114
   272  007D70  6ED3               	movwf	4051,c	;volatile
   273                           
   274                           ;PianoMain.c: 50: configBoard();
   275  007D72  EC38  F03C         	call	_configBoard	;wreg free
   276                           
   277                           ;PianoMain.c: 53: TRISC = 0 ;
   278  007D76  0E00               	movlw	0
   279  007D78  6E94               	movwf	3988,c	;volatile
   280                           
   281                           ;PianoMain.c: 54: PORTC = 0 ;
   282  007D7A  0E00               	movlw	0
   283  007D7C  6E82               	movwf	3970,c	;volatile
   284                           
   285                           ;PianoMain.c: 55: TRISE=1;
   286  007D7E  0E01               	movlw	1
   287  007D80  6E96               	movwf	3990,c	;volatile
   288                           
   289                           ;PianoMain.c: 56: TRISD=1;
   290  007D82  0E01               	movlw	1
   291  007D84  6E95               	movwf	3989,c	;volatile
   292                           
   293                           ;PianoMain.c: 57: TRISB=1;
   294  007D86  0E01               	movlw	1
   295  007D88  6E93               	movwf	3987,c	;volatile
   296                           
   297                           ;PianoMain.c: 70: while(PORTDbits.RD2){
   298                           
   299                           ;PianoMain.c: 61: unsigned char dc ;
   300                           ;PianoMain.c: 64: while(1) {
   301  007D8A  D003               	goto	l95
   302  007D8C                     
   303                           ;PianoMain.c: 71: tocarNota('c');
   304  007D8C  0E63               	movlw	99
   305  007D8E  EC1A  F03E         	call	_tocarNota
   306  007D92                     l95:
   307  007D92  A483               	btfss	3971,2,c	;volatile
   308  007D94  D004               	goto	l98
   309  007D96  D7FA               	goto	l96
   310  007D98                     
   311                           ;PianoMain.c: 75: tocarNota('C');
   312  007D98  0E43               	movlw	67
   313  007D9A  EC1A  F03E         	call	_tocarNota
   314  007D9E                     l98:
   315  007D9E  A683               	btfss	3971,3,c	;volatile
   316  007DA0  D004               	goto	l101
   317  007DA2  D7FA               	goto	l99
   318  007DA4                     
   319                           ;PianoMain.c: 79: tocarNota('d');
   320  007DA4  0E64               	movlw	100
   321  007DA6  EC1A  F03E         	call	_tocarNota
   322  007DAA                     l101:
   323  007DAA  A883               	btfss	3971,4,c	;volatile
   324  007DAC  D004               	goto	l104
   325  007DAE  D7FA               	goto	l102
   326  007DB0                     
   327                           ;PianoMain.c: 82: tocarNota('D');
   328  007DB0  0E44               	movlw	68
   329  007DB2  EC1A  F03E         	call	_tocarNota
   330  007DB6                     l104:
   331  007DB6  AA83               	btfss	3971,5,c	;volatile
   332  007DB8  D004               	goto	l107
   333  007DBA  D7FA               	goto	l105
   334  007DBC                     
   335                           ;PianoMain.c: 85: tocarNota('e');
   336  007DBC  0E65               	movlw	101
   337  007DBE  EC1A  F03E         	call	_tocarNota
   338  007DC2                     l107:
   339  007DC2  AC83               	btfss	3971,6,c	;volatile
   340  007DC4  D004               	goto	l110
   341  007DC6  D7FA               	goto	l108
   342  007DC8                     
   343                           ;PianoMain.c: 88: tocarNota('f');
   344  007DC8  0E66               	movlw	102
   345  007DCA  EC1A  F03E         	call	_tocarNota
   346  007DCE                     l110:
   347  007DCE  AE83               	btfss	3971,7,c	;volatile
   348  007DD0  D004               	goto	l113
   349  007DD2  D7FA               	goto	l111
   350  007DD4                     
   351                           ;PianoMain.c: 91: tocarNota('F');
   352  007DD4  0E46               	movlw	70
   353  007DD6  EC1A  F03E         	call	_tocarNota
   354  007DDA                     l113:
   355  007DDA  A081               	btfss	3969,0,c	;volatile
   356  007DDC  D004               	goto	l116
   357  007DDE  D7FA               	goto	l114
   358  007DE0                     
   359                           ;PianoMain.c: 94: tocarNota('g');
   360  007DE0  0E67               	movlw	103
   361  007DE2  EC1A  F03E         	call	_tocarNota
   362  007DE6                     l116:
   363  007DE6  A281               	btfss	3969,1,c	;volatile
   364  007DE8  D004               	goto	l119
   365  007DEA  D7FA               	goto	l117
   366  007DEC                     
   367                           ;PianoMain.c: 97: tocarNota('G');
   368  007DEC  0E47               	movlw	71
   369  007DEE  EC1A  F03E         	call	_tocarNota
   370  007DF2                     l119:
   371  007DF2  A481               	btfss	3969,2,c	;volatile
   372  007DF4  D004               	goto	l122
   373  007DF6  D7FA               	goto	l120
   374  007DF8                     
   375                           ;PianoMain.c: 100: tocarNota('a');
   376  007DF8  0E61               	movlw	97
   377  007DFA  EC1A  F03E         	call	_tocarNota
   378  007DFE                     l122:
   379  007DFE  A681               	btfss	3969,3,c	;volatile
   380  007E00  D004               	goto	l125
   381  007E02  D7FA               	goto	l123
   382  007E04                     
   383                           ;PianoMain.c: 103: tocarNota('A');
   384  007E04  0E41               	movlw	65
   385  007E06  EC1A  F03E         	call	_tocarNota
   386  007E0A                     l125:
   387  007E0A  A881               	btfss	3969,4,c	;volatile
   388  007E0C  D004               	goto	l128
   389  007E0E  D7FA               	goto	l126
   390  007E10                     
   391                           ;PianoMain.c: 106: tocarNota('b');
   392  007E10  0E62               	movlw	98
   393  007E12  EC1A  F03E         	call	_tocarNota
   394  007E16                     l128:
   395  007E16  BA81               	btfsc	3969,5,c	;volatile
   396  007E18  D7FB               	goto	l129
   397                           
   398                           ;PianoMain.c: 107: }
   399                           ;PianoMain.c: 108: CCP1CON = 0;
   400  007E1A  0E00               	movlw	0
   401  007E1C  6EBD               	movwf	4029,c	;volatile
   402                           
   403                           ;PianoMain.c: 111: while(PORTEbits.RE1==1)
   404  007E1E  D063               	goto	l131
   405  007E20                     
   406                           ;PianoMain.c: 112: {
   407                           ;PianoMain.c: 113: tocarNota('d');
   408  007E20  0E64               	movlw	100
   409  007E22  EC1A  F03E         	call	_tocarNota
   410                           
   411                           ;PianoMain.c: 114: wait_in_ms(300);
   412  007E26  0E01               	movlw	1
   413  007E28  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   414  007E2A  0E2C               	movlw	44
   415  007E2C  6E2B               	movwf	wait_in_ms@time_in_ms,c
   416  007E2E  ECC7  F03C         	call	_wait_in_ms	;wreg free
   417                           
   418                           ;PianoMain.c: 115: tocarNota('g');
   419  007E32  0E67               	movlw	103
   420  007E34  EC1A  F03E         	call	_tocarNota
   421                           
   422                           ;PianoMain.c: 116: wait_in_ms(600);
   423  007E38  0E02               	movlw	2
   424  007E3A  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   425  007E3C  0E58               	movlw	88
   426  007E3E  6E2B               	movwf	wait_in_ms@time_in_ms,c
   427  007E40  ECC7  F03C         	call	_wait_in_ms	;wreg free
   428                           
   429                           ;PianoMain.c: 117: tocarNota('b');
   430  007E44  0E62               	movlw	98
   431  007E46  EC1A  F03E         	call	_tocarNota
   432                           
   433                           ;PianoMain.c: 118: wait_in_ms(50);
   434  007E4A  0E00               	movlw	0
   435  007E4C  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   436  007E4E  0E32               	movlw	50
   437  007E50  6E2B               	movwf	wait_in_ms@time_in_ms,c
   438  007E52  ECC7  F03C         	call	_wait_in_ms	;wreg free
   439                           
   440                           ;PianoMain.c: 119: tocarNota('a');
   441  007E56  0E61               	movlw	97
   442  007E58  EC1A  F03E         	call	_tocarNota
   443                           
   444                           ;PianoMain.c: 120: wait_in_ms(50);
   445  007E5C  0E00               	movlw	0
   446  007E5E  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   447  007E60  0E32               	movlw	50
   448  007E62  6E2B               	movwf	wait_in_ms@time_in_ms,c
   449  007E64  ECC7  F03C         	call	_wait_in_ms	;wreg free
   450                           
   451                           ;PianoMain.c: 121: tocarNota('g');
   452  007E68  0E67               	movlw	103
   453  007E6A  EC1A  F03E         	call	_tocarNota
   454                           
   455                           ;PianoMain.c: 122: wait_in_ms(50);
   456  007E6E  0E00               	movlw	0
   457  007E70  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   458  007E72  0E32               	movlw	50
   459  007E74  6E2B               	movwf	wait_in_ms@time_in_ms,c
   460  007E76  ECC7  F03C         	call	_wait_in_ms	;wreg free
   461                           
   462                           ;PianoMain.c: 123: tocarNota('b');
   463  007E7A  0E62               	movlw	98
   464  007E7C  EC1A  F03E         	call	_tocarNota
   465                           
   466                           ;PianoMain.c: 124: wait_in_ms(600);
   467  007E80  0E02               	movlw	2
   468  007E82  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   469  007E84  0E58               	movlw	88
   470  007E86  6E2B               	movwf	wait_in_ms@time_in_ms,c
   471  007E88  ECC7  F03C         	call	_wait_in_ms	;wreg free
   472                           
   473                           ;PianoMain.c: 125: tocarNota('a');
   474  007E8C  0E61               	movlw	97
   475  007E8E  EC1A  F03E         	call	_tocarNota
   476                           
   477                           ;PianoMain.c: 126: wait_in_ms(300);
   478  007E92  0E01               	movlw	1
   479  007E94  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   480  007E96  0E2C               	movlw	44
   481  007E98  6E2B               	movwf	wait_in_ms@time_in_ms,c
   482  007E9A  ECC7  F03C         	call	_wait_in_ms	;wreg free
   483                           
   484                           ;PianoMain.c: 127: tocarNota('g');
   485  007E9E  0E67               	movlw	103
   486  007EA0  EC1A  F03E         	call	_tocarNota
   487                           
   488                           ;PianoMain.c: 128: wait_in_ms(600);
   489  007EA4  0E02               	movlw	2
   490  007EA6  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   491  007EA8  0E58               	movlw	88
   492  007EAA  6E2B               	movwf	wait_in_ms@time_in_ms,c
   493  007EAC  ECC7  F03C         	call	_wait_in_ms	;wreg free
   494                           
   495                           ;PianoMain.c: 129: tocarNota('e');
   496  007EB0  0E65               	movlw	101
   497  007EB2  EC1A  F03E         	call	_tocarNota
   498                           
   499                           ;PianoMain.c: 130: wait_in_ms(300);
   500  007EB6  0E01               	movlw	1
   501  007EB8  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   502  007EBA  0E2C               	movlw	44
   503  007EBC  6E2B               	movwf	wait_in_ms@time_in_ms,c
   504  007EBE  ECC7  F03C         	call	_wait_in_ms	;wreg free
   505                           
   506                           ;PianoMain.c: 131: tocarNota('d');
   507  007EC2  0E64               	movlw	100
   508  007EC4  EC1A  F03E         	call	_tocarNota
   509                           
   510                           ;PianoMain.c: 132: wait_in_ms(600);
   511  007EC8  0E02               	movlw	2
   512  007ECA  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   513  007ECC  0E58               	movlw	88
   514  007ECE  6E2B               	movwf	wait_in_ms@time_in_ms,c
   515  007ED0  ECC7  F03C         	call	_wait_in_ms	;wreg free
   516                           
   517                           ;PianoMain.c: 133: tocarNota('d');
   518  007ED4  0E64               	movlw	100
   519  007ED6  EC1A  F03E         	call	_tocarNota
   520                           
   521                           ;PianoMain.c: 134: wait_in_ms(300);
   522  007EDA  0E01               	movlw	1
   523  007EDC  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   524  007EDE  0E2C               	movlw	44
   525  007EE0  6E2B               	movwf	wait_in_ms@time_in_ms,c
   526  007EE2  ECC7  F03C         	call	_wait_in_ms	;wreg free
   527  007EE6                     l131:
   528  007EE6  A284               	btfss	3972,1,c	;volatile
   529  007EE8  D088               	goto	l134
   530  007EEA  D79A               	goto	l132
   531  007EEC                     
   532                           ;PianoMain.c: 141: {
   533                           ;PianoMain.c: 142: tocarNota('e');
   534  007EEC  0E65               	movlw	101
   535  007EEE  EC1A  F03E         	call	_tocarNota
   536                           
   537                           ;PianoMain.c: 143: wait_in_ms(100);
   538  007EF2  0E00               	movlw	0
   539  007EF4  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   540  007EF6  0E64               	movlw	100
   541  007EF8  6E2B               	movwf	wait_in_ms@time_in_ms,c
   542  007EFA  ECC7  F03C         	call	_wait_in_ms	;wreg free
   543                           
   544                           ;PianoMain.c: 144: tocarNota('e');
   545  007EFE  0E65               	movlw	101
   546  007F00  EC1A  F03E         	call	_tocarNota
   547                           
   548                           ;PianoMain.c: 145: wait_in_ms(100);
   549  007F04  0E00               	movlw	0
   550  007F06  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   551  007F08  0E64               	movlw	100
   552  007F0A  6E2B               	movwf	wait_in_ms@time_in_ms,c
   553  007F0C  ECC7  F03C         	call	_wait_in_ms	;wreg free
   554                           
   555                           ;PianoMain.c: 146: tocarNota('f');
   556  007F10  0E66               	movlw	102
   557  007F12  EC1A  F03E         	call	_tocarNota
   558                           
   559                           ;PianoMain.c: 147: wait_in_ms(100);
   560  007F16  0E00               	movlw	0
   561  007F18  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   562  007F1A  0E64               	movlw	100
   563  007F1C  6E2B               	movwf	wait_in_ms@time_in_ms,c
   564  007F1E  ECC7  F03C         	call	_wait_in_ms	;wreg free
   565                           
   566                           ;PianoMain.c: 148: tocarNota('g');
   567  007F22  0E67               	movlw	103
   568  007F24  EC1A  F03E         	call	_tocarNota
   569                           
   570                           ;PianoMain.c: 149: wait_in_ms(100);
   571  007F28  0E00               	movlw	0
   572  007F2A  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   573  007F2C  0E64               	movlw	100
   574  007F2E  6E2B               	movwf	wait_in_ms@time_in_ms,c
   575  007F30  ECC7  F03C         	call	_wait_in_ms	;wreg free
   576                           
   577                           ;PianoMain.c: 150: tocarNota('g');
   578  007F34  0E67               	movlw	103
   579  007F36  EC1A  F03E         	call	_tocarNota
   580                           
   581                           ;PianoMain.c: 151: wait_in_ms(100);
   582  007F3A  0E00               	movlw	0
   583  007F3C  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   584  007F3E  0E64               	movlw	100
   585  007F40  6E2B               	movwf	wait_in_ms@time_in_ms,c
   586  007F42  ECC7  F03C         	call	_wait_in_ms	;wreg free
   587                           
   588                           ;PianoMain.c: 152: tocarNota('f');
   589  007F46  0E66               	movlw	102
   590  007F48  EC1A  F03E         	call	_tocarNota
   591                           
   592                           ;PianoMain.c: 153: wait_in_ms(100);
   593  007F4C  0E00               	movlw	0
   594  007F4E  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   595  007F50  0E64               	movlw	100
   596  007F52  6E2B               	movwf	wait_in_ms@time_in_ms,c
   597  007F54  ECC7  F03C         	call	_wait_in_ms	;wreg free
   598                           
   599                           ;PianoMain.c: 154: tocarNota('e');
   600  007F58  0E65               	movlw	101
   601  007F5A  EC1A  F03E         	call	_tocarNota
   602                           
   603                           ;PianoMain.c: 155: wait_in_ms(100);
   604  007F5E  0E00               	movlw	0
   605  007F60  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   606  007F62  0E64               	movlw	100
   607  007F64  6E2B               	movwf	wait_in_ms@time_in_ms,c
   608  007F66  ECC7  F03C         	call	_wait_in_ms	;wreg free
   609                           
   610                           ;PianoMain.c: 156: tocarNota('d');
   611  007F6A  0E64               	movlw	100
   612  007F6C  EC1A  F03E         	call	_tocarNota
   613                           
   614                           ;PianoMain.c: 157: wait_in_ms(100);
   615  007F70  0E00               	movlw	0
   616  007F72  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   617  007F74  0E64               	movlw	100
   618  007F76  6E2B               	movwf	wait_in_ms@time_in_ms,c
   619  007F78  ECC7  F03C         	call	_wait_in_ms	;wreg free
   620                           
   621                           ;PianoMain.c: 158: tocarNota('c');
   622  007F7C  0E63               	movlw	99
   623  007F7E  EC1A  F03E         	call	_tocarNota
   624                           
   625                           ;PianoMain.c: 159: wait_in_ms(100);
   626  007F82  0E00               	movlw	0
   627  007F84  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   628  007F86  0E64               	movlw	100
   629  007F88  6E2B               	movwf	wait_in_ms@time_in_ms,c
   630  007F8A  ECC7  F03C         	call	_wait_in_ms	;wreg free
   631                           
   632                           ;PianoMain.c: 160: tocarNota('c');
   633  007F8E  0E63               	movlw	99
   634  007F90  EC1A  F03E         	call	_tocarNota
   635                           
   636                           ;PianoMain.c: 161: wait_in_ms(100);
   637  007F94  0E00               	movlw	0
   638  007F96  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   639  007F98  0E64               	movlw	100
   640  007F9A  6E2B               	movwf	wait_in_ms@time_in_ms,c
   641  007F9C  ECC7  F03C         	call	_wait_in_ms	;wreg free
   642                           
   643                           ;PianoMain.c: 162: tocarNota('d');
   644  007FA0  0E64               	movlw	100
   645  007FA2  EC1A  F03E         	call	_tocarNota
   646                           
   647                           ;PianoMain.c: 163: wait_in_ms(100);
   648  007FA6  0E00               	movlw	0
   649  007FA8  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   650  007FAA  0E64               	movlw	100
   651  007FAC  6E2B               	movwf	wait_in_ms@time_in_ms,c
   652  007FAE  ECC7  F03C         	call	_wait_in_ms	;wreg free
   653                           
   654                           ;PianoMain.c: 164: tocarNota('e');
   655  007FB2  0E65               	movlw	101
   656  007FB4  EC1A  F03E         	call	_tocarNota
   657                           
   658                           ;PianoMain.c: 165: wait_in_ms(100);
   659  007FB8  0E00               	movlw	0
   660  007FBA  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   661  007FBC  0E64               	movlw	100
   662  007FBE  6E2B               	movwf	wait_in_ms@time_in_ms,c
   663  007FC0  ECC7  F03C         	call	_wait_in_ms	;wreg free
   664                           
   665                           ;PianoMain.c: 166: tocarNota('e');
   666  007FC4  0E65               	movlw	101
   667  007FC6  EC1A  F03E         	call	_tocarNota
   668                           
   669                           ;PianoMain.c: 167: wait_in_ms(100);
   670  007FCA  0E00               	movlw	0
   671  007FCC  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   672  007FCE  0E64               	movlw	100
   673  007FD0  6E2B               	movwf	wait_in_ms@time_in_ms,c
   674  007FD2  ECC7  F03C         	call	_wait_in_ms	;wreg free
   675                           
   676                           ;PianoMain.c: 168: tocarNota('d');
   677  007FD6  0E64               	movlw	100
   678  007FD8  EC1A  F03E         	call	_tocarNota
   679                           
   680                           ;PianoMain.c: 169: wait_in_ms(100);
   681  007FDC  0E00               	movlw	0
   682  007FDE  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   683  007FE0  0E64               	movlw	100
   684  007FE2  6E2B               	movwf	wait_in_ms@time_in_ms,c
   685  007FE4  ECC7  F03C         	call	_wait_in_ms	;wreg free
   686                           
   687                           ;PianoMain.c: 170: tocarNota('d');
   688  007FE8  0E64               	movlw	100
   689  007FEA  EC1A  F03E         	call	_tocarNota
   690                           
   691                           ;PianoMain.c: 171: wait_in_ms(100);
   692  007FEE  0E00               	movlw	0
   693  007FF0  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   694  007FF2  0E64               	movlw	100
   695  007FF4  6E2B               	movwf	wait_in_ms@time_in_ms,c
   696  007FF6  ECC7  F03C         	call	_wait_in_ms	;wreg free
   697  007FFA                     l134:
   698  007FFA  A084               	btfss	3972,0,c	;volatile
   699  007FFC  D6CA               	goto	l95
   700  007FFE  D776               	goto	l135
   701  008000                     __end_of_main:
   702                           	opt stack 0
   703                           tblptru	equ	0xFF8
   704                           
   705 ;; *************** function _wait_in_ms *****************
   706 ;; Defined at:
   707 ;;		line 81 in file "config.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  time_in_ms      2   42[COMRAM] int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  count_ms        2   50[COMRAM] unsigned int 
   712 ;;  count           2   48[COMRAM] unsigned int 
   713 ;;  flag            2   46[COMRAM] unsigned int 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   723 ;;      Params:         2       0       0       0       0       0       0       0       0
   724 ;;      Locals:         6       0       0       0       0       0       0       0       0
   725 ;;      Temps:          2       0       0       0       0       0       0       0       0
   726 ;;      Totals:        10       0       0       0       0       0       0       0       0
   727 ;;Total ram usage:       10 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    2
   730 ;; This function calls:
   731 ;;		___awtoft
   732 ;;		___ftdiv
   733 ;;		___fttol
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text1
   740  00798E                     __ptext1:
   741                           	opt stack 0
   742  00798E                     _wait_in_ms:
   743                           	opt stack 28
   744                           
   745                           ;config.c: 82: unsigned int count = 0;
   746                           
   747                           ;incstack = 0
   748  00798E  0E00               	movlw	0
   749  007990  6E32               	movwf	wait_in_ms@count+1,c
   750  007992  0E00               	movlw	0
   751  007994  6E31               	movwf	wait_in_ms@count,c
   752                           
   753                           ;config.c: 83: unsigned int count_ms = 0;
   754  007996  0E00               	movlw	0
   755  007998  6E34               	movwf	wait_in_ms@count_ms+1,c
   756  00799A  0E00               	movlw	0
   757  00799C  6E33               	movwf	wait_in_ms@count_ms,c
   758                           
   759                           ;config.c: 84: unsigned int flag = 0;
   760  00799E  0E00               	movlw	0
   761  0079A0  6E30               	movwf	wait_in_ms@flag+1,c
   762  0079A2  0E00               	movlw	0
   763  0079A4  6E2F               	movwf	wait_in_ms@flag,c
   764                           
   765                           ;config.c: 86: TMR0L = 131;
   766  0079A6  0E83               	movlw	131
   767  0079A8  6ED6               	movwf	4054,c	;volatile
   768                           
   769                           ;config.c: 89: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
   770  0079AA  50D6               	movf	4054,w,c	;volatile
   771  0079AC  6E2D               	movwf	??_wait_in_ms& (0+255),c
   772  0079AE  6A2E               	clrf	(??_wait_in_ms+1)& (0+255),c
   773  0079B0  1E2D               	comf	??_wait_in_ms,f,c
   774  0079B2  1E2E               	comf	??_wait_in_ms+1,f,c
   775  0079B4  4A2D               	infsnz	??_wait_in_ms,f,c
   776  0079B6  2A2E               	incf	??_wait_in_ms+1,f,c
   777  0079B8  0E05               	movlw	5
   778  0079BA                     u655:
   779  0079BA  90D8               	bcf	status,0,c
   780  0079BC  362D               	rlcf	??_wait_in_ms,f,c
   781  0079BE  362E               	rlcf	??_wait_in_ms+1,f,c
   782  0079C0  2EE8               	decfsz	wreg,f,c
   783  0079C2  D7FB               	goto	u655
   784  0079C4  0E00               	movlw	0
   785  0079C6  242D               	addwf	??_wait_in_ms,w,c
   786  0079C8  6E09               	movwf	___awtoft@c,c
   787  0079CA  0E20               	movlw	32
   788  0079CC  202E               	addwfc	??_wait_in_ms+1,w,c
   789  0079CE  6E0A               	movwf	___awtoft@c+1,c
   790  0079D0  EC1C  F03C         	call	___awtoft	;wreg free
   791  0079D4  C009  F010         	movff	?___awtoft,___ftdiv@f2
   792  0079D8  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
   793  0079DC  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
   794  0079E0  0E00               	movlw	0
   795  0079E2  6E0D               	movwf	___ftdiv@f1,c
   796  0079E4  0EFA               	movlw	250
   797  0079E6  6E0E               	movwf	___ftdiv@f1+1,c
   798  0079E8  0E45               	movlw	69
   799  0079EA  6E0F               	movwf	___ftdiv@f1+2,c
   800  0079EC  EC2D  F03D         	call	___ftdiv	;wreg free
   801  0079F0  C00D  F01C         	movff	?___ftdiv,___fttol@f1
   802  0079F4  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
   803  0079F8  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
   804  0079FC  ECA0  F03D         	call	___fttol	;wreg free
   805  007A00  C01C  F033         	movff	?___fttol,wait_in_ms@count_ms
   806  007A04  C01D  F034         	movff	?___fttol+1,wait_in_ms@count_ms+1
   807                           
   808                           ;config.c: 91: TMR0ON = 1;
   809  007A08  8ED5               	bsf	4053,7,c	;volatile
   810                           
   811                           ;config.c: 93: while (count < count_ms){
   812  007A0A  D020               	goto	l49
   813  007A0C                     l45:
   814                           
   815                           ;config.c: 94: if(TMR0IF == 1){
   816  007A0C  A4F2               	btfss	intcon,2,c	;volatile
   817  007A0E  D01E               	goto	l49
   818                           
   819                           ;config.c: 95: TMR0IF = 0;
   820  007A10  94F2               	bcf	intcon,2,c	;volatile
   821                           
   822                           ;config.c: 96: TMR0L = 131;
   823  007A12  0E83               	movlw	131
   824  007A14  6ED6               	movwf	4054,c	;volatile
   825                           
   826                           ;config.c: 97: count ++;
   827  007A16  4A31               	infsnz	wait_in_ms@count,f,c
   828  007A18  2A32               	incf	wait_in_ms@count+1,f,c
   829                           
   830                           ;config.c: 98: if (count == count_ms){
   831  007A1A  5033               	movf	wait_in_ms@count_ms,w,c
   832  007A1C  1831               	xorwf	wait_in_ms@count,w,c
   833  007A1E  E116               	bnz	l1246
   834  007A20  5034               	movf	wait_in_ms@count_ms+1,w,c
   835  007A22  1832               	xorwf	wait_in_ms@count+1,w,c
   836  007A24  A4D8               	btfss	status,2,c
   837  007A26  D012               	goto	l49
   838                           
   839                           ;config.c: 99: flag++;
   840  007A28  4A2F               	infsnz	wait_in_ms@flag,f,c
   841  007A2A  2A30               	incf	wait_in_ms@flag+1,f,c
   842                           
   843                           ;config.c: 100: if (flag != time_in_ms){
   844  007A2C  502F               	movf	wait_in_ms@flag,w,c
   845  007A2E  182B               	xorwf	wait_in_ms@time_in_ms,w,c
   846  007A30  E104               	bnz	u680
   847  007A32  5030               	movf	wait_in_ms@flag+1,w,c
   848  007A34  182C               	xorwf	wait_in_ms@time_in_ms+1,w,c
   849  007A36  B4D8               	btfsc	status,2,c
   850  007A38  D005               	goto	l48
   851  007A3A                     u680:
   852                           
   853                           ;config.c: 101: count = 0;
   854  007A3A  0E00               	movlw	0
   855  007A3C  6E32               	movwf	wait_in_ms@count+1,c
   856  007A3E  0E00               	movlw	0
   857  007A40  6E31               	movwf	wait_in_ms@count,c
   858                           
   859                           ;config.c: 102: }
   860  007A42  D004               	goto	l49
   861  007A44                     l48:
   862                           
   863                           ;config.c: 103: else{
   864                           ;config.c: 104: count = count_ms;
   865  007A44  C033  F031         	movff	wait_in_ms@count_ms,wait_in_ms@count
   866  007A48  C034  F032         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
   867  007A4C                     l49:
   868  007A4C                     l1246:
   869  007A4C  5033               	movf	wait_in_ms@count_ms,w,c
   870  007A4E  5C31               	subwf	wait_in_ms@count,w,c
   871  007A50  5034               	movf	wait_in_ms@count_ms+1,w,c
   872  007A52  5832               	subwfb	wait_in_ms@count+1,w,c
   873  007A54  B0D8               	btfsc	status,0,c
   874  007A56  0012               	return	
   875  007A58  D7D9               	goto	l45
   876  007A5A                     __end_of_wait_in_ms:
   877                           	opt stack 0
   878                           tblptru	equ	0xFF8
   879                           intcon	equ	0xFF2
   880                           wreg	equ	0xFE8
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function ___fttol *****************
   884 ;; Defined at:
   885 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  f1              3   27[COMRAM] float 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  lval            4   37[COMRAM] unsigned long 
   890 ;;  exp1            1   41[COMRAM] unsigned char 
   891 ;;  sign1           1   36[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  4   27[COMRAM] long 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         4       0       0       0       0       0       0       0       0
   902 ;;      Locals:         6       0       0       0       0       0       0       0       0
   903 ;;      Temps:          5       0       0       0       0       0       0       0       0
   904 ;;      Totals:        15       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:       15 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_wait_in_ms
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text2
   915  007B40                     __ptext2:
   916                           	opt stack 0
   917  007B40                     ___fttol:
   918                           	opt stack 29
   919                           
   920                           ;incstack = 0
   921  007B40  C01E  F020         	movff	___fttol@f1+2,??___fttol
   922  007B44  6A21               	clrf	(??___fttol+1)& (0+255),c
   923  007B46  6A22               	clrf	(??___fttol+2)& (0+255),c
   924  007B48  341D               	rlcf	___fttol@f1+1,w,c
   925  007B4A  3620               	rlcf	??___fttol& (0+255),f,c
   926  007B4C  E301               	bnc	u571
   927  007B4E  8021               	bsf	(??___fttol+1)& (0+255),0,c
   928  007B50                     u571:
   929  007B50  5020               	movf	??___fttol,w,c
   930  007B52  6E2A               	movwf	___fttol@exp1,c
   931  007B54  502A               	movf	___fttol@exp1,w,c
   932  007B56  A4D8               	btfss	status,2,c
   933  007B58  D009               	goto	l475
   934  007B5A  0E00               	movlw	0
   935  007B5C  6E1C               	movwf	?___fttol,c
   936  007B5E  0E00               	movlw	0
   937  007B60  6E1D               	movwf	?___fttol+1,c
   938  007B62  0E00               	movlw	0
   939  007B64  6E1E               	movwf	?___fttol+2,c
   940  007B66  0E00               	movlw	0
   941  007B68  6E1F               	movwf	?___fttol+3,c
   942  007B6A  0012               	return	
   943  007B6C                     l475:
   944  007B6C  0E17               	movlw	23
   945  007B6E  6E20               	movwf	??___fttol& (0+255),c
   946  007B70  C01C  F021         	movff	___fttol@f1,??___fttol+1
   947  007B74  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
   948  007B78  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
   949  007B7C  2820               	incf	??___fttol,w,c
   950  007B7E  6E24               	movwf	(??___fttol+4)& (0+255),c
   951  007B80  D004               	goto	u590
   952  007B82                     u595:
   953  007B82  90D8               	bcf	status,0,c
   954  007B84  3223               	rrcf	??___fttol+3,f,c
   955  007B86  3222               	rrcf	??___fttol+2,f,c
   956  007B88  3221               	rrcf	??___fttol+1,f,c
   957  007B8A                     u590:
   958  007B8A  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
   959  007B8C  D7FA               	goto	u595
   960  007B8E  5021               	movf	??___fttol+1,w,c
   961  007B90  6E25               	movwf	___fttol@sign1,c
   962  007B92  8E1D               	bsf	___fttol@f1+1,7,c
   963  007B94  0EFF               	movlw	255
   964  007B96  161C               	andwf	___fttol@f1,f,c
   965  007B98  0EFF               	movlw	255
   966  007B9A  161D               	andwf	___fttol@f1+1,f,c
   967  007B9C  0E00               	movlw	0
   968  007B9E  161E               	andwf	___fttol@f1+2,f,c
   969  007BA0  501C               	movf	___fttol@f1,w,c
   970  007BA2  6E26               	movwf	___fttol@lval,c
   971  007BA4  501D               	movf	___fttol@f1+1,w,c
   972  007BA6  6E27               	movwf	___fttol@lval+1,c
   973  007BA8  501E               	movf	___fttol@f1+2,w,c
   974  007BAA  6E28               	movwf	___fttol@lval+2,c
   975  007BAC  6A29               	clrf	___fttol@lval+3,c
   976  007BAE  0E8E               	movlw	142
   977  007BB0  5E2A               	subwf	___fttol@exp1,f,c
   978  007BB2  AE2A               	btfss	___fttol@exp1,7,c
   979  007BB4  D016               	goto	l477
   980  007BB6  502A               	movf	___fttol@exp1,w,c
   981  007BB8  0A80               	xorlw	128
   982  007BBA  0F8F               	addlw	143
   983  007BBC  B0D8               	btfsc	status,0,c
   984  007BBE  D009               	goto	l478
   985  007BC0  0E00               	movlw	0
   986  007BC2  6E1C               	movwf	?___fttol,c
   987  007BC4  0E00               	movlw	0
   988  007BC6  6E1D               	movwf	?___fttol+1,c
   989  007BC8  0E00               	movlw	0
   990  007BCA  6E1E               	movwf	?___fttol+2,c
   991  007BCC  0E00               	movlw	0
   992  007BCE  6E1F               	movwf	?___fttol+3,c
   993  007BD0  0012               	return	
   994  007BD2                     l478:
   995  007BD2  90D8               	bcf	status,0,c
   996  007BD4  3229               	rrcf	___fttol@lval+3,f,c
   997  007BD6  3228               	rrcf	___fttol@lval+2,f,c
   998  007BD8  3227               	rrcf	___fttol@lval+1,f,c
   999  007BDA  3226               	rrcf	___fttol@lval,f,c
  1000  007BDC  3E2A               	incfsz	___fttol@exp1,f,c
  1001  007BDE  D7F9               	goto	l478
  1002  007BE0  D015               	goto	u630
  1003  007BE2                     l477:
  1004  007BE2  0E17               	movlw	23
  1005  007BE4  642A               	cpfsgt	___fttol@exp1,c
  1006  007BE6  D00F               	goto	l483
  1007  007BE8  0E00               	movlw	0
  1008  007BEA  6E1C               	movwf	?___fttol,c
  1009  007BEC  0E00               	movlw	0
  1010  007BEE  6E1D               	movwf	?___fttol+1,c
  1011  007BF0  0E00               	movlw	0
  1012  007BF2  6E1E               	movwf	?___fttol+2,c
  1013  007BF4  0E00               	movlw	0
  1014  007BF6  6E1F               	movwf	?___fttol+3,c
  1015  007BF8  0012               	return	
  1016  007BFA  90D8               	bcf	status,0,c
  1017  007BFC  3626               	rlcf	___fttol@lval,f,c
  1018  007BFE  3627               	rlcf	___fttol@lval+1,f,c
  1019  007C00  3628               	rlcf	___fttol@lval+2,f,c
  1020  007C02  3629               	rlcf	___fttol@lval+3,f,c
  1021  007C04  062A               	decf	___fttol@exp1,f,c
  1022  007C06                     l483:
  1023  007C06  502A               	movf	___fttol@exp1,w,c
  1024  007C08  A4D8               	btfss	status,2,c
  1025  007C0A  D7F7               	goto	l484
  1026  007C0C                     u630:
  1027  007C0C  5025               	movf	___fttol@sign1,w,c
  1028  007C0E  B4D8               	btfsc	status,2,c
  1029  007C10  D008               	goto	l486
  1030  007C12  1E29               	comf	___fttol@lval+3,f,c
  1031  007C14  1E28               	comf	___fttol@lval+2,f,c
  1032  007C16  1E27               	comf	___fttol@lval+1,f,c
  1033  007C18  6C26               	negf	___fttol@lval,c
  1034  007C1A  0E00               	movlw	0
  1035  007C1C  2227               	addwfc	___fttol@lval+1,f,c
  1036  007C1E  2228               	addwfc	___fttol@lval+2,f,c
  1037  007C20  2229               	addwfc	___fttol@lval+3,f,c
  1038  007C22                     l486:
  1039  007C22  C026  F01C         	movff	___fttol@lval,?___fttol
  1040  007C26  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1041  007C2A  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1042  007C2E  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1043  007C32  0012               	return	
  1044  007C34                     __end_of___fttol:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           intcon	equ	0xFF2
  1048                           wreg	equ	0xFE8
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function ___ftdiv *****************
  1052 ;; Defined at:
  1053 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  f1              3   12[COMRAM] float 
  1056 ;;  f2              3   15[COMRAM] float 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  f3              3   22[COMRAM] float 
  1059 ;;  sign            1   26[COMRAM] unsigned char 
  1060 ;;  exp             1   25[COMRAM] unsigned char 
  1061 ;;  cntr            1   21[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  3   12[COMRAM] float 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1071 ;;      Params:         6       0       0       0       0       0       0       0       0
  1072 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1073 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1074 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1075 ;;Total ram usage:       15 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    1
  1078 ;; This function calls:
  1079 ;;		___ftpack
  1080 ;; This function is called by:
  1081 ;;		_wait_in_ms
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text3
  1086  007A5A                     __ptext3:
  1087                           	opt stack 0
  1088  007A5A                     ___ftdiv:
  1089                           	opt stack 28
  1090                           
  1091                           ;incstack = 0
  1092  007A5A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  1093  007A5E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1094  007A60  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1095  007A62  340E               	rlcf	___ftdiv@f1+1,w,c
  1096  007A64  3613               	rlcf	??___ftdiv& (0+255),f,c
  1097  007A66  E301               	bnc	u511
  1098  007A68  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1099  007A6A                     u511:
  1100  007A6A  5013               	movf	??___ftdiv,w,c
  1101  007A6C  6E1A               	movwf	___ftdiv@exp,c
  1102  007A6E  501A               	movf	___ftdiv@exp,w,c
  1103  007A70  A4D8               	btfss	status,2,c
  1104  007A72  D007               	goto	l439
  1105  007A74  0E00               	movlw	0
  1106  007A76  6E0D               	movwf	?___ftdiv,c
  1107  007A78  0E00               	movlw	0
  1108  007A7A  6E0E               	movwf	?___ftdiv+1,c
  1109  007A7C  0E00               	movlw	0
  1110  007A7E  6E0F               	movwf	?___ftdiv+2,c
  1111  007A80  0012               	return	
  1112  007A82                     l439:
  1113  007A82  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  1114  007A86  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1115  007A88  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1116  007A8A  3411               	rlcf	___ftdiv@f2+1,w,c
  1117  007A8C  3613               	rlcf	??___ftdiv& (0+255),f,c
  1118  007A8E  E301               	bnc	u531
  1119  007A90  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1120  007A92                     u531:
  1121  007A92  5013               	movf	??___ftdiv,w,c
  1122  007A94  6E1B               	movwf	___ftdiv@sign,c
  1123  007A96  501B               	movf	___ftdiv@sign,w,c
  1124  007A98  A4D8               	btfss	status,2,c
  1125  007A9A  D007               	goto	l441
  1126  007A9C  0E00               	movlw	0
  1127  007A9E  6E0D               	movwf	?___ftdiv,c
  1128  007AA0  0E00               	movlw	0
  1129  007AA2  6E0E               	movwf	?___ftdiv+1,c
  1130  007AA4  0E00               	movlw	0
  1131  007AA6  6E0F               	movwf	?___ftdiv+2,c
  1132  007AA8  0012               	return	
  1133  007AAA                     l441:
  1134  007AAA  0E00               	movlw	0
  1135  007AAC  6E17               	movwf	___ftdiv@f3,c
  1136  007AAE  0E00               	movlw	0
  1137  007AB0  6E18               	movwf	___ftdiv@f3+1,c
  1138  007AB2  0E00               	movlw	0
  1139  007AB4  6E19               	movwf	___ftdiv@f3+2,c
  1140  007AB6  501B               	movf	___ftdiv@sign,w,c
  1141  007AB8  0F89               	addlw	137
  1142  007ABA  5E1A               	subwf	___ftdiv@exp,f,c
  1143  007ABC  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  1144  007AC0  5012               	movf	___ftdiv@f2+2,w,c
  1145  007AC2  1A1B               	xorwf	___ftdiv@sign,f,c
  1146  007AC4  0E80               	movlw	128
  1147  007AC6  161B               	andwf	___ftdiv@sign,f,c
  1148  007AC8  8E0E               	bsf	___ftdiv@f1+1,7,c
  1149  007ACA  0EFF               	movlw	255
  1150  007ACC  160D               	andwf	___ftdiv@f1,f,c
  1151  007ACE  0EFF               	movlw	255
  1152  007AD0  160E               	andwf	___ftdiv@f1+1,f,c
  1153  007AD2  0E00               	movlw	0
  1154  007AD4  160F               	andwf	___ftdiv@f1+2,f,c
  1155  007AD6  8E11               	bsf	___ftdiv@f2+1,7,c
  1156  007AD8  0EFF               	movlw	255
  1157  007ADA  1610               	andwf	___ftdiv@f2,f,c
  1158  007ADC  0EFF               	movlw	255
  1159  007ADE  1611               	andwf	___ftdiv@f2+1,f,c
  1160  007AE0  0E00               	movlw	0
  1161  007AE2  1612               	andwf	___ftdiv@f2+2,f,c
  1162  007AE4  0E18               	movlw	24
  1163  007AE6  6E16               	movwf	___ftdiv@cntr,c
  1164  007AE8  90D8               	bcf	status,0,c
  1165  007AEA  3617               	rlcf	___ftdiv@f3,f,c
  1166  007AEC  3618               	rlcf	___ftdiv@f3+1,f,c
  1167  007AEE  3619               	rlcf	___ftdiv@f3+2,f,c
  1168  007AF0  5010               	movf	___ftdiv@f2,w,c
  1169  007AF2  5C0D               	subwf	___ftdiv@f1,w,c
  1170  007AF4  5011               	movf	___ftdiv@f2+1,w,c
  1171  007AF6  580E               	subwfb	___ftdiv@f1+1,w,c
  1172  007AF8  5012               	movf	___ftdiv@f2+2,w,c
  1173  007AFA  580F               	subwfb	___ftdiv@f1+2,w,c
  1174  007AFC  A0D8               	btfss	status,0,c
  1175  007AFE  D007               	goto	l443
  1176  007B00  5010               	movf	___ftdiv@f2,w,c
  1177  007B02  5E0D               	subwf	___ftdiv@f1,f,c
  1178  007B04  5011               	movf	___ftdiv@f2+1,w,c
  1179  007B06  5A0E               	subwfb	___ftdiv@f1+1,f,c
  1180  007B08  5012               	movf	___ftdiv@f2+2,w,c
  1181  007B0A  5A0F               	subwfb	___ftdiv@f1+2,f,c
  1182  007B0C  8017               	bsf	___ftdiv@f3,0,c
  1183  007B0E                     l443:
  1184  007B0E  90D8               	bcf	status,0,c
  1185  007B10  360D               	rlcf	___ftdiv@f1,f,c
  1186  007B12  360E               	rlcf	___ftdiv@f1+1,f,c
  1187  007B14  360F               	rlcf	___ftdiv@f1+2,f,c
  1188  007B16  2E16               	decfsz	___ftdiv@cntr,f,c
  1189  007B18  D7E7               	goto	l442
  1190  007B1A  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  1191  007B1E  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1192  007B22  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1193  007B26  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  1194  007B2A  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  1195  007B2E  EC70  F03C         	call	___ftpack	;wreg free
  1196  007B32  C001  F00D         	movff	?___ftpack,?___ftdiv
  1197  007B36  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  1198  007B3A  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  1199  007B3E  0012               	return	
  1200  007B40                     __end_of___ftdiv:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           intcon	equ	0xFF2
  1204                           wreg	equ	0xFE8
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function ___awtoft *****************
  1208 ;; Defined at:
  1209 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  c               2    8[COMRAM] int 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  sign            1   11[COMRAM] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  3    8[COMRAM] float 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         3       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1226 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:        4 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		___ftpack
  1232 ;; This function is called by:
  1233 ;;		_wait_in_ms
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text4
  1238  007838                     __ptext4:
  1239                           	opt stack 0
  1240  007838                     ___awtoft:
  1241                           	opt stack 28
  1242                           
  1243                           ;incstack = 0
  1244  007838  0E00               	movlw	0
  1245  00783A  6E0C               	movwf	___awtoft@sign,c
  1246  00783C  AE0A               	btfss	___awtoft@c+1,7,c
  1247  00783E  D006               	goto	l356
  1248  007840  6C09               	negf	___awtoft@c,c
  1249  007842  1E0A               	comf	___awtoft@c+1,f,c
  1250  007844  B0D8               	btfsc	status,0,c
  1251  007846  2A0A               	incf	___awtoft@c+1,f,c
  1252  007848  0E01               	movlw	1
  1253  00784A  6E0C               	movwf	___awtoft@sign,c
  1254  00784C                     l356:
  1255  00784C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1256  007850  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1257  007854  6A03               	clrf	___ftpack@arg+2,c
  1258  007856  0E8E               	movlw	142
  1259  007858  6E04               	movwf	___ftpack@exp,c
  1260  00785A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1261  00785E  EC70  F03C         	call	___ftpack	;wreg free
  1262  007862  C001  F009         	movff	?___ftpack,?___awtoft
  1263  007866  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1264  00786A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1265  00786E  0012               	return	
  1266  007870                     __end_of___awtoft:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           intcon	equ	0xFF2
  1270                           wreg	equ	0xFE8
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function ___ftpack *****************
  1274 ;; Defined at:
  1275 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  arg             3    0[COMRAM] unsigned um
  1278 ;;  exp             1    3[COMRAM] unsigned char 
  1279 ;;  sign            1    4[COMRAM] unsigned char 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  3    0[COMRAM] float 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1291 ;;      Params:         5       0       0       0       0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1293 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1294 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1295 ;;Total ram usage:        8 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		___awtoft
  1301 ;;		___ftdiv
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text5
  1306  0078E0                     __ptext5:
  1307                           	opt stack 0
  1308  0078E0                     ___ftpack:
  1309                           	opt stack 28
  1310                           
  1311                           ;incstack = 0
  1312  0078E0  5004               	movf	___ftpack@exp,w,c
  1313  0078E2  B4D8               	btfsc	status,2,c
  1314  0078E4  D005               	goto	u440
  1315  0078E6  5001               	movf	___ftpack@arg,w,c
  1316  0078E8  1002               	iorwf	___ftpack@arg+1,w,c
  1317  0078EA  1003               	iorwf	___ftpack@arg+2,w,c
  1318  0078EC  A4D8               	btfss	status,2,c
  1319  0078EE  D00C               	goto	l375
  1320  0078F0                     u440:
  1321  0078F0  0E00               	movlw	0
  1322  0078F2  6E01               	movwf	?___ftpack,c
  1323  0078F4  0E00               	movlw	0
  1324  0078F6  6E02               	movwf	?___ftpack+1,c
  1325  0078F8  0E00               	movlw	0
  1326  0078FA  6E03               	movwf	?___ftpack+2,c
  1327  0078FC  0012               	return	
  1328  0078FE  2A04               	incf	___ftpack@exp,f,c
  1329  007900  90D8               	bcf	status,0,c
  1330  007902  3203               	rrcf	___ftpack@arg+2,f,c
  1331  007904  3202               	rrcf	___ftpack@arg+1,f,c
  1332  007906  3201               	rrcf	___ftpack@arg,f,c
  1333  007908                     l375:
  1334  007908  0E00               	movlw	0
  1335  00790A  1401               	andwf	___ftpack@arg,w,c
  1336  00790C  6E06               	movwf	??___ftpack& (0+255),c
  1337  00790E  0E00               	movlw	0
  1338  007910  1402               	andwf	___ftpack@arg+1,w,c
  1339  007912  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1340  007914  0EFE               	movlw	254
  1341  007916  1403               	andwf	___ftpack@arg+2,w,c
  1342  007918  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1343  00791A  5006               	movf	??___ftpack,w,c
  1344  00791C  1007               	iorwf	??___ftpack+1,w,c
  1345  00791E  1008               	iorwf	??___ftpack+2,w,c
  1346  007920  B4D8               	btfsc	status,2,c
  1347  007922  D00C               	goto	l378
  1348  007924  D7EC               	goto	l376
  1349  007926  2A04               	incf	___ftpack@exp,f,c
  1350  007928  0E01               	movlw	1
  1351  00792A  2601               	addwf	___ftpack@arg,f,c
  1352  00792C  0E00               	movlw	0
  1353  00792E  2202               	addwfc	___ftpack@arg+1,f,c
  1354  007930  0E00               	movlw	0
  1355  007932  2203               	addwfc	___ftpack@arg+2,f,c
  1356  007934  90D8               	bcf	status,0,c
  1357  007936  3203               	rrcf	___ftpack@arg+2,f,c
  1358  007938  3202               	rrcf	___ftpack@arg+1,f,c
  1359  00793A  3201               	rrcf	___ftpack@arg,f,c
  1360  00793C                     l378:
  1361  00793C  0E00               	movlw	0
  1362  00793E  1401               	andwf	___ftpack@arg,w,c
  1363  007940  6E06               	movwf	??___ftpack& (0+255),c
  1364  007942  0E00               	movlw	0
  1365  007944  1402               	andwf	___ftpack@arg+1,w,c
  1366  007946  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1367  007948  0EFF               	movlw	255
  1368  00794A  1403               	andwf	___ftpack@arg+2,w,c
  1369  00794C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1370  00794E  5006               	movf	??___ftpack,w,c
  1371  007950  1007               	iorwf	??___ftpack+1,w,c
  1372  007952  1008               	iorwf	??___ftpack+2,w,c
  1373  007954  B4D8               	btfsc	status,2,c
  1374  007956  D006               	goto	l381
  1375  007958  D7E6               	goto	l379
  1376  00795A  0604               	decf	___ftpack@exp,f,c
  1377  00795C  90D8               	bcf	status,0,c
  1378  00795E  3601               	rlcf	___ftpack@arg,f,c
  1379  007960  3602               	rlcf	___ftpack@arg+1,f,c
  1380  007962  3603               	rlcf	___ftpack@arg+2,f,c
  1381  007964                     l381:
  1382  007964  BE02               	btfsc	___ftpack@arg+1,7,c
  1383  007966  D003               	goto	u480
  1384  007968  0E02               	movlw	2
  1385  00796A  6004               	cpfslt	___ftpack@exp,c
  1386  00796C  D7F6               	goto	l382
  1387  00796E                     u480:
  1388  00796E  A004               	btfss	___ftpack@exp,0,c
  1389  007970  9E02               	bcf	___ftpack@arg+1,7,c
  1390  007972  90D8               	bcf	status,0,c
  1391  007974  3204               	rrcf	___ftpack@exp,f,c
  1392  007976  5004               	movf	___ftpack@exp,w,c
  1393  007978  1203               	iorwf	___ftpack@arg+2,f,c
  1394  00797A  5005               	movf	___ftpack@sign,w,c
  1395  00797C  A4D8               	btfss	status,2,c
  1396  00797E  8E03               	bsf	___ftpack@arg+2,7,c
  1397  007980  C001  F001         	movff	___ftpack@arg,?___ftpack
  1398  007984  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1399  007988  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1400  00798C  0012               	return	
  1401  00798E                     __end_of___ftpack:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           intcon	equ	0xFF2
  1405                           wreg	equ	0xFE8
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _tocarNota *****************
  1409 ;; Defined at:
  1410 ;;		line 178 in file "PianoMain.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  nota            1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  nota            1    0[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text6
  1438  007C34                     __ptext6:
  1439                           	opt stack 0
  1440  007C34                     _tocarNota:
  1441                           	opt stack 30
  1442                           
  1443                           ;incstack = 0
  1444                           ;tocarNota@nota stored from wreg
  1445  007C34  6E01               	movwf	tocarNota@nota,c
  1446                           
  1447                           ;PianoMain.c: 180: switch (nota){
  1448  007C36  D075               	goto	l142
  1449  007C38                     
  1450                           ;PianoMain.c: 182: PR2 = 0b11101110 ;
  1451  007C38  0EEE               	movlw	238
  1452  007C3A  6ECB               	movwf	4043,c	;volatile
  1453                           
  1454                           ;PianoMain.c: 183: T2CON = 0b00000111 ;
  1455  007C3C  0E07               	movlw	7
  1456  007C3E  6ECA               	movwf	4042,c	;volatile
  1457                           
  1458                           ;PianoMain.c: 184: CCPR1L = 0b01110111 ;
  1459  007C40  0E77               	movlw	119
  1460  007C42  6EBE               	movwf	4030,c	;volatile
  1461                           
  1462                           ;PianoMain.c: 185: CCP1CON = 0b00011100 ;
  1463  007C44  0E1C               	movlw	28
  1464  007C46  6EBD               	movwf	4029,c	;volatile
  1465                           
  1466                           ;PianoMain.c: 186: break;
  1467  007C48  0012               	return	
  1468  007C4A                     
  1469                           ;PianoMain.c: 189: PR2 = 0b11100000 ;
  1470  007C4A  0EE0               	movlw	224
  1471  007C4C  6ECB               	movwf	4043,c	;volatile
  1472                           
  1473                           ;PianoMain.c: 190: T2CON = 0b00000111 ;
  1474  007C4E  0E07               	movlw	7
  1475  007C50  6ECA               	movwf	4042,c	;volatile
  1476                           
  1477                           ;PianoMain.c: 191: CCPR1L = 0b01110000 ;
  1478  007C52  0E70               	movlw	112
  1479  007C54  6EBE               	movwf	4030,c	;volatile
  1480                           
  1481                           ;PianoMain.c: 192: CCP1CON = 0b00011100 ;
  1482  007C56  0E1C               	movlw	28
  1483  007C58  6EBD               	movwf	4029,c	;volatile
  1484                           
  1485                           ;PianoMain.c: 193: break;
  1486  007C5A  0012               	return	
  1487  007C5C                     
  1488                           ;PianoMain.c: 196: PR2 = 0b11010100 ;
  1489  007C5C  0ED4               	movlw	212
  1490  007C5E  6ECB               	movwf	4043,c	;volatile
  1491                           
  1492                           ;PianoMain.c: 197: T2CON = 0b00000111 ;
  1493  007C60  0E07               	movlw	7
  1494  007C62  6ECA               	movwf	4042,c	;volatile
  1495                           
  1496                           ;PianoMain.c: 198: CCPR1L = 0b01101010 ;
  1497  007C64  0E6A               	movlw	106
  1498  007C66  6EBE               	movwf	4030,c	;volatile
  1499                           
  1500                           ;PianoMain.c: 199: CCP1CON = 0b00011100 ;
  1501  007C68  0E1C               	movlw	28
  1502  007C6A  6EBD               	movwf	4029,c	;volatile
  1503                           
  1504                           ;PianoMain.c: 200: break;
  1505  007C6C  0012               	return	
  1506  007C6E                     
  1507                           ;PianoMain.c: 202: PR2 = 0b11001000 ;
  1508  007C6E  0EC8               	movlw	200
  1509  007C70  6ECB               	movwf	4043,c	;volatile
  1510                           
  1511                           ;PianoMain.c: 203: T2CON = 0b00000111 ;
  1512  007C72  0E07               	movlw	7
  1513  007C74  6ECA               	movwf	4042,c	;volatile
  1514                           
  1515                           ;PianoMain.c: 204: CCPR1L = 0b01100100 ;
  1516  007C76  0E64               	movlw	100
  1517  007C78  6EBE               	movwf	4030,c	;volatile
  1518                           
  1519                           ;PianoMain.c: 205: CCP1CON = 0b00011100 ;
  1520  007C7A  0E1C               	movlw	28
  1521  007C7C  6EBD               	movwf	4029,c	;volatile
  1522                           
  1523                           ;PianoMain.c: 206: break;
  1524  007C7E  0012               	return	
  1525  007C80                     
  1526                           ;PianoMain.c: 208: PR2 = 0b10111101 ;
  1527  007C80  0EBD               	movlw	189
  1528  007C82  6ECB               	movwf	4043,c	;volatile
  1529                           
  1530                           ;PianoMain.c: 209: T2CON = 0b00000111 ;
  1531  007C84  0E07               	movlw	7
  1532  007C86  6ECA               	movwf	4042,c	;volatile
  1533                           
  1534                           ;PianoMain.c: 210: CCPR1L = 0b01011110 ;
  1535  007C88  0E5E               	movlw	94
  1536  007C8A  6EBE               	movwf	4030,c	;volatile
  1537                           
  1538                           ;PianoMain.c: 211: CCP1CON = 0b00111100 ;
  1539  007C8C  0E3C               	movlw	60
  1540  007C8E  6EBD               	movwf	4029,c	;volatile
  1541                           
  1542                           ;PianoMain.c: 212: break;
  1543  007C90  0012               	return	
  1544  007C92                     
  1545                           ;PianoMain.c: 214: PR2 = 0b10110010 ;
  1546  007C92  0EB2               	movlw	178
  1547  007C94  6ECB               	movwf	4043,c	;volatile
  1548                           
  1549                           ;PianoMain.c: 215: T2CON = 0b00000111 ;
  1550  007C96  0E07               	movlw	7
  1551  007C98  6ECA               	movwf	4042,c	;volatile
  1552                           
  1553                           ;PianoMain.c: 216: CCPR1L = 0b01011001 ;
  1554  007C9A  0E59               	movlw	89
  1555  007C9C  6EBE               	movwf	4030,c	;volatile
  1556                           
  1557                           ;PianoMain.c: 217: CCP1CON = 0b00011100 ;
  1558  007C9E  0E1C               	movlw	28
  1559  007CA0  6EBD               	movwf	4029,c	;volatile
  1560                           
  1561                           ;PianoMain.c: 218: break;
  1562  007CA2  0012               	return	
  1563  007CA4                     
  1564                           ;PianoMain.c: 220: PR2 = 0b10101000 ;
  1565  007CA4  0EA8               	movlw	168
  1566  007CA6  6ECB               	movwf	4043,c	;volatile
  1567                           
  1568                           ;PianoMain.c: 221: T2CON = 0b00000111 ;
  1569  007CA8  0E07               	movlw	7
  1570  007CAA  6ECA               	movwf	4042,c	;volatile
  1571                           
  1572                           ;PianoMain.c: 222: CCPR1L = 0b01010100 ;
  1573  007CAC  0E54               	movlw	84
  1574  007CAE  6EBE               	movwf	4030,c	;volatile
  1575                           
  1576                           ;PianoMain.c: 223: CCP1CON = 0b00011100 ;
  1577  007CB0  0E1C               	movlw	28
  1578  007CB2  6EBD               	movwf	4029,c	;volatile
  1579                           
  1580                           ;PianoMain.c: 224: break;
  1581  007CB4  0012               	return	
  1582  007CB6                     
  1583                           ;PianoMain.c: 226: PR2 = 0b10011110 ;
  1584  007CB6  0E9E               	movlw	158
  1585  007CB8  6ECB               	movwf	4043,c	;volatile
  1586                           
  1587                           ;PianoMain.c: 227: T2CON = 0b00000111 ;
  1588  007CBA  0E07               	movlw	7
  1589  007CBC  6ECA               	movwf	4042,c	;volatile
  1590                           
  1591                           ;PianoMain.c: 228: CCPR1L = 0b01001111 ;
  1592  007CBE  0E4F               	movlw	79
  1593  007CC0  6EBE               	movwf	4030,c	;volatile
  1594                           
  1595                           ;PianoMain.c: 229: CCP1CON = 0b00011100 ;
  1596  007CC2  0E1C               	movlw	28
  1597  007CC4  6EBD               	movwf	4029,c	;volatile
  1598                           
  1599                           ;PianoMain.c: 230: break;
  1600  007CC6  0012               	return	
  1601  007CC8                     
  1602                           ;PianoMain.c: 232: PR2 = 0b10010101 ;
  1603  007CC8  0E95               	movlw	149
  1604  007CCA  6ECB               	movwf	4043,c	;volatile
  1605                           
  1606                           ;PianoMain.c: 233: T2CON = 0b00000111 ;
  1607  007CCC  0E07               	movlw	7
  1608  007CCE  6ECA               	movwf	4042,c	;volatile
  1609                           
  1610                           ;PianoMain.c: 234: CCPR1L = 0b01001010 ;
  1611  007CD0  0E4A               	movlw	74
  1612  007CD2  6EBE               	movwf	4030,c	;volatile
  1613                           
  1614                           ;PianoMain.c: 235: CCP1CON = 0b00111100 ;
  1615  007CD4  0E3C               	movlw	60
  1616  007CD6  6EBD               	movwf	4029,c	;volatile
  1617                           
  1618                           ;PianoMain.c: 236: break;
  1619  007CD8  0012               	return	
  1620  007CDA                     
  1621                           ;PianoMain.c: 238: PR2 = 0b10001101 ;
  1622  007CDA  0E8D               	movlw	141
  1623  007CDC  6ECB               	movwf	4043,c	;volatile
  1624                           
  1625                           ;PianoMain.c: 239: T2CON = 0b00000111 ;
  1626  007CDE  0E07               	movlw	7
  1627  007CE0  6ECA               	movwf	4042,c	;volatile
  1628                           
  1629                           ;PianoMain.c: 240: CCPR1L = 0b01000110 ;
  1630  007CE2  0E46               	movlw	70
  1631  007CE4  6EBE               	movwf	4030,c	;volatile
  1632                           
  1633                           ;PianoMain.c: 241: CCP1CON = 0b00111100 ;
  1634  007CE6  0E3C               	movlw	60
  1635  007CE8  6EBD               	movwf	4029,c	;volatile
  1636                           
  1637                           ;PianoMain.c: 242: break;
  1638  007CEA  0012               	return	
  1639  007CEC                     
  1640                           ;PianoMain.c: 244: PR2 = 0b10000101 ;
  1641  007CEC  0E85               	movlw	133
  1642  007CEE  6ECB               	movwf	4043,c	;volatile
  1643                           
  1644                           ;PianoMain.c: 245: T2CON = 0b00000111 ;
  1645  007CF0  0E07               	movlw	7
  1646  007CF2  6ECA               	movwf	4042,c	;volatile
  1647                           
  1648                           ;PianoMain.c: 246: CCPR1L = 0b01000010 ;
  1649  007CF4  0E42               	movlw	66
  1650  007CF6  6EBE               	movwf	4030,c	;volatile
  1651                           
  1652                           ;PianoMain.c: 247: CCP1CON = 0b00111100 ;
  1653  007CF8  0E3C               	movlw	60
  1654  007CFA  6EBD               	movwf	4029,c	;volatile
  1655                           
  1656                           ;PianoMain.c: 248: break;
  1657  007CFC  0012               	return	
  1658  007CFE                     
  1659                           ;PianoMain.c: 250: PR2 = 0b01111110 ;
  1660  007CFE  0E7E               	movlw	126
  1661  007D00  6ECB               	movwf	4043,c	;volatile
  1662                           
  1663                           ;PianoMain.c: 251: T2CON = 0b00000111 ;
  1664  007D02  0E07               	movlw	7
  1665  007D04  6ECA               	movwf	4042,c	;volatile
  1666                           
  1667                           ;PianoMain.c: 252: CCPR1L = 0b00111111 ;
  1668  007D06  0E3F               	movlw	63
  1669  007D08  6EBE               	movwf	4030,c	;volatile
  1670                           
  1671                           ;PianoMain.c: 253: CCP1CON = 0b00011100 ;
  1672  007D0A  0E1C               	movlw	28
  1673  007D0C  6EBD               	movwf	4029,c	;volatile
  1674                           
  1675                           ;PianoMain.c: 254: break;
  1676  007D0E  0012               	return	
  1677  007D10                     
  1678                           ;PianoMain.c: 256: PR2 = 0 ;
  1679  007D10  0E00               	movlw	0
  1680  007D12  6ECB               	movwf	4043,c	;volatile
  1681                           
  1682                           ;PianoMain.c: 257: T2CON = 0 ;
  1683  007D14  0E00               	movlw	0
  1684  007D16  6ECA               	movwf	4042,c	;volatile
  1685                           
  1686                           ;PianoMain.c: 258: CCPR1L = 0 ;
  1687  007D18  0E00               	movlw	0
  1688  007D1A  6EBE               	movwf	4030,c	;volatile
  1689                           
  1690                           ;PianoMain.c: 259: CCP1CON = 0;
  1691  007D1C  0E00               	movlw	0
  1692  007D1E  6EBD               	movwf	4029,c	;volatile
  1693                           
  1694                           ;PianoMain.c: 262: }
  1695                           
  1696                           ;PianoMain.c: 260: break;
  1697  007D20  0012               	return	
  1698  007D22                     l142:
  1699  007D22  5001               	movf	tocarNota@nota,w,c
  1700                           
  1701                           ; Switch size 1, requested type "space"
  1702                           ; Number of cases is 12, Range of values is 65 to 103
  1703                           ; switch strategies available:
  1704                           ; Name         Instructions Cycles
  1705                           ; simple_byte           37    19 (average)
  1706                           ;	Chosen strategy is simple_byte
  1707  007D24  0A41               	xorlw	65	; case 65
  1708  007D26  B4D8               	btfsc	status,2,c
  1709  007D28  D7E1               	goto	l154
  1710  007D2A  0A02               	xorlw	2	; case 67
  1711  007D2C  B4D8               	btfsc	status,2,c
  1712  007D2E  D78D               	goto	l145
  1713  007D30  0A07               	xorlw	7	; case 68
  1714  007D32  B4D8               	btfsc	status,2,c
  1715  007D34  D79C               	goto	l147
  1716  007D36  0A02               	xorlw	2	; case 70
  1717  007D38  B4D8               	btfsc	status,2,c
  1718  007D3A  D7B4               	goto	l150
  1719  007D3C  0A01               	xorlw	1	; case 71
  1720  007D3E  B4D8               	btfsc	status,2,c
  1721  007D40  D7C3               	goto	l152
  1722  007D42  0A26               	xorlw	38	; case 97
  1723  007D44  B4D8               	btfsc	status,2,c
  1724  007D46  D7C9               	goto	l153
  1725  007D48  0A03               	xorlw	3	; case 98
  1726  007D4A  B4D8               	btfsc	status,2,c
  1727  007D4C  D7D8               	goto	l155
  1728  007D4E  0A01               	xorlw	1	; case 99
  1729  007D50  B4D8               	btfsc	status,2,c
  1730  007D52  D772               	goto	l143
  1731  007D54  0A07               	xorlw	7	; case 100
  1732  007D56  B4D8               	btfsc	status,2,c
  1733  007D58  D781               	goto	l146
  1734  007D5A  0A01               	xorlw	1	; case 101
  1735  007D5C  B4D8               	btfsc	status,2,c
  1736  007D5E  D790               	goto	l148
  1737  007D60  0A03               	xorlw	3	; case 102
  1738  007D62  B4D8               	btfsc	status,2,c
  1739  007D64  D796               	goto	l149
  1740  007D66  0A01               	xorlw	1	; case 103
  1741  007D68  B4D8               	btfsc	status,2,c
  1742  007D6A  D7A5               	goto	l151
  1743  007D6C  D7D1               	goto	l156
  1744  007D6E                     __end_of_tocarNota:
  1745                           	opt stack 0
  1746                           tblptru	equ	0xFF8
  1747                           intcon	equ	0xFF2
  1748                           wreg	equ	0xFE8
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _configBoard *****************
  1752 ;; Defined at:
  1753 ;;		line 12 in file "config.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text7
  1781  007870                     __ptext7:
  1782                           	opt stack 0
  1783  007870                     _configBoard:
  1784                           	opt stack 30
  1785                           
  1786                           ;config.c: 16: INTCONbits.GIE = 1;
  1787                           
  1788                           ;incstack = 0
  1789  007870  8EF2               	bsf	intcon,7,c	;volatile
  1790                           
  1791                           ;config.c: 17: INTCONbits.PEIE = 1;
  1792  007872  8CF2               	bsf	intcon,6,c	;volatile
  1793                           
  1794                           ;config.c: 26: T0CONbits.TMR0ON = 1;
  1795  007874  8ED5               	bsf	4053,7,c	;volatile
  1796                           
  1797                           ;config.c: 27: T08BIT = 1;
  1798  007876  8CD5               	bsf	4053,6,c	;volatile
  1799                           
  1800                           ;config.c: 28: T0CONbits.T0CS = 0;
  1801  007878  9AD5               	bcf	4053,5,c	;volatile
  1802                           
  1803                           ;config.c: 30: T0CONbits.PSA = 0;
  1804  00787A  96D5               	bcf	4053,3,c	;volatile
  1805                           
  1806                           ;config.c: 31: T0CONbits.T0PS = 100;
  1807  00787C  50D5               	movf	4053,w,c	;volatile
  1808  00787E  0BF8               	andlw	-8
  1809  007880  0904               	iorlw	4
  1810  007882  6ED5               	movwf	4053,c	;volatile
  1811                           
  1812                           ;config.c: 32: INTCONbits.TMR0IF = 0;
  1813  007884  94F2               	bcf	intcon,2,c	;volatile
  1814                           
  1815                           ;config.c: 34: ADCON1bits.PCFG = 0b1111;
  1816  007886  80C1               	bsf	4033,0,c	;volatile
  1817  007888  82C1               	bsf	4033,1,c	;volatile
  1818  00788A  84C1               	bsf	4033,2,c	;volatile
  1819  00788C  86C1               	bsf	4033,3,c	;volatile
  1820                           
  1821                           ;config.c: 37: TRISA=0b00000000;
  1822  00788E  0E00               	movlw	0
  1823  007890  6E92               	movwf	3986,c	;volatile
  1824                           
  1825                           ;config.c: 38: TRISB=0b00000000;
  1826  007892  0E00               	movlw	0
  1827  007894  6E93               	movwf	3987,c	;volatile
  1828                           
  1829                           ;config.c: 45: ADCON0 = 0b00000111;
  1830  007896  0E07               	movlw	7
  1831  007898  6EC2               	movwf	4034,c	;volatile
  1832                           
  1833                           ;config.c: 48: ADCON0bits.ADON = 0;
  1834  00789A  90C2               	bcf	4034,0,c	;volatile
  1835                           
  1836                           ;config.c: 52: ADCON2bits.ADFM = 1;
  1837  00789C  8EC0               	bsf	4032,7,c	;volatile
  1838                           
  1839                           ;config.c: 53: ADCON2bits.ADCS = 0b110;
  1840  00789E  50C0               	movf	4032,w,c	;volatile
  1841  0078A0  0BF8               	andlw	-8
  1842  0078A2  0906               	iorlw	6
  1843  0078A4  6EC0               	movwf	4032,c	;volatile
  1844                           
  1845                           ;config.c: 54: ADCON2bits.ACQT = 0b101;
  1846  0078A6  50C0               	movf	4032,w,c	;volatile
  1847  0078A8  0BC7               	andlw	-57
  1848  0078AA  0928               	iorlw	40
  1849  0078AC  6EC0               	movwf	4032,c	;volatile
  1850                           
  1851                           ;config.c: 55: ADCON1bits.PCFG=0b1101;
  1852  0078AE  50C1               	movf	4033,w,c	;volatile
  1853  0078B0  0BF0               	andlw	-16
  1854  0078B2  090D               	iorlw	13
  1855  0078B4  6EC1               	movwf	4033,c	;volatile
  1856                           
  1857                           ;config.c: 56: TRISAbits.RA1=1;
  1858  0078B6  8292               	bsf	3986,1,c	;volatile
  1859                           
  1860                           ;config.c: 57: ADCON2bits.ADCS=0b110;
  1861  0078B8  50C0               	movf	4032,w,c	;volatile
  1862  0078BA  0BF8               	andlw	-8
  1863  0078BC  0906               	iorlw	6
  1864  0078BE  6EC0               	movwf	4032,c	;volatile
  1865                           
  1866                           ;config.c: 58: ADCON1bits.VCFG1=0;
  1867  0078C0  9AC1               	bcf	4033,5,c	;volatile
  1868                           
  1869                           ;config.c: 59: ADCON1bits.VCFG0=0;
  1870  0078C2  98C1               	bcf	4033,4,c	;volatile
  1871                           
  1872                           ;config.c: 61: ADCON2bits.ADFM=1;
  1873  0078C4  8EC0               	bsf	4032,7,c	;volatile
  1874                           
  1875                           ;config.c: 65: ADCON0bits.ADON=0;
  1876  0078C6  90C2               	bcf	4034,0,c	;volatile
  1877                           
  1878                           ;config.c: 67: PIE1bits.ADIE=0;
  1879  0078C8  9C9D               	bcf	3997,6,c	;volatile
  1880                           
  1881                           ;config.c: 68: PIR1bits.ADIF=0;
  1882  0078CA  9C9E               	bcf	3998,6,c	;volatile
  1883                           
  1884                           ;config.c: 70: ADCON2bits.ACQT=0b111;
  1885  0078CC  86C0               	bsf	4032,3,c	;volatile
  1886  0078CE  88C0               	bsf	4032,4,c	;volatile
  1887  0078D0  8AC0               	bsf	4032,5,c	;volatile
  1888                           
  1889                           ;config.c: 71: ADCON0bits.GO=1;
  1890  0078D2  82C2               	bsf	4034,1,c	;volatile
  1891                           
  1892                           ;config.c: 73: RCIF=0;
  1893  0078D4  9A9E               	bcf	3998,5,c	;volatile
  1894                           
  1895                           ;config.c: 76: TRISD=0;
  1896  0078D6  0E00               	movlw	0
  1897  0078D8  6E95               	movwf	3989,c	;volatile
  1898                           
  1899                           ;config.c: 77: PORTA=0;
  1900  0078DA  0E00               	movlw	0
  1901  0078DC  6E80               	movwf	3968,c	;volatile
  1902  0078DE  0012               	return		;funcret
  1903  0078E0                     __end_of_configBoard:
  1904                           	opt stack 0
  1905  0000                     tblptru	equ	0xFF8
  1906                           intcon	equ	0xFF2
  1907                           wreg	equ	0xFE8
  1908                           status	equ	0xFD8
  1909                           tblptru	equ	0xFF8
  1910                           intcon	equ	0xFF2
  1911                           wreg	equ	0xFE8
  1912                           status	equ	0xFD8
  1913                           
  1914                           	psect	rparam
  1915  0000                     tblptru	equ	0xFF8
  1916                           intcon	equ	0xFF2
  1917                           wreg	equ	0xFE8
  1918                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_wait_in_ms
    _wait_in_ms->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7982
                        _configBoard
                          _tocarNota
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _wait_in_ms                                          10     8      2    7967
                                             42 COMRAM    10     8      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2946
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2555
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _tocarNota                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configBoard
   _tocarNota
   _wait_in_ms
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     34      34       1       54.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 19 17:44:01 2018

                     l45 7A0C                       l48 7A44                       l49 7A4C  
                     l95 7D92                       l96 7D8C                       l98 7D9E  
                     l99 7D98              __CFG_BORV$3 000000                      l101 7DAA  
                    l110 7DCE                      l102 7DA4                      l111 7DC8  
                    l120 7DEC                      l104 7DB6                      l113 7DDA  
                    l105 7DB0                      l122 7DFE                      l114 7DD4  
                    l131 7EE6                      l123 7DF8                      l107 7DC2  
                    l132 7E20                      l116 7DE6                      l108 7DBC  
                    l125 7E0A                      l117 7DE0                      l142 7D22  
                    l150 7CA4                      l134 7FFA                      l126 7E04  
                    l151 7CB6                      l143 7C38                      l135 7EEC  
                    l119 7DF2                      l152 7CC8                      l128 7E16  
                    l153 7CDA                      l145 7C4A                      l129 7E10  
                    l154 7CEC                      l146 7C5C                      l155 7CFE  
                    l147 7C6E                      l156 7D10                      l148 7C80  
                    l149 7C92                      l441 7AAA                      l442 7AE8  
                    l443 7B0E                      l356 784C                      l381 7964  
                    l382 795A                      l375 7908                      l439 7A82  
                    l376 78FE                      l378 793C                      l379 7926  
                    l483 7C06                      l475 7B6C                      l484 7BFA  
                    l477 7BE2                      l486 7C22                      l478 7BD2  
                    _PR2 000FCB                      u511 7A6A                      u440 78F0  
                    u531 7A92                      u630 7C0C                      u480 796E  
                    u571 7B50                      u590 7B8A                      u655 79BA  
                    u680 7A3A                      u595 7B82                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0016             ___ftdiv@sign 001B  
           __CFG_WDT$OFF 000000                     l1246 7A4C                     _RCIF 007CF5  
                   _main 7D6E             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
           ___fttol@exp1 002A             ___fttol@lval 0026            __CFG_PLLDIV$2 000000  
                  ?_main 0001          __end_of___ftdiv 7B40          __end_of___fttol 7C34  
                  _T2CON 000FCA                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTC 000F82                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
         __CFG_FCMEN$OFF 000000            ___awtoft@sign 000C            ___ftpack@sign 0005  
                  status 000FD8          __initialization 782E             __end_of_main 8000  
                 ??_main 0035            ___fttol@sign1 0025            __activetblptr 000002  
                 _ADCON0 000FC2                   _CCPR1L 000FBE                   _T08BIT 007EAE  
       __end_of___awtoft 7870         __end_of___ftpack 798E                   _OSCCON 000FD3  
                 _TMR0IF 007F92                   _TMR0ON 007EAF     __size_of_configBoard 0070  
              ??___ftdiv 0013                ??___fttol 0020                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 782E            ___rparam_used 000001  
             ___ftdiv@f1 000D               ___ftdiv@f2 0010               ___ftdiv@f3 0017  
             ___awtoft@c 0009               ___fttol@f1 001C           __pcstackCOMRAM 0001  
                _CCP1CON 000FBD                ?___awtoft 0009                ?___ftpack 0001  
     __size_of_tocarNota 013A                  __Hparam 0000                  __Lparam 0000  
                ___ftdiv 7A5A                  ___fttol 7B40                  __pcinit 782E  
             ??___awtoft 000C               ??___ftpack 0006                  __ramtop 0800  
                __ptext0 7D6E                  __ptext1 798E                  __ptext2 7B40  
                __ptext3 7A5A                  __ptext4 7838                  __ptext5 78E0  
                __ptext6 7C34                  __ptext7 7870                _T0CONbits 000FD5  
   end_of_initialization 782E            __Lmediumconst 0000     wait_in_ms@time_in_ms 002B  
      __end_of_tocarNota 7D6E               _wait_in_ms 798E                _PORTBbits 000F81  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISAbits 000F92  
            ___ftdiv@exp 001A            ??_configBoard 0001      start_initialization 782E  
        wait_in_ms@count 0031       wait_in_ms@count_ms 0033      __end_of_configBoard 78E0  
            ?_wait_in_ms 002B        __size_of___awtoft 0038        __size_of___ftpack 00AE  
               ?___ftdiv 000D                 ?___fttol 001C      __size_of_wait_in_ms 00CC  
            _configBoard 7870                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
              _tocarNota 7C34               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0           wait_in_ms@flag 002F                 __Hrparam 0000  
               __Lrparam 0000               ?_tocarNota 0001         __size_of___ftdiv 00E6  
       __size_of___fttol 00F4                 ___awtoft 7838                 ___ftpack 78E0  
          __size_of_main 0292             ??_wait_in_ms 002D    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2       __end_of_wait_in_ms 7A5A              ??_tocarNota 0001  
          tocarNota@nota 0001       __CFG_FOSC$HSPLL_HS 000000             ?_configBoard 0001  
