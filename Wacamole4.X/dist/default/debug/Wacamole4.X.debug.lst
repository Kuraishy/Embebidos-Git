

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Feb 24 02:54:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           ; Version 1.45
    48                           ; Generated 16/11/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  0015EE                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _randx
    87  0015EE  0001               	dw	1
    88  0015F0  0000               	dw	0
    89                           
    90                           ;initializer for _nivel
    91  0015F2  07                 	db	7
    92                           
    93                           	psect	smallconst
    94  000800                     __psmallconst:
    95                           	opt stack 0
    96  000800  00                 	db	0
    97  000801                     _dpowers:
    98                           	opt stack 0
    99  000801  0001               	dw	1
   100  000803  000A               	dw	10
   101  000805  0064               	dw	100
   102  000807  03E8               	dw	1000
   103  000809  2710               	dw	10000
   104  00080B                     __end_of_dpowers:
   105                           	opt stack 0
   106  0000                     _PORTA	set	3968
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISBbits	set	3987
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISA	set	3986
   111  0000                     _PORTAbits	set	3968
   112  0000                     _PORTD	set	3971
   113  0000                     _PORTDbits	set	3971
   114  0000                     _TRISDbits	set	3989
   115  0000                     _ADCON0	set	4034
   116  0000                     _ADCON1bits	set	4033
   117  0000                     _T0CONbits	set	4053
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR0ON	set	32431
   120  0000                     _T08BIT	set	32430
   121  0000                     _INTCON2bits	set	4081
   122  0000                     _INTCON3bits	set	4080
   123  0000                     _INTCONbits	set	4082
   124  0000                     _RBIF	set	32656
   125  0000                     _INT2F	set	32641
   126  0000                     _INT1F	set	32640
   127  0000                     _INT0F	set	32657
   128  0000                     _TMR0IF	set	32658
   129  00080B                     STR_1:
   130                           
   131                           ; BSR set to: 0
   132  00080B  50                 	db	80	;'P'
   133  00080C  6F                 	db	111	;'o'
   134  00080D  69                 	db	105	;'i'
   135  00080E  6E                 	db	110	;'n'
   136  00080F  74                 	db	116	;'t'
   137  000810  73                 	db	115	;'s'
   138  000811  3D                 	db	61	;'='
   139  000812  20                 	db	32
   140  000813  25                 	db	37
   141  000814  69                 	db	105	;'i'
   142  000815  20                 	db	32
   143  000816  00                 	db	0
   144  000817                     STR_2:
   145                           
   146                           ; BSR set to: 0
   147  000817  4C                 	db	76	;'L'
   148  000818  56                 	db	86	;'V'
   149  000819  4C                 	db	76	;'L'
   150  00081A  3D                 	db	61	;'='
   151  00081B  20                 	db	32
   152  00081C  25                 	db	37
   153  00081D  75                 	db	117	;'u'
   154  00081E  20                 	db	32
   155  00081F  00                 	db	0
   156                           
   157                           ; #config settings
   158  000820  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           	psect	cinit
   161  0014E4                     __pcinit:
   162                           	opt stack 0
   163  0014E4                     start_initialization:
   164                           	opt stack 0
   165  0014E4                     __initialization:
   166                           	opt stack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (5 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170  0014E4  0EEE               	movlw	low __pidataCOMRAM
   171  0014E6  6EF6               	movwf	tblptrl,c
   172  0014E8  0E15               	movlw	high __pidataCOMRAM
   173  0014EA  6EF7               	movwf	tblptrh,c
   174  0014EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175  0014EE  6EF8               	movwf	tblptru,c
   176  0014F0  EE00  F045         	lfsr	0,__pdataCOMRAM
   177  0014F4  EE10 F005          	lfsr	1,5
   178  0014F8                     copy_data0:
   179  0014F8  0009               	tblrd		*+
   180  0014FA  CFF5 FFEE          	movff	tablat,postinc0
   181  0014FE  50E5               	movf	postdec1,w,c
   182  001500  50E1               	movf	fsr1l,w,c
   183  001502  E1FA               	bnz	copy_data0
   184                           
   185                           ; Clear objects allocated to BANK0 (2 bytes)
   186  001504  0100               	movlb	0
   187  001506  6B9E               	clrf	(__pbssBANK0+1)& (0+255),b
   188  001508  6B9D               	clrf	__pbssBANK0& (0+255),b
   189                           
   190                           ; Clear objects allocated to COMRAM (3 bytes)
   191  00150A  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   192  00150C  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   193  00150E  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   194  001510                     end_of_initialization:
   195                           	opt stack 0
   196  001510                     __end_of__initialization:
   197                           	opt stack 0
   198  001510  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   199  001512  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   200  001514  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201  001516  6EF8               	movwf	tblptru,c
   202  001518  0100               	movlb	0
   203  00151A  EF09  F00A         	goto	_main	;jump to C main() function
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           postdec1	equ	0xFE5
   210                           fsr1l	equ	0xFE1
   211                           
   212                           	psect	bssCOMRAM
   213  00004A                     __pbssCOMRAM:
   214                           	opt stack 0
   215  00004A                     _presionoBoton:
   216                           	opt stack 0
   217  00004A                     	ds	1
   218  00004B                     _numTopos:
   219                           	opt stack 0
   220  00004B                     	ds	1
   221  00004C                     _terminoJuego:
   222                           	opt stack 0
   223  00004C                     	ds	1
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	dataCOMRAM
   233  000045                     __pdataCOMRAM:
   234                           	opt stack 0
   235  000045                     _randx:
   236                           	opt stack 0
   237  000045                     	ds	4
   238  000049                     _nivel:
   239                           	opt stack 0
   240  000049                     	ds	1
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	bssBANK0
   250  00009D                     __pbssBANK0:
   251                           	opt stack 0
   252  00009D                     _puntuacion:
   253                           	opt stack 0
   254  00009D                     	ds	2
   255                           tblptru	equ	0xFF8
   256                           tblptrh	equ	0xFF7
   257                           tblptrl	equ	0xFF6
   258                           tablat	equ	0xFF5
   259                           postinc0	equ	0xFEE
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	cstackBANK0
   264  000060                     __pcstackBANK0:
   265                           	opt stack 0
   266  000060                     wait_in_ms@flag:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x0
   270  000060                     	ds	2
   271  000062                     wait_in_ms@count:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x2
   275  000062                     	ds	2
   276  000064                     wait_in_ms@count_ms:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x4
   280  000064                     	ds	2
   281  000066                     ??_lcd_orden:
   282  000066                     ??_lcd_caracter:
   283                           
   284                           ; 1 bytes @ 0x6
   285  000066                     	ds	5
   286  00006B                     ??_lcd_texto:
   287  00006B                     ??_lcd_ubicarXY:
   288                           
   289                           ; 1 bytes @ 0xB
   290  00006B                     	ds	5
   291  000070                     lcd_ubicarXY@i:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x10
   295  000070                     	ds	1
   296  000071                     lcd_ubicarXY@i_155:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x11
   300  000071                     	ds	1
   301  000072                     lcd_ubicarXY@linea:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x12
   305  000072                     	ds	1
   306  000073                     ??_lcdGUI:
   307                           
   308                           ; 1 bytes @ 0x13
   309  000073                     	ds	1
   310  000074                     lcdGUI@str:
   311                           	opt stack 0
   312                           
   313                           ; 20 bytes @ 0x14
   314  000074                     	ds	20
   315  000088                     lcdGUI@lvl:
   316                           	opt stack 0
   317                           
   318                           ; 20 bytes @ 0x28
   319  000088                     	ds	20
   320  00009C                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x3C
   323  00009C                     	ds	1
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	cstackCOMRAM
   333  000001                     __pcstackCOMRAM:
   334                           	opt stack 0
   335  000001                     ??_botonesInterrupcion:
   336                           
   337                           ; 1 bytes @ 0x0
   338  000001                     	ds	18
   339  000013                     ?___lwdiv:
   340                           	opt stack 0
   341  000013                     ?___ftpack:
   342                           	opt stack 0
   343  000013                     ?___lmul:
   344                           	opt stack 0
   345  000013                     ___lwdiv@dividend:
   346                           	opt stack 0
   347  000013                     ___ftpack@arg:
   348                           	opt stack 0
   349  000013                     ___lmul@multiplier:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x12
   353  000013                     	ds	2
   354  000015                     ___lwdiv@divisor:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x14
   358  000015                     	ds	1
   359  000016                     ___ftpack@exp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x15
   363  000016                     	ds	1
   364  000017                     ___ftpack@sign:
   365                           	opt stack 0
   366  000017                     ___lwdiv@quotient:
   367                           	opt stack 0
   368  000017                     ___lmul@multiplicand:
   369                           	opt stack 0
   370                           
   371                           ; 4 bytes @ 0x16
   372  000017                     	ds	1
   373  000018                     ??___ftpack:
   374                           
   375                           ; 1 bytes @ 0x17
   376  000018                     	ds	1
   377  000019                     ___lwdiv@counter:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x18
   381  000019                     	ds	1
   382  00001A                     ?___lwmod:
   383                           	opt stack 0
   384  00001A                     ___lwmod@dividend:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x19
   388  00001A                     	ds	1
   389  00001B                     ?___awtoft:
   390                           	opt stack 0
   391  00001B                     ___awtoft@c:
   392                           	opt stack 0
   393  00001B                     ___lmul@product:
   394                           	opt stack 0
   395                           
   396                           ; 4 bytes @ 0x1A
   397  00001B                     	ds	1
   398  00001C                     ___lwmod@divisor:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x1B
   402  00001C                     	ds	2
   403  00001E                     ___awtoft@sign:
   404                           	opt stack 0
   405  00001E                     ___lwmod@counter:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x1D
   409  00001E                     	ds	1
   410  00001F                     ?_rand:
   411                           	opt stack 0
   412  00001F                     ?_sprintf:
   413                           	opt stack 0
   414  00001F                     ?___ftdiv:
   415                           	opt stack 0
   416  00001F                     sprintf@sp:
   417                           	opt stack 0
   418  00001F                     ___ftdiv@f1:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x1E
   422  00001F                     	ds	2
   423  000021                     sprintf@f:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x20
   427  000021                     	ds	1
   428  000022                     ___ftdiv@f2:
   429                           	opt stack 0
   430                           
   431                           ; 3 bytes @ 0x21
   432  000022                     	ds	3
   433  000025                     ??_sprintf:
   434  000025                     ??___ftdiv:
   435                           
   436                           ; 1 bytes @ 0x24
   437  000025                     	ds	1
   438  000026                     sprintf@prec:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x25
   442  000026                     	ds	1
   443  000027                     sprintf@ap:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x26
   447  000027                     	ds	1
   448  000028                     ___ftdiv@cntr:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x27
   452  000028                     	ds	1
   453  000029                     sprintf@flag:
   454                           	opt stack 0
   455  000029                     ___ftdiv@f3:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x28
   459  000029                     	ds	1
   460  00002A                     sprintf@val:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x29
   464  00002A                     	ds	2
   465  00002C                     sprintf@c:
   466                           	opt stack 0
   467  00002C                     ___ftdiv@exp:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x2B
   471  00002C                     	ds	1
   472  00002D                     ___ftdiv@sign:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x2C
   476  00002D                     	ds	1
   477  00002E                     ?___fttol:
   478                           	opt stack 0
   479  00002E                     ___fttol@f1:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x2D
   483  00002E                     	ds	4
   484  000032                     ??___fttol:
   485                           
   486                           ; 1 bytes @ 0x31
   487  000032                     	ds	5
   488  000037                     ___fttol@sign1:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x36
   492  000037                     	ds	1
   493  000038                     ___fttol@lval:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x37
   497  000038                     	ds	4
   498  00003C                     ___fttol@exp1:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x3B
   502  00003C                     	ds	1
   503  00003D                     wait_in_ms@time_in_ms:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x3C
   507  00003D                     	ds	2
   508  00003F                     ??_wait_in_ms:
   509                           
   510                           ; 1 bytes @ 0x3E
   511  00003F                     	ds	2
   512  000041                     lcd_orden@orden:
   513                           	opt stack 0
   514  000041                     lcd_caracter@caracter:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x40
   518  000041                     	ds	2
   519  000043                     lcd_ubicarXY@columna:
   520                           	opt stack 0
   521  000043                     lcd_texto@cadena:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x42
   525  000043                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 39 in file "Wacamole4.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   553 ;;      Params:         0       0       0       0       0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0
   555 ;;      Temps:          0       1       0       0       0       0       0       0       0
   556 ;;      Totals:         0       1       0       0       0       0       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels required when called:   10
   559 ;; This function calls:
   560 ;;		_buzzer
   561 ;;		_cambioDeNivel
   562 ;;		_celebracion
   563 ;;		_configBoard
   564 ;;		_hizoAlgo
   565 ;;		_lcdGUI
   566 ;;		_lcd_iniciar
   567 ;;		_nivelActual
   568 ;;		_wait_in_ms
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575  001412                     __ptext0:
   576                           	opt stack 0
   577  001412                     _main:
   578                           	opt stack 21
   579                           
   580                           ;Wacamole4.c: 42: configBoard();
   581                           
   582                           ;incstack = 0
   583  001412  EC8D  F009         	call	_configBoard	;wreg free
   584                           
   585                           ;Wacamole4.c: 44: lcd_iniciar();
   586  001416  EC01  F007         	call	_lcd_iniciar	;wreg free
   587                           
   588                           ;Wacamole4.c: 48: lcdGUI();
   589  00141A  EC8C  F008         	call	_lcdGUI	;wreg free
   590                           
   591                           ;Wacamole4.c: 52: while(!terminoJuego)
   592                           
   593                           ;Wacamole4.c: 49: while(1){
   594  00141E  D01B               	goto	l282
   595  001420                     
   596                           ;Wacamole4.c: 53: {
   597                           ;Wacamole4.c: 56: _delay((unsigned long)((5)*(80000000/4000.0)));
   598  001420  0E82               	movlw	130
   599  001422  0100               	movlb	0	; () banked
   600  001424  6F9C               	movwf	??_main& (0+255),b
   601  001426  0EDD               	movlw	221
   602  001428                     u2117:
   603  001428  2EE8               	decfsz	wreg,f,c
   604  00142A  D7FE               	bra	u2117
   605  00142C  2F9C               	decfsz	??_main& (0+255),f,b
   606  00142E  D7FC               	bra	u2117
   607  001430  D000               	nop2	
   608                           
   609                           ;Wacamole4.c: 57: buzzer();
   610  001432  ECDE  F00A         	call	_buzzer	;wreg free
   611                           
   612                           ;Wacamole4.c: 58: nivelActual();
   613  001436  EC45  F005         	call	_nivelActual	;wreg free
   614                           
   615                           ;Wacamole4.c: 59: PORTA=0;
   616  00143A  0E00               	movlw	0
   617  00143C  6E80               	movwf	3968,c	;volatile
   618                           
   619                           ;Wacamole4.c: 60: hizoAlgo();
   620  00143E  EC52  F00A         	call	_hizoAlgo	;wreg free
   621                           
   622                           ;Wacamole4.c: 61: cambioDeNivel();
   623  001442  EC14  F008         	call	_cambioDeNivel	;wreg free
   624                           
   625                           ;Wacamole4.c: 62: lcdGUI();
   626  001446  EC8C  F008         	call	_lcdGUI	;wreg free
   627                           
   628                           ;Wacamole4.c: 63: wait_in_ms(300);
   629  00144A  0E01               	movlw	1
   630  00144C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   631  00144E  0E2C               	movlw	44
   632  001450  6E3D               	movwf	wait_in_ms@time_in_ms,c
   633  001452  EC99  F006         	call	_wait_in_ms	;wreg free
   634  001456                     l282:
   635  001456  504C               	movf	_terminoJuego,w,c
   636  001458  B4D8               	btfsc	status,2,c
   637  00145A  D7E2               	goto	l283
   638                           
   639                           ;Wacamole4.c: 64: }
   640                           ;Wacamole4.c: 65: celebracion();
   641  00145C  EC2F  F009         	call	_celebracion	;wreg free
   642  001460  D7FA               	goto	l282
   643  001462                     __end_of_main:
   644                           	opt stack 0
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           postinc0	equ	0xFEE
   650                           wreg	equ	0xFE8
   651                           postdec1	equ	0xFE5
   652                           fsr1l	equ	0xFE1
   653                           status	equ	0xFD8
   654                           
   655 ;; *************** function _nivelActual *****************
   656 ;; Defined at:
   657 ;;		line 79 in file "funciones.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   671 ;;      Params:         0       0       0       0       0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    5
   678 ;; This function calls:
   679 ;;		_topoAleatorio
   680 ;;		_wait_in_ms
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text1
   687  000A8A                     __ptext1:
   688                           	opt stack 0
   689  000A8A                     _nivelActual:
   690                           	opt stack 25
   691                           
   692                           ;funciones.c: 80: switch(nivel){
   693                           
   694                           ;incstack = 0
   695  000A8A  D05D               	goto	l130
   696  000A8C                     
   697                           ;funciones.c: 83: topoAleatorio();
   698  000A8C  ECBF  F007         	call	_topoAleatorio	;wreg free
   699                           
   700                           ;funciones.c: 85: wait_in_ms(1000);
   701  000A90  0E03               	movlw	3
   702  000A92  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   703  000A94  0EE8               	movlw	232
   704  000A96  6E3D               	movwf	wait_in_ms@time_in_ms,c
   705  000A98  EC99  F006         	call	_wait_in_ms	;wreg free
   706                           
   707                           ;funciones.c: 86: numTopos++;
   708  000A9C  2A4B               	incf	_numTopos,f,c
   709                           
   710                           ;funciones.c: 87: break;
   711  000A9E  0012               	return	
   712  000AA0                     
   713                           ;funciones.c: 89: topoAleatorio();
   714  000AA0  ECBF  F007         	call	_topoAleatorio	;wreg free
   715                           
   716                           ;funciones.c: 91: wait_in_ms(1000);
   717  000AA4  0E03               	movlw	3
   718  000AA6  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   719  000AA8  0EE8               	movlw	232
   720  000AAA  6E3D               	movwf	wait_in_ms@time_in_ms,c
   721  000AAC  EC99  F006         	call	_wait_in_ms	;wreg free
   722                           
   723                           ;funciones.c: 92: numTopos++;
   724  000AB0  2A4B               	incf	_numTopos,f,c
   725                           
   726                           ;funciones.c: 93: break;
   727  000AB2  0012               	return	
   728  000AB4                     
   729                           ;funciones.c: 95: topoAleatorio();
   730  000AB4  ECBF  F007         	call	_topoAleatorio	;wreg free
   731                           
   732                           ;funciones.c: 97: wait_in_ms(1000);
   733  000AB8  0E03               	movlw	3
   734  000ABA  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   735  000ABC  0EE8               	movlw	232
   736  000ABE  6E3D               	movwf	wait_in_ms@time_in_ms,c
   737  000AC0  EC99  F006         	call	_wait_in_ms	;wreg free
   738                           
   739                           ;funciones.c: 98: numTopos++;
   740  000AC4  2A4B               	incf	_numTopos,f,c
   741                           
   742                           ;funciones.c: 99: break;
   743  000AC6  0012               	return	
   744  000AC8                     
   745                           ;funciones.c: 101: topoAleatorio();
   746  000AC8  ECBF  F007         	call	_topoAleatorio	;wreg free
   747                           
   748                           ;funciones.c: 103: wait_in_ms(1000);
   749  000ACC  0E03               	movlw	3
   750  000ACE  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   751  000AD0  0EE8               	movlw	232
   752  000AD2  6E3D               	movwf	wait_in_ms@time_in_ms,c
   753  000AD4  EC99  F006         	call	_wait_in_ms	;wreg free
   754                           
   755                           ;funciones.c: 104: numTopos++;
   756  000AD8  2A4B               	incf	_numTopos,f,c
   757                           
   758                           ;funciones.c: 105: break;
   759  000ADA  0012               	return	
   760  000ADC                     
   761                           ;funciones.c: 107: topoAleatorio();
   762  000ADC  ECBF  F007         	call	_topoAleatorio	;wreg free
   763                           
   764                           ;funciones.c: 108: topoAleatorio();
   765  000AE0  ECBF  F007         	call	_topoAleatorio	;wreg free
   766                           
   767                           ;funciones.c: 110: wait_in_ms(1000);
   768  000AE4  0E03               	movlw	3
   769  000AE6  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   770  000AE8  0EE8               	movlw	232
   771  000AEA  6E3D               	movwf	wait_in_ms@time_in_ms,c
   772  000AEC  EC99  F006         	call	_wait_in_ms	;wreg free
   773                           
   774                           ;funciones.c: 111: numTopos++;
   775  000AF0  2A4B               	incf	_numTopos,f,c
   776                           
   777                           ;funciones.c: 112: break;
   778  000AF2  0012               	return	
   779  000AF4                     
   780                           ;funciones.c: 114: topoAleatorio();
   781  000AF4  ECBF  F007         	call	_topoAleatorio	;wreg free
   782                           
   783                           ;funciones.c: 115: topoAleatorio();
   784  000AF8  ECBF  F007         	call	_topoAleatorio	;wreg free
   785                           
   786                           ;funciones.c: 117: wait_in_ms(1000);
   787  000AFC  0E03               	movlw	3
   788  000AFE  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   789  000B00  0EE8               	movlw	232
   790  000B02  6E3D               	movwf	wait_in_ms@time_in_ms,c
   791  000B04  EC99  F006         	call	_wait_in_ms	;wreg free
   792                           
   793                           ;funciones.c: 118: numTopos++;
   794  000B08  2A4B               	incf	_numTopos,f,c
   795                           
   796                           ;funciones.c: 119: break;
   797  000B0A  0012               	return	
   798  000B0C                     
   799                           ;funciones.c: 121: topoAleatorio();
   800  000B0C  ECBF  F007         	call	_topoAleatorio	;wreg free
   801                           
   802                           ;funciones.c: 122: topoAleatorio();
   803  000B10  ECBF  F007         	call	_topoAleatorio	;wreg free
   804                           
   805                           ;funciones.c: 124: wait_in_ms(1000);
   806  000B14  0E03               	movlw	3
   807  000B16  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   808  000B18  0EE8               	movlw	232
   809  000B1A  6E3D               	movwf	wait_in_ms@time_in_ms,c
   810  000B1C  EC99  F006         	call	_wait_in_ms	;wreg free
   811                           
   812                           ;funciones.c: 125: numTopos++;
   813  000B20  2A4B               	incf	_numTopos,f,c
   814                           
   815                           ;funciones.c: 126: break;
   816  000B22  0012               	return	
   817  000B24                     
   818                           ;funciones.c: 128: topoAleatorio();
   819  000B24  ECBF  F007         	call	_topoAleatorio	;wreg free
   820                           
   821                           ;funciones.c: 129: topoAleatorio();
   822  000B28  ECBF  F007         	call	_topoAleatorio	;wreg free
   823                           
   824                           ;funciones.c: 130: topoAleatorio();
   825  000B2C  ECBF  F007         	call	_topoAleatorio	;wreg free
   826                           
   827                           ;funciones.c: 132: wait_in_ms(1000);
   828  000B30  0E03               	movlw	3
   829  000B32  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
   830  000B34  0EE8               	movlw	232
   831  000B36  6E3D               	movwf	wait_in_ms@time_in_ms,c
   832  000B38  EC99  F006         	call	_wait_in_ms	;wreg free
   833                           
   834                           ;funciones.c: 133: numTopos++;
   835  000B3C  2A4B               	incf	_numTopos,f,c
   836                           
   837                           ;funciones.c: 134: break;
   838  000B3E  0012               	return	
   839  000B40                     
   840                           ;funciones.c: 137: terminoJuego=1;
   841  000B40  0E01               	movlw	1
   842  000B42  6E4C               	movwf	_terminoJuego,c
   843                           
   844                           ;funciones.c: 138: break;}
   845  000B44  0012               	return	
   846  000B46                     l130:
   847  000B46  5049               	movf	_nivel,w,c
   848                           
   849                           ; Switch size 1, requested type "space"
   850                           ; Number of cases is 8, Range of values is 1 to 8
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte           25    13 (average)
   854                           ;	Chosen strategy is simple_byte
   855  000B48  0A01               	xorlw	1	; case 1
   856  000B4A  B4D8               	btfsc	status,2,c
   857  000B4C  D79F               	goto	l131
   858  000B4E  0A03               	xorlw	3	; case 2
   859  000B50  B4D8               	btfsc	status,2,c
   860  000B52  D7A6               	goto	l133
   861  000B54  0A01               	xorlw	1	; case 3
   862  000B56  B4D8               	btfsc	status,2,c
   863  000B58  D7AD               	goto	l134
   864  000B5A  0A07               	xorlw	7	; case 4
   865  000B5C  B4D8               	btfsc	status,2,c
   866  000B5E  D7B4               	goto	l135
   867  000B60  0A01               	xorlw	1	; case 5
   868  000B62  B4D8               	btfsc	status,2,c
   869  000B64  D7BB               	goto	l136
   870  000B66  0A03               	xorlw	3	; case 6
   871  000B68  B4D8               	btfsc	status,2,c
   872  000B6A  D7C4               	goto	l137
   873  000B6C  0A01               	xorlw	1	; case 7
   874  000B6E  B4D8               	btfsc	status,2,c
   875  000B70  D7CD               	goto	l138
   876  000B72  0A0F               	xorlw	15	; case 8
   877  000B74  B4D8               	btfsc	status,2,c
   878  000B76  D7D6               	goto	l139
   879  000B78  D7E3               	goto	l140
   880  000B7A                     __end_of_nivelActual:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _topoAleatorio *****************
   893 ;; Defined at:
   894 ;;		line 29 in file "funciones.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   908 ;;      Params:         0       0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    4
   915 ;; This function calls:
   916 ;;		_rand
   917 ;; This function is called by:
   918 ;;		_nivelActual
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text2
   923  000F7E                     __ptext2:
   924                           	opt stack 0
   925  000F7E                     _topoAleatorio:
   926                           	opt stack 25
   927                           
   928                           ;funciones.c: 31: switch(rand()%4+1){
   929                           
   930                           ;incstack = 0
   931  000F7E  D038               	goto	l96
   932  000F80                     l97:
   933                           
   934                           ;funciones.c: 33: if(PORTAbits.RA1==1){
   935  000F80  A280               	btfss	3968,1,c	;volatile
   936  000F82  D00A               	goto	l98
   937                           
   938                           ;funciones.c: 34: if(PORTAbits.RA2==1){
   939  000F84  A480               	btfss	3968,2,c	;volatile
   940  000F86  D006               	goto	l99
   941                           
   942                           ;funciones.c: 35: if(PORTAbits.RA3==1){
   943  000F88  A680               	btfss	3968,3,c	;volatile
   944  000F8A  D002               	goto	l100
   945                           
   946                           ;funciones.c: 36: PORTAbits.RA4=1;
   947  000F8C  8880               	bsf	3968,4,c	;volatile
   948                           
   949                           ;funciones.c: 37: }else PORTAbits.RA3=1;
   950  000F8E  0012               	return	
   951  000F90                     l100:
   952  000F90  8680               	bsf	3968,3,c	;volatile
   953                           
   954                           ;funciones.c: 38: }else PORTAbits.RA2=1;
   955  000F92  0012               	return	
   956  000F94                     l99:
   957  000F94  8480               	bsf	3968,2,c	;volatile
   958                           
   959                           ;funciones.c: 39: }else PORTAbits.RA1=1;
   960  000F96  0012               	return	
   961  000F98                     l98:
   962  000F98  8280               	bsf	3968,1,c	;volatile
   963                           
   964                           ;funciones.c: 41: break;
   965  000F9A  0012               	return	
   966  000F9C                     l105:
   967                           
   968                           ;funciones.c: 44: if(PORTAbits.RA2==1){
   969  000F9C  A480               	btfss	3968,2,c	;volatile
   970  000F9E  D00A               	goto	l106
   971                           
   972                           ;funciones.c: 45: if(PORTAbits.RA3==1){
   973  000FA0  A680               	btfss	3968,3,c	;volatile
   974  000FA2  D006               	goto	l107
   975                           
   976                           ;funciones.c: 46: if(PORTAbits.RA4==1){
   977  000FA4  A880               	btfss	3968,4,c	;volatile
   978  000FA6  D002               	goto	l108
   979                           
   980                           ;funciones.c: 47: PORTAbits.RA1=1;
   981  000FA8  8280               	bsf	3968,1,c	;volatile
   982                           
   983                           ;funciones.c: 48: }else PORTAbits.RA4=1;
   984  000FAA  0012               	return	
   985  000FAC                     l108:
   986  000FAC  8880               	bsf	3968,4,c	;volatile
   987                           
   988                           ;funciones.c: 49: }else PORTAbits.RA3=1;
   989  000FAE  0012               	return	
   990  000FB0                     l107:
   991  000FB0  8680               	bsf	3968,3,c	;volatile
   992                           
   993                           ;funciones.c: 50: }else PORTAbits.RA2=1;
   994  000FB2  0012               	return	
   995  000FB4                     l106:
   996  000FB4  8480               	bsf	3968,2,c	;volatile
   997                           
   998                           ;funciones.c: 51: break;
   999  000FB6  0012               	return	
  1000  000FB8                     l112:
  1001                           
  1002                           ;funciones.c: 54: if(PORTAbits.RA3==1){
  1003  000FB8  A680               	btfss	3968,3,c	;volatile
  1004  000FBA  D00A               	goto	l113
  1005                           
  1006                           ;funciones.c: 55: if(PORTAbits.RA4==1){
  1007  000FBC  A880               	btfss	3968,4,c	;volatile
  1008  000FBE  D006               	goto	l114
  1009                           
  1010                           ;funciones.c: 56: if(PORTAbits.RA1==1){
  1011  000FC0  A280               	btfss	3968,1,c	;volatile
  1012  000FC2  D002               	goto	l115
  1013                           
  1014                           ;funciones.c: 57: PORTAbits.RA2=1;
  1015  000FC4  8480               	bsf	3968,2,c	;volatile
  1016                           
  1017                           ;funciones.c: 58: }else PORTAbits.RA1=1;
  1018  000FC6  0012               	return	
  1019  000FC8                     l115:
  1020  000FC8  8280               	bsf	3968,1,c	;volatile
  1021                           
  1022                           ;funciones.c: 59: }else PORTAbits.RA4=1;
  1023  000FCA  0012               	return	
  1024  000FCC                     l114:
  1025  000FCC  8880               	bsf	3968,4,c	;volatile
  1026                           
  1027                           ;funciones.c: 60: }else PORTAbits.RA3=1;
  1028  000FCE  0012               	return	
  1029  000FD0                     l113:
  1030  000FD0  8680               	bsf	3968,3,c	;volatile
  1031                           
  1032                           ;funciones.c: 62: break;
  1033  000FD2  0012               	return	
  1034  000FD4                     l119:
  1035                           
  1036                           ;funciones.c: 64: if(PORTAbits.RA4==1){
  1037  000FD4  A880               	btfss	3968,4,c	;volatile
  1038  000FD6  D00A               	goto	l120
  1039                           
  1040                           ;funciones.c: 65: if(PORTAbits.RA1==1){
  1041  000FD8  A280               	btfss	3968,1,c	;volatile
  1042  000FDA  D006               	goto	l121
  1043                           
  1044                           ;funciones.c: 66: if(PORTAbits.RA2==1){
  1045  000FDC  A480               	btfss	3968,2,c	;volatile
  1046  000FDE  D002               	goto	l122
  1047                           
  1048                           ;funciones.c: 67: PORTAbits.RA3=1;
  1049  000FE0  8680               	bsf	3968,3,c	;volatile
  1050                           
  1051                           ;funciones.c: 68: }else PORTAbits.RA2=1;
  1052  000FE2  0012               	return	
  1053  000FE4                     l122:
  1054  000FE4  8480               	bsf	3968,2,c	;volatile
  1055                           
  1056                           ;funciones.c: 69: }else PORTAbits.RA1=1;
  1057  000FE6  0012               	return	
  1058  000FE8                     l121:
  1059  000FE8  8280               	bsf	3968,1,c	;volatile
  1060                           
  1061                           ;funciones.c: 70: }else PORTAbits.RA4=1;
  1062  000FEA  0012               	return	
  1063  000FEC                     l120:
  1064  000FEC  8880               	bsf	3968,4,c	;volatile
  1065                           
  1066                           ;funciones.c: 75: }
  1067                           
  1068                           ;funciones.c: 74: break;
  1069                           
  1070                           ;funciones.c: 73: default:
  1071                           
  1072                           ;funciones.c: 72: break;
  1073  000FEE  0012               	return	
  1074  000FF0                     l96:
  1075  000FF0  ECB7  F009         	call	_rand	;wreg free
  1076  000FF4  0E03               	movlw	3
  1077  000FF6  161F               	andwf	?_rand,f,c
  1078  000FF8  0E00               	movlw	0
  1079  000FFA  1620               	andwf	?_rand+1,f,c
  1080  000FFC  0E01               	movlw	1
  1081  000FFE  261F               	addwf	?_rand,f,c
  1082  001000  0E00               	movlw	0
  1083  001002  2220               	addwfc	?_rand+1,f,c
  1084                           
  1085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 1, Range of values is 0 to 0
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte            4     3 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  001004  5020               	movf	?_rand+1,w,c
  1093  001006  0A00               	xorlw	0	; case 0
  1094  001008  A4D8               	btfss	status,2,c
  1095  00100A  0012               	return	
  1096                           
  1097                           ; Switch size 1, requested type "space"
  1098                           ; Number of cases is 4, Range of values is 1 to 4
  1099                           ; switch strategies available:
  1100                           ; Name         Instructions Cycles
  1101                           ; simple_byte           13     7 (average)
  1102                           ;	Chosen strategy is simple_byte
  1103  00100C  501F               	movf	?_rand,w,c
  1104  00100E  0A01               	xorlw	1	; case 1
  1105  001010  B4D8               	btfsc	status,2,c
  1106  001012  D7B6               	goto	l97
  1107  001014  0A03               	xorlw	3	; case 2
  1108  001016  B4D8               	btfsc	status,2,c
  1109  001018  D7C1               	goto	l105
  1110  00101A  0A01               	xorlw	1	; case 3
  1111  00101C  B4D8               	btfsc	status,2,c
  1112  00101E  D7CC               	goto	l112
  1113  001020  0A07               	xorlw	7	; case 4
  1114  001022  A4D8               	btfss	status,2,c
  1115  001024  0012               	return	
  1116  001026  D7D6               	goto	l119
  1117  001028                     __end_of_topoAleatorio:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           postdec1	equ	0xFE5
  1126                           fsr1l	equ	0xFE1
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _rand *****************
  1130 ;; Defined at:
  1131 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\rand.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2   30[COMRAM] int 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         2       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    3
  1152 ;; This function calls:
  1153 ;;		___lmul
  1154 ;; This function is called by:
  1155 ;;		_topoAleatorio
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text3
  1160  00136E                     __ptext3:
  1161                           	opt stack 0
  1162  00136E                     _rand:
  1163                           	opt stack 25
  1164                           
  1165                           ;incstack = 0
  1166  00136E  C045  F013         	movff	_randx,___lmul@multiplier
  1167  001372  C046  F014         	movff	_randx+1,___lmul@multiplier+1
  1168  001376  C047  F015         	movff	_randx+2,___lmul@multiplier+2
  1169  00137A  C048  F016         	movff	_randx+3,___lmul@multiplier+3
  1170  00137E  0E6D               	movlw	109
  1171  001380  6E17               	movwf	___lmul@multiplicand,c
  1172  001382  0E4E               	movlw	78
  1173  001384  6E18               	movwf	___lmul@multiplicand+1,c
  1174  001386  0EC6               	movlw	198
  1175  001388  6E19               	movwf	___lmul@multiplicand+2,c
  1176  00138A  0E41               	movlw	65
  1177  00138C  6E1A               	movwf	___lmul@multiplicand+3,c
  1178  00138E  EC62  F009         	call	___lmul	;wreg free
  1179  001392  C013  F045         	movff	?___lmul,_randx
  1180  001396  C014  F046         	movff	?___lmul+1,_randx+1
  1181  00139A  C015  F047         	movff	?___lmul+2,_randx+2
  1182  00139E  C016  F048         	movff	?___lmul+3,_randx+3
  1183  0013A2  0E39               	movlw	57
  1184  0013A4  2645               	addwf	_randx,f,c
  1185  0013A6  0E30               	movlw	48
  1186  0013A8  2246               	addwfc	_randx+1,f,c
  1187  0013AA  0E00               	movlw	0
  1188  0013AC  2247               	addwfc	_randx+2,f,c
  1189  0013AE  0E00               	movlw	0
  1190  0013B0  2248               	addwfc	_randx+3,f,c
  1191  0013B2  0EFF               	movlw	255
  1192  0013B4  1447               	andwf	_randx+2,w,c
  1193  0013B6  6E1F               	movwf	?_rand,c
  1194  0013B8  0E7F               	movlw	127
  1195  0013BA  1448               	andwf	_randx+3,w,c
  1196  0013BC  6E20               	movwf	?_rand+1,c
  1197  0013BE  0012               	return	
  1198  0013C0                     __end_of_rand:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function ___lmul *****************
  1211 ;; Defined at:
  1212 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  multiplier      4   18[COMRAM] unsigned long 
  1215 ;;  multiplicand    4   22[COMRAM] unsigned long 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  product         4   26[COMRAM] unsigned long 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  4   18[COMRAM] unsigned long 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1227 ;;      Params:         8       0       0       0       0       0       0       0       0
  1228 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1230 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1231 ;;Total ram usage:       12 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    2
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_rand
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text4
  1242  0012C4                     __ptext4:
  1243                           	opt stack 0
  1244  0012C4                     ___lmul:
  1245                           	opt stack 25
  1246                           
  1247                           ;incstack = 0
  1248  0012C4  0E00               	movlw	0
  1249  0012C6  6E1B               	movwf	___lmul@product,c
  1250  0012C8  0E00               	movlw	0
  1251  0012CA  6E1C               	movwf	___lmul@product+1,c
  1252  0012CC  0E00               	movlw	0
  1253  0012CE  6E1D               	movwf	___lmul@product+2,c
  1254  0012D0  0E00               	movlw	0
  1255  0012D2  6E1E               	movwf	___lmul@product+3,c
  1256  0012D4  A013               	btfss	___lmul@multiplier,0,c
  1257  0012D6  D008               	goto	l347
  1258  0012D8  5017               	movf	___lmul@multiplicand,w,c
  1259  0012DA  261B               	addwf	___lmul@product,f,c
  1260  0012DC  5018               	movf	___lmul@multiplicand+1,w,c
  1261  0012DE  221C               	addwfc	___lmul@product+1,f,c
  1262  0012E0  5019               	movf	___lmul@multiplicand+2,w,c
  1263  0012E2  221D               	addwfc	___lmul@product+2,f,c
  1264  0012E4  501A               	movf	___lmul@multiplicand+3,w,c
  1265  0012E6  221E               	addwfc	___lmul@product+3,f,c
  1266  0012E8                     l347:
  1267  0012E8  90D8               	bcf	status,0,c
  1268  0012EA  3617               	rlcf	___lmul@multiplicand,f,c
  1269  0012EC  3618               	rlcf	___lmul@multiplicand+1,f,c
  1270  0012EE  3619               	rlcf	___lmul@multiplicand+2,f,c
  1271  0012F0  361A               	rlcf	___lmul@multiplicand+3,f,c
  1272  0012F2  90D8               	bcf	status,0,c
  1273  0012F4  3216               	rrcf	___lmul@multiplier+3,f,c
  1274  0012F6  3215               	rrcf	___lmul@multiplier+2,f,c
  1275  0012F8  3214               	rrcf	___lmul@multiplier+1,f,c
  1276  0012FA  3213               	rrcf	___lmul@multiplier,f,c
  1277  0012FC  5013               	movf	___lmul@multiplier,w,c
  1278  0012FE  1014               	iorwf	___lmul@multiplier+1,w,c
  1279  001300  1015               	iorwf	___lmul@multiplier+2,w,c
  1280  001302  1016               	iorwf	___lmul@multiplier+3,w,c
  1281  001304  A4D8               	btfss	status,2,c
  1282  001306  D7E6               	goto	l346
  1283  001308  C01B  F013         	movff	___lmul@product,?___lmul
  1284  00130C  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  1285  001310  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  1286  001314  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  1287  001318  0012               	return		;funcret
  1288  00131A                     __end_of___lmul:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1l	equ	0xFE1
  1298                           status	equ	0xFD8
  1299                           
  1300 ;; *************** function _lcd_iniciar *****************
  1301 ;; Defined at:
  1302 ;;		line 224 in file "lcd.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        0 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    7
  1323 ;; This function calls:
  1324 ;;		_lcd_orden
  1325 ;;		_lcd_pulso
  1326 ;;		_wait_in_ms
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text5
  1333  000E02                     __ptext5:
  1334                           	opt stack 0
  1335  000E02                     _lcd_iniciar:
  1336                           	opt stack 23
  1337                           
  1338                           ;lcd.c: 225: TRISDbits.TRISD1=0;
  1339                           
  1340                           ;incstack = 0
  1341  000E02  9295               	bcf	3989,1,c	;volatile
  1342                           
  1343                           ;lcd.c: 226: TRISDbits.TRISD2=0;
  1344  000E04  9495               	bcf	3989,2,c	;volatile
  1345                           
  1346                           ;lcd.c: 227: TRISDbits.TRISD3=0;
  1347  000E06  9695               	bcf	3989,3,c	;volatile
  1348                           
  1349                           ;lcd.c: 228: TRISDbits.TRISD4=0;
  1350  000E08  9895               	bcf	3989,4,c	;volatile
  1351                           
  1352                           ;lcd.c: 229: TRISDbits.TRISD5=0;
  1353  000E0A  9A95               	bcf	3989,5,c	;volatile
  1354                           
  1355                           ;lcd.c: 230: TRISDbits.TRISD6=0;
  1356  000E0C  9C95               	bcf	3989,6,c	;volatile
  1357                           
  1358                           ;lcd.c: 231: TRISDbits.TRISD7=0;
  1359  000E0E  9E95               	bcf	3989,7,c	;volatile
  1360                           
  1361                           ;lcd.c: 233: PORTDbits.RD1=0;
  1362  000E10  9283               	bcf	3971,1,c	;volatile
  1363                           
  1364                           ;lcd.c: 234: PORTDbits.RD2=0;
  1365  000E12  9483               	bcf	3971,2,c	;volatile
  1366                           
  1367                           ;lcd.c: 235: PORTDbits.RD3=0;
  1368  000E14  9683               	bcf	3971,3,c	;volatile
  1369                           
  1370                           ;lcd.c: 236: PORTDbits.RD4=0;
  1371  000E16  9883               	bcf	3971,4,c	;volatile
  1372                           
  1373                           ;lcd.c: 237: PORTDbits.RD5=0;
  1374  000E18  9A83               	bcf	3971,5,c	;volatile
  1375                           
  1376                           ;lcd.c: 238: PORTDbits.RD6=0;
  1377  000E1A  9C83               	bcf	3971,6,c	;volatile
  1378                           
  1379                           ;lcd.c: 239: PORTDbits.RD7=0;
  1380  000E1C  9E83               	bcf	3971,7,c	;volatile
  1381                           
  1382                           ;lcd.c: 241: wait_in_ms(20);
  1383  000E1E  0E00               	movlw	0
  1384  000E20  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1385  000E22  0E14               	movlw	20
  1386  000E24  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1387  000E26  EC99  F006         	call	_wait_in_ms	;wreg free
  1388                           
  1389                           ;lcd.c: 242: PORTD=0X03<<4;
  1390  000E2A  0E30               	movlw	48
  1391  000E2C  6E83               	movwf	3971,c	;volatile
  1392                           
  1393                           ;lcd.c: 243: lcd_pulso();
  1394  000E2E  ECC2  F00A         	call	_lcd_pulso	;wreg free
  1395                           
  1396                           ;lcd.c: 244: wait_in_ms(4);
  1397  000E32  0E00               	movlw	0
  1398  000E34  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1399  000E36  0E04               	movlw	4
  1400  000E38  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1401  000E3A  EC99  F006         	call	_wait_in_ms	;wreg free
  1402                           
  1403                           ;lcd.c: 246: PORTD=0X03<<4;
  1404  000E3E  0E30               	movlw	48
  1405  000E40  6E83               	movwf	3971,c	;volatile
  1406                           
  1407                           ;lcd.c: 247: lcd_pulso();
  1408  000E42  ECC2  F00A         	call	_lcd_pulso	;wreg free
  1409                           
  1410                           ;lcd.c: 248: wait_in_ms(4);
  1411  000E46  0E00               	movlw	0
  1412  000E48  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1413  000E4A  0E04               	movlw	4
  1414  000E4C  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1415  000E4E  EC99  F006         	call	_wait_in_ms	;wreg free
  1416                           
  1417                           ;lcd.c: 250: PORTD=0X03<<4;
  1418  000E52  0E30               	movlw	48
  1419  000E54  6E83               	movwf	3971,c	;volatile
  1420                           
  1421                           ;lcd.c: 251: lcd_pulso();
  1422  000E56  ECC2  F00A         	call	_lcd_pulso	;wreg free
  1423                           
  1424                           ;lcd.c: 252: wait_in_ms(1);
  1425  000E5A  0E00               	movlw	0
  1426  000E5C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1427  000E5E  0E01               	movlw	1
  1428  000E60  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1429  000E62  EC99  F006         	call	_wait_in_ms	;wreg free
  1430                           
  1431                           ;lcd.c: 254: PORTD=0X02<<4;
  1432  000E66  0E20               	movlw	32
  1433  000E68  6E83               	movwf	3971,c	;volatile
  1434                           
  1435                           ;lcd.c: 255: lcd_pulso();
  1436  000E6A  ECC2  F00A         	call	_lcd_pulso	;wreg free
  1437                           
  1438                           ;lcd.c: 257: lcd_orden(0x28);
  1439  000E6E  0E00               	movlw	0
  1440  000E70  6E42               	movwf	lcd_orden@orden+1,c
  1441  000E72  0E28               	movlw	40
  1442  000E74  6E41               	movwf	lcd_orden@orden,c
  1443  000E76  ECFA  F008         	call	_lcd_orden	;wreg free
  1444                           
  1445                           ;lcd.c: 258: wait_in_ms(8);
  1446  000E7A  0E00               	movlw	0
  1447  000E7C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1448  000E7E  0E08               	movlw	8
  1449  000E80  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1450  000E82  EC99  F006         	call	_wait_in_ms	;wreg free
  1451                           
  1452                           ;lcd.c: 260: lcd_orden(0x0c);
  1453  000E86  0E00               	movlw	0
  1454  000E88  6E42               	movwf	lcd_orden@orden+1,c
  1455  000E8A  0E0C               	movlw	12
  1456  000E8C  6E41               	movwf	lcd_orden@orden,c
  1457  000E8E  ECFA  F008         	call	_lcd_orden	;wreg free
  1458                           
  1459                           ;lcd.c: 261: wait_in_ms(8);
  1460  000E92  0E00               	movlw	0
  1461  000E94  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1462  000E96  0E08               	movlw	8
  1463  000E98  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1464  000E9A  EC99  F006         	call	_wait_in_ms	;wreg free
  1465                           
  1466                           ;lcd.c: 263: lcd_orden(0x01);
  1467  000E9E  0E00               	movlw	0
  1468  000EA0  6E42               	movwf	lcd_orden@orden+1,c
  1469  000EA2  0E01               	movlw	1
  1470  000EA4  6E41               	movwf	lcd_orden@orden,c
  1471  000EA6  ECFA  F008         	call	_lcd_orden	;wreg free
  1472                           
  1473                           ;lcd.c: 264: wait_in_ms(2);
  1474  000EAA  0E00               	movlw	0
  1475  000EAC  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1476  000EAE  0E02               	movlw	2
  1477  000EB0  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1478  000EB2  EC99  F006         	call	_wait_in_ms	;wreg free
  1479                           
  1480                           ;lcd.c: 266: lcd_orden(0x06);
  1481  000EB6  0E00               	movlw	0
  1482  000EB8  6E42               	movwf	lcd_orden@orden+1,c
  1483  000EBA  0E06               	movlw	6
  1484  000EBC  6E41               	movwf	lcd_orden@orden,c
  1485  000EBE  ECFA  F008         	call	_lcd_orden	;wreg free
  1486                           
  1487                           ;lcd.c: 267: wait_in_ms(8);
  1488  000EC2  0E00               	movlw	0
  1489  000EC4  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  1490  000EC6  0E08               	movlw	8
  1491  000EC8  6E3D               	movwf	wait_in_ms@time_in_ms,c
  1492  000ECA  EC99  F006         	call	_wait_in_ms	;wreg free
  1493  000ECE  0012               	return		;funcret
  1494  000ED0                     __end_of_lcd_iniciar:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1l	equ	0xFE1
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _lcdGUI *****************
  1507 ;; Defined at:
  1508 ;;		line 204 in file "funciones.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  lvl            20   40[BANK0 ] unsigned char [20]
  1513 ;;  str            20   20[BANK0 ] unsigned char [20]
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         0      40       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1526 ;;      Totals:         0      41       0       0       0       0       0       0       0
  1527 ;;Total ram usage:       41 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    9
  1530 ;; This function calls:
  1531 ;;		_lcd_origen
  1532 ;;		_lcd_texto
  1533 ;;		_lcd_ubicarXY
  1534 ;;		_sprintf
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text6
  1541  001118                     __ptext6:
  1542                           	opt stack 0
  1543  001118                     _lcdGUI:
  1544                           	opt stack 21
  1545                           
  1546                           ;funciones.c: 205: unsigned char str[20];
  1547                           ;funciones.c: 206: sprintf(str,"Points= %i ",puntuacion);
  1548                           
  1549                           ;incstack = 0
  1550  001118  0E74               	movlw	low lcdGUI@str
  1551  00111A  6E1F               	movwf	sprintf@sp,c
  1552  00111C  0E00               	movlw	high lcdGUI@str
  1553  00111E  6E20               	movwf	sprintf@sp+1,c
  1554  001120  0E0B               	movlw	low STR_1
  1555  001122  6E21               	movwf	sprintf@f,c
  1556  001124  0E08               	movlw	high STR_1
  1557  001126  6E22               	movwf	sprintf@f+1,c
  1558  001128  C09D  F023         	movff	_puntuacion,?_sprintf+4
  1559  00112C  C09E  F024         	movff	_puntuacion+1,?_sprintf+5
  1560  001130  EC11  F004         	call	_sprintf	;wreg free
  1561                           
  1562                           ;funciones.c: 207: unsigned char lvl[20];
  1563                           ;funciones.c: 208: sprintf(lvl,"LVL= %u ",nivel);
  1564  001134  0E88               	movlw	low lcdGUI@lvl
  1565  001136  6E1F               	movwf	sprintf@sp,c
  1566  001138  0E00               	movlw	high lcdGUI@lvl
  1567  00113A  6E20               	movwf	sprintf@sp+1,c
  1568  00113C  0E17               	movlw	low STR_2
  1569  00113E  6E21               	movwf	sprintf@f,c
  1570  001140  0E08               	movlw	high STR_2
  1571  001142  6E22               	movwf	sprintf@f+1,c
  1572  001144  C049  F023         	movff	_nivel,?_sprintf+4
  1573  001148  6A24               	clrf	?_sprintf+5,c
  1574  00114A  EC11  F004         	call	_sprintf	;wreg free
  1575                           
  1576                           ;funciones.c: 209: lcd_ubicarXY(2,1);
  1577  00114E  0E01               	movlw	1
  1578  001150  6E43               	movwf	lcd_ubicarXY@columna,c
  1579  001152  0E02               	movlw	2
  1580  001154  EC51  F008         	call	_lcd_ubicarXY
  1581                           
  1582                           ;funciones.c: 210: lcd_texto(lvl);
  1583  001158  0E88               	movlw	low lcdGUI@lvl
  1584  00115A  6E43               	movwf	lcd_texto@cadena,c
  1585  00115C  0E00               	movlw	high lcdGUI@lvl
  1586  00115E  6E44               	movwf	lcd_texto@cadena+1,c
  1587  001160  ECAB  F00A         	call	_lcd_texto	;wreg free
  1588                           
  1589                           ;funciones.c: 211: lcd_origen();
  1590  001164  ECD1  F00A         	call	_lcd_origen	;wreg free
  1591                           
  1592                           ;funciones.c: 212: lcd_texto(str);
  1593  001168  0E74               	movlw	low lcdGUI@str
  1594  00116A  6E43               	movwf	lcd_texto@cadena,c
  1595  00116C  0E00               	movlw	high lcdGUI@str
  1596  00116E  6E44               	movwf	lcd_texto@cadena+1,c
  1597  001170  ECAB  F00A         	call	_lcd_texto	;wreg free
  1598                           
  1599                           ;funciones.c: 213: _delay((unsigned long)((5)*(80000000/4000.0)));
  1600  001174  0E82               	movlw	130
  1601  001176  0100               	movlb	0	; () banked
  1602  001178  6F73               	movwf	??_lcdGUI& (0+255),b
  1603  00117A  0EDD               	movlw	221
  1604  00117C                     u2127:
  1605  00117C  2EE8               	decfsz	wreg,f,c
  1606  00117E  D7FE               	bra	u2127
  1607  001180  2F73               	decfsz	??_lcdGUI& (0+255),f,b
  1608  001182  D7FC               	bra	u2127
  1609  001184  D000               	nop2	
  1610  001186  0012               	return		;funcret
  1611  001188                     __end_of_lcdGUI:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1l	equ	0xFE1
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function _sprintf *****************
  1624 ;; Defined at:
  1625 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  sp              2   30[COMRAM] PTR unsigned char 
  1628 ;;		 -> lcdGUI@lvl(20), lcdGUI@str(20), 
  1629 ;;  f               2   32[COMRAM] PTR const unsigned char 
  1630 ;;		 -> STR_2(9), STR_1(12), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  tmpval          4    0        struct .
  1633 ;;  cp              3    0        PTR const unsigned char 
  1634 ;;  val             2   41[COMRAM] unsigned int 
  1635 ;;  ap              2   38[COMRAM] PTR void [1]
  1636 ;;		 -> ?_sprintf(2), 
  1637 ;;  len             2    0        unsigned int 
  1638 ;;  c               1   43[COMRAM] char 
  1639 ;;  flag            1   40[COMRAM] unsigned char 
  1640 ;;  prec            1   37[COMRAM] char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   30[COMRAM] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         6       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1653 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:       14 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		___lwdiv
  1659 ;;		___lwmod
  1660 ;; This function is called by:
  1661 ;;		_lcdGUI
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text7
  1666  000822                     __ptext7:
  1667                           	opt stack 0
  1668  000822                     _sprintf:
  1669                           	opt stack 26
  1670                           
  1671                           ;doprnt.c: 494: va_list ap;
  1672                           ;doprnt.c: 499: signed char c;
  1673                           ;doprnt.c: 506: signed char prec;
  1674                           ;doprnt.c: 508: unsigned char flag;
  1675                           ;doprnt.c: 523: union {
  1676                           ;doprnt.c: 524: unsigned long vd;
  1677                           ;doprnt.c: 525: double integ;
  1678                           ;doprnt.c: 526: } tmpval;
  1679                           ;doprnt.c: 528: unsigned int val;
  1680                           ;doprnt.c: 529: unsigned len;
  1681                           ;doprnt.c: 530: const char * cp;
  1682                           ;doprnt.c: 533: *ap = __va_start();
  1683                           
  1684                           ;incstack = 0
  1685  000822  0E23               	movlw	low (?_sprintf+4)
  1686  000824  6E27               	movwf	sprintf@ap,c
  1687  000826  0E00               	movlw	high (?_sprintf+4)
  1688  000828  6E28               	movwf	sprintf@ap+1,c
  1689                           
  1690                           ;doprnt.c: 536: while(c = *f++) {
  1691  00082A  D0A2               	goto	u1600
  1692  00082C                     
  1693                           ;doprnt.c: 538: if(c != '%')
  1694  00082C  0E25               	movlw	37
  1695  00082E  182C               	xorwf	sprintf@c,w,c
  1696  000830  B4D8               	btfsc	status,2,c
  1697  000832  D009               	goto	l314
  1698                           
  1699                           ;doprnt.c: 540: {
  1700                           ;doprnt.c: 541: ((*sp++ = (c)));
  1701  000834  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1702  000838  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1703  00083C  C02C  FFDF         	movff	sprintf@c,indf2
  1704  000840  4A1F               	infsnz	sprintf@sp,f,c
  1705  000842  2A20               	incf	sprintf@sp+1,f,c
  1706                           
  1707                           ;doprnt.c: 542: continue;
  1708  000844  D095               	goto	u1600
  1709  000846                     l314:
  1710                           
  1711                           ;doprnt.c: 543: }
  1712                           ;doprnt.c: 548: flag = 0;
  1713  000846  0E00               	movlw	0
  1714  000848  6E29               	movwf	sprintf@flag,c
  1715                           
  1716                           ;doprnt.c: 635: switch(c = *f++) {
  1717  00084A  D002               	goto	l315
  1718  00084C                     
  1719                           ;doprnt.c: 818: flag |= 0x40;
  1720  00084C  8C29               	bsf	sprintf@flag,6,c
  1721                           
  1722                           ;doprnt.c: 822: }
  1723                           
  1724                           ;doprnt.c: 819: break;
  1725  00084E  D017               	goto	l320
  1726  000850                     l315:
  1727  000850  C021  FFF6         	movff	sprintf@f,tblptrl
  1728  000854  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1729  000858  4A21               	infsnz	sprintf@f,f,c
  1730  00085A  2A22               	incf	sprintf@f+1,f,c
  1731  00085C                     	if	0	;tblptru may be non-zero
  1732  00085C                     	endif
  1733  00085C                     	if	0	;tblptru may be non-zero
  1734  00085C                     	endif
  1735  00085C  0008               	tblrd		*
  1736  00085E  CFF5 F02C          	movff	tablat,sprintf@c
  1737  000862  502C               	movf	sprintf@c,w,c
  1738                           
  1739                           ; Switch size 1, requested type "space"
  1740                           ; Number of cases is 4, Range of values is 0 to 117
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           13     7 (average)
  1744                           ;	Chosen strategy is simple_byte
  1745  000864  0A00               	xorlw	0	; case 0
  1746  000866  B4D8               	btfsc	status,2,c
  1747  000868  D08F               	goto	u1610
  1748  00086A  0A64               	xorlw	100	; case 100
  1749  00086C  B4D8               	btfsc	status,2,c
  1750  00086E  D007               	goto	l320
  1751  000870  0A0D               	xorlw	13	; case 105
  1752  000872  B4D8               	btfsc	status,2,c
  1753  000874  D004               	goto	l320
  1754  000876  0A1C               	xorlw	28	; case 117
  1755  000878  B4D8               	btfsc	status,2,c
  1756  00087A  D7E8               	goto	l322
  1757  00087C  D079               	goto	u1600
  1758  00087E                     l320:
  1759                           
  1760                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1761  00087E  BC29               	btfsc	sprintf@flag,6,c
  1762  000880  D015               	goto	l323
  1763                           
  1764                           ;doprnt.c: 1253: {
  1765                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1766  000882  C027  FFD9         	movff	sprintf@ap,fsr2l
  1767  000886  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  1768  00088A  CFDE F02A          	movff	postinc2,sprintf@val
  1769  00088E  CFDD F02B          	movff	postdec2,sprintf@val+1
  1770  000892  0E02               	movlw	2
  1771  000894  2627               	addwf	sprintf@ap,f,c
  1772  000896  0E00               	movlw	0
  1773  000898  2228               	addwfc	sprintf@ap+1,f,c
  1774                           
  1775                           ;doprnt.c: 1261: if((int)val < 0) {
  1776  00089A  AE2B               	btfss	sprintf@val+1,7,c
  1777  00089C  D013               	goto	l325
  1778                           
  1779                           ;doprnt.c: 1262: flag |= 0x03;
  1780  00089E  0E03               	movlw	3
  1781  0008A0  1229               	iorwf	sprintf@flag,f,c
  1782                           
  1783                           ;doprnt.c: 1263: val = -val;
  1784  0008A2  6C2A               	negf	sprintf@val,c
  1785  0008A4  1E2B               	comf	sprintf@val+1,f,c
  1786  0008A6  B0D8               	btfsc	status,0,c
  1787  0008A8  2A2B               	incf	sprintf@val+1,f,c
  1788                           
  1789                           ;doprnt.c: 1264: }
  1790                           ;doprnt.c: 1266: }
  1791  0008AA  D00C               	goto	l325
  1792  0008AC                     l323:
  1793                           
  1794                           ;doprnt.c: 1268: else
  1795                           ;doprnt.c: 1273: {
  1796                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1797  0008AC  C027  FFD9         	movff	sprintf@ap,fsr2l
  1798  0008B0  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  1799  0008B4  CFDE F02A          	movff	postinc2,sprintf@val
  1800  0008B8  CFDD F02B          	movff	postdec2,sprintf@val+1
  1801  0008BC  0E02               	movlw	2
  1802  0008BE  2627               	addwf	sprintf@ap,f,c
  1803  0008C0  0E00               	movlw	0
  1804  0008C2  2228               	addwfc	sprintf@ap+1,f,c
  1805  0008C4                     l325:
  1806                           
  1807                           ;doprnt.c: 1287: }
  1808                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1809  0008C4  0E01               	movlw	1
  1810  0008C6  6E2C               	movwf	sprintf@c,c
  1811  0008C8                     l1996:
  1812  0008C8  0E05               	movlw	5
  1813  0008CA  182C               	xorwf	sprintf@c,w,c
  1814  0008CC  B4D8               	btfsc	status,2,c
  1815  0008CE  D012               	goto	u1580
  1816                           
  1817                           ;doprnt.c: 1306: if(val < dpowers[c])
  1818  0008D0  502C               	movf	sprintf@c,w,c
  1819  0008D2  0D02               	mullw	2
  1820  0008D4  0E01               	movlw	low _dpowers
  1821  0008D6  24F3               	addwf	prodl,w,c
  1822  0008D8  6EF6               	movwf	tblptrl,c
  1823  0008DA  0E08               	movlw	high _dpowers
  1824  0008DC  20F4               	addwfc	prodh,w,c
  1825  0008DE  6EF7               	movwf	tblptrh,c
  1826  0008E0                     	if	0	;There are less than 3 active tblptr bytes
  1827  0008E0                     	endif
  1828  0008E0  0009               	tblrd		*+
  1829  0008E2  50F5               	movf	tablat,w,c
  1830  0008E4  5C2A               	subwf	sprintf@val,w,c
  1831  0008E6  0009               	tblrd		*+
  1832  0008E8  50F5               	movf	tablat,w,c
  1833  0008EA  582B               	subwfb	sprintf@val+1,w,c
  1834  0008EC  A0D8               	btfss	status,0,c
  1835  0008EE  D002               	goto	u1580
  1836                           
  1837                           ;doprnt.c: 1307: break;
  1838  0008F0  2A2C               	incf	sprintf@c,f,c
  1839  0008F2  D7EA               	goto	l1996
  1840  0008F4                     u1580:
  1841                           
  1842                           ;doprnt.c: 1422: {
  1843                           ;doprnt.c: 1438: if(flag & 0x03)
  1844  0008F4  C029  F025         	movff	sprintf@flag,??_sprintf
  1845  0008F8  0E03               	movlw	3
  1846  0008FA  1625               	andwf	??_sprintf,f,c
  1847  0008FC  B4D8               	btfsc	status,2,c
  1848  0008FE  D008               	goto	l329
  1849                           
  1850                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1851  000900  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1852  000904  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1853  000908  0E2D               	movlw	45
  1854  00090A  6EDF               	movwf	indf2,c
  1855  00090C  4A1F               	infsnz	sprintf@sp,f,c
  1856  00090E  2A20               	incf	sprintf@sp+1,f,c
  1857  000910                     l329:
  1858                           
  1859                           ;doprnt.c: 1469: }
  1860                           ;doprnt.c: 1472: prec = c;
  1861  000910  C02C  F026         	movff	sprintf@c,sprintf@prec
  1862                           
  1863                           ;doprnt.c: 1474: while(prec--) {
  1864  000914  D029               	goto	l330
  1865  000916                     
  1866                           ;doprnt.c: 1478: {
  1867                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1868  000916  5026               	movf	sprintf@prec,w,c
  1869  000918  0D02               	mullw	2
  1870  00091A  0E01               	movlw	low _dpowers
  1871  00091C  24F3               	addwf	prodl,w,c
  1872  00091E  6EF6               	movwf	tblptrl,c
  1873  000920  0E08               	movlw	high _dpowers
  1874  000922  20F4               	addwfc	prodh,w,c
  1875  000924  6EF7               	movwf	tblptrh,c
  1876  000926                     	if	0	;There are less than 3 active tblptr bytes
  1877  000926                     	endif
  1878  000926  0009               	tblrd		*+
  1879  000928  CFF5 F015          	movff	tablat,___lwdiv@divisor
  1880  00092C  000A               	tblrd		*-
  1881  00092E  CFF5 F016          	movff	tablat,___lwdiv@divisor+1
  1882  000932  C02A  F013         	movff	sprintf@val,___lwdiv@dividend
  1883  000936  C02B  F014         	movff	sprintf@val+1,___lwdiv@dividend+1
  1884  00093A  ECE0  F009         	call	___lwdiv	;wreg free
  1885  00093E  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
  1886  000942  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
  1887  000946  0E00               	movlw	0
  1888  000948  6E1D               	movwf	___lwmod@divisor+1,c
  1889  00094A  0E0A               	movlw	10
  1890  00094C  6E1C               	movwf	___lwmod@divisor,c
  1891  00094E  EC31  F00A         	call	___lwmod	;wreg free
  1892  000952  501A               	movf	?___lwmod,w,c
  1893  000954  0F30               	addlw	48
  1894  000956  6E2C               	movwf	sprintf@c,c
  1895                           
  1896                           ;doprnt.c: 1523: }
  1897                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1898  000958  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1899  00095C  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1900  000960  C02C  FFDF         	movff	sprintf@c,indf2
  1901  000964  4A1F               	infsnz	sprintf@sp,f,c
  1902  000966  2A20               	incf	sprintf@sp+1,f,c
  1903  000968                     l330:
  1904  000968  0626               	decf	sprintf@prec,f,c
  1905  00096A  2826               	incf	sprintf@prec,w,c
  1906  00096C  A4D8               	btfss	status,2,c
  1907  00096E  D7D3               	goto	l331
  1908  000970                     u1600:
  1909  000970  C021  FFF6         	movff	sprintf@f,tblptrl
  1910  000974  C022  FFF7         	movff	sprintf@f+1,tblptrh
  1911  000978  4A21               	infsnz	sprintf@f,f,c
  1912  00097A  2A22               	incf	sprintf@f+1,f,c
  1913  00097C                     	if	0	;tblptru may be non-zero
  1914  00097C                     	endif
  1915  00097C                     	if	0	;tblptru may be non-zero
  1916  00097C                     	endif
  1917  00097C  0008               	tblrd		*
  1918  00097E  CFF5 F02C          	movff	tablat,sprintf@c
  1919  000982  502C               	movf	sprintf@c,w,c
  1920  000984  A4D8               	btfss	status,2,c
  1921  000986  D752               	goto	l313
  1922  000988                     u1610:
  1923                           
  1924                           ;doprnt.c: 1538: *sp = 0;
  1925                           
  1926                           ;doprnt.c: 1525: }
  1927                           ;doprnt.c: 1533: }
  1928                           ;doprnt.c: 1535: alldone:
  1929  000988  C01F  FFD9         	movff	sprintf@sp,fsr2l
  1930  00098C  C020  FFDA         	movff	sprintf@sp+1,fsr2h
  1931  000990  0E00               	movlw	0
  1932  000992  6EDF               	movwf	indf2,c
  1933  000994  0012               	return	
  1934  000996                     __end_of_sprintf:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           postdec1	equ	0xFE5
  1945                           fsr1l	equ	0xFE1
  1946                           indf2	equ	0xFDF
  1947                           postinc2	equ	0xFDE
  1948                           postdec2	equ	0xFDD
  1949                           fsr2h	equ	0xFDA
  1950                           fsr2l	equ	0xFD9
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function ___lwmod *****************
  1954 ;; Defined at:
  1955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  dividend        2   25[COMRAM] unsigned int 
  1958 ;;  divisor         2   27[COMRAM] unsigned int 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  counter         1   29[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2   25[COMRAM] unsigned int 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1970 ;;      Params:         4       0       0       0       0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1973 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1974 ;;Total ram usage:        5 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    2
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_sprintf
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text8
  1985  001462                     __ptext8:
  1986                           	opt stack 0
  1987  001462                     ___lwmod:
  1988                           	opt stack 26
  1989                           
  1990                           ;incstack = 0
  1991  001462  501C               	movf	___lwmod@divisor,w,c
  1992  001464  101D               	iorwf	___lwmod@divisor+1,w,c
  1993  001466  B4D8               	btfsc	status,2,c
  1994  001468  D018               	goto	l753
  1995  00146A  0E01               	movlw	1
  1996  00146C  6E1E               	movwf	___lwmod@counter,c
  1997  00146E  D004               	goto	l748
  1998  001470  90D8               	bcf	status,0,c
  1999  001472  361C               	rlcf	___lwmod@divisor,f,c
  2000  001474  361D               	rlcf	___lwmod@divisor+1,f,c
  2001  001476  2A1E               	incf	___lwmod@counter,f,c
  2002  001478                     l748:
  2003  001478  AE1D               	btfss	___lwmod@divisor+1,7,c
  2004  00147A  D7FA               	goto	l749
  2005  00147C                     u1340:
  2006  00147C  501C               	movf	___lwmod@divisor,w,c
  2007  00147E  5C1A               	subwf	___lwmod@dividend,w,c
  2008  001480  501D               	movf	___lwmod@divisor+1,w,c
  2009  001482  581B               	subwfb	___lwmod@dividend+1,w,c
  2010  001484  A0D8               	btfss	status,0,c
  2011  001486  D004               	goto	l752
  2012  001488  501C               	movf	___lwmod@divisor,w,c
  2013  00148A  5E1A               	subwf	___lwmod@dividend,f,c
  2014  00148C  501D               	movf	___lwmod@divisor+1,w,c
  2015  00148E  5A1B               	subwfb	___lwmod@dividend+1,f,c
  2016  001490                     l752:
  2017  001490  90D8               	bcf	status,0,c
  2018  001492  321D               	rrcf	___lwmod@divisor+1,f,c
  2019  001494  321C               	rrcf	___lwmod@divisor,f,c
  2020  001496  2E1E               	decfsz	___lwmod@counter,f,c
  2021  001498  D7F1               	goto	u1340
  2022  00149A                     l753:
  2023  00149A  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  2024  00149E  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  2025  0014A2  0012               	return		;funcret
  2026  0014A4                     __end_of___lwmod:
  2027                           	opt stack 0
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           prodh	equ	0xFF4
  2033                           prodl	equ	0xFF3
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1l	equ	0xFE1
  2038                           indf2	equ	0xFDF
  2039                           postinc2	equ	0xFDE
  2040                           postdec2	equ	0xFDD
  2041                           fsr2h	equ	0xFDA
  2042                           fsr2l	equ	0xFD9
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function ___lwdiv *****************
  2046 ;; Defined at:
  2047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  dividend        2   18[COMRAM] unsigned int 
  2050 ;;  divisor         2   20[COMRAM] unsigned int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  quotient        2   22[COMRAM] unsigned int 
  2053 ;;  counter         1   24[COMRAM] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  2   18[COMRAM] unsigned int 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2063 ;;      Params:         4       0       0       0       0       0       0       0       0
  2064 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2066 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        7 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    2
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_sprintf
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text9
  2078  0013C0                     __ptext9:
  2079                           	opt stack 0
  2080  0013C0                     ___lwdiv:
  2081                           	opt stack 26
  2082                           
  2083                           ;incstack = 0
  2084  0013C0  0E00               	movlw	0
  2085  0013C2  6E18               	movwf	___lwdiv@quotient+1,c
  2086  0013C4  0E00               	movlw	0
  2087  0013C6  6E17               	movwf	___lwdiv@quotient,c
  2088  0013C8  5015               	movf	___lwdiv@divisor,w,c
  2089  0013CA  1016               	iorwf	___lwdiv@divisor+1,w,c
  2090  0013CC  B4D8               	btfsc	status,2,c
  2091  0013CE  D01C               	goto	l743
  2092  0013D0  0E01               	movlw	1
  2093  0013D2  6E19               	movwf	___lwdiv@counter,c
  2094  0013D4  D004               	goto	l738
  2095  0013D6  90D8               	bcf	status,0,c
  2096  0013D8  3615               	rlcf	___lwdiv@divisor,f,c
  2097  0013DA  3616               	rlcf	___lwdiv@divisor+1,f,c
  2098  0013DC  2A19               	incf	___lwdiv@counter,f,c
  2099  0013DE                     l738:
  2100  0013DE  AE16               	btfss	___lwdiv@divisor+1,7,c
  2101  0013E0  D7FA               	goto	l739
  2102  0013E2                     u1310:
  2103  0013E2  90D8               	bcf	status,0,c
  2104  0013E4  3617               	rlcf	___lwdiv@quotient,f,c
  2105  0013E6  3618               	rlcf	___lwdiv@quotient+1,f,c
  2106  0013E8  5015               	movf	___lwdiv@divisor,w,c
  2107  0013EA  5C13               	subwf	___lwdiv@dividend,w,c
  2108  0013EC  5016               	movf	___lwdiv@divisor+1,w,c
  2109  0013EE  5814               	subwfb	___lwdiv@dividend+1,w,c
  2110  0013F0  A0D8               	btfss	status,0,c
  2111  0013F2  D005               	goto	l742
  2112  0013F4  5015               	movf	___lwdiv@divisor,w,c
  2113  0013F6  5E13               	subwf	___lwdiv@dividend,f,c
  2114  0013F8  5016               	movf	___lwdiv@divisor+1,w,c
  2115  0013FA  5A14               	subwfb	___lwdiv@dividend+1,f,c
  2116  0013FC  8017               	bsf	___lwdiv@quotient,0,c
  2117  0013FE                     l742:
  2118  0013FE  90D8               	bcf	status,0,c
  2119  001400  3216               	rrcf	___lwdiv@divisor+1,f,c
  2120  001402  3215               	rrcf	___lwdiv@divisor,f,c
  2121  001404  2E19               	decfsz	___lwdiv@counter,f,c
  2122  001406  D7ED               	goto	u1310
  2123  001408                     l743:
  2124  001408  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
  2125  00140C  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2126  001410  0012               	return		;funcret
  2127  001412                     __end_of___lwdiv:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           prodh	equ	0xFF4
  2134                           prodl	equ	0xFF3
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           postdec1	equ	0xFE5
  2138                           fsr1l	equ	0xFE1
  2139                           indf2	equ	0xFDF
  2140                           postinc2	equ	0xFDE
  2141                           postdec2	equ	0xFDD
  2142                           fsr2h	equ	0xFDA
  2143                           fsr2l	equ	0xFD9
  2144                           status	equ	0xFD8
  2145                           
  2146 ;; *************** function _lcd_ubicarXY *****************
  2147 ;; Defined at:
  2148 ;;		line 313 in file "lcd.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  linea           1    wreg     unsigned char 
  2151 ;;  columna         1   66[COMRAM] unsigned char 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  linea           1   18[BANK0 ] unsigned char 
  2154 ;;  i               1   17[BANK0 ] unsigned char 
  2155 ;;  i               1   16[BANK0 ] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2165 ;;      Params:         1       0       0       0       0       0       0       0       0
  2166 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2167 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2168 ;;      Totals:         1       8       0       0       0       0       0       0       0
  2169 ;;Total ram usage:        9 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    8
  2172 ;; This function calls:
  2173 ;;		_lcd_orden
  2174 ;;		_lcd_origen
  2175 ;; This function is called by:
  2176 ;;		_lcdGUI
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text10
  2181  0010A2                     __ptext10:
  2182                           	opt stack 0
  2183  0010A2                     _lcd_ubicarXY:
  2184                           	opt stack 21
  2185                           
  2186                           ;incstack = 0
  2187                           ;lcd_ubicarXY@linea stored from wreg
  2188  0010A2  0100               	movlb	0	; () banked
  2189  0010A4  6F72               	movwf	lcd_ubicarXY@linea& (0+255),b
  2190                           
  2191                           ;lcd.c: 314: lcd_origen();
  2192  0010A6  ECD1  F00A         	call	_lcd_origen	;wreg free
  2193                           
  2194                           ;lcd.c: 315: if (linea==1){
  2195  0010AA  0100               	movlb	0	; () banked
  2196  0010AC  0572               	decf	lcd_ubicarXY@linea& (0+255),w,b
  2197  0010AE  A4D8               	btfss	status,2,c
  2198  0010B0  D00F               	goto	u2070
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;lcd.c: 316: for(char i=1; i<columna; i++){
  2202  0010B2  0E01               	movlw	1
  2203  0010B4  6F70               	movwf	lcd_ubicarXY@i& (0+255),b
  2204  0010B6  D008               	goto	l40
  2205  0010B8                     
  2206                           ; BSR set to: 0
  2207                           ;lcd.c: 317: lcd_orden(0x14);
  2208                           
  2209                           ; BSR set to: 0
  2210  0010B8  0E00               	movlw	0
  2211  0010BA  6E42               	movwf	lcd_orden@orden+1,c
  2212  0010BC  0E14               	movlw	20
  2213  0010BE  6E41               	movwf	lcd_orden@orden,c
  2214  0010C0  ECFA  F008         	call	_lcd_orden	;wreg free
  2215  0010C4  0100               	movlb	0	; () banked
  2216  0010C6  2B70               	incf	lcd_ubicarXY@i& (0+255),f,b
  2217  0010C8                     l40:
  2218                           
  2219                           ; BSR set to: 0
  2220                           
  2221                           ; BSR set to: 0
  2222  0010C8  5043               	movf	lcd_ubicarXY@columna,w,c
  2223  0010CA  5D70               	subwf	lcd_ubicarXY@i& (0+255),w,b
  2224  0010CC  A0D8               	btfss	status,0,c
  2225  0010CE  D7F4               	goto	l41
  2226  0010D0                     u2070:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;lcd.c: 318: }
  2230                           ;lcd.c: 319: }
  2231                           ;lcd.c: 320: if(linea==2){
  2232                           
  2233                           ; BSR set to: 0
  2234                           
  2235                           ; BSR set to: 0
  2236  0010D0  0E02               	movlw	2
  2237  0010D2  1972               	xorwf	lcd_ubicarXY@linea& (0+255),w,b
  2238  0010D4  A4D8               	btfss	status,2,c
  2239  0010D6  0012               	return	
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;lcd.c: 321: for (char i=1;i<(columna+40);i++){
  2243  0010D8  0E01               	movlw	1
  2244  0010DA  6F71               	movwf	lcd_ubicarXY@i_155& (0+255),b
  2245  0010DC  D008               	goto	l44
  2246  0010DE                     
  2247                           ; BSR set to: 0
  2248                           ;lcd.c: 322: lcd_orden(0x14);
  2249                           
  2250                           ; BSR set to: 0
  2251  0010DE  0E00               	movlw	0
  2252  0010E0  6E42               	movwf	lcd_orden@orden+1,c
  2253  0010E2  0E14               	movlw	20
  2254  0010E4  6E41               	movwf	lcd_orden@orden,c
  2255  0010E6  ECFA  F008         	call	_lcd_orden	;wreg free
  2256  0010EA  0100               	movlb	0	; () banked
  2257  0010EC  2B71               	incf	lcd_ubicarXY@i_155& (0+255),f,b
  2258  0010EE                     l44:
  2259                           
  2260                           ; BSR set to: 0
  2261                           
  2262                           ; BSR set to: 0
  2263  0010EE  5043               	movf	lcd_ubicarXY@columna,w,c
  2264  0010F0  6F6B               	movwf	??_lcd_ubicarXY& (0+255),b
  2265  0010F2  6B6C               	clrf	(??_lcd_ubicarXY+1)& (0+255),b
  2266  0010F4  0E28               	movlw	40
  2267  0010F6  276B               	addwf	??_lcd_ubicarXY& (0+255),f,b
  2268  0010F8  0E00               	movlw	0
  2269  0010FA  236C               	addwfc	(??_lcd_ubicarXY+1)& (0+255),f,b
  2270  0010FC  5171               	movf	lcd_ubicarXY@i_155& (0+255),w,b
  2271  0010FE  6F6D               	movwf	(??_lcd_ubicarXY+2)& (0+255),b
  2272  001100  6B6E               	clrf	(??_lcd_ubicarXY+3)& (0+255),b
  2273  001102  516B               	movf	??_lcd_ubicarXY& (0+255),w,b
  2274  001104  5D6D               	subwf	(??_lcd_ubicarXY+2)& (0+255),w,b
  2275  001106  516E               	movf	(??_lcd_ubicarXY+3)& (0+255),w,b
  2276  001108  0A80               	xorlw	128
  2277  00110A  6F6F               	movwf	(??_lcd_ubicarXY+4)& (0+255),b
  2278  00110C  516C               	movf	(??_lcd_ubicarXY+1)& (0+255),w,b
  2279  00110E  0A80               	xorlw	128
  2280  001110  596F               	subwfb	(??_lcd_ubicarXY+4)& (0+255),w,b
  2281  001112  B0D8               	btfsc	status,0,c
  2282  001114  0012               	return	
  2283  001116  D7E3               	goto	l45
  2284  001118                     __end_of_lcd_ubicarXY:
  2285                           	opt stack 0
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           postinc2	equ	0xFDE
  2298                           postdec2	equ	0xFDD
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           
  2303 ;; *************** function _lcd_origen *****************
  2304 ;; Defined at:
  2305 ;;		line 308 in file "lcd.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    7
  2326 ;; This function calls:
  2327 ;;		_lcd_orden
  2328 ;;		_wait_in_ms
  2329 ;; This function is called by:
  2330 ;;		_lcd_ubicarXY
  2331 ;;		_lcdGUI
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text11
  2336  0015A2                     __ptext11:
  2337                           	opt stack 0
  2338  0015A2                     _lcd_origen:
  2339                           	opt stack 21
  2340                           
  2341                           ;lcd.c: 309: lcd_orden(0x02);
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;incstack = 0
  2345  0015A2  0E00               	movlw	0
  2346  0015A4  6E42               	movwf	lcd_orden@orden+1,c
  2347  0015A6  0E02               	movlw	2
  2348  0015A8  6E41               	movwf	lcd_orden@orden,c
  2349  0015AA  ECFA  F008         	call	_lcd_orden	;wreg free
  2350                           
  2351                           ;lcd.c: 310: wait_in_ms(4);
  2352  0015AE  0E00               	movlw	0
  2353  0015B0  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  2354  0015B2  0E04               	movlw	4
  2355  0015B4  6E3D               	movwf	wait_in_ms@time_in_ms,c
  2356  0015B6  EC99  F006         	call	_wait_in_ms	;wreg free
  2357  0015BA  0012               	return		;funcret
  2358  0015BC                     __end_of_lcd_origen:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           prodh	equ	0xFF4
  2365                           prodl	equ	0xFF3
  2366                           postinc0	equ	0xFEE
  2367                           wreg	equ	0xFE8
  2368                           postdec1	equ	0xFE5
  2369                           fsr1l	equ	0xFE1
  2370                           indf2	equ	0xFDF
  2371                           postinc2	equ	0xFDE
  2372                           postdec2	equ	0xFDD
  2373                           fsr2h	equ	0xFDA
  2374                           fsr2l	equ	0xFD9
  2375                           status	equ	0xFD8
  2376                           
  2377 ;; *************** function _lcd_orden *****************
  2378 ;; Defined at:
  2379 ;;		line 277 in file "lcd.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  orden           2   64[COMRAM] unsigned int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2393 ;;      Params:         2       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2396 ;;      Totals:         2       5       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        7 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    6
  2400 ;; This function calls:
  2401 ;;		_lcd_pulso
  2402 ;; This function is called by:
  2403 ;;		_lcd_iniciar
  2404 ;;		_lcd_origen
  2405 ;;		_lcd_ubicarXY
  2406 ;;		_lcd_limpiar
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text12
  2411  0011F4                     __ptext12:
  2412                           	opt stack 0
  2413  0011F4                     _lcd_orden:
  2414                           	opt stack 23
  2415                           
  2416                           ;lcd.c: 278: PORTDbits.RD1=0;
  2417                           
  2418                           ;incstack = 0
  2419  0011F4  9283               	bcf	3971,1,c	;volatile
  2420                           
  2421                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  2422  0011F6  CF83 F066          	movff	3971,??_lcd_orden	;volatile
  2423  0011FA  0E0F               	movlw	15
  2424  0011FC  0100               	movlb	0	; () banked
  2425  0011FE  1766               	andwf	??_lcd_orden& (0+255),f,b
  2426  001200  C041  F067         	movff	lcd_orden@orden,??_lcd_orden+1
  2427  001204  C042  F068         	movff	lcd_orden@orden+1,??_lcd_orden+2
  2428  001208  0E04               	movlw	4
  2429  00120A  6F69               	movwf	(??_lcd_orden+3)& (0+255),b
  2430  00120C                     u2035:
  2431  00120C  90D8               	bcf	status,0,c
  2432  00120E  3368               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  2433  001210  3367               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  2434  001212  2F69               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  2435  001214  D7FB               	goto	u2035
  2436  001216  0E0F               	movlw	15
  2437  001218  1767               	andwf	(??_lcd_orden+1)& (0+255),f,b
  2438  00121A  3883               	swapf	3971,w,c	;volatile
  2439  00121C  0B0F               	andlw	15
  2440  00121E  0B0F               	andlw	15
  2441  001220  090F               	iorlw	15
  2442  001222  1567               	andwf	(??_lcd_orden+1)& (0+255),w,b
  2443  001224  6F6A               	movwf	(??_lcd_orden+4)& (0+255),b
  2444  001226  396A               	swapf	(??_lcd_orden+4)& (0+255),w,b
  2445  001228  0BF0               	andlw	240
  2446  00122A  1166               	iorwf	??_lcd_orden& (0+255),w,b
  2447  00122C  6E83               	movwf	3971,c	;volatile
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;lcd.c: 281: lcd_pulso();
  2451  00122E  ECC2  F00A         	call	_lcd_pulso	;wreg free
  2452                           
  2453                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  2454  001232  CF83 F066          	movff	3971,??_lcd_orden	;volatile
  2455  001236  0E0F               	movlw	15
  2456  001238  0100               	movlb	0	; () banked
  2457  00123A  1766               	andwf	??_lcd_orden& (0+255),f,b
  2458  00123C  C041  F067         	movff	lcd_orden@orden,??_lcd_orden+1
  2459  001240  0E0F               	movlw	15
  2460  001242  1767               	andwf	(??_lcd_orden+1)& (0+255),f,b
  2461  001244  3883               	swapf	3971,w,c	;volatile
  2462  001246  0B0F               	andlw	15
  2463  001248  0B0F               	andlw	15
  2464  00124A  090F               	iorlw	15
  2465  00124C  1567               	andwf	(??_lcd_orden+1)& (0+255),w,b
  2466  00124E  6F68               	movwf	(??_lcd_orden+2)& (0+255),b
  2467  001250  3968               	swapf	(??_lcd_orden+2)& (0+255),w,b
  2468  001252  0BF0               	andlw	240
  2469  001254  1166               	iorwf	??_lcd_orden& (0+255),w,b
  2470  001256  6E83               	movwf	3971,c	;volatile
  2471                           
  2472                           ;lcd.c: 283: lcd_pulso();
  2473  001258  ECC2  F00A         	call	_lcd_pulso	;wreg free
  2474  00125C  0012               	return		;funcret
  2475  00125E                     __end_of_lcd_orden:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1l	equ	0xFE1
  2487                           indf2	equ	0xFDF
  2488                           postinc2	equ	0xFDE
  2489                           postdec2	equ	0xFDD
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _lcd_texto *****************
  2495 ;; Defined at:
  2496 ;;		line 296 in file "lcd.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  cadena          2   66[COMRAM] PTR unsigned char 
  2499 ;;		 -> lcdGUI@lvl(20), lcdGUI@str(20), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2511 ;;      Params:         2       0       0       0       0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2513 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2514 ;;      Totals:         2       1       0       0       0       0       0       0       0
  2515 ;;Total ram usage:        3 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    7
  2518 ;; This function calls:
  2519 ;;		_lcd_caracter
  2520 ;; This function is called by:
  2521 ;;		_lcdGUI
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text13
  2526  001556                     __ptext13:
  2527                           	opt stack 0
  2528  001556                     _lcd_texto:
  2529                           	opt stack 22
  2530                           
  2531                           ;lcd.c: 297: while(*cadena != 0x00){
  2532                           
  2533                           ;incstack = 0
  2534  001556  D00E               	goto	l27
  2535  001558                     
  2536                           ;lcd.c: 298: lcd_caracter(*cadena);
  2537  001558  C043  FFD9         	movff	lcd_texto@cadena,fsr2l
  2538  00155C  C044  FFDA         	movff	lcd_texto@cadena+1,fsr2h
  2539  001560  50DF               	movf	indf2,w,c
  2540  001562  0100               	movlb	0	; () banked
  2541  001564  6F6B               	movwf	??_lcd_texto& (0+255),b
  2542  001566  516B               	movf	??_lcd_texto& (0+255),w,b
  2543  001568  6E41               	movwf	lcd_caracter@caracter,c
  2544  00156A  6A42               	clrf	lcd_caracter@caracter+1,c
  2545  00156C  ECC4  F008         	call	_lcd_caracter	;wreg free
  2546                           
  2547                           ;lcd.c: 299: cadena++;
  2548  001570  4A43               	infsnz	lcd_texto@cadena,f,c
  2549  001572  2A44               	incf	lcd_texto@cadena+1,f,c
  2550  001574                     l27:
  2551  001574  C043  FFD9         	movff	lcd_texto@cadena,fsr2l
  2552  001578  C044  FFDA         	movff	lcd_texto@cadena+1,fsr2h
  2553  00157C  50DF               	movf	indf2,w,c
  2554  00157E  B4D8               	btfsc	status,2,c
  2555  001580  0012               	return	
  2556  001582  D7EA               	goto	l28
  2557  001584                     __end_of_lcd_texto:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1l	equ	0xFE1
  2569                           indf2	equ	0xFDF
  2570                           postinc2	equ	0xFDE
  2571                           postdec2	equ	0xFDD
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _lcd_caracter *****************
  2577 ;; Defined at:
  2578 ;;		line 286 in file "lcd.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  caracter        2   64[COMRAM] unsigned int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2592 ;;      Params:         2       0       0       0       0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2594 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2595 ;;      Totals:         2       5       0       0       0       0       0       0       0
  2596 ;;Total ram usage:        7 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    6
  2599 ;; This function calls:
  2600 ;;		_lcd_pulso
  2601 ;; This function is called by:
  2602 ;;		_lcd_texto
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text14
  2607  001188                     __ptext14:
  2608                           	opt stack 0
  2609  001188                     _lcd_caracter:
  2610                           	opt stack 22
  2611                           
  2612                           ;lcd.c: 287: PORTDbits.RD1=1;
  2613                           
  2614                           ;incstack = 0
  2615  001188  8283               	bsf	3971,1,c	;volatile
  2616                           
  2617                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
  2618  00118A  CF83 F066          	movff	3971,??_lcd_caracter	;volatile
  2619  00118E  0E0F               	movlw	15
  2620  001190  0100               	movlb	0	; () banked
  2621  001192  1766               	andwf	??_lcd_caracter& (0+255),f,b
  2622  001194  C041  F067         	movff	lcd_caracter@caracter,??_lcd_caracter+1
  2623  001198  C042  F068         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
  2624  00119C  0E04               	movlw	4
  2625  00119E  6F69               	movwf	(??_lcd_caracter+3)& (0+255),b
  2626  0011A0                     u2045:
  2627  0011A0  90D8               	bcf	status,0,c
  2628  0011A2  3368               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
  2629  0011A4  3367               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
  2630  0011A6  2F69               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
  2631  0011A8  D7FB               	goto	u2045
  2632  0011AA  0E0F               	movlw	15
  2633  0011AC  1767               	andwf	(??_lcd_caracter+1)& (0+255),f,b
  2634  0011AE  3883               	swapf	3971,w,c	;volatile
  2635  0011B0  0B0F               	andlw	15
  2636  0011B2  0B0F               	andlw	15
  2637  0011B4  090F               	iorlw	15
  2638  0011B6  1567               	andwf	(??_lcd_caracter+1)& (0+255),w,b
  2639  0011B8  6F6A               	movwf	(??_lcd_caracter+4)& (0+255),b
  2640  0011BA  396A               	swapf	(??_lcd_caracter+4)& (0+255),w,b
  2641  0011BC  0BF0               	andlw	240
  2642  0011BE  1166               	iorwf	??_lcd_caracter& (0+255),w,b
  2643  0011C0  6E83               	movwf	3971,c	;volatile
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;lcd.c: 290: lcd_pulso();
  2647  0011C2  ECC2  F00A         	call	_lcd_pulso	;wreg free
  2648                           
  2649                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
  2650  0011C6  CF83 F066          	movff	3971,??_lcd_caracter	;volatile
  2651  0011CA  0E0F               	movlw	15
  2652  0011CC  0100               	movlb	0	; () banked
  2653  0011CE  1766               	andwf	??_lcd_caracter& (0+255),f,b
  2654  0011D0  C041  F067         	movff	lcd_caracter@caracter,??_lcd_caracter+1
  2655  0011D4  0E0F               	movlw	15
  2656  0011D6  1767               	andwf	(??_lcd_caracter+1)& (0+255),f,b
  2657  0011D8  3883               	swapf	3971,w,c	;volatile
  2658  0011DA  0B0F               	andlw	15
  2659  0011DC  0B0F               	andlw	15
  2660  0011DE  090F               	iorlw	15
  2661  0011E0  1567               	andwf	(??_lcd_caracter+1)& (0+255),w,b
  2662  0011E2  6F68               	movwf	(??_lcd_caracter+2)& (0+255),b
  2663  0011E4  3968               	swapf	(??_lcd_caracter+2)& (0+255),w,b
  2664  0011E6  0BF0               	andlw	240
  2665  0011E8  1166               	iorwf	??_lcd_caracter& (0+255),w,b
  2666  0011EA  6E83               	movwf	3971,c	;volatile
  2667                           
  2668                           ;lcd.c: 292: lcd_pulso();
  2669  0011EC  ECC2  F00A         	call	_lcd_pulso	;wreg free
  2670                           
  2671                           ;lcd.c: 293: PORTDbits.RD1=0;
  2672  0011F0  9283               	bcf	3971,1,c	;volatile
  2673  0011F2  0012               	return		;funcret
  2674  0011F4                     __end_of_lcd_caracter:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           prodh	equ	0xFF4
  2681                           prodl	equ	0xFF3
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           postdec1	equ	0xFE5
  2685                           fsr1l	equ	0xFE1
  2686                           indf2	equ	0xFDF
  2687                           postinc2	equ	0xFDE
  2688                           postdec2	equ	0xFDD
  2689                           fsr2h	equ	0xFDA
  2690                           fsr2l	equ	0xFD9
  2691                           status	equ	0xFD8
  2692                           
  2693 ;; *************** function _lcd_pulso *****************
  2694 ;; Defined at:
  2695 ;;		line 270 in file "lcd.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_wait_in_ms
  2718 ;; This function is called by:
  2719 ;;		_lcd_iniciar
  2720 ;;		_lcd_orden
  2721 ;;		_lcd_caracter
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text15
  2726  001584                     __ptext15:
  2727                           	opt stack 0
  2728  001584                     _lcd_pulso:
  2729                           	opt stack 24
  2730                           
  2731                           ;lcd.c: 271: PORTDbits.RD3=1;
  2732                           
  2733                           ;incstack = 0
  2734  001584  8683               	bsf	3971,3,c	;volatile
  2735                           
  2736                           ;lcd.c: 272: wait_in_ms(2);
  2737  001586  0E00               	movlw	0
  2738  001588  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  2739  00158A  0E02               	movlw	2
  2740  00158C  6E3D               	movwf	wait_in_ms@time_in_ms,c
  2741  00158E  EC99  F006         	call	_wait_in_ms	;wreg free
  2742                           
  2743                           ;lcd.c: 273: PORTDbits.RD3=0;
  2744  001592  9683               	bcf	3971,3,c	;volatile
  2745                           
  2746                           ;lcd.c: 274: wait_in_ms(2);
  2747  001594  0E00               	movlw	0
  2748  001596  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  2749  001598  0E02               	movlw	2
  2750  00159A  6E3D               	movwf	wait_in_ms@time_in_ms,c
  2751  00159C  EC99  F006         	call	_wait_in_ms	;wreg free
  2752  0015A0  0012               	return		;funcret
  2753  0015A2                     __end_of_lcd_pulso:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodh	equ	0xFF4
  2760                           prodl	equ	0xFF3
  2761                           postinc0	equ	0xFEE
  2762                           wreg	equ	0xFE8
  2763                           postdec1	equ	0xFE5
  2764                           fsr1l	equ	0xFE1
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _hizoAlgo *****************
  2773 ;; Defined at:
  2774 ;;		line 179 in file "funciones.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text16
  2803  0014A4                     __ptext16:
  2804                           	opt stack 0
  2805  0014A4                     _hizoAlgo:
  2806                           	opt stack 28
  2807                           
  2808                           ;funciones.c: 180: if(!presionoBoton){
  2809                           
  2810                           ;incstack = 0
  2811  0014A4  504A               	movf	_presionoBoton,w,c
  2812  0014A6  A4D8               	btfss	status,2,c
  2813  0014A8  0012               	return	
  2814                           
  2815                           ;funciones.c: 181: (nivel<5) && (puntuacion-=10);
  2816  0014AA  0E05               	movlw	5
  2817  0014AC  6049               	cpfslt	_nivel,c
  2818  0014AE  D005               	goto	l164
  2819  0014B0  0100               	movlb	0	; () banked
  2820  0014B2  0EF6               	movlw	246
  2821  0014B4  279D               	addwf	_puntuacion& (0+255),f,b
  2822  0014B6  0EFF               	movlw	255
  2823  0014B8  239E               	addwfc	(_puntuacion+1)& (0+255),f,b
  2824  0014BA                     l164:
  2825                           
  2826                           ;funciones.c: 182: (nivel>=5&&nivel<8) && (puntuacion-=20);
  2827  0014BA  0E04               	movlw	4
  2828  0014BC  6449               	cpfsgt	_nivel,c
  2829  0014BE  D008               	goto	l166
  2830  0014C0  0E08               	movlw	8
  2831  0014C2  6049               	cpfslt	_nivel,c
  2832  0014C4  D005               	goto	l166
  2833  0014C6  0100               	movlb	0	; () banked
  2834  0014C8  0EEC               	movlw	236
  2835  0014CA  279D               	addwf	_puntuacion& (0+255),f,b
  2836  0014CC  0EFF               	movlw	255
  2837  0014CE  239E               	addwfc	(_puntuacion+1)& (0+255),f,b
  2838  0014D0                     l166:
  2839                           
  2840                           ;funciones.c: 183: (nivel==8) && (puntuacion-=30);
  2841  0014D0  0E08               	movlw	8
  2842  0014D2  1849               	xorwf	_nivel,w,c
  2843  0014D4  A4D8               	btfss	status,2,c
  2844  0014D6  0012               	return	
  2845  0014D8  0100               	movlb	0	; () banked
  2846  0014DA  0EE2               	movlw	226
  2847  0014DC  279D               	addwf	_puntuacion& (0+255),f,b
  2848  0014DE  0EFF               	movlw	255
  2849  0014E0  239E               	addwfc	(_puntuacion+1)& (0+255),f,b
  2850                           
  2851                           ; BSR set to: 0
  2852  0014E2  0012               	return	
  2853  0014E4                     __end_of_hizoAlgo:
  2854                           	opt stack 0
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           postdec1	equ	0xFE5
  2864                           fsr1l	equ	0xFE1
  2865                           indf2	equ	0xFDF
  2866                           postinc2	equ	0xFDE
  2867                           postdec2	equ	0xFDD
  2868                           fsr2h	equ	0xFDA
  2869                           fsr2l	equ	0xFD9
  2870                           status	equ	0xFD8
  2871                           
  2872 ;; *************** function _configBoard *****************
  2873 ;; Defined at:
  2874 ;;		line 11 in file "config.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2892 ;;Total ram usage:        0 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    2
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text17
  2903  00131A                     __ptext17:
  2904                           	opt stack 0
  2905  00131A                     _configBoard:
  2906                           	opt stack 28
  2907                           
  2908                           ;config.c: 15: INTCONbits.GIE = 1;
  2909                           
  2910                           ;incstack = 0
  2911  00131A  8EF2               	bsf	intcon,7,c	;volatile
  2912                           
  2913                           ;config.c: 16: INTCONbits.PEIE = 1;
  2914  00131C  8CF2               	bsf	intcon,6,c	;volatile
  2915                           
  2916                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  2917  00131E  8ED5               	bsf	4053,7,c	;volatile
  2918                           
  2919                           ;config.c: 26: T08BIT = 1;
  2920  001320  8CD5               	bsf	4053,6,c	;volatile
  2921                           
  2922                           ;config.c: 27: T0CONbits.T0CS = 0;
  2923  001322  9AD5               	bcf	4053,5,c	;volatile
  2924                           
  2925                           ;config.c: 29: T0CONbits.PSA = 0;
  2926  001324  96D5               	bcf	4053,3,c	;volatile
  2927                           
  2928                           ;config.c: 30: T0CONbits.T0PS = 100;
  2929  001326  50D5               	movf	4053,w,c	;volatile
  2930  001328  0BF8               	andlw	-8
  2931  00132A  0904               	iorlw	4
  2932  00132C  6ED5               	movwf	4053,c	;volatile
  2933                           
  2934                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  2935  00132E  94F2               	bcf	intcon,2,c	;volatile
  2936                           
  2937                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  2938  001330  80C1               	bsf	4033,0,c	;volatile
  2939  001332  82C1               	bsf	4033,1,c	;volatile
  2940  001334  84C1               	bsf	4033,2,c	;volatile
  2941  001336  86C1               	bsf	4033,3,c	;volatile
  2942                           
  2943                           ;config.c: 36: TRISA=0b00000000;
  2944  001338  0E00               	movlw	0
  2945  00133A  6E92               	movwf	3986,c	;volatile
  2946                           
  2947                           ;config.c: 37: TRISB=0b00000000;
  2948  00133C  0E00               	movlw	0
  2949  00133E  6E93               	movwf	3987,c	;volatile
  2950                           
  2951                           ;config.c: 42: TRISBbits.RB0=1;
  2952  001340  8093               	bsf	3987,0,c	;volatile
  2953                           
  2954                           ;config.c: 43: TRISBbits.RB1=1;
  2955  001342  8293               	bsf	3987,1,c	;volatile
  2956                           
  2957                           ;config.c: 44: TRISBbits.RB2=1;
  2958  001344  8493               	bsf	3987,2,c	;volatile
  2959                           
  2960                           ;config.c: 45: TRISBbits.RB4=1;
  2961  001346  8893               	bsf	3987,4,c	;volatile
  2962                           
  2963                           ;config.c: 48: INTCONbits.RBIE=1;
  2964  001348  86F2               	bsf	intcon,3,c	;volatile
  2965                           
  2966                           ;config.c: 49: INTCONbits.RBIF=0;
  2967  00134A  90F2               	bcf	intcon,0,c	;volatile
  2968                           
  2969                           ;config.c: 51: INTCONbits.INT0E=1;
  2970  00134C  88F2               	bsf	intcon,4,c	;volatile
  2971                           
  2972                           ;config.c: 52: INTCON3bits.INT1E=1;
  2973  00134E  86F0               	bsf	intcon3,3,c	;volatile
  2974                           
  2975                           ;config.c: 53: INTCON3bits.INT2E=1;
  2976  001350  88F0               	bsf	intcon3,4,c	;volatile
  2977                           
  2978                           ;config.c: 55: INTCONbits.INT0F=0;
  2979  001352  92F2               	bcf	intcon,1,c	;volatile
  2980                           
  2981                           ;config.c: 56: INTCON3bits.INT1F=0;
  2982  001354  90F0               	bcf	intcon3,0,c	;volatile
  2983                           
  2984                           ;config.c: 57: INTCON3bits.INT2F=0;
  2985  001356  92F0               	bcf	intcon3,1,c	;volatile
  2986                           
  2987                           ;config.c: 60: INTCON2bits.INTEDG0 =1;
  2988  001358  8CF1               	bsf	intcon2,6,c	;volatile
  2989                           
  2990                           ;config.c: 61: INTCON2bits.INTEDG1 = 1;
  2991  00135A  8AF1               	bsf	intcon2,5,c	;volatile
  2992                           
  2993                           ;config.c: 62: INTCON2bits.INTEDG2 = 1;
  2994  00135C  88F1               	bsf	intcon2,4,c	;volatile
  2995                           
  2996                           ;config.c: 63: INTCON2bits.RBIP=1;
  2997  00135E  80F1               	bsf	intcon2,0,c	;volatile
  2998                           
  2999                           ;config.c: 66: ADCON0 = 0b00000111;
  3000  001360  0E07               	movlw	7
  3001  001362  6EC2               	movwf	4034,c	;volatile
  3002                           
  3003                           ;config.c: 68: TRISD=0;
  3004  001364  0E00               	movlw	0
  3005  001366  6E95               	movwf	3989,c	;volatile
  3006                           
  3007                           ;config.c: 69: PORTA=0;
  3008  001368  0E00               	movlw	0
  3009  00136A  6E80               	movwf	3968,c	;volatile
  3010  00136C  0012               	return		;funcret
  3011  00136E                     __end_of_configBoard:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           intcon2	equ	0xFF1
  3021                           intcon3	equ	0xFF0
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           postdec1	equ	0xFE5
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _celebracion *****************
  3034 ;; Defined at:
  3035 ;;		line 223 in file "funciones.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    5
  3056 ;; This function calls:
  3057 ;;		_wait_in_ms
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text18
  3064  00125E                     __ptext18:
  3065                           	opt stack 0
  3066  00125E                     _celebracion:
  3067                           	opt stack 25
  3068                           
  3069                           ;funciones.c: 224: PORTAbits.RA1=1;
  3070                           
  3071                           ;incstack = 0
  3072  00125E  8280               	bsf	3968,1,c	;volatile
  3073                           
  3074                           ;funciones.c: 225: wait_in_ms(500);
  3075  001260  0E01               	movlw	1
  3076  001262  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3077  001264  0EF4               	movlw	244
  3078  001266  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3079  001268  EC99  F006         	call	_wait_in_ms	;wreg free
  3080                           
  3081                           ;funciones.c: 226: PORTAbits.RA2=1;
  3082  00126C  8480               	bsf	3968,2,c	;volatile
  3083                           
  3084                           ;funciones.c: 227: wait_in_ms(500);
  3085  00126E  0E01               	movlw	1
  3086  001270  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3087  001272  0EF4               	movlw	244
  3088  001274  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3089  001276  EC99  F006         	call	_wait_in_ms	;wreg free
  3090                           
  3091                           ;funciones.c: 228: PORTAbits.RA3=1;
  3092  00127A  8680               	bsf	3968,3,c	;volatile
  3093                           
  3094                           ;funciones.c: 229: wait_in_ms(500);
  3095  00127C  0E01               	movlw	1
  3096  00127E  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3097  001280  0EF4               	movlw	244
  3098  001282  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3099  001284  EC99  F006         	call	_wait_in_ms	;wreg free
  3100                           
  3101                           ;funciones.c: 230: PORTAbits.RA4=1;
  3102  001288  8880               	bsf	3968,4,c	;volatile
  3103                           
  3104                           ;funciones.c: 231: wait_in_ms(500);
  3105  00128A  0E01               	movlw	1
  3106  00128C  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3107  00128E  0EF4               	movlw	244
  3108  001290  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3109  001292  EC99  F006         	call	_wait_in_ms	;wreg free
  3110                           
  3111                           ;funciones.c: 232: PORTAbits.RA1=0;
  3112  001296  9280               	bcf	3968,1,c	;volatile
  3113                           
  3114                           ;funciones.c: 233: wait_in_ms(500);
  3115  001298  0E01               	movlw	1
  3116  00129A  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3117  00129C  0EF4               	movlw	244
  3118  00129E  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3119  0012A0  EC99  F006         	call	_wait_in_ms	;wreg free
  3120                           
  3121                           ;funciones.c: 234: PORTAbits.RA2=0;
  3122  0012A4  9480               	bcf	3968,2,c	;volatile
  3123                           
  3124                           ;funciones.c: 235: wait_in_ms(500);
  3125  0012A6  0E01               	movlw	1
  3126  0012A8  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3127  0012AA  0EF4               	movlw	244
  3128  0012AC  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3129  0012AE  EC99  F006         	call	_wait_in_ms	;wreg free
  3130                           
  3131                           ;funciones.c: 236: PORTAbits.RA3=0;
  3132  0012B2  9680               	bcf	3968,3,c	;volatile
  3133                           
  3134                           ;funciones.c: 237: wait_in_ms(500);
  3135  0012B4  0E01               	movlw	1
  3136  0012B6  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3137  0012B8  0EF4               	movlw	244
  3138  0012BA  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3139  0012BC  EC99  F006         	call	_wait_in_ms	;wreg free
  3140                           
  3141                           ;funciones.c: 238: PORTAbits.RA4=0;
  3142  0012C0  9880               	bcf	3968,4,c	;volatile
  3143  0012C2  0012               	return		;funcret
  3144  0012C4                     __end_of_celebracion:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           intcon2	equ	0xFF1
  3154                           intcon3	equ	0xFF0
  3155                           postinc0	equ	0xFEE
  3156                           wreg	equ	0xFE8
  3157                           postdec1	equ	0xFE5
  3158                           fsr1l	equ	0xFE1
  3159                           indf2	equ	0xFDF
  3160                           postinc2	equ	0xFDE
  3161                           postdec2	equ	0xFDD
  3162                           fsr2h	equ	0xFDA
  3163                           fsr2l	equ	0xFD9
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _cambioDeNivel *****************
  3167 ;; Defined at:
  3168 ;;		line 141 in file "funciones.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    2
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text19
  3197  001028                     __ptext19:
  3198                           	opt stack 0
  3199  001028                     _cambioDeNivel:
  3200                           	opt stack 28
  3201                           
  3202                           ;funciones.c: 142: if(numTopos>7 && nivel==1){
  3203                           
  3204                           ;incstack = 0
  3205  001028  0E07               	movlw	7
  3206  00102A  644B               	cpfsgt	_numTopos,c
  3207  00102C  D003               	goto	l144
  3208  00102E  0449               	decf	_nivel,w,c
  3209  001030  B4D8               	btfsc	status,2,c
  3210  001032  D02A               	goto	u810
  3211  001034                     l144:
  3212                           
  3213                           ;funciones.c: 146: else if(numTopos>8&&nivel==2){
  3214  001034  0E08               	movlw	8
  3215  001036  644B               	cpfsgt	_numTopos,c
  3216  001038  D004               	goto	l146
  3217  00103A  0E02               	movlw	2
  3218  00103C  1849               	xorwf	_nivel,w,c
  3219  00103E  B4D8               	btfsc	status,2,c
  3220  001040  D023               	goto	u810
  3221  001042                     l146:
  3222                           
  3223                           ;funciones.c: 150: else if (numTopos>10&&nivel==3){
  3224  001042  0E0A               	movlw	10
  3225  001044  644B               	cpfsgt	_numTopos,c
  3226  001046  D004               	goto	l148
  3227  001048  0E03               	movlw	3
  3228  00104A  1849               	xorwf	_nivel,w,c
  3229  00104C  B4D8               	btfsc	status,2,c
  3230  00104E  D01C               	goto	u810
  3231  001050                     l148:
  3232                           
  3233                           ;funciones.c: 154: else if (numTopos>12&&nivel==4){
  3234  001050  0E0C               	movlw	12
  3235  001052  644B               	cpfsgt	_numTopos,c
  3236  001054  D004               	goto	l150
  3237  001056  0E04               	movlw	4
  3238  001058  1849               	xorwf	_nivel,w,c
  3239  00105A  B4D8               	btfsc	status,2,c
  3240  00105C  D015               	goto	u810
  3241  00105E                     l150:
  3242                           
  3243                           ;funciones.c: 158: else if (numTopos>8&&nivel==5){
  3244  00105E  0E08               	movlw	8
  3245  001060  644B               	cpfsgt	_numTopos,c
  3246  001062  D004               	goto	l152
  3247  001064  0E05               	movlw	5
  3248  001066  1849               	xorwf	_nivel,w,c
  3249  001068  B4D8               	btfsc	status,2,c
  3250  00106A  D00E               	goto	u810
  3251  00106C                     l152:
  3252                           
  3253                           ;funciones.c: 162: else if (numTopos>10&&nivel==6){
  3254  00106C  0E0A               	movlw	10
  3255  00106E  644B               	cpfsgt	_numTopos,c
  3256  001070  D004               	goto	l154
  3257  001072  0E06               	movlw	6
  3258  001074  1849               	xorwf	_nivel,w,c
  3259  001076  B4D8               	btfsc	status,2,c
  3260  001078  D007               	goto	u810
  3261  00107A                     l154:
  3262                           
  3263                           ;funciones.c: 166: else if (numTopos>12&&nivel==7){
  3264  00107A  0E0C               	movlw	12
  3265  00107C  644B               	cpfsgt	_numTopos,c
  3266  00107E  D007               	goto	l156
  3267  001080  0E07               	movlw	7
  3268  001082  1849               	xorwf	_nivel,w,c
  3269  001084  A4D8               	btfss	status,2,c
  3270  001086  D003               	goto	l156
  3271  001088                     u810:
  3272                           
  3273                           ;funciones.c: 167: numTopos=0;
  3274  001088  0E00               	movlw	0
  3275  00108A  6E4B               	movwf	_numTopos,c
  3276  00108C  D006               	goto	u830
  3277  00108E                     l156:
  3278                           
  3279                           ;funciones.c: 170: else if (numTopos>10&&nivel==8){
  3280  00108E  0E0A               	movlw	10
  3281  001090  644B               	cpfsgt	_numTopos,c
  3282  001092  D004               	goto	l158
  3283  001094  0E08               	movlw	8
  3284  001096  1849               	xorwf	_nivel,w,c
  3285  001098  B4D8               	btfsc	status,2,c
  3286  00109A                     u830:
  3287                           
  3288                           ;funciones.c: 171: nivel++;
  3289  00109A  2A49               	incf	_nivel,f,c
  3290  00109C                     l158:
  3291                           
  3292                           ;funciones.c: 174: }
  3293                           ;funciones.c: 176: presionoBoton=0;
  3294  00109C  0E00               	movlw	0
  3295  00109E  6E4A               	movwf	_presionoBoton,c
  3296  0010A0  0012               	return		;funcret
  3297  0010A2                     __end_of_cambioDeNivel:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           intcon	equ	0xFF2
  3306                           intcon2	equ	0xFF1
  3307                           intcon3	equ	0xFF0
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           postinc2	equ	0xFDE
  3314                           postdec2	equ	0xFDD
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _buzzer *****************
  3320 ;; Defined at:
  3321 ;;		line 198 in file "funciones.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         0       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    5
  3342 ;; This function calls:
  3343 ;;		_wait_in_ms
  3344 ;; This function is called by:
  3345 ;;		_main
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text20
  3350  0015BC                     __ptext20:
  3351                           	opt stack 0
  3352  0015BC                     _buzzer:
  3353                           	opt stack 25
  3354                           
  3355                           ;funciones.c: 199: PORTAbits.RA5=1;
  3356                           
  3357                           ;incstack = 0
  3358  0015BC  8A80               	bsf	3968,5,c	;volatile
  3359                           
  3360                           ;funciones.c: 200: wait_in_ms(5);
  3361  0015BE  0E00               	movlw	0
  3362  0015C0  6E3E               	movwf	wait_in_ms@time_in_ms+1,c
  3363  0015C2  0E05               	movlw	5
  3364  0015C4  6E3D               	movwf	wait_in_ms@time_in_ms,c
  3365  0015C6  EC99  F006         	call	_wait_in_ms	;wreg free
  3366                           
  3367                           ;funciones.c: 201: PORTAbits.RA5=0;
  3368  0015CA  9A80               	bcf	3968,5,c	;volatile
  3369  0015CC  0012               	return		;funcret
  3370  0015CE                     __end_of_buzzer:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           prodh	equ	0xFF4
  3377                           prodl	equ	0xFF3
  3378                           intcon	equ	0xFF2
  3379                           intcon2	equ	0xFF1
  3380                           intcon3	equ	0xFF0
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           postdec1	equ	0xFE5
  3384                           fsr1l	equ	0xFE1
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           postdec2	equ	0xFDD
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _wait_in_ms *****************
  3393 ;; Defined at:
  3394 ;;		line 73 in file "config.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  time_in_ms      2   60[COMRAM] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  count_ms        2    4[BANK0 ] unsigned int 
  3399 ;;  count           2    2[BANK0 ] unsigned int 
  3400 ;;  flag            2    0[BANK0 ] unsigned int 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3410 ;;      Params:         2       0       0       0       0       0       0       0       0
  3411 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3412 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3413 ;;      Totals:         4       6       0       0       0       0       0       0       0
  3414 ;;Total ram usage:       10 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    4
  3417 ;; This function calls:
  3418 ;;		___awtoft
  3419 ;;		___ftdiv
  3420 ;;		___fttol
  3421 ;; This function is called by:
  3422 ;;		_lcd_iniciar
  3423 ;;		_lcd_pulso
  3424 ;;		_lcd_origen
  3425 ;;		_nivelActual
  3426 ;;		_buzzer
  3427 ;;		_celebracion
  3428 ;;		_main
  3429 ;;		_lcd_limpiar
  3430 ;;		_Lcd_Cmd
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text21
  3435  000D32                     __ptext21:
  3436                           	opt stack 0
  3437  000D32                     _wait_in_ms:
  3438                           	opt stack 26
  3439                           
  3440                           ;config.c: 74: unsigned int count = 0;
  3441                           
  3442                           ;incstack = 0
  3443  000D32  0E00               	movlw	0
  3444  000D34  0100               	movlb	0	; () banked
  3445  000D36  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  3446  000D38  0E00               	movlw	0
  3447  000D3A  6F62               	movwf	wait_in_ms@count& (0+255),b
  3448                           
  3449                           ;config.c: 75: unsigned int count_ms = 0;
  3450  000D3C  0E00               	movlw	0
  3451  000D3E  6F65               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  3452  000D40  0E00               	movlw	0
  3453  000D42  6F64               	movwf	wait_in_ms@count_ms& (0+255),b
  3454                           
  3455                           ;config.c: 76: unsigned int flag = 0;
  3456  000D44  0E00               	movlw	0
  3457  000D46  6F61               	movwf	(wait_in_ms@flag+1)& (0+255),b
  3458  000D48  0E00               	movlw	0
  3459  000D4A  6F60               	movwf	wait_in_ms@flag& (0+255),b
  3460                           
  3461                           ;config.c: 78: TMR0L = 131;
  3462  000D4C  0E83               	movlw	131
  3463  000D4E  6ED6               	movwf	4054,c	;volatile
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;config.c: 81: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  3467  000D50  50D6               	movf	4054,w,c	;volatile
  3468  000D52  6E3F               	movwf	??_wait_in_ms& (0+255),c
  3469  000D54  6A40               	clrf	(??_wait_in_ms+1)& (0+255),c
  3470  000D56  1E3F               	comf	??_wait_in_ms,f,c
  3471  000D58  1E40               	comf	??_wait_in_ms+1,f,c
  3472  000D5A  4A3F               	infsnz	??_wait_in_ms,f,c
  3473  000D5C  2A40               	incf	??_wait_in_ms+1,f,c
  3474  000D5E  0E05               	movlw	5
  3475  000D60                     u1985:
  3476  000D60  90D8               	bcf	status,0,c
  3477  000D62  363F               	rlcf	??_wait_in_ms,f,c
  3478  000D64  3640               	rlcf	??_wait_in_ms+1,f,c
  3479  000D66  2EE8               	decfsz	wreg,f,c
  3480  000D68  D7FB               	goto	u1985
  3481  000D6A  0E00               	movlw	0
  3482  000D6C  243F               	addwf	??_wait_in_ms,w,c
  3483  000D6E  6E1B               	movwf	___awtoft@c,c
  3484  000D70  0E20               	movlw	32
  3485  000D72  2040               	addwfc	??_wait_in_ms+1,w,c
  3486  000D74  6E1C               	movwf	___awtoft@c+1,c
  3487  000D76  EC8F  F00A         	call	___awtoft	;wreg free
  3488  000D7A  C01B  F022         	movff	?___awtoft,___ftdiv@f2
  3489  000D7E  C01C  F023         	movff	?___awtoft+1,___ftdiv@f2+1
  3490  000D82  C01D  F024         	movff	?___awtoft+2,___ftdiv@f2+2
  3491  000D86  0E00               	movlw	0
  3492  000D88  6E1F               	movwf	___ftdiv@f1,c
  3493  000D8A  0EFA               	movlw	250
  3494  000D8C  6E20               	movwf	___ftdiv@f1+1,c
  3495  000D8E  0E45               	movlw	69
  3496  000D90  6E21               	movwf	___ftdiv@f1+2,c
  3497  000D92  ECBD  F005         	call	___ftdiv	;wreg free
  3498  000D96  C01F  F02E         	movff	?___ftdiv,___fttol@f1
  3499  000D9A  C020  F02F         	movff	?___ftdiv+1,___fttol@f1+1
  3500  000D9E  C021  F030         	movff	?___ftdiv+2,___fttol@f1+2
  3501  000DA2  ECCB  F004         	call	___fttol	;wreg free
  3502  000DA6  C02E  F064         	movff	?___fttol,wait_in_ms@count_ms
  3503  000DAA  C02F  F065         	movff	?___fttol+1,wait_in_ms@count_ms+1
  3504                           
  3505                           ;config.c: 83: TMR0ON = 1;
  3506  000DAE  8ED5               	bsf	4053,7,c	;volatile
  3507                           
  3508                           ;config.c: 85: while (count < count_ms){
  3509  000DB0  D020               	goto	l230
  3510  000DB2                     l226:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;config.c: 86: if(TMR0IF == 1){
  3514  000DB2  A4F2               	btfss	intcon,2,c	;volatile
  3515  000DB4  D01E               	goto	l230
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;config.c: 87: TMR0IF = 0;
  3519  000DB6  94F2               	bcf	intcon,2,c	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;config.c: 88: TMR0L = 131;
  3523  000DB8  0E83               	movlw	131
  3524  000DBA  6ED6               	movwf	4054,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;config.c: 89: count ++;
  3528  000DBC  4B62               	infsnz	wait_in_ms@count& (0+255),f,b
  3529  000DBE  2B63               	incf	(wait_in_ms@count+1)& (0+255),f,b
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;config.c: 90: if (count == count_ms){
  3533  000DC0  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  3534  000DC2  1962               	xorwf	wait_in_ms@count& (0+255),w,b
  3535  000DC4  E116               	bnz	l2398
  3536  000DC6  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  3537  000DC8  1963               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  3538  000DCA  A4D8               	btfss	status,2,c
  3539  000DCC  D012               	goto	l230
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;config.c: 91: flag++;
  3543  000DCE  4B60               	infsnz	wait_in_ms@flag& (0+255),f,b
  3544  000DD0  2B61               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;config.c: 92: if (flag != time_in_ms){
  3548  000DD2  5160               	movf	wait_in_ms@flag& (0+255),w,b
  3549  000DD4  183D               	xorwf	wait_in_ms@time_in_ms,w,c
  3550  000DD6  E104               	bnz	u2010
  3551  000DD8  5161               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  3552  000DDA  183E               	xorwf	wait_in_ms@time_in_ms+1,w,c
  3553  000DDC  B4D8               	btfsc	status,2,c
  3554  000DDE  D005               	goto	l229
  3555  000DE0                     u2010:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;config.c: 93: count = 0;
  3559  000DE0  0E00               	movlw	0
  3560  000DE2  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  3561  000DE4  0E00               	movlw	0
  3562  000DE6  6F62               	movwf	wait_in_ms@count& (0+255),b
  3563                           
  3564                           ;config.c: 94: }
  3565  000DE8  D004               	goto	l230
  3566  000DEA                     l229:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;config.c: 95: else{
  3570                           ;config.c: 96: count = count_ms;
  3571  000DEA  C064  F062         	movff	wait_in_ms@count_ms,wait_in_ms@count
  3572  000DEE  C065  F063         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  3573  000DF2                     l230:
  3574  000DF2                     l2398:
  3575  000DF2  0100               	movlb	0	; () banked
  3576  000DF4  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  3577  000DF6  5D62               	subwf	wait_in_ms@count& (0+255),w,b
  3578  000DF8  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  3579  000DFA  5963               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  3580  000DFC  B0D8               	btfsc	status,0,c
  3581  000DFE  0012               	return	
  3582  000E00  D7D8               	goto	l226
  3583  000E02                     __end_of_wait_in_ms:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           intcon2	equ	0xFF1
  3593                           intcon3	equ	0xFF0
  3594                           postinc0	equ	0xFEE
  3595                           wreg	equ	0xFE8
  3596                           postdec1	equ	0xFE5
  3597                           fsr1l	equ	0xFE1
  3598                           indf2	equ	0xFDF
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function ___fttol *****************
  3606 ;; Defined at:
  3607 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  f1              3   45[COMRAM] float 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  lval            4   55[COMRAM] unsigned long 
  3612 ;;  exp1            1   59[COMRAM] unsigned char 
  3613 ;;  sign1           1   54[COMRAM] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  4   45[COMRAM] long 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3623 ;;      Params:         4       0       0       0       0       0       0       0       0
  3624 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3625 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3626 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3627 ;;Total ram usage:       15 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    2
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_wait_in_ms
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text22
  3638  000996                     __ptext22:
  3639                           	opt stack 0
  3640  000996                     ___fttol:
  3641                           	opt stack 27
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;incstack = 0
  3645  000996  C030  F032         	movff	___fttol@f1+2,??___fttol
  3646  00099A  6A33               	clrf	(??___fttol+1)& (0+255),c
  3647  00099C  6A34               	clrf	(??___fttol+2)& (0+255),c
  3648  00099E  342F               	rlcf	___fttol@f1+1,w,c
  3649  0009A0  3632               	rlcf	??___fttol& (0+255),f,c
  3650  0009A2  E301               	bnc	u1901
  3651  0009A4  8033               	bsf	(??___fttol+1)& (0+255),0,c
  3652  0009A6                     u1901:
  3653  0009A6  5032               	movf	??___fttol,w,c
  3654  0009A8  6E3C               	movwf	___fttol@exp1,c
  3655  0009AA  503C               	movf	___fttol@exp1,w,c
  3656  0009AC  A4D8               	btfss	status,2,c
  3657  0009AE  D009               	goto	l649
  3658  0009B0  0E00               	movlw	0
  3659  0009B2  6E2E               	movwf	?___fttol,c
  3660  0009B4  0E00               	movlw	0
  3661  0009B6  6E2F               	movwf	?___fttol+1,c
  3662  0009B8  0E00               	movlw	0
  3663  0009BA  6E30               	movwf	?___fttol+2,c
  3664  0009BC  0E00               	movlw	0
  3665  0009BE  6E31               	movwf	?___fttol+3,c
  3666  0009C0  0012               	return	
  3667  0009C2                     l649:
  3668  0009C2  0E17               	movlw	23
  3669  0009C4  6E32               	movwf	??___fttol& (0+255),c
  3670  0009C6  C02E  F033         	movff	___fttol@f1,??___fttol+1
  3671  0009CA  C02F  F034         	movff	___fttol@f1+1,??___fttol+2
  3672  0009CE  C030  F035         	movff	___fttol@f1+2,??___fttol+3
  3673  0009D2  2832               	incf	??___fttol,w,c
  3674  0009D4  6E36               	movwf	(??___fttol+4)& (0+255),c
  3675  0009D6  D004               	goto	u1920
  3676  0009D8                     u1925:
  3677  0009D8  90D8               	bcf	status,0,c
  3678  0009DA  3235               	rrcf	??___fttol+3,f,c
  3679  0009DC  3234               	rrcf	??___fttol+2,f,c
  3680  0009DE  3233               	rrcf	??___fttol+1,f,c
  3681  0009E0                     u1920:
  3682  0009E0  2E36               	decfsz	(??___fttol+4)& (0+255),f,c
  3683  0009E2  D7FA               	goto	u1925
  3684  0009E4  5033               	movf	??___fttol+1,w,c
  3685  0009E6  6E37               	movwf	___fttol@sign1,c
  3686  0009E8  8E2F               	bsf	___fttol@f1+1,7,c
  3687  0009EA  0EFF               	movlw	255
  3688  0009EC  162E               	andwf	___fttol@f1,f,c
  3689  0009EE  0EFF               	movlw	255
  3690  0009F0  162F               	andwf	___fttol@f1+1,f,c
  3691  0009F2  0E00               	movlw	0
  3692  0009F4  1630               	andwf	___fttol@f1+2,f,c
  3693  0009F6  502E               	movf	___fttol@f1,w,c
  3694  0009F8  6E38               	movwf	___fttol@lval,c
  3695  0009FA  502F               	movf	___fttol@f1+1,w,c
  3696  0009FC  6E39               	movwf	___fttol@lval+1,c
  3697  0009FE  5030               	movf	___fttol@f1+2,w,c
  3698  000A00  6E3A               	movwf	___fttol@lval+2,c
  3699  000A02  6A3B               	clrf	___fttol@lval+3,c
  3700  000A04  0E8E               	movlw	142
  3701  000A06  5E3C               	subwf	___fttol@exp1,f,c
  3702  000A08  AE3C               	btfss	___fttol@exp1,7,c
  3703  000A0A  D016               	goto	l651
  3704  000A0C  503C               	movf	___fttol@exp1,w,c
  3705  000A0E  0A80               	xorlw	128
  3706  000A10  0F8F               	addlw	143
  3707  000A12  B0D8               	btfsc	status,0,c
  3708  000A14  D009               	goto	l652
  3709  000A16  0E00               	movlw	0
  3710  000A18  6E2E               	movwf	?___fttol,c
  3711  000A1A  0E00               	movlw	0
  3712  000A1C  6E2F               	movwf	?___fttol+1,c
  3713  000A1E  0E00               	movlw	0
  3714  000A20  6E30               	movwf	?___fttol+2,c
  3715  000A22  0E00               	movlw	0
  3716  000A24  6E31               	movwf	?___fttol+3,c
  3717  000A26  0012               	return	
  3718  000A28                     l652:
  3719  000A28  90D8               	bcf	status,0,c
  3720  000A2A  323B               	rrcf	___fttol@lval+3,f,c
  3721  000A2C  323A               	rrcf	___fttol@lval+2,f,c
  3722  000A2E  3239               	rrcf	___fttol@lval+1,f,c
  3723  000A30  3238               	rrcf	___fttol@lval,f,c
  3724  000A32  3E3C               	incfsz	___fttol@exp1,f,c
  3725  000A34  D7F9               	goto	l652
  3726  000A36  D015               	goto	u1960
  3727  000A38                     l651:
  3728  000A38  0E17               	movlw	23
  3729  000A3A  643C               	cpfsgt	___fttol@exp1,c
  3730  000A3C  D00F               	goto	l657
  3731  000A3E  0E00               	movlw	0
  3732  000A40  6E2E               	movwf	?___fttol,c
  3733  000A42  0E00               	movlw	0
  3734  000A44  6E2F               	movwf	?___fttol+1,c
  3735  000A46  0E00               	movlw	0
  3736  000A48  6E30               	movwf	?___fttol+2,c
  3737  000A4A  0E00               	movlw	0
  3738  000A4C  6E31               	movwf	?___fttol+3,c
  3739  000A4E  0012               	return	
  3740  000A50  90D8               	bcf	status,0,c
  3741  000A52  3638               	rlcf	___fttol@lval,f,c
  3742  000A54  3639               	rlcf	___fttol@lval+1,f,c
  3743  000A56  363A               	rlcf	___fttol@lval+2,f,c
  3744  000A58  363B               	rlcf	___fttol@lval+3,f,c
  3745  000A5A  063C               	decf	___fttol@exp1,f,c
  3746  000A5C                     l657:
  3747  000A5C  503C               	movf	___fttol@exp1,w,c
  3748  000A5E  A4D8               	btfss	status,2,c
  3749  000A60  D7F7               	goto	l658
  3750  000A62                     u1960:
  3751  000A62  5037               	movf	___fttol@sign1,w,c
  3752  000A64  B4D8               	btfsc	status,2,c
  3753  000A66  D008               	goto	l660
  3754  000A68  1E3B               	comf	___fttol@lval+3,f,c
  3755  000A6A  1E3A               	comf	___fttol@lval+2,f,c
  3756  000A6C  1E39               	comf	___fttol@lval+1,f,c
  3757  000A6E  6C38               	negf	___fttol@lval,c
  3758  000A70  0E00               	movlw	0
  3759  000A72  2239               	addwfc	___fttol@lval+1,f,c
  3760  000A74  223A               	addwfc	___fttol@lval+2,f,c
  3761  000A76  223B               	addwfc	___fttol@lval+3,f,c
  3762  000A78                     l660:
  3763  000A78  C038  F02E         	movff	___fttol@lval,?___fttol
  3764  000A7C  C039  F02F         	movff	___fttol@lval+1,?___fttol+1
  3765  000A80  C03A  F030         	movff	___fttol@lval+2,?___fttol+2
  3766  000A84  C03B  F031         	movff	___fttol@lval+3,?___fttol+3
  3767  000A88  0012               	return	
  3768  000A8A                     __end_of___fttol:
  3769                           	opt stack 0
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           intcon2	equ	0xFF1
  3778                           intcon3	equ	0xFF0
  3779                           postinc0	equ	0xFEE
  3780                           wreg	equ	0xFE8
  3781                           postdec1	equ	0xFE5
  3782                           fsr1l	equ	0xFE1
  3783                           indf2	equ	0xFDF
  3784                           postinc2	equ	0xFDE
  3785                           postdec2	equ	0xFDD
  3786                           fsr2h	equ	0xFDA
  3787                           fsr2l	equ	0xFD9
  3788                           status	equ	0xFD8
  3789                           
  3790 ;; *************** function ___ftdiv *****************
  3791 ;; Defined at:
  3792 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  f1              3   30[COMRAM] float 
  3795 ;;  f2              3   33[COMRAM] float 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  f3              3   40[COMRAM] float 
  3798 ;;  sign            1   44[COMRAM] unsigned char 
  3799 ;;  exp             1   43[COMRAM] unsigned char 
  3800 ;;  cntr            1   39[COMRAM] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  3   30[COMRAM] float 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3810 ;;      Params:         6       0       0       0       0       0       0       0       0
  3811 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3812 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3813 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3814 ;;Total ram usage:       15 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    3
  3817 ;; This function calls:
  3818 ;;		___ftpack
  3819 ;; This function is called by:
  3820 ;;		_wait_in_ms
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text23
  3825  000B7A                     __ptext23:
  3826                           	opt stack 0
  3827  000B7A                     ___ftdiv:
  3828                           	opt stack 26
  3829                           
  3830                           ;incstack = 0
  3831  000B7A  C021  F025         	movff	___ftdiv@f1+2,??___ftdiv
  3832  000B7E  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  3833  000B80  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  3834  000B82  3420               	rlcf	___ftdiv@f1+1,w,c
  3835  000B84  3625               	rlcf	??___ftdiv& (0+255),f,c
  3836  000B86  E301               	bnc	u1841
  3837  000B88  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  3838  000B8A                     u1841:
  3839  000B8A  5025               	movf	??___ftdiv,w,c
  3840  000B8C  6E2C               	movwf	___ftdiv@exp,c
  3841  000B8E  502C               	movf	___ftdiv@exp,w,c
  3842  000B90  A4D8               	btfss	status,2,c
  3843  000B92  D007               	goto	l613
  3844  000B94  0E00               	movlw	0
  3845  000B96  6E1F               	movwf	?___ftdiv,c
  3846  000B98  0E00               	movlw	0
  3847  000B9A  6E20               	movwf	?___ftdiv+1,c
  3848  000B9C  0E00               	movlw	0
  3849  000B9E  6E21               	movwf	?___ftdiv+2,c
  3850  000BA0  0012               	return	
  3851  000BA2                     l613:
  3852  000BA2  C024  F025         	movff	___ftdiv@f2+2,??___ftdiv
  3853  000BA6  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  3854  000BA8  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  3855  000BAA  3423               	rlcf	___ftdiv@f2+1,w,c
  3856  000BAC  3625               	rlcf	??___ftdiv& (0+255),f,c
  3857  000BAE  E301               	bnc	u1861
  3858  000BB0  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  3859  000BB2                     u1861:
  3860  000BB2  5025               	movf	??___ftdiv,w,c
  3861  000BB4  6E2D               	movwf	___ftdiv@sign,c
  3862  000BB6  502D               	movf	___ftdiv@sign,w,c
  3863  000BB8  A4D8               	btfss	status,2,c
  3864  000BBA  D007               	goto	l615
  3865  000BBC  0E00               	movlw	0
  3866  000BBE  6E1F               	movwf	?___ftdiv,c
  3867  000BC0  0E00               	movlw	0
  3868  000BC2  6E20               	movwf	?___ftdiv+1,c
  3869  000BC4  0E00               	movlw	0
  3870  000BC6  6E21               	movwf	?___ftdiv+2,c
  3871  000BC8  0012               	return	
  3872  000BCA                     l615:
  3873  000BCA  0E00               	movlw	0
  3874  000BCC  6E29               	movwf	___ftdiv@f3,c
  3875  000BCE  0E00               	movlw	0
  3876  000BD0  6E2A               	movwf	___ftdiv@f3+1,c
  3877  000BD2  0E00               	movlw	0
  3878  000BD4  6E2B               	movwf	___ftdiv@f3+2,c
  3879  000BD6  502D               	movf	___ftdiv@sign,w,c
  3880  000BD8  0F89               	addlw	137
  3881  000BDA  5E2C               	subwf	___ftdiv@exp,f,c
  3882  000BDC  C021  F02D         	movff	___ftdiv@f1+2,___ftdiv@sign
  3883  000BE0  5024               	movf	___ftdiv@f2+2,w,c
  3884  000BE2  1A2D               	xorwf	___ftdiv@sign,f,c
  3885  000BE4  0E80               	movlw	128
  3886  000BE6  162D               	andwf	___ftdiv@sign,f,c
  3887  000BE8  8E20               	bsf	___ftdiv@f1+1,7,c
  3888  000BEA  0EFF               	movlw	255
  3889  000BEC  161F               	andwf	___ftdiv@f1,f,c
  3890  000BEE  0EFF               	movlw	255
  3891  000BF0  1620               	andwf	___ftdiv@f1+1,f,c
  3892  000BF2  0E00               	movlw	0
  3893  000BF4  1621               	andwf	___ftdiv@f1+2,f,c
  3894  000BF6  8E23               	bsf	___ftdiv@f2+1,7,c
  3895  000BF8  0EFF               	movlw	255
  3896  000BFA  1622               	andwf	___ftdiv@f2,f,c
  3897  000BFC  0EFF               	movlw	255
  3898  000BFE  1623               	andwf	___ftdiv@f2+1,f,c
  3899  000C00  0E00               	movlw	0
  3900  000C02  1624               	andwf	___ftdiv@f2+2,f,c
  3901  000C04  0E18               	movlw	24
  3902  000C06  6E28               	movwf	___ftdiv@cntr,c
  3903  000C08  90D8               	bcf	status,0,c
  3904  000C0A  3629               	rlcf	___ftdiv@f3,f,c
  3905  000C0C  362A               	rlcf	___ftdiv@f3+1,f,c
  3906  000C0E  362B               	rlcf	___ftdiv@f3+2,f,c
  3907  000C10  5022               	movf	___ftdiv@f2,w,c
  3908  000C12  5C1F               	subwf	___ftdiv@f1,w,c
  3909  000C14  5023               	movf	___ftdiv@f2+1,w,c
  3910  000C16  5820               	subwfb	___ftdiv@f1+1,w,c
  3911  000C18  5024               	movf	___ftdiv@f2+2,w,c
  3912  000C1A  5821               	subwfb	___ftdiv@f1+2,w,c
  3913  000C1C  A0D8               	btfss	status,0,c
  3914  000C1E  D007               	goto	l617
  3915  000C20  5022               	movf	___ftdiv@f2,w,c
  3916  000C22  5E1F               	subwf	___ftdiv@f1,f,c
  3917  000C24  5023               	movf	___ftdiv@f2+1,w,c
  3918  000C26  5A20               	subwfb	___ftdiv@f1+1,f,c
  3919  000C28  5024               	movf	___ftdiv@f2+2,w,c
  3920  000C2A  5A21               	subwfb	___ftdiv@f1+2,f,c
  3921  000C2C  8029               	bsf	___ftdiv@f3,0,c
  3922  000C2E                     l617:
  3923  000C2E  90D8               	bcf	status,0,c
  3924  000C30  361F               	rlcf	___ftdiv@f1,f,c
  3925  000C32  3620               	rlcf	___ftdiv@f1+1,f,c
  3926  000C34  3621               	rlcf	___ftdiv@f1+2,f,c
  3927  000C36  2E28               	decfsz	___ftdiv@cntr,f,c
  3928  000C38  D7E7               	goto	l616
  3929  000C3A  C029  F013         	movff	___ftdiv@f3,___ftpack@arg
  3930  000C3E  C02A  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3931  000C42  C02B  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3932  000C46  C02C  F016         	movff	___ftdiv@exp,___ftpack@exp
  3933  000C4A  C02D  F017         	movff	___ftdiv@sign,___ftpack@sign
  3934  000C4E  EC68  F007         	call	___ftpack	;wreg free
  3935  000C52  C013  F01F         	movff	?___ftpack,?___ftdiv
  3936  000C56  C014  F020         	movff	?___ftpack+1,?___ftdiv+1
  3937  000C5A  C015  F021         	movff	?___ftpack+2,?___ftdiv+2
  3938  000C5E  0012               	return	
  3939  000C60                     __end_of___ftdiv:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           prodh	equ	0xFF4
  3946                           prodl	equ	0xFF3
  3947                           intcon	equ	0xFF2
  3948                           intcon2	equ	0xFF1
  3949                           intcon3	equ	0xFF0
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           postdec1	equ	0xFE5
  3953                           fsr1l	equ	0xFE1
  3954                           indf2	equ	0xFDF
  3955                           postinc2	equ	0xFDE
  3956                           postdec2	equ	0xFDD
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function ___awtoft *****************
  3962 ;; Defined at:
  3963 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  c               2   26[COMRAM] int 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  sign            1   29[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  3   26[COMRAM] float 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         3       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        4 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		___ftpack
  3986 ;; This function is called by:
  3987 ;;		_wait_in_ms
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text24
  3992  00151E                     __ptext24:
  3993                           	opt stack 0
  3994  00151E                     ___awtoft:
  3995                           	opt stack 26
  3996                           
  3997                           ;incstack = 0
  3998  00151E  0E00               	movlw	0
  3999  001520  6E1E               	movwf	___awtoft@sign,c
  4000  001522  AE1C               	btfss	___awtoft@c+1,7,c
  4001  001524  D006               	goto	l530
  4002  001526  6C1B               	negf	___awtoft@c,c
  4003  001528  1E1C               	comf	___awtoft@c+1,f,c
  4004  00152A  B0D8               	btfsc	status,0,c
  4005  00152C  2A1C               	incf	___awtoft@c+1,f,c
  4006  00152E  0E01               	movlw	1
  4007  001530  6E1E               	movwf	___awtoft@sign,c
  4008  001532                     l530:
  4009  001532  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  4010  001536  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  4011  00153A  6A15               	clrf	___ftpack@arg+2,c
  4012  00153C  0E8E               	movlw	142
  4013  00153E  6E16               	movwf	___ftpack@exp,c
  4014  001540  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  4015  001544  EC68  F007         	call	___ftpack	;wreg free
  4016  001548  C013  F01B         	movff	?___ftpack,?___awtoft
  4017  00154C  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  4018  001550  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  4019  001554  0012               	return	
  4020  001556                     __end_of___awtoft:
  4021                           	opt stack 0
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           intcon	equ	0xFF2
  4029                           intcon2	equ	0xFF1
  4030                           intcon3	equ	0xFF0
  4031                           postinc0	equ	0xFEE
  4032                           wreg	equ	0xFE8
  4033                           postdec1	equ	0xFE5
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           postdec2	equ	0xFDD
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function ___ftpack *****************
  4043 ;; Defined at:
  4044 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  arg             3   18[COMRAM] unsigned um
  4047 ;;  exp             1   21[COMRAM] unsigned char 
  4048 ;;  sign            1   22[COMRAM] unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  3   18[COMRAM] float 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4060 ;;      Params:         5       0       0       0       0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4062 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4063 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4064 ;;Total ram usage:        8 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    2
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		___awtoft
  4071 ;;		___ftdiv
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text25
  4076  000ED0                     __ptext25:
  4077                           	opt stack 0
  4078  000ED0                     ___ftpack:
  4079                           	opt stack 26
  4080                           
  4081                           ;incstack = 0
  4082  000ED0  5016               	movf	___ftpack@exp,w,c
  4083  000ED2  B4D8               	btfsc	status,2,c
  4084  000ED4  D005               	goto	u1770
  4085  000ED6  5013               	movf	___ftpack@arg,w,c
  4086  000ED8  1014               	iorwf	___ftpack@arg+1,w,c
  4087  000EDA  1015               	iorwf	___ftpack@arg+2,w,c
  4088  000EDC  A4D8               	btfss	status,2,c
  4089  000EDE  D00C               	goto	l549
  4090  000EE0                     u1770:
  4091  000EE0  0E00               	movlw	0
  4092  000EE2  6E13               	movwf	?___ftpack,c
  4093  000EE4  0E00               	movlw	0
  4094  000EE6  6E14               	movwf	?___ftpack+1,c
  4095  000EE8  0E00               	movlw	0
  4096  000EEA  6E15               	movwf	?___ftpack+2,c
  4097  000EEC  0012               	return	
  4098  000EEE  2A16               	incf	___ftpack@exp,f,c
  4099  000EF0  90D8               	bcf	status,0,c
  4100  000EF2  3215               	rrcf	___ftpack@arg+2,f,c
  4101  000EF4  3214               	rrcf	___ftpack@arg+1,f,c
  4102  000EF6  3213               	rrcf	___ftpack@arg,f,c
  4103  000EF8                     l549:
  4104  000EF8  0E00               	movlw	0
  4105  000EFA  1413               	andwf	___ftpack@arg,w,c
  4106  000EFC  6E18               	movwf	??___ftpack& (0+255),c
  4107  000EFE  0E00               	movlw	0
  4108  000F00  1414               	andwf	___ftpack@arg+1,w,c
  4109  000F02  6E19               	movwf	(??___ftpack+1)& (0+255),c
  4110  000F04  0EFE               	movlw	254
  4111  000F06  1415               	andwf	___ftpack@arg+2,w,c
  4112  000F08  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  4113  000F0A  5018               	movf	??___ftpack,w,c
  4114  000F0C  1019               	iorwf	??___ftpack+1,w,c
  4115  000F0E  101A               	iorwf	??___ftpack+2,w,c
  4116  000F10  B4D8               	btfsc	status,2,c
  4117  000F12  D00C               	goto	l552
  4118  000F14  D7EC               	goto	l550
  4119  000F16  2A16               	incf	___ftpack@exp,f,c
  4120  000F18  0E01               	movlw	1
  4121  000F1A  2613               	addwf	___ftpack@arg,f,c
  4122  000F1C  0E00               	movlw	0
  4123  000F1E  2214               	addwfc	___ftpack@arg+1,f,c
  4124  000F20  0E00               	movlw	0
  4125  000F22  2215               	addwfc	___ftpack@arg+2,f,c
  4126  000F24  90D8               	bcf	status,0,c
  4127  000F26  3215               	rrcf	___ftpack@arg+2,f,c
  4128  000F28  3214               	rrcf	___ftpack@arg+1,f,c
  4129  000F2A  3213               	rrcf	___ftpack@arg,f,c
  4130  000F2C                     l552:
  4131  000F2C  0E00               	movlw	0
  4132  000F2E  1413               	andwf	___ftpack@arg,w,c
  4133  000F30  6E18               	movwf	??___ftpack& (0+255),c
  4134  000F32  0E00               	movlw	0
  4135  000F34  1414               	andwf	___ftpack@arg+1,w,c
  4136  000F36  6E19               	movwf	(??___ftpack+1)& (0+255),c
  4137  000F38  0EFF               	movlw	255
  4138  000F3A  1415               	andwf	___ftpack@arg+2,w,c
  4139  000F3C  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  4140  000F3E  5018               	movf	??___ftpack,w,c
  4141  000F40  1019               	iorwf	??___ftpack+1,w,c
  4142  000F42  101A               	iorwf	??___ftpack+2,w,c
  4143  000F44  B4D8               	btfsc	status,2,c
  4144  000F46  D006               	goto	l555
  4145  000F48  D7E6               	goto	l553
  4146  000F4A  0616               	decf	___ftpack@exp,f,c
  4147  000F4C  90D8               	bcf	status,0,c
  4148  000F4E  3613               	rlcf	___ftpack@arg,f,c
  4149  000F50  3614               	rlcf	___ftpack@arg+1,f,c
  4150  000F52  3615               	rlcf	___ftpack@arg+2,f,c
  4151  000F54                     l555:
  4152  000F54  BE14               	btfsc	___ftpack@arg+1,7,c
  4153  000F56  D003               	goto	u1810
  4154  000F58  0E02               	movlw	2
  4155  000F5A  6016               	cpfslt	___ftpack@exp,c
  4156  000F5C  D7F6               	goto	l556
  4157  000F5E                     u1810:
  4158  000F5E  A016               	btfss	___ftpack@exp,0,c
  4159  000F60  9E14               	bcf	___ftpack@arg+1,7,c
  4160  000F62  90D8               	bcf	status,0,c
  4161  000F64  3216               	rrcf	___ftpack@exp,f,c
  4162  000F66  5016               	movf	___ftpack@exp,w,c
  4163  000F68  1215               	iorwf	___ftpack@arg+2,f,c
  4164  000F6A  5017               	movf	___ftpack@sign,w,c
  4165  000F6C  A4D8               	btfss	status,2,c
  4166  000F6E  8E15               	bsf	___ftpack@arg+2,7,c
  4167  000F70  C013  F013         	movff	___ftpack@arg,?___ftpack
  4168  000F74  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  4169  000F78  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  4170  000F7C  0012               	return	
  4171  000F7E                     __end_of___ftpack:
  4172                           	opt stack 0
  4173                           tblptru	equ	0xFF8
  4174                           tblptrh	equ	0xFF7
  4175                           tblptrl	equ	0xFF6
  4176                           tablat	equ	0xFF5
  4177                           prodh	equ	0xFF4
  4178                           prodl	equ	0xFF3
  4179                           intcon	equ	0xFF2
  4180                           intcon2	equ	0xFF1
  4181                           intcon3	equ	0xFF0
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postdec1	equ	0xFE5
  4185                           fsr1l	equ	0xFE1
  4186                           indf2	equ	0xFDF
  4187                           postinc2	equ	0xFDE
  4188                           postdec2	equ	0xFDD
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _botonesInterrupcion *****************
  4194 ;; Defined at:
  4195 ;;		line 70 in file "Wacamole4.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4211 ;;      Temps:         18       0       0       0       0       0       0       0       0
  4212 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4213 ;;Total ram usage:       18 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    1
  4216 ;; This function calls:
  4217 ;;		_botonCorrecto
  4218 ;;		_botonIncorrecto
  4219 ;; This function is called by:
  4220 ;;		Interrupt level 2
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	intcode
  4225  000008                     __pintcode:
  4226                           	opt stack 0
  4227  000008                     _botonesInterrupcion:
  4228                           	opt stack 21
  4229                           
  4230                           ;incstack = 0
  4231  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4232  00000A  ED30  F006         	call	int_func,f	;refresh shadow registers
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           intcon3	equ	0xFF0
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           postdec1	equ	0xFE5
  4245                           fsr1l	equ	0xFE1
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           postdec2	equ	0xFDD
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253                           	psect	intcode_body
  4254  000C60                     __pintcode_body:
  4255                           	opt stack 21
  4256  000C60                     int_func:
  4257                           	opt stack 21
  4258  000C60  0006               	pop		; remove dummy address from shadow register refresh
  4259  000C62  CFFA F001          	movff	pclath,??_botonesInterrupcion
  4260  000C66  CFFB F002          	movff	pclatu,??_botonesInterrupcion+1
  4261  000C6A  CFE9 F003          	movff	fsr0l,??_botonesInterrupcion+2
  4262  000C6E  CFEA F004          	movff	fsr0h,??_botonesInterrupcion+3
  4263  000C72  CFE1 F005          	movff	fsr1l,??_botonesInterrupcion+4
  4264  000C76  CFE2 F006          	movff	fsr1h,??_botonesInterrupcion+5
  4265  000C7A  CFD9 F007          	movff	fsr2l,??_botonesInterrupcion+6
  4266  000C7E  CFDA F008          	movff	fsr2h,??_botonesInterrupcion+7
  4267  000C82  CFF3 F009          	movff	prodl,??_botonesInterrupcion+8
  4268  000C86  CFF4 F00A          	movff	prodh,??_botonesInterrupcion+9
  4269  000C8A  CFF6 F00B          	movff	tblptrl,??_botonesInterrupcion+10
  4270  000C8E  CFF7 F00C          	movff	tblptrh,??_botonesInterrupcion+11
  4271  000C92  CFF8 F00D          	movff	tblptru,??_botonesInterrupcion+12
  4272  000C96  CFF5 F00E          	movff	tablat,??_botonesInterrupcion+13
  4273  000C9A  C04D  F00F         	movff	btemp,??_botonesInterrupcion+14
  4274  000C9E  C04E  F010         	movff	btemp+1,??_botonesInterrupcion+15
  4275  000CA2  C04F  F011         	movff	btemp+2,??_botonesInterrupcion+16
  4276  000CA6  C050  F012         	movff	btemp+3,??_botonesInterrupcion+17
  4277                           
  4278                           ;Wacamole4.c: 71: if(INT0F){
  4279  000CAA  A2F2               	btfss	intcon,1,c	;volatile
  4280  000CAC  D005               	goto	i2l292
  4281                           
  4282                           ;Wacamole4.c: 72: if(PORTAbits.RA1){
  4283  000CAE  B280               	btfsc	3968,1,c	;volatile
  4284                           
  4285                           ;Wacamole4.c: 73: botonCorrecto();
  4286  000CB0  ECEF  F00A         	call	_botonCorrecto	;wreg free
  4287                           
  4288                           ;Wacamole4.c: 74: }
  4289                           ;Wacamole4.c: 75: INT0F=0;
  4290  000CB4  92F2               	bcf	intcon,1,c	;volatile
  4291                           
  4292                           ;Wacamole4.c: 76: }
  4293  000CB6  D017               	goto	i2l302
  4294  000CB8                     i2l292:
  4295                           
  4296                           ;Wacamole4.c: 77: else if(INT1F){
  4297  000CB8  A0F0               	btfss	intcon3,0,c	;volatile
  4298  000CBA  D005               	goto	i2l295
  4299                           
  4300                           ;Wacamole4.c: 78: if(PORTAbits.RA2){
  4301  000CBC  B480               	btfsc	3968,2,c	;volatile
  4302                           
  4303                           ;Wacamole4.c: 79: botonCorrecto();
  4304  000CBE  ECEF  F00A         	call	_botonCorrecto	;wreg free
  4305                           
  4306                           ;Wacamole4.c: 80: }
  4307                           ;Wacamole4.c: 81: INT1F=0;
  4308  000CC2  90F0               	bcf	intcon3,0,c	;volatile
  4309                           
  4310                           ;Wacamole4.c: 82: }
  4311  000CC4  D010               	goto	i2l302
  4312  000CC6                     i2l295:
  4313                           
  4314                           ;Wacamole4.c: 83: else if(INT2F){
  4315  000CC6  A2F0               	btfss	intcon3,1,c	;volatile
  4316  000CC8  D005               	goto	i2l298
  4317                           
  4318                           ;Wacamole4.c: 84: if(PORTAbits.RA3){
  4319  000CCA  B680               	btfsc	3968,3,c	;volatile
  4320                           
  4321                           ;Wacamole4.c: 85: botonCorrecto();
  4322  000CCC  ECEF  F00A         	call	_botonCorrecto	;wreg free
  4323                           
  4324                           ;Wacamole4.c: 86: }
  4325                           ;Wacamole4.c: 87: INT2F=0;
  4326  000CD0  92F0               	bcf	intcon3,1,c	;volatile
  4327                           
  4328                           ;Wacamole4.c: 88: }
  4329  000CD2  D009               	goto	i2l302
  4330  000CD4                     i2l298:
  4331                           
  4332                           ;Wacamole4.c: 89: else if(RBIF&&PORTAbits.RA4){
  4333  000CD4  B0F2               	btfsc	intcon,0,c	;volatile
  4334  000CD6  A880               	btfss	3968,4,c	;volatile
  4335  000CD8  D004               	goto	i2l301
  4336                           
  4337                           ;Wacamole4.c: 90: botonCorrecto();
  4338  000CDA  ECEF  F00A         	call	_botonCorrecto	;wreg free
  4339                           
  4340                           ;Wacamole4.c: 91: RBIF=0;
  4341  000CDE  90F2               	bcf	intcon,0,c	;volatile
  4342                           
  4343                           ;Wacamole4.c: 92: }
  4344  000CE0  D002               	goto	i2l302
  4345  000CE2                     i2l301:
  4346                           
  4347                           ;Wacamole4.c: 93: else botonIncorrecto();
  4348  000CE2  ECE7  F00A         	call	_botonIncorrecto	;wreg free
  4349  000CE6                     i2l302:
  4350  000CE6  C012  F050         	movff	??_botonesInterrupcion+17,btemp+3
  4351  000CEA  C011  F04F         	movff	??_botonesInterrupcion+16,btemp+2
  4352  000CEE  C010  F04E         	movff	??_botonesInterrupcion+15,btemp+1
  4353  000CF2  C00F  F04D         	movff	??_botonesInterrupcion+14,btemp
  4354  000CF6  C00E  FFF5         	movff	??_botonesInterrupcion+13,tablat
  4355  000CFA  C00D  FFF8         	movff	??_botonesInterrupcion+12,tblptru
  4356  000CFE  C00C  FFF7         	movff	??_botonesInterrupcion+11,tblptrh
  4357  000D02  C00B  FFF6         	movff	??_botonesInterrupcion+10,tblptrl
  4358  000D06  C00A  FFF4         	movff	??_botonesInterrupcion+9,prodh
  4359  000D0A  C009  FFF3         	movff	??_botonesInterrupcion+8,prodl
  4360  000D0E  C008  FFDA         	movff	??_botonesInterrupcion+7,fsr2h
  4361  000D12  C007  FFD9         	movff	??_botonesInterrupcion+6,fsr2l
  4362  000D16  C006  FFE2         	movff	??_botonesInterrupcion+5,fsr1h
  4363  000D1A  C005  FFE1         	movff	??_botonesInterrupcion+4,fsr1l
  4364  000D1E  C004  FFEA         	movff	??_botonesInterrupcion+3,fsr0h
  4365  000D22  C003  FFE9         	movff	??_botonesInterrupcion+2,fsr0l
  4366  000D26  C002  FFFB         	movff	??_botonesInterrupcion+1,pclatu
  4367  000D2A  C001  FFFA         	movff	??_botonesInterrupcion,pclath
  4368  000D2E  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4369  000D30  0011               	retfie		f
  4370  000D32                     __end_of_botonesInterrupcion:
  4371                           	opt stack 0
  4372                           pclatu	equ	0xFFB
  4373                           pclath	equ	0xFFA
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           intcon2	equ	0xFF1
  4382                           intcon3	equ	0xFF0
  4383                           postinc0	equ	0xFEE
  4384                           fsr0h	equ	0xFEA
  4385                           fsr0l	equ	0xFE9
  4386                           wreg	equ	0xFE8
  4387                           postdec1	equ	0xFE5
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _botonIncorrecto *****************
  4398 ;; Defined at:
  4399 ;;		line 193 in file "funciones.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_botonesInterrupcion
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text27
  4427  0015CE                     __ptext27:
  4428                           	opt stack 0
  4429  0015CE                     _botonIncorrecto:
  4430                           	opt stack 21
  4431                           
  4432                           ;funciones.c: 194: presionoBoton=1;
  4433                           
  4434                           ;incstack = 0
  4435  0015CE  0E01               	movlw	1
  4436  0015D0  6E4A               	movwf	_presionoBoton,c
  4437                           
  4438                           ;funciones.c: 195: puntuacion-=10;
  4439  0015D2  0100               	movlb	0	; () banked
  4440  0015D4  0EF6               	movlw	246
  4441  0015D6  279D               	addwf	_puntuacion& (0+255),f,b
  4442  0015D8  0EFF               	movlw	255
  4443  0015DA  239E               	addwfc	(_puntuacion+1)& (0+255),f,b
  4444                           
  4445                           ; BSR set to: 0
  4446  0015DC  0012               	return		;funcret
  4447  0015DE                     __end_of_botonIncorrecto:
  4448                           	opt stack 0
  4449                           pclatu	equ	0xFFB
  4450                           pclath	equ	0xFFA
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           intcon2	equ	0xFF1
  4459                           intcon3	equ	0xFF0
  4460                           postinc0	equ	0xFEE
  4461                           fsr0h	equ	0xFEA
  4462                           fsr0l	equ	0xFE9
  4463                           wreg	equ	0xFE8
  4464                           postdec1	equ	0xFE5
  4465                           fsr1h	equ	0xFE2
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           postdec2	equ	0xFDD
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function _botonCorrecto *****************
  4475 ;; Defined at:
  4476 ;;		line 188 in file "funciones.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_botonesInterrupcion
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text28
  4504  0015DE                     __ptext28:
  4505                           	opt stack 0
  4506  0015DE                     _botonCorrecto:
  4507                           	opt stack 21
  4508                           
  4509                           ;funciones.c: 189: presionoBoton=1;
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;incstack = 0
  4513  0015DE  0E01               	movlw	1
  4514  0015E0  6E4A               	movwf	_presionoBoton,c
  4515                           
  4516                           ;funciones.c: 190: puntuacion+=10;
  4517  0015E2  0E0A               	movlw	10
  4518  0015E4  0100               	movlb	0	; () banked
  4519  0015E6  279D               	addwf	_puntuacion& (0+255),f,b
  4520  0015E8  0E00               	movlw	0
  4521  0015EA  239E               	addwfc	(_puntuacion+1)& (0+255),f,b
  4522                           
  4523                           ; BSR set to: 0
  4524  0015EC  0012               	return		;funcret
  4525  0015EE                     __end_of_botonCorrecto:
  4526                           	opt stack 0
  4527                           pclatu	equ	0xFFB
  4528                           pclath	equ	0xFFA
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon	equ	0xFF2
  4536                           intcon2	equ	0xFF1
  4537                           intcon3	equ	0xFF0
  4538                           postinc0	equ	0xFEE
  4539                           fsr0h	equ	0xFEA
  4540                           fsr0l	equ	0xFE9
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           fsr1h	equ	0xFE2
  4544                           fsr1l	equ	0xFE1
  4545                           indf2	equ	0xFDF
  4546                           postinc2	equ	0xFDE
  4547                           postdec2	equ	0xFDD
  4548                           fsr2h	equ	0xFDA
  4549                           fsr2l	equ	0xFD9
  4550                           status	equ	0xFD8
  4551                           pclatu	equ	0xFFB
  4552                           pclath	equ	0xFFA
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           intcon	equ	0xFF2
  4560                           intcon2	equ	0xFF1
  4561                           intcon3	equ	0xFF0
  4562                           postinc0	equ	0xFEE
  4563                           fsr0h	equ	0xFEA
  4564                           fsr0l	equ	0xFE9
  4565                           wreg	equ	0xFE8
  4566                           postdec1	equ	0xFE5
  4567                           fsr1h	equ	0xFE2
  4568                           fsr1l	equ	0xFE1
  4569                           indf2	equ	0xFDF
  4570                           postinc2	equ	0xFDE
  4571                           postdec2	equ	0xFDD
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576                           	psect	rparam
  4577  0000                     pclatu	equ	0xFFB
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           intcon2	equ	0xFF1
  4587                           intcon3	equ	0xFF0
  4588                           postinc0	equ	0xFEE
  4589                           fsr0h	equ	0xFEA
  4590                           fsr0l	equ	0xFE9
  4591                           wreg	equ	0xFE8
  4592                           postdec1	equ	0xFE5
  4593                           fsr1h	equ	0xFE2
  4594                           fsr1l	equ	0xFE1
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602                           	psect	temp
  4603  00004D                     btemp:
  4604                           	opt stack 0
  4605  00004D                     	ds	1
  4606  0000                     int$flags	set	btemp
  4607  0000                     wtemp6	set	btemp+1
  4608                           pclatu	equ	0xFFB
  4609                           pclath	equ	0xFFA
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           prodh	equ	0xFF4
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           intcon2	equ	0xFF1
  4618                           intcon3	equ	0xFF0
  4619                           postinc0	equ	0xFEE
  4620                           fsr0h	equ	0xFEA
  4621                           fsr0l	equ	0xFE9
  4622                           wreg	equ	0xFE8
  4623                           postdec1	equ	0xFE5
  4624                           fsr1h	equ	0xFE2
  4625                           fsr1l	equ	0xFE1
  4626                           indf2	equ	0xFDF
  4627                           postinc2	equ	0xFDE
  4628                           postdec2	equ	0xFDD
  4629                           fsr2h	equ	0xFDA
  4630                           fsr2l	equ	0xFD9
  4631                           status	equ	0xFD8


Data Sizes:
    Strings     21
    Constant    10
    Data        5
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      76
    BANK0           160     61      63
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[9]), STR_1(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> lcdGUI@lvl(BANK0[20]), lcdGUI@str(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 20
		 -> lcdGUI@lvl(BANK0[20]), lcdGUI@str(BANK0[20]), 


Critical Paths under _main in COMRAM

    _nivelActual->_wait_in_ms
    _topoAleatorio->_rand
    _rand->___lmul
    _lcd_iniciar->_lcd_orden
    _lcdGUI->_lcd_texto
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_ubicarXY->_lcd_orden
    _lcd_origen->_lcd_orden
    _lcd_texto->_lcd_caracter
    _lcd_pulso->_wait_in_ms
    _celebracion->_wait_in_ms
    _buzzer->_wait_in_ms
    _wait_in_ms->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _botonesInterrupcion in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcdGUI
    _nivelActual->_wait_in_ms
    _lcd_iniciar->_lcd_orden
    _lcdGUI->_lcd_ubicarXY
    _lcd_ubicarXY->_lcd_orden
    _lcd_origen->_lcd_orden
    _lcd_texto->_lcd_caracter
    _lcd_pulso->_wait_in_ms
    _celebracion->_wait_in_ms
    _buzzer->_wait_in_ms

Critical Paths under _botonesInterrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _botonesInterrupcion in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _botonesInterrupcion in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _botonesInterrupcion in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _botonesInterrupcion in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _botonesInterrupcion in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _botonesInterrupcion in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _botonesInterrupcion in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  134663
                                             60 BANK0      1     1      0
                             _buzzer
                      _cambioDeNivel
                        _celebracion
                        _configBoard
                           _hizoAlgo
                             _lcdGUI
                        _lcd_iniciar
                        _nivelActual
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _nivelActual                                          0     0      0   10281
                      _topoAleatorio
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _topoAleatorio                                        0     0      0     370
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 2     0      2     370
                                             30 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   30515
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcdGUI                                              41    41      0   64134
                                             19 BANK0     41    41      0
                         _lcd_origen
                          _lcd_texto
                       _lcd_ubicarXY
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    1453
                                             30 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                             25 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_ubicarXY                                         9     8      1   31585
                                             66 COMRAM     1     0      1
                                             11 BANK0      8     8      0
                          _lcd_orden
                         _lcd_origen
 ---------------------------------------------------------------------------------
 (3) _lcd_origen                                           0     0      0   20604
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2   10693
                                             64 COMRAM     2     0      2
                                              6 BANK0      5     5      0
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (2) _lcd_texto                                            3     1      2   10308
                                             66 COMRAM     2     0      2
                                             11 BANK0      1     1      0
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (3) _lcd_caracter                                         7     5      2   10063
                                             64 COMRAM     2     0      2
                                              6 BANK0      5     5      0
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (2) _lcd_pulso                                            0     0      0    9911
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _hizoAlgo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _celebracion                                          0     0      0    9911
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _cambioDeNivel                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               0     0      0    9911
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _wait_in_ms                                          10     8      2    9911
                                             60 COMRAM     4     2      2
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     461
                                             45 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3513
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2996
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2773
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _botonesInterrupcion                                 18    18      0       0
                                              0 COMRAM    18    18      0
                      _botonCorrecto
                    _botonIncorrecto
 ---------------------------------------------------------------------------------
 (10) _botonIncorrecto                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _botonCorrecto                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzzer
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _cambioDeNivel
   _celebracion
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _configBoard
   _hizoAlgo
   _lcdGUI
     _lcd_origen
       _lcd_orden
         _lcd_pulso
           _wait_in_ms
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _lcd_texto
       _lcd_caracter
         _lcd_pulso
           _wait_in_ms
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
     _lcd_ubicarXY
       _lcd_orden
         _lcd_pulso
           _wait_in_ms
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
       _lcd_origen
         _lcd_orden
           _lcd_pulso
             _wait_in_ms
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _nivelActual
     _topoAleatorio
       _rand
         ___lmul
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _wait_in_ms
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)

 _botonesInterrupcion (ROOT)
   _botonCorrecto
   _botonIncorrecto

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      3F       5       39.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      4C       1       80.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B      11        0.0%
DATA                 0      0      8B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Feb 24 02:54:02 2018

               ?_lcd_ubicarXY 0043                 _botonCorrecto 15DE                            l40 10C8  
                          l41 10B8                            l27 1574                            l28 1558  
                          l44 10EE                            l45 10DE                            l96 0FF0  
                          l97 0F80                            l98 0F98                            l99 0F94  
                 __CFG_BORV$3 000000                           l100 0F90                           l120 0FEC  
                         l112 0FB8                           l121 0FE8                           l113 0FD0  
                         l105 0F9C                           l122 0FE4                           l114 0FCC  
                         l106 0FB4                           l130 0B46                           l115 0FC8  
                         l107 0FB0                           l131 0A8C                           l108 0FAC  
                         l140 0B40                           l133 0AA0                           l230 0DF2  
                         l150 105E                           l134 0AB4                           l119 0FD4  
                         l135 0AC8                           l152 106C                           l144 1034  
                         l320 087E                           l136 0ADC                           l313 082C  
                         l137 0AF4                           l226 0DB2                           l154 107A  
                         l146 1042                           l330 0968                           l322 084C  
                         l314 0846                           l138 0B0C                           l331 0916  
                         l323 08AC                           l315 0850                           l139 0B24  
                         l156 108E                           l148 1050                           l164 14BA  
                         l229 0DEA                           l325 08C4                           l158 109C  
                         l166 14D0                           l329 0910                           l530 1532  
                         l346 12D4                           l282 1456                           l347 12E8  
                         l283 1420                           l613 0BA2                           l550 0EEE  
                         l615 0BCA                           l552 0F2C                           l616 0C08  
                         l553 0F16                           l617 0C2E                           l555 0F54  
                         l651 0A38                           l556 0F4A                           l660 0A78  
                         l652 0A28                           l549 0EF8                           l742 13FE  
                         l743 1408                           l752 1490                           l657 0A5C  
                         l649 09C2                           l753 149A                           l658 0A50  
                         l738 13DE                           l739 13D6                           l748 1478  
                         l749 1470                           u810 1088                           u830 109A  
                         wreg 000FE8                ??_lcd_caracter 0066                 _topoAleatorio 0F7E  
             _botonIncorrecto 15CE                  __CFG_LVP$OFF 000000                  ___ftdiv@cntr 0028  
                ___ftdiv@sign 002D                  __CFG_WDT$OFF 000000                          l2398 0DF2  
                        l1996 08C8                          STR_1 080B                          STR_2 0817  
                        u2010 0DE0                          u1310 13E2                          u2035 120C  
                        u1340 147C                          u2045 11A0                          u2117 1428  
                        u2070 10D0                          u2127 117C                          u1600 0970  
                        u1610 0988                          u1810 0F5E                          u1580 08F4  
                        u1901 09A6                          u1920 09E0                          u1841 0B8A  
                        u1770 0EE0                          u1861 0BB2                          u1925 09D8  
                        u1960 0A62                          _RBIF 007F90                          u1985 0D60  
                        _main 1412                  ___ftpack@arg 0013                          _rand 136E  
                ___ftpack@exp 0016                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 004D  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
               __CFG_MCLRE$ON 000000                ??_lcd_ubicarXY 006B                ?_botonCorrecto 0001  
                ___param_bank 000000          lcd_caracter@caracter 0041                  ___fttol@exp1 003C  
                ___fttol@lval 0038                 __CFG_PLLDIV$2 000000                         ?_main 0001  
                       ?_rand 001F               __end_of___ftdiv 0C60               __end_of___fttol 0A8A  
                       _INT0F 007F91                         _INT1F 007F80                         _INT2F 007F81  
             __end_of___lwdiv 1412               __end_of___lwmod 14A4                         i2l301 0CE2  
                       i2l302 0CE6                         i2l292 0CB8                         i2l295 0CC6  
                       i2l298 0CD4                         _TMR0L 000FD6                         _PORTA 000F80  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                ?_topoAleatorio 0001           ___lmul@multiplicand 0017  
              __CFG_FCMEN$OFF 000000                 ___awtoft@sign 001E               __end_of_dpowers 080B  
                       _randx 0045                         _nivel 0049                 ___ftpack@sign 0017  
        __size_of_celebracion 0066                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 004E               __end_of_sprintf 0996  
             __initialization 14E4                  __end_of_main 1462                  __end_of_rand 13C0  
                ?_nivelActual 0001                        ??_main 009C                 ___fttol@sign1 0037  
     __end_of_botonIncorrecto 15DE                        ??_rand 0021                 __activetblptr 000002  
               lcd_ubicarXY@i 0070           lcd_ubicarXY@columna 0043                        _ADCON0 000FC2  
                      _T08BIT 007EAE              __end_of___awtoft 1556              __end_of___ftpack 0F7E  
                      _TMR0IF 007F92                        _TMR0ON 007EAF               ??_botonCorrecto 0001  
        __size_of_configBoard 0054          __end_of_lcd_caracter 11F4                        ___lmul 12C4  
        __size_of_lcd_iniciar 00CE                        _lcdGUI 1118                     ??___ftdiv 0025  
                   ??___fttol 0032                     ??___lwdiv 0017              __end_of_hizoAlgo 14E4  
                   ??___lwmod 001E                        _buzzer 15BC               ??_topoAleatorio 0021  
                __pdataCOMRAM 0045                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8   __end_of_botonesInterrupcion 0D32  
        __end_of_lcd_ubicarXY 1118                     ??_sprintf 0025                    __accesstop 0060  
     __end_of__initialization 1510                 ___rparam_used 000001                    ___ftdiv@f1 001F  
                  ___ftdiv@f2 0022                    ___ftdiv@f3 0029                    ___awtoft@c 001B  
                  ___fttol@f1 002E                __pcstackCOMRAM 0001        __size_of_cambioDeNivel 007A  
            ?_botonIncorrecto 0001            __size_of_lcd_orden 006A            __size_of_lcd_texto 002E  
          __size_of_lcd_pulso 001E                    __pbssBANK0 009D                lcd_orden@orden 0041  
                     ?___lmul 0013                       ?_lcdGUI 0001                ___lmul@product 001B  
                     ?_buzzer 0001                     ?___awtoft 001B                     ?___ftpack 0013  
        __size_of_nivelActual 00F0                    _lcd_origen 15A2                 _cambioDeNivel 1028  
                   ?_hizoAlgo 0001         __size_of_lcd_caracter 006C                       __Hparam 0000  
                     __Lparam 0000             __end_of_lcd_orden 125E             __end_of_lcd_texto 1584  
           __end_of_lcd_pulso 15A2               __size_of___lmul 0056                       ___ftdiv 0B7A  
                     ___fttol 0996               __size_of_lcdGUI 0070                       ___lwdiv 13C0  
                     ___lwmod 1462                  __psmallconst 0800                       __pcinit 14E4  
                  ??___awtoft 001E                    ??___ftpack 0018               __size_of_buzzer 0012  
                     __ramtop 0800                       __ptext0 1412                       __ptext1 0A8A  
                     __ptext2 0F7E                       __ptext3 136E                       __ptext4 12C4  
                     __ptext5 0E02                       __ptext6 1118                       __ptext7 0822  
                     __ptext8 1462                       __ptext9 13C0                     _T0CONbits 000FD5  
       __size_of_lcd_ubicarXY 0076                       _dpowers 0801                 ??_celebracion 0041  
                _lcd_caracter 1188                       _sprintf 0822                __pintcode_body 0C60  
              ?_cambioDeNivel 0001          end_of_initialization 1510                    ??_hizoAlgo 0013  
               __Lmediumconst 0000          wait_in_ms@time_in_ms 003D                       int_func 0C60  
                     postdec1 000FE5                       postdec2 000FDD                  _lcd_ubicarXY 10A2  
                     postinc0 000FEE                       postinc2 000FDE                    _wait_in_ms 0D32  
                   _PORTAbits 000F80                     _PORTDbits 000F83                     _TRISBbits 000F93  
                   _TRISDbits 000F95                   ?_lcd_origen 0001           __end_of_celebracion 12C4  
                 ___ftdiv@exp 002C                 ??_configBoard 0013                    _puntuacion 009D  
               ??_lcd_iniciar 0043         __end_of_botonCorrecto 15EE             lcd_ubicarXY@i_155 0071  
           lcd_ubicarXY@linea 0072                __end_of___lmul 131A                __end_of_lcdGUI 1188  
               __pidataCOMRAM 15EE                __end_of_buzzer 15CE           start_initialization 14E4  
       __end_of_topoAleatorio 1028               ??_cambioDeNivel 0013               wait_in_ms@count 0062  
__size_of_botonesInterrupcion 0D2A            wait_in_ms@count_ms 0064                      ??___lmul 001B  
         __end_of_configBoard 136E           __size_of_lcd_origen 001A                      ??_lcdGUI 0073  
                 ?_wait_in_ms 003D           __end_of_lcd_iniciar 0ED0                      ??_buzzer 0041  
           __size_of___awtoft 0038             __size_of___ftpack 00AE                   __pbssCOMRAM 004A  
               __pcstackBANK0 0060                   _celebracion 125E      __size_of_botonIncorrecto 0010  
                 sprintf@flag 0029                   sprintf@prec 0026             __size_of_hizoAlgo 0040  
            ___lwdiv@dividend 0013                     __pintcode 0008                      ?___ftdiv 001F  
                    ?___fttol 002E                      ?___lwdiv 0013                      ?___lwmod 001A  
               ??_nivelActual 0041                     _lcd_orden 11F4                     _lcd_texto 1556  
                   _lcd_pulso 1584                   __smallconst 0800              ___lwdiv@quotient 0017  
                   lcdGUI@lvl 0088                      ?_sprintf 001F                     lcdGUI@str 0074  
         __size_of_wait_in_ms 00D0                   _configBoard 131A                   _lcd_iniciar 0E02  
                  ?_lcd_orden 0041                    ?_lcd_texto 0043                    ?_lcd_pulso 0001  
                  _ADCON1bits 000FC1           __end_of_nivelActual 0B7A                  ??_lcd_origen 0043  
           ___lmul@multiplier 0013                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 14F8                wait_in_ms@flag 0060             ??_botonIncorrecto 0001  
                    __Hrparam 0000                      __Lrparam 0000            __end_of_lcd_origen 15BC  
            __size_of___ftdiv 00E6              __size_of___fttol 00F4              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      ___awtoft 151E                      ___ftpack 0ED0  
         _botonesInterrupcion 0008                    sprintf@val 002A               ___lwdiv@divisor 0015  
             ___lwdiv@counter 0019                      __ptext10 10A2                      __ptext11 15A2  
                    __ptext20 15BC                      __ptext12 11F4                      __ptext21 0D32  
                    __ptext13 1556                      __ptext22 0996                      __ptext14 1188  
                    __ptext23 0B7A                      __ptext15 1584                      __ptext24 151E  
                    __ptext16 14A4                      __ptext25 0ED0                      __ptext17 131A  
                    __ptext18 125E                      __ptext27 15CE                      __ptext19 1028  
                    __ptext28 15DE               lcd_texto@cadena 0043              __size_of_sprintf 0174  
                    _hizoAlgo 14A4          ?_botonesInterrupcion 0001                 __size_of_main 0050  
               __size_of_rand 0052                      _numTopos 004B                      int$flags 004D  
                ??_wait_in_ms 003F                   ??_lcd_orden 0066                   _nivelActual 0A8A  
                 ??_lcd_texto 006B                   ??_lcd_pulso 0041         __CFG_CPUDIV$OSC1_PLL2 000000  
               _presionoBoton 004A                    _INTCONbits 000FF2                  ?_celebracion 0001  
      __size_of_botonCorrecto 0010         __end_of_cambioDeNivel 10A2                      intlevel2 0000  
                   sprintf@ap 0027                     sprintf@sp 001F         ??_botonesInterrupcion 0001  
          __end_of_wait_in_ms 0E02              ___lwmod@dividend 001A        __size_of_topoAleatorio 00AA  
                _terminoJuego 004C                      sprintf@c 002C                      sprintf@f 0021  
             ___lwmod@divisor 001C               ___lwmod@counter 001E                 ?_lcd_caracter 0041  
          __CFG_FOSC$HSPLL_HS 000000                  ?_configBoard 0001                  ?_lcd_iniciar 0001  
