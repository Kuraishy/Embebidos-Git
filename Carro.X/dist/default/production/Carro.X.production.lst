

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 20:05:04 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4550 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  000800                     __psmallconst:
    81                           	opt stack 0
    82  000800  00                 	db	0
    83  000801                     exp@coeff:
    84                           	opt stack 0
    85  000801  00                 	db	0
    86  000802  80                 	db	128
    87  000803  3F                 	db	63
    88  000804  72                 	db	114
    89  000805  31                 	db	49
    90  000806  3F                 	db	63
    91  000807  FE                 	db	254
    92  000808  75                 	db	117
    93  000809  3E                 	db	62
    94  00080A  58                 	db	88
    95  00080B  63                 	db	99
    96  00080C  3D                 	db	61
    97  00080D  95                 	db	149
    98  00080E  1D                 	db	29
    99  00080F  3C                 	db	60
   100  000810  C5                 	db	197
   101  000811  AE                 	db	174
   102  000812  3A                 	db	58
   103  000813  79                 	db	121
   104  000814  21                 	db	33
   105  000815  39                 	db	57
   106  000816  94                 	db	148
   107  000817  80                 	db	128
   108  000818  37                 	db	55
   109  000819  93                 	db	147
   110  00081A  A7                 	db	167
   111  00081B  35                 	db	53
   112  00081C  56                 	db	86
   113  00081D  15                 	db	21
   114  00081E  34                 	db	52
   115  00081F                     __end_ofexp@coeff:
   116                           	opt stack 0
   117  00081F                     log@coeff:
   118                           	opt stack 0
   119  00081F  00                 	db	0
   120  000820  00                 	db	0
   121  000821  00                 	db	0
   122  000822  00                 	db	0
   123  000823  80                 	db	128
   124  000824  3F                 	db	63
   125  000825  F0                 	db	240
   126  000826  FF                 	db	255
   127  000827  BE                 	db	190
   128  000828  E2                 	db	226
   129  000829  A9                 	db	169
   130  00082A  3E                 	db	62
   131  00082B  83                 	db	131
   132  00082C  76                 	db	118
   133  00082D  BE                 	db	190
   134  00082E  AE                 	db	174
   135  00082F  2B                 	db	43
   136  000830  3E                 	db	62
   137  000831  3C                 	db	60
   138  000832  C3                 	db	195
   139  000833  BD                 	db	189
   140  000834  D2                 	db	210
   141  000835  13                 	db	19
   142  000836  3D                 	db	61
   143  000837  78                 	db	120
   144  000838  D3                 	db	211
   145  000839  BB                 	db	187
   146  00083A                     __end_oflog@coeff:
   147                           	opt stack 0
   148  00083A  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           	psect	nvBANK0
   151  0000EF                     __pnvBANK0:
   152                           	opt stack 0
   153  0000EF                     _prescg:
   154                           	opt stack 0
   155  0000EF                     	ds	3
   156  0000                     _CCPR2L	set	4027
   157  0000                     _CCPR1L	set	4030
   158  0000                     _CCP2CONbits	set	4026
   159  0000                     _CCP1CONbits	set	4029
   160  0000                     _PR2	set	4043
   161  0000                     _PORTA	set	3968
   162  0000                     _TRISD	set	3989
   163  0000                     _PIR1bits	set	3998
   164  0000                     _PIE1bits	set	3997
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON0	set	4034
   168  0000                     _T0CONbits	set	4053
   169  0000                     _INTCONbits	set	4082
   170  0000                     _LATAbits	set	3977
   171  0000                     _LATEbits	set	3981
   172  0000                     _PORTBbits	set	3969
   173  0000                     _T2CONbits	set	4042
   174  0000                     _TRISCbits	set	3988
   175  0000                     _TRISBbits	set	3987
   176  0000                     _TRISEbits	set	3990
   177  0000                     _TRISAbits	set	3986
   178  0000                     _ADCON1bits	set	4033
   179  0000                     _TMR0L	set	4054
   180  0000                     _TMR0IF	set	32658
   181  0000                     _TMR0ON	set	32431
   182  0000                     _RCIF	set	31989
   183  0000                     _T08BIT	set	32430
   184                           
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  0020E6                     __pcinit:
   189                           	opt stack 0
   190  0020E6                     start_initialization:
   191                           	opt stack 0
   192  0020E6                     __initialization:
   193                           	opt stack 0
   194                           
   195                           ; Clear objects allocated to BANK0 (65 bytes)
   196  0020E6  EE00  F0AE         	lfsr	0,__pbssBANK0
   197  0020EA  0E41               	movlw	65
   198  0020EC                     clear_0:
   199  0020EC  6AEE               	clrf	postinc0,c
   200  0020EE  06E8               	decf	wreg,f,c
   201  0020F0  E1FD               	bnz	clear_0
   202  0020F2                     end_of_initialization:
   203                           	opt stack 0
   204  0020F2                     __end_of__initialization:
   205                           	opt stack 0
   206  0020F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   207  0020F4  6EF8               	movwf	tblptru,c
   208  0020F6  0100               	movlb	0
   209  0020F8  EF7A  F009         	goto	_main	;jump to C main() function
   210                           tblptru	equ	0xFF8
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	bssBANK0
   215  0000AE                     __pbssBANK0:
   216                           	opt stack 0
   217  0000AE                     config_ccp2@F3978:
   218                           	opt stack 0
   219  0000AE                     	ds	30
   220  0000CC                     config_ccp1@F3967:
   221                           	opt stack 0
   222  0000CC                     	ds	30
   223  0000EA                     _pr2g:
   224                           	opt stack 0
   225  0000EA                     	ds	3
   226  0000ED                     _errno:
   227                           	opt stack 0
   228  0000ED                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	cstackBANK0
   234  000060                     __pcstackBANK0:
   235                           	opt stack 0
   236  000060                     _exp$1549:
   237                           	opt stack 0
   238                           
   239                           ; 3 bytes @ 0x0
   240  000060                     	ds	3
   241  000063                     exp@exponent:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x3
   245  000063                     	ds	2
   246  000065                     exp@sign:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x5
   250  000065                     	ds	1
   251  000066                     ?_pow:
   252                           	opt stack 0
   253  000066                     pow@x:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x6
   257  000066                     	ds	3
   258  000069                     pow@y:
   259                           	opt stack 0
   260                           
   261                           ; 3 bytes @ 0x9
   262  000069                     	ds	3
   263  00006C                     _pow$1547:
   264                           	opt stack 0
   265                           
   266                           ; 3 bytes @ 0xC
   267  00006C                     	ds	3
   268  00006F                     _pow$1548:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0xF
   272  00006F                     	ds	3
   273  000072                     pow@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x12
   277  000072                     	ds	1
   278  000073                     pow@yi:
   279                           	opt stack 0
   280                           
   281                           ; 4 bytes @ 0x13
   282  000073                     	ds	4
   283  000077                     config_ccp1@a:
   284                           	opt stack 0
   285  000077                     config_ccp2@a:
   286                           	opt stack 0
   287                           
   288                           ; 30 bytes @ 0x17
   289  000077                     	ds	30
   290  000095                     _config_ccp1$1541:
   291                           	opt stack 0
   292  000095                     _config_ccp2$1544:
   293                           	opt stack 0
   294                           
   295                           ; 3 bytes @ 0x35
   296  000095                     	ds	3
   297  000098                     config_ccp1@valreg:
   298                           	opt stack 0
   299  000098                     config_ccp2@valreg:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x38
   303  000098                     	ds	2
   304  00009A                     config_ccp1@i:
   305                           	opt stack 0
   306  00009A                     config_ccp2@i:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x3A
   310  00009A                     	ds	2
   311  00009C                     config_ccp1@z:
   312                           	opt stack 0
   313  00009C                     config_ccp2@z:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x3C
   317  00009C                     	ds	2
   318  00009E                     _config_ccp1$1542:
   319                           	opt stack 0
   320  00009E                     _config_ccp2$1545:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0x3E
   324  00009E                     	ds	3
   325  0000A1                     _config_ccp1$1543:
   326                           	opt stack 0
   327  0000A1                     _config_ccp2$1546:
   328                           	opt stack 0
   329                           
   330                           ; 3 bytes @ 0x41
   331  0000A1                     	ds	3
   332  0000A4                     config_ccp1@x:
   333                           	opt stack 0
   334  0000A4                     config_ccp2@x:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x44
   338  0000A4                     	ds	2
   339  0000A6                     config_ccp1@w:
   340                           	opt stack 0
   341  0000A6                     config_ccp2@w:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x46
   345  0000A6                     	ds	2
   346  0000A8                     config_ccp1@y:
   347                           	opt stack 0
   348  0000A8                     config_ccp2@y:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x48
   352  0000A8                     	ds	2
   353  0000AA                     config_ccp1@n:
   354                           	opt stack 0
   355  0000AA                     config_ccp2@n:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x4A
   359  0000AA                     	ds	2
   360  0000AC                     config_ccp1@j:
   361                           	opt stack 0
   362  0000AC                     config_ccp2@j:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x4C
   366  0000AC                     	ds	2
   367                           tblptru	equ	0xFF8
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	opt stack 0
   374  000001                     ?___wmul:
   375                           	opt stack 0
   376  000001                     ?___awdiv:
   377                           	opt stack 0
   378  000001                     ?___ftpack:
   379                           	opt stack 0
   380  000001                     ?_frexp:
   381                           	opt stack 0
   382  000001                     ?___ftneg:
   383                           	opt stack 0
   384  000001                     ___wmul@multiplier:
   385                           	opt stack 0
   386  000001                     ___awdiv@dividend:
   387                           	opt stack 0
   388  000001                     ___ftpack@arg:
   389                           	opt stack 0
   390  000001                     ___ftge@ff1:
   391                           	opt stack 0
   392  000001                     ___ftneg@f1:
   393                           	opt stack 0
   394  000001                     frexp@value:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x0
   398  000001                     	ds	2
   399  000003                     ___wmul@multiplicand:
   400                           	opt stack 0
   401  000003                     ___awdiv@divisor:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000003                     	ds	1
   406  000004                     ___ftpack@exp:
   407                           	opt stack 0
   408  000004                     frexp@eptr:
   409                           	opt stack 0
   410  000004                     ___ftge@ff2:
   411                           	opt stack 0
   412                           
   413                           ; 3 bytes @ 0x3
   414  000004                     	ds	1
   415  000005                     ___awdiv@counter:
   416                           	opt stack 0
   417  000005                     ___ftpack@sign:
   418                           	opt stack 0
   419  000005                     ___wmul@product:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423  000005                     	ds	1
   424  000006                     ??___ftpack:
   425  000006                     ??_frexp:
   426  000006                     ___awdiv@sign:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x5
   430  000006                     	ds	1
   431  000007                     ??___ftge:
   432  000007                     ___awdiv@quotient:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x6
   436  000007                     	ds	2
   437  000009                     ?___awtoft:
   438                           	opt stack 0
   439  000009                     ?___lbtoft:
   440                           	opt stack 0
   441  000009                     ?___lltoft:
   442                           	opt stack 0
   443  000009                     ___awtoft@c:
   444                           	opt stack 0
   445  000009                     ___lltoft@c:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x8
   449  000009                     	ds	3
   450  00000C                     ___awtoft@sign:
   451                           	opt stack 0
   452  00000C                     ___lbtoft@c:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0xB
   456  00000C                     	ds	1
   457  00000D                     ??___lltoft:
   458  00000D                     ?___ftmul:
   459                           	opt stack 0
   460  00000D                     config_timer2@onoff:
   461                           	opt stack 0
   462  00000D                     ___ftmul@f1:
   463                           	opt stack 0
   464                           
   465                           ; 3 bytes @ 0xC
   466  00000D                     	ds	2
   467  00000F                     config_timer2@presc:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471  00000F                     	ds	1
   472  000010                     ___ftmul@f2:
   473                           	opt stack 0
   474                           
   475                           ; 3 bytes @ 0xF
   476  000010                     	ds	1
   477  000011                     ??_config_timer2:
   478  000011                     ___lltoft@exp:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x10
   482  000011                     	ds	2
   483  000013                     ??___ftmul:
   484                           
   485                           ; 1 bytes @ 0x12
   486  000013                     	ds	3
   487  000016                     ___ftmul@exp:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x15
   491  000016                     	ds	1
   492  000017                     ___ftmul@f3_as_product:
   493                           	opt stack 0
   494                           
   495                           ; 3 bytes @ 0x16
   496  000017                     	ds	3
   497  00001A                     ___ftmul@cntr:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  00001A                     	ds	1
   502  00001B                     ___ftmul@sign:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506  00001B                     	ds	1
   507  00001C                     ?___ftdiv:
   508                           	opt stack 0
   509  00001C                     ___ftdiv@f1:
   510                           	opt stack 0
   511                           
   512                           ; 3 bytes @ 0x1B
   513  00001C                     	ds	3
   514  00001F                     ___ftdiv@f2:
   515                           	opt stack 0
   516                           
   517                           ; 3 bytes @ 0x1E
   518  00001F                     	ds	3
   519  000022                     ??___ftdiv:
   520                           
   521                           ; 1 bytes @ 0x21
   522  000022                     	ds	3
   523  000025                     ___ftdiv@cntr:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x24
   527  000025                     	ds	1
   528  000026                     ___ftdiv@f3:
   529                           	opt stack 0
   530                           
   531                           ; 3 bytes @ 0x25
   532  000026                     	ds	3
   533  000029                     ___ftdiv@exp:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x28
   537  000029                     	ds	1
   538  00002A                     ___ftdiv@sign:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x29
   542  00002A                     	ds	1
   543  00002B                     ?___ftadd:
   544                           	opt stack 0
   545  00002B                     ___ftadd@f1:
   546                           	opt stack 0
   547                           
   548                           ; 3 bytes @ 0x2A
   549  00002B                     	ds	3
   550  00002E                     ___ftadd@f2:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0x2D
   554  00002E                     	ds	3
   555  000031                     ??___ftadd:
   556                           
   557                           ; 1 bytes @ 0x30
   558  000031                     	ds	3
   559  000034                     ___ftadd@sign:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x33
   563  000034                     	ds	1
   564  000035                     ___ftadd@exp2:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x34
   568  000035                     	ds	1
   569  000036                     ___ftadd@exp1:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x35
   573  000036                     	ds	1
   574  000037                     ?___ftsub:
   575                           	opt stack 0
   576  000037                     ?_eval_poly:
   577                           	opt stack 0
   578  000037                     ?___fttol:
   579                           	opt stack 0
   580  000037                     ___ftsub@f1:
   581                           	opt stack 0
   582  000037                     ___fttol@f1:
   583                           	opt stack 0
   584  000037                     eval_poly@x:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x36
   588  000037                     	ds	3
   589  00003A                     eval_poly@d:
   590                           	opt stack 0
   591  00003A                     ___ftsub@f2:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x39
   595  00003A                     	ds	1
   596  00003B                     ??___fttol:
   597                           
   598                           ; 1 bytes @ 0x3A
   599  00003B                     	ds	1
   600  00003C                     eval_poly@n:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x3B
   604  00003C                     	ds	1
   605  00003D                     
   606                           ; 1 bytes @ 0x3C
   607  00003D                     	ds	1
   608  00003E                     ??_eval_poly:
   609                           
   610                           ; 1 bytes @ 0x3D
   611  00003E                     	ds	2
   612  000040                     ___fttol@sign1:
   613                           	opt stack 0
   614  000040                     eval_poly@res:
   615                           	opt stack 0
   616                           
   617                           ; 3 bytes @ 0x3F
   618  000040                     	ds	1
   619  000041                     ___fttol@lval:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x40
   623  000041                     	ds	2
   624  000043                     ?_log:
   625                           	opt stack 0
   626  000043                     ?_ldexp:
   627                           	opt stack 0
   628  000043                     ldexp@value:
   629                           	opt stack 0
   630  000043                     log@x:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x42
   634  000043                     	ds	2
   635  000045                     ___fttol@exp1:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x44
   639  000045                     	ds	1
   640  000046                     ?___altoft:
   641                           	opt stack 0
   642  000046                     ldexp@newexp:
   643                           	opt stack 0
   644  000046                     log@exponent:
   645                           	opt stack 0
   646  000046                     coinfig_ccpcon@fosc:
   647                           	opt stack 0
   648  000046                     ___altoft@c:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x45
   652  000046                     	ds	2
   653  000048                     ??_ldexp:
   654                           
   655                           ; 1 bytes @ 0x47
   656  000048                     	ds	1
   657  000049                     coinfig_ccpcon@freq:
   658                           	opt stack 0
   659                           
   660                           ; 3 bytes @ 0x48
   661  000049                     	ds	1
   662  00004A                     ??___altoft:
   663                           
   664                           ; 1 bytes @ 0x49
   665  00004A                     	ds	2
   666  00004C                     _coinfig_ccpcon$1540:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x4B
   670  00004C                     	ds	2
   671  00004E                     ___altoft@exp:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x4D
   675  00004E                     	ds	1
   676  00004F                     ___altoft@sign:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x4E
   680  00004F                     	ds	1
   681  000050                     ?_floor:
   682                           	opt stack 0
   683  000050                     floor@x:
   684                           	opt stack 0
   685                           
   686                           ; 3 bytes @ 0x4F
   687  000050                     	ds	3
   688  000053                     floor@i:
   689                           	opt stack 0
   690                           
   691                           ; 3 bytes @ 0x52
   692  000053                     	ds	3
   693  000056                     floor@expon:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x55
   697  000056                     	ds	2
   698  000058                     ?_exp:
   699                           	opt stack 0
   700  000058                     exp@x:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x57
   704  000058                     	ds	3
   705  00005B                     config_ccp1@duty1:
   706                           	opt stack 0
   707  00005B                     config_ccp2@duty2:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x5A
   711  00005B                     	ds	2
   712  00005D                     ??_config_ccp1:
   713  00005D                     ??_config_ccp2:
   714                           
   715                           ; 1 bytes @ 0x5C
   716  00005D                     	ds	2
   717  00005F                     carroGirar@direccion:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x5E
   721  00005F                     	ds	1
   722  000060                     tblptru	equ	0xFF8
   723                           postinc0	equ	0xFEE
   724                           wreg	equ	0xFE8
   725                           
   726                           ; 1 bytes @ 0x5F
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 246 in file "carroMain.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   746 ;;      Params:         0       0       0       0       0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels required when called:    7
   752 ;; This function calls:
   753 ;;		_carroAvanzar
   754 ;;		_carroAvanzarEspecial
   755 ;;		_carroGirar
   756 ;;		_coinfig_ccpcon
   757 ;;		_configBoard
   758 ;;		_config_timer2
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text0
   765  0012F4                     __ptext0:
   766                           	opt stack 0
   767  0012F4                     _main:
   768                           	opt stack 24
   769                           
   770                           ;carroMain.c: 248: configBoard();
   771                           
   772                           ;incstack = 0
   773  0012F4  EC5A  F00F         	call	_configBoard	;wreg free
   774                           
   775                           ;carroMain.c: 249: ADCON1bits.PCFG = 0b1111;
   776  0012F8  80C1               	bsf	4033,0,c	;volatile
   777  0012FA  82C1               	bsf	4033,1,c	;volatile
   778  0012FC  84C1               	bsf	4033,2,c	;volatile
   779  0012FE  86C1               	bsf	4033,3,c	;volatile
   780                           
   781                           ;carroMain.c: 251: TRISAbits.RA0=0;
   782  001300  9092               	bcf	3986,0,c	;volatile
   783                           
   784                           ;carroMain.c: 252: TRISAbits.RA1=0;
   785  001302  9292               	bcf	3986,1,c	;volatile
   786                           
   787                           ;carroMain.c: 253: TRISEbits.RE0=0;
   788  001304  9096               	bcf	3990,0,c	;volatile
   789                           
   790                           ;carroMain.c: 254: TRISEbits.RE1=0;
   791  001306  9296               	bcf	3990,1,c	;volatile
   792                           
   793                           ;carroMain.c: 256: TRISBbits.RB5=1;
   794  001308  8A93               	bsf	3987,5,c	;volatile
   795                           
   796                           ;carroMain.c: 257: TRISBbits.RB4=1;
   797  00130A  8893               	bsf	3987,4,c	;volatile
   798                           
   799                           ;carroMain.c: 258: TRISBbits.RB3=1;
   800  00130C  8693               	bsf	3987,3,c	;volatile
   801                           
   802                           ;carroMain.c: 259: TRISBbits.RB2=1;
   803  00130E  8493               	bsf	3987,2,c	;volatile
   804                           
   805                           ;carroMain.c: 260: TRISBbits.RB1=1;
   806  001310  8293               	bsf	3987,1,c	;volatile
   807                           
   808                           ;carroMain.c: 264: TRISCbits.RC2 = 0;
   809  001312  9494               	bcf	3988,2,c	;volatile
   810                           
   811                           ;carroMain.c: 265: TRISCbits.RC1 = 0;
   812  001314  9294               	bcf	3988,1,c	;volatile
   813                           
   814                           ;carroMain.c: 267: config_timer2(0,16);
   815  001316  0E00               	movlw	0
   816  001318  6E0E               	movwf	config_timer2@onoff+1,c
   817  00131A  0E00               	movlw	0
   818  00131C  6E0D               	movwf	config_timer2@onoff,c
   819  00131E  0E00               	movlw	0
   820  001320  6E10               	movwf	config_timer2@presc+1,c
   821  001322  0E10               	movlw	16
   822  001324  6E0F               	movwf	config_timer2@presc,c
   823  001326  EC22  F00F         	call	_config_timer2	;wreg free
   824                           
   825                           ;carroMain.c: 268: coinfig_ccpcon(48000000,15000);
   826  00132A  0E1B               	movlw	27
   827  00132C  6E46               	movwf	coinfig_ccpcon@fosc,c
   828  00132E  0E37               	movlw	55
   829  001330  6E47               	movwf	coinfig_ccpcon@fosc+1,c
   830  001332  0E4C               	movlw	76
   831  001334  6E48               	movwf	coinfig_ccpcon@fosc+2,c
   832  001336  0E60               	movlw	96
   833  001338  6E49               	movwf	coinfig_ccpcon@freq,c
   834  00133A  0E6A               	movlw	106
   835  00133C  6E4A               	movwf	coinfig_ccpcon@freq+1,c
   836  00133E  0E46               	movlw	70
   837  001340  6E4B               	movwf	coinfig_ccpcon@freq+2,c
   838  001342  EC61  F00D         	call	_coinfig_ccpcon	;wreg free
   839                           
   840                           ;carroMain.c: 272: T2CONbits.TMR2ON = 1;
   841  001346  84CA               	bsf	4042,2,c	;volatile
   842  001348                     
   843                           ;carroMain.c: 278: if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbits.RB
      +                          3==0&&PORTBbits.RB1==0){
   844  001348  A481               	btfss	3969,2,c	;volatile
   845  00134A  BA81               	btfsc	3969,5,c	;volatile
   846  00134C  D008               	goto	l44
   847  00134E  A881               	btfss	3969,4,c	;volatile
   848  001350  B681               	btfsc	3969,3,c	;volatile
   849  001352  D005               	goto	l44
   850  001354  B281               	btfsc	3969,1,c	;volatile
   851  001356  D003               	goto	l44
   852                           
   853                           ;carroMain.c: 279: carroAvanzarEspecial();
   854  001358  EC51  F010         	call	_carroAvanzarEspecial	;wreg free
   855                           
   856                           ;carroMain.c: 280: }
   857  00135C  D7F5               	goto	l43
   858  00135E                     l44:
   859                           
   860                           ;carroMain.c: 281: else if (PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBb
      +                          its.RB3==0&&PORTBbits.RB1==1){
   861  00135E  A481               	btfss	3969,2,c	;volatile
   862  001360  BA81               	btfsc	3969,5,c	;volatile
   863  001362  D009               	goto	l46
   864  001364  A881               	btfss	3969,4,c	;volatile
   865  001366  B681               	btfsc	3969,3,c	;volatile
   866  001368  D006               	goto	l46
   867  00136A  A281               	btfss	3969,1,c	;volatile
   868  00136C  D004               	goto	l46
   869                           
   870                           ;carroMain.c: 282: carroGirar(1);
   871  00136E  0E01               	movlw	1
   872  001370  ECB8  F00F         	call	_carroGirar
   873                           
   874                           ;carroMain.c: 283: }
   875  001374  D7E9               	goto	l43
   876  001376                     l46:
   877                           
   878                           ;carroMain.c: 284: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   879  001376  A481               	btfss	3969,2,c	;volatile
   880  001378  BA81               	btfsc	3969,5,c	;volatile
   881  00137A  D009               	goto	l48
   882  00137C  A881               	btfss	3969,4,c	;volatile
   883  00137E  A681               	btfss	3969,3,c	;volatile
   884  001380  D006               	goto	l48
   885  001382  B281               	btfsc	3969,1,c	;volatile
   886  001384  D004               	goto	l48
   887                           
   888                           ;carroMain.c: 285: carroGirar(1);
   889  001386  0E01               	movlw	1
   890  001388  ECB8  F00F         	call	_carroGirar
   891                           
   892                           ;carroMain.c: 286: }
   893  00138C  D7DD               	goto	l43
   894  00138E                     l48:
   895                           
   896                           ;carroMain.c: 287: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==1){
   897  00138E  A481               	btfss	3969,2,c	;volatile
   898  001390  BA81               	btfsc	3969,5,c	;volatile
   899  001392  D009               	goto	l50
   900  001394  A881               	btfss	3969,4,c	;volatile
   901  001396  A681               	btfss	3969,3,c	;volatile
   902  001398  D006               	goto	l50
   903  00139A  A281               	btfss	3969,1,c	;volatile
   904  00139C  D004               	goto	l50
   905                           
   906                           ;carroMain.c: 288: carroGirar(1);
   907  00139E  0E01               	movlw	1
   908  0013A0  ECB8  F00F         	call	_carroGirar
   909                           
   910                           ;carroMain.c: 289: }
   911  0013A4  D7D1               	goto	l43
   912  0013A6                     l50:
   913                           
   914                           ;carroMain.c: 290: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   915  0013A6  A481               	btfss	3969,2,c	;volatile
   916  0013A8  BA81               	btfsc	3969,5,c	;volatile
   917  0013AA  D008               	goto	l52
   918  0013AC  B881               	btfsc	3969,4,c	;volatile
   919  0013AE  B681               	btfsc	3969,3,c	;volatile
   920  0013B0  D005               	goto	l52
   921  0013B2  B281               	btfsc	3969,1,c	;volatile
   922  0013B4  D003               	goto	l52
   923                           
   924                           ;carroMain.c: 291: carroAvanzar();
   925  0013B6  EC62  F010         	call	_carroAvanzar	;wreg free
   926                           
   927                           ;carroMain.c: 292: }
   928  0013BA  D7C6               	goto	l43
   929  0013BC                     l52:
   930                           
   931                           ;carroMain.c: 293: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   932  0013BC  A481               	btfss	3969,2,c	;volatile
   933  0013BE  BA81               	btfsc	3969,5,c	;volatile
   934  0013C0  D009               	goto	l54
   935  0013C2  B881               	btfsc	3969,4,c	;volatile
   936  0013C4  A681               	btfss	3969,3,c	;volatile
   937  0013C6  D006               	goto	l54
   938  0013C8  B281               	btfsc	3969,1,c	;volatile
   939  0013CA  D004               	goto	l54
   940                           
   941                           ;carroMain.c: 294: carroGirar(1);
   942  0013CC  0E01               	movlw	1
   943  0013CE  ECB8  F00F         	call	_carroGirar
   944                           
   945                           ;carroMain.c: 295: }
   946  0013D2  D7BA               	goto	l43
   947  0013D4                     l54:
   948                           
   949                           ;carroMain.c: 296: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   950  0013D4  A481               	btfss	3969,2,c	;volatile
   951  0013D6  AA81               	btfss	3969,5,c	;volatile
   952  0013D8  D009               	goto	l56
   953  0013DA  A881               	btfss	3969,4,c	;volatile
   954  0013DC  B681               	btfsc	3969,3,c	;volatile
   955  0013DE  D006               	goto	l56
   956  0013E0  B281               	btfsc	3969,1,c	;volatile
   957  0013E2  D004               	goto	l56
   958                           
   959                           ;carroMain.c: 297: carroGirar(3);
   960  0013E4  0E03               	movlw	3
   961  0013E6  ECB8  F00F         	call	_carroGirar
   962                           
   963                           ;carroMain.c: 298: }
   964  0013EA  D7AE               	goto	l43
   965  0013EC                     l56:
   966                           
   967                           ;carroMain.c: 299: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   968  0013EC  A481               	btfss	3969,2,c	;volatile
   969  0013EE  AA81               	btfss	3969,5,c	;volatile
   970  0013F0  D009               	goto	l58
   971  0013F2  B881               	btfsc	3969,4,c	;volatile
   972  0013F4  B681               	btfsc	3969,3,c	;volatile
   973  0013F6  D006               	goto	l58
   974  0013F8  B281               	btfsc	3969,1,c	;volatile
   975  0013FA  D004               	goto	l58
   976                           
   977                           ;carroMain.c: 300: carroGirar(3);
   978  0013FC  0E03               	movlw	3
   979  0013FE  ECB8  F00F         	call	_carroGirar
   980                           
   981                           ;carroMain.c: 301: }
   982  001402  D7A2               	goto	l43
   983  001404                     l58:
   984                           
   985                           ;carroMain.c: 302: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   986  001404  A481               	btfss	3969,2,c	;volatile
   987  001406  AA81               	btfss	3969,5,c	;volatile
   988  001408  D008               	goto	l60
   989  00140A  B881               	btfsc	3969,4,c	;volatile
   990  00140C  A681               	btfss	3969,3,c	;volatile
   991  00140E  D005               	goto	l60
   992  001410  B281               	btfsc	3969,1,c	;volatile
   993  001412  D003               	goto	l60
   994                           
   995                           ;carroMain.c: 303: carroAvanzarEspecial();
   996  001414  EC51  F010         	call	_carroAvanzarEspecial	;wreg free
   997                           
   998                           ;carroMain.c: 304: }
   999  001418  D797               	goto	l43
  1000  00141A                     l60:
  1001                           
  1002                           ;carroMain.c: 305: else if(PORTBbits.RB2==1&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1003  00141A  B481               	btfsc	3969,2,c	;volatile
  1004  00141C  BA81               	btfsc	3969,5,c	;volatile
  1005  00141E  D009               	goto	l62
  1006  001420  A881               	btfss	3969,4,c	;volatile
  1007  001422  B681               	btfsc	3969,3,c	;volatile
  1008  001424  D006               	goto	l62
  1009  001426  B281               	btfsc	3969,1,c	;volatile
  1010  001428  D004               	goto	l62
  1011                           
  1012                           ;carroMain.c: 306: carroGirar(3);
  1013  00142A  0E03               	movlw	3
  1014  00142C  ECB8  F00F         	call	_carroGirar
  1015                           
  1016                           ;carroMain.c: 307: }
  1017  001430  D78B               	goto	l43
  1018  001432                     l62:
  1019                           
  1020                           ;carroMain.c: 308: else if(PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1021  001432  B481               	btfsc	3969,2,c	;volatile
  1022  001434  AA81               	btfss	3969,5,c	;volatile
  1023  001436  D009               	goto	l64
  1024  001438  A881               	btfss	3969,4,c	;volatile
  1025  00143A  B681               	btfsc	3969,3,c	;volatile
  1026  00143C  D006               	goto	l64
  1027  00143E  B281               	btfsc	3969,1,c	;volatile
  1028  001440  D004               	goto	l64
  1029                           
  1030                           ;carroMain.c: 309: carroGirar(3);
  1031  001442  0E03               	movlw	3
  1032  001444  ECB8  F00F         	call	_carroGirar
  1033                           
  1034                           ;carroMain.c: 310: }
  1035  001448  D77F               	goto	l43
  1036  00144A                     l64:
  1037                           
  1038                           ;carroMain.c: 311: else if (PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBb
      +                          its.RB3==1&&PORTBbits.RB1==1){
  1039  00144A  B481               	btfsc	3969,2,c	;volatile
  1040  00144C  AA81               	btfss	3969,5,c	;volatile
  1041  00144E  D77C               	goto	l43
  1042  001450  B881               	btfsc	3969,4,c	;volatile
  1043  001452  A681               	btfss	3969,3,c	;volatile
  1044  001454  D779               	goto	l43
  1045  001456  A281               	btfss	3969,1,c	;volatile
  1046  001458  D777               	goto	l43
  1047                           
  1048                           ;carroMain.c: 312: carroAvanzarEspecial();
  1049  00145A  EC51  F010         	call	_carroAvanzarEspecial	;wreg free
  1050  00145E  D774               	goto	l43
  1051  001460                     __end_of_main:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           
  1057 ;; *************** function _config_timer2 *****************
  1058 ;; Defined at:
  1059 ;;		line 14 in file "Pwm.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  onoff           2   12[COMRAM] int 
  1062 ;;  presc           2   14[COMRAM] int 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         4       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        6 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; Hardware stack levels required when called:    2
  1081 ;; This function calls:
  1082 ;;		___awtoft
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text1
  1089  001E44                     __ptext1:
  1090                           	opt stack 0
  1091  001E44                     _config_timer2:
  1092                           	opt stack 28
  1093                           
  1094                           ;Pwm.c: 16: T2CONbits.TOUTPS = 0b0000;
  1095                           
  1096                           ;incstack = 0
  1097  001E44  96CA               	bcf	4042,3,c	;volatile
  1098  001E46  98CA               	bcf	4042,4,c	;volatile
  1099  001E48  9ACA               	bcf	4042,5,c	;volatile
  1100  001E4A  9CCA               	bcf	4042,6,c	;volatile
  1101                           
  1102                           ;Pwm.c: 18: prescg = presc;
  1103  001E4C  C00F  F009         	movff	config_timer2@presc,___awtoft@c
  1104  001E50  C010  F00A         	movff	config_timer2@presc+1,___awtoft@c+1
  1105  001E54  ECFE  F00F         	call	___awtoft	;wreg free
  1106  001E58  C009  F0EF         	movff	?___awtoft,_prescg
  1107  001E5C  C00A  F0F0         	movff	?___awtoft+1,_prescg+1
  1108  001E60  C00B  F0F1         	movff	?___awtoft+2,_prescg+2
  1109                           
  1110                           ;Pwm.c: 20: switch(presc)
  1111  001E64  D00B               	goto	l163
  1112  001E66  0EFC               	movlw	-4
  1113  001E68  16CA               	andwf	4042,f,c	;volatile
  1114  001E6A  D01A               	goto	l165
  1115  001E6C  50CA               	movf	4042,w,c	;volatile
  1116  001E6E  0BFC               	andlw	-4
  1117  001E70  0901               	iorlw	1
  1118  001E72  6ECA               	movwf	4042,c	;volatile
  1119  001E74  D015               	goto	l165
  1120  001E76  0E03               	movlw	3
  1121  001E78  12CA               	iorwf	4042,f,c	;volatile
  1122                           
  1123                           ;Pwm.c: 25: }
  1124  001E7A  D012               	goto	l165
  1125  001E7C                     l163:
  1126  001E7C  C00F  F011         	movff	config_timer2@presc,??_config_timer2
  1127  001E80  C010  F012         	movff	config_timer2@presc+1,??_config_timer2+1
  1128                           
  1129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1130                           ; Switch size 1, requested type "space"
  1131                           ; Number of cases is 1, Range of values is 0 to 0
  1132                           ; switch strategies available:
  1133                           ; Name         Instructions Cycles
  1134                           ; simple_byte            4     3 (average)
  1135                           ;	Chosen strategy is simple_byte
  1136  001E84  5012               	movf	??_config_timer2+1,w,c
  1137  001E86  0A00               	xorlw	0	; case 0
  1138  001E88  A4D8               	btfss	status,2,c
  1139  001E8A  D00A               	goto	l165
  1140                           
  1141                           ; Switch size 1, requested type "space"
  1142                           ; Number of cases is 3, Range of values is 1 to 16
  1143                           ; switch strategies available:
  1144                           ; Name         Instructions Cycles
  1145                           ; simple_byte           10     6 (average)
  1146                           ;	Chosen strategy is simple_byte
  1147  001E8C  5011               	movf	??_config_timer2,w,c
  1148  001E8E  0A01               	xorlw	1	; case 1
  1149  001E90  B4D8               	btfsc	status,2,c
  1150  001E92  D7E9               	goto	l164
  1151  001E94  0A05               	xorlw	5	; case 4
  1152  001E96  B4D8               	btfsc	status,2,c
  1153  001E98  D7E9               	goto	l166
  1154  001E9A  0A14               	xorlw	20	; case 16
  1155  001E9C  B4D8               	btfsc	status,2,c
  1156  001E9E  D7EB               	goto	l167
  1157  001EA0                     l165:
  1158                           
  1159                           ;Pwm.c: 27: T2CONbits.TOUTPS = 0b0000;
  1160  001EA0  96CA               	bcf	4042,3,c	;volatile
  1161  001EA2  98CA               	bcf	4042,4,c	;volatile
  1162  001EA4  9ACA               	bcf	4042,5,c	;volatile
  1163  001EA6  9CCA               	bcf	4042,6,c	;volatile
  1164                           
  1165                           ;Pwm.c: 29: T2CONbits.TMR2ON = onoff;
  1166  001EA8  B00D               	btfsc	config_timer2@onoff,0,c
  1167  001EAA  D002               	bra	u2775
  1168  001EAC  94CA               	bcf	4042,2,c	;volatile
  1169  001EAE  D001               	bra	u2776
  1170  001EB0                     u2775:
  1171  001EB0  84CA               	bsf	4042,2,c	;volatile
  1172  001EB2                     u2776:
  1173  001EB2  0012               	return		;funcret
  1174  001EB4                     __end_of_config_timer2:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _configBoard *****************
  1182 ;; Defined at:
  1183 ;;		line 11 in file "config.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text2
  1211  001EB4                     __ptext2:
  1212                           	opt stack 0
  1213  001EB4                     _configBoard:
  1214                           	opt stack 30
  1215                           
  1216                           ;config.c: 15: INTCONbits.GIE = 0;
  1217                           
  1218                           ;incstack = 0
  1219  001EB4  9EF2               	bcf	intcon,7,c	;volatile
  1220                           
  1221                           ;config.c: 16: INTCONbits.PEIE = 0;
  1222  001EB6  9CF2               	bcf	intcon,6,c	;volatile
  1223                           
  1224                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1225  001EB8  8ED5               	bsf	4053,7,c	;volatile
  1226                           
  1227                           ;config.c: 26: T08BIT = 1;
  1228  001EBA  8CD5               	bsf	4053,6,c	;volatile
  1229                           
  1230                           ;config.c: 27: T0CONbits.T0CS = 0;
  1231  001EBC  9AD5               	bcf	4053,5,c	;volatile
  1232                           
  1233                           ;config.c: 29: T0CONbits.PSA = 0;
  1234  001EBE  96D5               	bcf	4053,3,c	;volatile
  1235                           
  1236                           ;config.c: 30: T0CONbits.T0PS = 100;
  1237  001EC0  50D5               	movf	4053,w,c	;volatile
  1238  001EC2  0BF8               	andlw	-8
  1239  001EC4  0904               	iorlw	4
  1240  001EC6  6ED5               	movwf	4053,c	;volatile
  1241                           
  1242                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1243  001EC8  94F2               	bcf	intcon,2,c	;volatile
  1244                           
  1245                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1246  001ECA  80C1               	bsf	4033,0,c	;volatile
  1247  001ECC  82C1               	bsf	4033,1,c	;volatile
  1248  001ECE  84C1               	bsf	4033,2,c	;volatile
  1249  001ED0  86C1               	bsf	4033,3,c	;volatile
  1250                           
  1251                           ;config.c: 44: ADCON0 = 0b00000111;
  1252  001ED2  0E07               	movlw	7
  1253  001ED4  6EC2               	movwf	4034,c	;volatile
  1254                           
  1255                           ;config.c: 47: ADCON0bits.ADON = 0;
  1256  001ED6  90C2               	bcf	4034,0,c	;volatile
  1257                           
  1258                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1259  001ED8  8EC0               	bsf	4032,7,c	;volatile
  1260                           
  1261                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1262  001EDA  50C0               	movf	4032,w,c	;volatile
  1263  001EDC  0BF8               	andlw	-8
  1264  001EDE  0906               	iorlw	6
  1265  001EE0  6EC0               	movwf	4032,c	;volatile
  1266                           
  1267                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1268  001EE2  50C0               	movf	4032,w,c	;volatile
  1269  001EE4  0BC7               	andlw	-57
  1270  001EE6  0928               	iorlw	40
  1271  001EE8  6EC0               	movwf	4032,c	;volatile
  1272                           
  1273                           ;config.c: 55: TRISAbits.RA1=1;
  1274  001EEA  8292               	bsf	3986,1,c	;volatile
  1275                           
  1276                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1277  001EEC  50C0               	movf	4032,w,c	;volatile
  1278  001EEE  0BF8               	andlw	-8
  1279  001EF0  0906               	iorlw	6
  1280  001EF2  6EC0               	movwf	4032,c	;volatile
  1281                           
  1282                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1283  001EF4  9AC1               	bcf	4033,5,c	;volatile
  1284                           
  1285                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1286  001EF6  98C1               	bcf	4033,4,c	;volatile
  1287                           
  1288                           ;config.c: 60: ADCON2bits.ADFM=1;
  1289  001EF8  8EC0               	bsf	4032,7,c	;volatile
  1290                           
  1291                           ;config.c: 64: ADCON0bits.ADON=0;
  1292  001EFA  90C2               	bcf	4034,0,c	;volatile
  1293                           
  1294                           ;config.c: 66: PIE1bits.ADIE=0;
  1295  001EFC  9C9D               	bcf	3997,6,c	;volatile
  1296                           
  1297                           ;config.c: 67: PIR1bits.ADIF=0;
  1298  001EFE  9C9E               	bcf	3998,6,c	;volatile
  1299                           
  1300                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1301  001F00  86C0               	bsf	4032,3,c	;volatile
  1302  001F02  88C0               	bsf	4032,4,c	;volatile
  1303  001F04  8AC0               	bsf	4032,5,c	;volatile
  1304                           
  1305                           ;config.c: 70: ADCON0bits.GO=1;
  1306  001F06  82C2               	bsf	4034,1,c	;volatile
  1307                           
  1308                           ;config.c: 72: RCIF=0;
  1309  001F08  9A9E               	bcf	3998,5,c	;volatile
  1310                           
  1311                           ;config.c: 75: TRISD=0;
  1312  001F0A  0E00               	movlw	0
  1313  001F0C  6E95               	movwf	3989,c	;volatile
  1314                           
  1315                           ;config.c: 76: PORTA=0;
  1316  001F0E  0E00               	movlw	0
  1317  001F10  6E80               	movwf	3968,c	;volatile
  1318  001F12  0012               	return		;funcret
  1319  001F14                     __end_of_configBoard:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           intcon	equ	0xFF2
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           status	equ	0xFD8
  1326                           
  1327 ;; *************** function _coinfig_ccpcon *****************
  1328 ;; Defined at:
  1329 ;;		line 34 in file "Pwm.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  fosc            3   69[COMRAM] float 
  1332 ;;  freq            3   72[COMRAM] float 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         6       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        9 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    2
  1351 ;; This function calls:
  1352 ;;		___ftadd
  1353 ;;		___ftdiv
  1354 ;;		___ftmul
  1355 ;;		___fttol
  1356 ;;		___lbtoft
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text3
  1363  001AC2                     __ptext3:
  1364                           	opt stack 0
  1365  001AC2                     _coinfig_ccpcon:
  1366                           	opt stack 28
  1367                           
  1368                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1369                           
  1370                           ;incstack = 0
  1371  001AC2  C0EF  F010         	movff	_prescg,___ftmul@f2
  1372  001AC6  C0F0  F011         	movff	_prescg+1,___ftmul@f2+1
  1373  001ACA  C0F1  F012         	movff	_prescg+2,___ftmul@f2+2
  1374  001ACE  C049  F00D         	movff	coinfig_ccpcon@freq,___ftmul@f1
  1375  001AD2  C04A  F00E         	movff	coinfig_ccpcon@freq+1,___ftmul@f1+1
  1376  001AD6  C04B  F00F         	movff	coinfig_ccpcon@freq+2,___ftmul@f1+2
  1377  001ADA  EC39  F00B         	call	___ftmul	;wreg free
  1378  001ADE  C00D  F04C         	movff	?___ftmul,_coinfig_ccpcon$1540
  1379  001AE2  C00E  F04D         	movff	?___ftmul+1,_coinfig_ccpcon$1540+1
  1380  001AE6  C00F  F04E         	movff	?___ftmul+2,_coinfig_ccpcon$1540+2
  1381                           
  1382                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1383  001AEA  0E00               	movlw	0
  1384  001AEC  6E2E               	movwf	___ftadd@f2,c
  1385  001AEE  0E80               	movlw	128
  1386  001AF0  6E2F               	movwf	___ftadd@f2+1,c
  1387  001AF2  0EBF               	movlw	191
  1388  001AF4  6E30               	movwf	___ftadd@f2+2,c
  1389  001AF6  0E00               	movlw	0
  1390  001AF8  6E10               	movwf	___ftmul@f2,c
  1391  001AFA  0E80               	movlw	128
  1392  001AFC  6E11               	movwf	___ftmul@f2+1,c
  1393  001AFE  0E40               	movlw	64
  1394  001B00  6E12               	movwf	___ftmul@f2+2,c
  1395  001B02  C04C  F00D         	movff	_coinfig_ccpcon$1540,___ftmul@f1
  1396  001B06  C04D  F00E         	movff	_coinfig_ccpcon$1540+1,___ftmul@f1+1
  1397  001B0A  C04E  F00F         	movff	_coinfig_ccpcon$1540+2,___ftmul@f1+2
  1398  001B0E  EC39  F00B         	call	___ftmul	;wreg free
  1399  001B12  C00D  F01F         	movff	?___ftmul,___ftdiv@f2
  1400  001B16  C00E  F020         	movff	?___ftmul+1,___ftdiv@f2+1
  1401  001B1A  C00F  F021         	movff	?___ftmul+2,___ftdiv@f2+2
  1402  001B1E  C046  F01C         	movff	coinfig_ccpcon@fosc,___ftdiv@f1
  1403  001B22  C047  F01D         	movff	coinfig_ccpcon@fosc+1,___ftdiv@f1+1
  1404  001B26  C048  F01E         	movff	coinfig_ccpcon@fosc+2,___ftdiv@f1+2
  1405  001B2A  ECB3  F00B         	call	___ftdiv	;wreg free
  1406  001B2E  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  1407  001B32  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  1408  001B36  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  1409  001B3A  ECE6  F007         	call	___ftadd	;wreg free
  1410  001B3E  C02B  F037         	movff	?___ftadd,___fttol@f1
  1411  001B42  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  1412  001B46  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  1413  001B4A  ECBF  F00A         	call	___fttol	;wreg free
  1414  001B4E  5037               	movf	?___fttol,w,c
  1415  001B50  6ECB               	movwf	4043,c	;volatile
  1416                           
  1417                           ;Pwm.c: 37: pr2g = PR2;
  1418  001B52  50CB               	movf	4043,w,c	;volatile
  1419  001B54  EC2D  F010         	call	___lbtoft
  1420  001B58  C009  F0EA         	movff	?___lbtoft,_pr2g
  1421  001B5C  C00A  F0EB         	movff	?___lbtoft+1,_pr2g+1
  1422  001B60  C00B  F0EC         	movff	?___lbtoft+2,_pr2g+2
  1423                           
  1424                           ;Pwm.c: 38: CCP1CONbits.P1M = 0b00;
  1425  001B64  0E3F               	movlw	-193
  1426  001B66  16BD               	andwf	4029,f,c	;volatile
  1427                           
  1428                           ;Pwm.c: 39: CCP2CONbits.CCP2M = 1100;
  1429  001B68  50BA               	movf	4026,w,c	;volatile
  1430  001B6A  0BF0               	andlw	-16
  1431  001B6C  090C               	iorlw	12
  1432  001B6E  6EBA               	movwf	4026,c	;volatile
  1433                           
  1434                           ;Pwm.c: 40: CCP1CONbits.CCP1M = 1100;
  1435  001B70  50BD               	movf	4029,w,c	;volatile
  1436  001B72  0BF0               	andlw	-16
  1437  001B74  090C               	iorlw	12
  1438  001B76  6EBD               	movwf	4029,c	;volatile
  1439  001B78  0012               	return		;funcret
  1440  001B7A                     __end_of_coinfig_ccpcon:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function ___lbtoft *****************
  1449 ;; Defined at:
  1450 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  c               1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  c               1   11[COMRAM] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  3    8[COMRAM] float 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         3       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1467 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1468 ;;Total ram usage:        4 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    1
  1471 ;; This function calls:
  1472 ;;		___ftpack
  1473 ;; This function is called by:
  1474 ;;		_coinfig_ccpcon
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text4
  1479  00205A                     __ptext4:
  1480                           	opt stack 0
  1481  00205A                     ___lbtoft:
  1482                           	opt stack 28
  1483                           
  1484                           ;incstack = 0
  1485                           ;___lbtoft@c stored from wreg
  1486  00205A  6E0C               	movwf	___lbtoft@c,c
  1487  00205C  500C               	movf	___lbtoft@c,w,c
  1488  00205E  6E01               	movwf	___ftpack@arg,c
  1489  002060  6A02               	clrf	___ftpack@arg+1,c
  1490  002062  6A03               	clrf	___ftpack@arg+2,c
  1491  002064  0E8E               	movlw	142
  1492  002066  6E04               	movwf	___ftpack@exp,c
  1493  002068  0E00               	movlw	0
  1494  00206A  6E05               	movwf	___ftpack@sign,c
  1495  00206C  ECBD  F00D         	call	___ftpack	;wreg free
  1496  002070  C001  F009         	movff	?___ftpack,?___lbtoft
  1497  002074  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1498  002078  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1499  00207C  0012               	return	
  1500  00207E                     __end_of___lbtoft:
  1501                           	opt stack 0
  1502                           tblptru	equ	0xFF8
  1503                           intcon	equ	0xFF2
  1504                           postinc0	equ	0xFEE
  1505                           wreg	equ	0xFE8
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _carroGirar *****************
  1509 ;; Defined at:
  1510 ;;		line 352 in file "carroMain.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  direccion       1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  direccion       1   94[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        1 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    6
  1531 ;; This function calls:
  1532 ;;		_config_ccp1
  1533 ;;		_config_ccp2
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text5
  1540  001F70                     __ptext5:
  1541                           	opt stack 0
  1542  001F70                     _carroGirar:
  1543                           	opt stack 24
  1544                           
  1545                           ;incstack = 0
  1546                           ;carroGirar@direccion stored from wreg
  1547  001F70  6E5F               	movwf	carroGirar@direccion,c
  1548                           
  1549                           ;carroMain.c: 354: if(direccion==1){
  1550  001F72  045F               	decf	carroGirar@direccion,w,c
  1551  001F74  A4D8               	btfss	status,2,c
  1552  001F76  D004               	goto	l81
  1553                           
  1554                           ;carroMain.c: 355: LATAbits.LA0=1;
  1555  001F78  8089               	bsf	3977,0,c	;volatile
  1556                           
  1557                           ;carroMain.c: 356: LATAbits.LA1=0;
  1558  001F7A  9289               	bcf	3977,1,c	;volatile
  1559                           
  1560                           ;carroMain.c: 357: LATEbits.LE1 =0;
  1561  001F7C  928D               	bcf	3981,1,c	;volatile
  1562  001F7E  D010               	goto	L1
  1563  001F80                     l81:
  1564                           
  1565                           ;carroMain.c: 360: else if(direccion==2){
  1566  001F80  0E02               	movlw	2
  1567  001F82  185F               	xorwf	carroGirar@direccion,w,c
  1568  001F84  A4D8               	btfss	status,2,c
  1569  001F86  D005               	goto	l83
  1570                           
  1571                           ;carroMain.c: 361: LATAbits.LA0=1;
  1572  001F88  8089               	bsf	3977,0,c	;volatile
  1573                           
  1574                           ;carroMain.c: 362: LATAbits.LA1=0;
  1575  001F8A  9289               	bcf	3977,1,c	;volatile
  1576                           
  1577                           ;carroMain.c: 363: LATEbits.LE1 =0;
  1578  001F8C  928D               	bcf	3981,1,c	;volatile
  1579                           
  1580                           ;carroMain.c: 364: LATEbits.LE0=1;
  1581  001F8E  808D               	bsf	3981,0,c	;volatile
  1582                           
  1583                           ;carroMain.c: 365: }
  1584  001F90  D008               	goto	l85
  1585  001F92                     l83:
  1586                           
  1587                           ;carroMain.c: 366: else if(direccion==3){
  1588  001F92  0E03               	movlw	3
  1589  001F94  185F               	xorwf	carroGirar@direccion,w,c
  1590  001F96  A4D8               	btfss	status,2,c
  1591  001F98  D004               	goto	l85
  1592                           
  1593                           ;carroMain.c: 367: LATAbits.LA0=0;
  1594  001F9A  9089               	bcf	3977,0,c	;volatile
  1595                           
  1596                           ;carroMain.c: 368: LATAbits.LA1=0;
  1597  001F9C  9289               	bcf	3977,1,c	;volatile
  1598                           
  1599                           ;carroMain.c: 369: LATEbits.LE1 =1;
  1600  001F9E  828D               	bsf	3981,1,c	;volatile
  1601  001FA0                     L1:
  1602                           
  1603                           ;carroMain.c: 370: LATEbits.LE0=0;
  1604  001FA0  908D               	bcf	3981,0,c	;volatile
  1605  001FA2                     l85:
  1606                           
  1607                           ;carroMain.c: 371: }
  1608                           ;carroMain.c: 372: config_ccp1(100);
  1609  001FA2  0E00               	movlw	0
  1610  001FA4  6E5C               	movwf	config_ccp1@duty1+1,c
  1611  001FA6  0E64               	movlw	100
  1612  001FA8  6E5B               	movwf	config_ccp1@duty1,c
  1613  001FAA  EC87  F005         	call	_config_ccp1	;wreg free
  1614                           
  1615                           ;carroMain.c: 373: config_ccp2(100);
  1616  001FAE  0E00               	movlw	0
  1617  001FB0  6E5C               	movwf	config_ccp2@duty2+1,c
  1618  001FB2  0E64               	movlw	100
  1619  001FB4  6E5B               	movwf	config_ccp2@duty2,c
  1620  001FB6  EC1E  F004         	call	_config_ccp2	;wreg free
  1621  001FBA  0012               	return		;funcret
  1622  001FBC                     __end_of_carroGirar:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           intcon	equ	0xFF2
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _carroAvanzarEspecial *****************
  1631 ;; Defined at:
  1632 ;;		line 331 in file "carroMain.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    6
  1653 ;; This function calls:
  1654 ;;		_config_ccp1
  1655 ;;		_config_ccp2
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text6
  1662  0020A2                     __ptext6:
  1663                           	opt stack 0
  1664  0020A2                     _carroAvanzarEspecial:
  1665                           	opt stack 24
  1666                           
  1667                           ;carroMain.c: 333: LATEbits.LE1=1;
  1668                           
  1669                           ;incstack = 0
  1670  0020A2  828D               	bsf	3981,1,c	;volatile
  1671                           
  1672                           ;carroMain.c: 334: LATEbits.LE0=0;
  1673  0020A4  908D               	bcf	3981,0,c	;volatile
  1674                           
  1675                           ;carroMain.c: 335: LATAbits.LA0=1;
  1676  0020A6  8089               	bsf	3977,0,c	;volatile
  1677                           
  1678                           ;carroMain.c: 336: LATAbits.LA1=0;
  1679  0020A8  9289               	bcf	3977,1,c	;volatile
  1680                           
  1681                           ;carroMain.c: 337: config_ccp1(80);
  1682  0020AA  0E00               	movlw	0
  1683  0020AC  6E5C               	movwf	config_ccp1@duty1+1,c
  1684  0020AE  0E50               	movlw	80
  1685  0020B0  6E5B               	movwf	config_ccp1@duty1,c
  1686  0020B2  EC87  F005         	call	_config_ccp1	;wreg free
  1687                           
  1688                           ;carroMain.c: 338: config_ccp2(80);
  1689  0020B6  0E00               	movlw	0
  1690  0020B8  6E5C               	movwf	config_ccp2@duty2+1,c
  1691  0020BA  0E50               	movlw	80
  1692  0020BC  6E5B               	movwf	config_ccp2@duty2,c
  1693  0020BE  EC1E  F004         	call	_config_ccp2	;wreg free
  1694  0020C2  0012               	return		;funcret
  1695  0020C4                     __end_of_carroAvanzarEspecial:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           intcon	equ	0xFF2
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _carroAvanzar *****************
  1704 ;; Defined at:
  1705 ;;		line 322 in file "carroMain.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1722 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1723 ;;Total ram usage:        0 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    6
  1726 ;; This function calls:
  1727 ;;		_config_ccp1
  1728 ;;		_config_ccp2
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text7
  1735  0020C4                     __ptext7:
  1736                           	opt stack 0
  1737  0020C4                     _carroAvanzar:
  1738                           	opt stack 24
  1739                           
  1740                           ;carroMain.c: 323: LATEbits.LE1=1;
  1741                           
  1742                           ;incstack = 0
  1743  0020C4  828D               	bsf	3981,1,c	;volatile
  1744                           
  1745                           ;carroMain.c: 324: LATEbits.LE0=0;
  1746  0020C6  908D               	bcf	3981,0,c	;volatile
  1747                           
  1748                           ;carroMain.c: 325: LATAbits.LA0=1;
  1749  0020C8  8089               	bsf	3977,0,c	;volatile
  1750                           
  1751                           ;carroMain.c: 326: LATAbits.LA1=0;
  1752  0020CA  9289               	bcf	3977,1,c	;volatile
  1753                           
  1754                           ;carroMain.c: 327: config_ccp1(100);
  1755  0020CC  0E00               	movlw	0
  1756  0020CE  6E5C               	movwf	config_ccp1@duty1+1,c
  1757  0020D0  0E64               	movlw	100
  1758  0020D2  6E5B               	movwf	config_ccp1@duty1,c
  1759  0020D4  EC87  F005         	call	_config_ccp1	;wreg free
  1760                           
  1761                           ;carroMain.c: 328: config_ccp2(100);
  1762  0020D8  0E00               	movlw	0
  1763  0020DA  6E5C               	movwf	config_ccp2@duty2+1,c
  1764  0020DC  0E64               	movlw	100
  1765  0020DE  6E5B               	movwf	config_ccp2@duty2,c
  1766  0020E0  EC1E  F004         	call	_config_ccp2	;wreg free
  1767  0020E4  0012               	return		;funcret
  1768  0020E6                     __end_of_carroAvanzar:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           intcon	equ	0xFF2
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _config_ccp2 *****************
  1777 ;; Defined at:
  1778 ;;		line 85 in file "Pwm.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  duty2           2   90[COMRAM] int 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  a              30   23[BANK0 ] int [15]
  1783 ;;  j               2   76[BANK0 ] int 
  1784 ;;  n               2   74[BANK0 ] int 
  1785 ;;  y               2   72[BANK0 ] unsigned int 
  1786 ;;  w               2   70[BANK0 ] unsigned int 
  1787 ;;  x               2   68[BANK0 ] int 
  1788 ;;  z               2   60[BANK0 ] int 
  1789 ;;  i               2   58[BANK0 ] int 
  1790 ;;  valreg          2   56[BANK0 ] int 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         2       0       0       0       0       0       0       0       0
  1801 ;;      Locals:         0      55       0       0       0       0       0       0       0
  1802 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1803 ;;      Totals:         4      55       0       0       0       0       0       0       0
  1804 ;;Total ram usage:       59 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		___awdiv
  1809 ;;		___awtoft
  1810 ;;		___ftadd
  1811 ;;		___ftdiv
  1812 ;;		___ftmul
  1813 ;;		___fttol
  1814 ;;		_pow
  1815 ;; This function is called by:
  1816 ;;		_carroAvanzar
  1817 ;;		_carroAvanzarEspecial
  1818 ;;		_carroGirar
  1819 ;;		_carroAtras
  1820 ;;		_carroMatar
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text8
  1825  00083C                     __ptext8:
  1826                           	opt stack 0
  1827  00083C                     _config_ccp2:
  1828                           	opt stack 24
  1829                           
  1830                           ;Pwm.c: 87: int valreg;
  1831                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1832                           
  1833                           ;incstack = 0
  1834  00083C  C05B  F009         	movff	config_ccp2@duty2,___awtoft@c
  1835  000840  C05C  F00A         	movff	config_ccp2@duty2+1,___awtoft@c+1
  1836  000844  ECFE  F00F         	call	___awtoft	;wreg free
  1837  000848  C009  F010         	movff	?___awtoft,___ftmul@f2
  1838  00084C  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  1839  000850  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  1840  000854  0E00               	movlw	0
  1841  000856  6E2E               	movwf	___ftadd@f2,c
  1842  000858  0E80               	movlw	128
  1843  00085A  6E2F               	movwf	___ftadd@f2+1,c
  1844  00085C  0E3F               	movlw	63
  1845  00085E  6E30               	movwf	___ftadd@f2+2,c
  1846  000860  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  1847  000864  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  1848  000868  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  1849  00086C  ECE6  F007         	call	___ftadd	;wreg free
  1850  000870  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  1851  000874  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  1852  000878  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  1853  00087C  EC39  F00B         	call	___ftmul	;wreg free
  1854  000880  C00D  F095         	movff	?___ftmul,_config_ccp2$1544
  1855  000884  C00E  F096         	movff	?___ftmul+1,_config_ccp2$1544+1
  1856  000888  C00F  F097         	movff	?___ftmul+2,_config_ccp2$1544+2
  1857                           
  1858                           ;Pwm.c: 87: int valreg;
  1859                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1860  00088C  0E00               	movlw	0
  1861  00088E  6E1F               	movwf	___ftdiv@f2,c
  1862  000890  0EC8               	movlw	200
  1863  000892  6E20               	movwf	___ftdiv@f2+1,c
  1864  000894  0E42               	movlw	66
  1865  000896  6E21               	movwf	___ftdiv@f2+2,c
  1866  000898  0E00               	movlw	0
  1867  00089A  6E10               	movwf	___ftmul@f2,c
  1868  00089C  0E80               	movlw	128
  1869  00089E  6E11               	movwf	___ftmul@f2+1,c
  1870  0008A0  0E40               	movlw	64
  1871  0008A2  6E12               	movwf	___ftmul@f2+2,c
  1872  0008A4  C095  F00D         	movff	_config_ccp2$1544,___ftmul@f1
  1873  0008A8  C096  F00E         	movff	_config_ccp2$1544+1,___ftmul@f1+1
  1874  0008AC  C097  F00F         	movff	_config_ccp2$1544+2,___ftmul@f1+2
  1875  0008B0  EC39  F00B         	call	___ftmul	;wreg free
  1876  0008B4  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  1877  0008B8  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  1878  0008BC  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  1879  0008C0  ECB3  F00B         	call	___ftdiv	;wreg free
  1880  0008C4  C01C  F037         	movff	?___ftdiv,___fttol@f1
  1881  0008C8  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  1882  0008CC  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  1883  0008D0  ECBF  F00A         	call	___fttol	;wreg free
  1884  0008D4  C037  F098         	movff	?___fttol,config_ccp2@valreg
  1885  0008D8  C038  F099         	movff	?___fttol+1,config_ccp2@valreg+1
  1886                           
  1887                           ;Pwm.c: 92: int n,x,i,j,z;
  1888                           ;Pwm.c: 93: unsigned int w,y;
  1889                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  1890  0008DC  EE20  F0AE         	lfsr	2,config_ccp2@F3978
  1891  0008E0  EE10  F077         	lfsr	1,config_ccp2@a
  1892  0008E4  0E1D               	movlw	29
  1893  0008E6                     u2711:
  1894  0008E6  CFDB FFE3          	movff	plusw2,plusw1
  1895  0008EA  06E8               	decf	wreg,f,c
  1896  0008EC  E2FC               	bc	u2711
  1897                           
  1898                           ;Pwm.c: 96: n = valreg;
  1899  0008EE  C098  F0AA         	movff	config_ccp2@valreg,config_ccp2@n
  1900  0008F2  C099  F0AB         	movff	config_ccp2@valreg+1,config_ccp2@n+1
  1901                           
  1902                           ;Pwm.c: 97: i = 0;
  1903  0008F6  0E00               	movlw	0
  1904  0008F8  0100               	movlb	0	; () banked
  1905  0008FA  6F9B               	movwf	(config_ccp2@i+1)& (0+255),b
  1906  0008FC  0E00               	movlw	0
  1907  0008FE  6F9A               	movwf	config_ccp2@i& (0+255),b
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;Pwm.c: 98: z = 0;
  1911  000900  0E00               	movlw	0
  1912  000902  6F9D               	movwf	(config_ccp2@z+1)& (0+255),b
  1913  000904  0E00               	movlw	0
  1914  000906  6F9C               	movwf	config_ccp2@z& (0+255),b
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;Pwm.c: 99: y = 0;
  1918  000908  0E00               	movlw	0
  1919  00090A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  1920  00090C  0E00               	movlw	0
  1921  00090E  6FA8               	movwf	config_ccp2@y& (0+255),b
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;Pwm.c: 100: w = 0;
  1925  000910  0E00               	movlw	0
  1926  000912  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  1927  000914  0E00               	movlw	0
  1928  000916  6FA6               	movwf	config_ccp2@w& (0+255),b
  1929                           
  1930                           ;Pwm.c: 102: while(n > 0)
  1931  000918  D024               	goto	l188
  1932  00091A                     l2542:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;Pwm.c: 103: {
  1936                           ;Pwm.c: 104: a[i] = n % 2;
  1937  00091A  0E01               	movlw	1
  1938  00091C  15AA               	andwf	config_ccp2@n& (0+255),w,b
  1939  00091E  6E5D               	movwf	??_config_ccp2& (0+255),c
  1940  000920  0E00               	movlw	0
  1941  000922  15AB               	andwf	(config_ccp2@n+1)& (0+255),w,b
  1942  000924  6E5E               	movwf	(??_config_ccp2+1)& (0+255),c
  1943  000926  90D8               	bcf	status,0,c
  1944  000928  359A               	rlcf	config_ccp2@i& (0+255),w,b
  1945  00092A  6ED9               	movwf	fsr2l,c
  1946  00092C  359B               	rlcf	(config_ccp2@i+1)& (0+255),w,b
  1947  00092E  6EDA               	movwf	fsr2h,c
  1948  000930  0E77               	movlw	low config_ccp2@a
  1949  000932  26D9               	addwf	fsr2l,f,c
  1950  000934  0E00               	movlw	high config_ccp2@a
  1951  000936  22DA               	addwfc	fsr2h,f,c
  1952  000938  C05D  FFDE         	movff	??_config_ccp2,postinc2
  1953  00093C  C05E  FFDD         	movff	??_config_ccp2+1,postdec2
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;Pwm.c: 105: n = n / 2;
  1957  000940  C0AA  F001         	movff	config_ccp2@n,___awdiv@dividend
  1958  000944  C0AB  F002         	movff	config_ccp2@n+1,___awdiv@dividend+1
  1959  000948  0E00               	movlw	0
  1960  00094A  6E04               	movwf	___awdiv@divisor+1,c
  1961  00094C  0E02               	movlw	2
  1962  00094E  6E03               	movwf	___awdiv@divisor,c
  1963  000950  ECA4  F00E         	call	___awdiv	;wreg free
  1964  000954  C001  F0AA         	movff	?___awdiv,config_ccp2@n
  1965  000958  C002  F0AB         	movff	?___awdiv+1,config_ccp2@n+1
  1966                           
  1967                           ;Pwm.c: 106: i++;
  1968  00095C  0100               	movlb	0	; () banked
  1969  00095E  4B9A               	infsnz	config_ccp2@i& (0+255),f,b
  1970  000960  2B9B               	incf	(config_ccp2@i+1)& (0+255),f,b
  1971  000962                     l188:
  1972                           
  1973                           ; BSR set to: 0
  1974                           
  1975                           ; BSR set to: 0
  1976  000962  BFAB               	btfsc	(config_ccp2@n+1)& (0+255),7,b
  1977  000964  D005               	goto	u2720
  1978  000966  51AB               	movf	(config_ccp2@n+1)& (0+255),w,b
  1979  000968  E1D8               	bnz	l2542
  1980  00096A  05AA               	decf	config_ccp2@n& (0+255),w,b
  1981  00096C  B0D8               	btfsc	status,0,c
  1982  00096E  D7D5               	goto	l189
  1983  000970                     u2720:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;Pwm.c: 107: }
  1987                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  1988                           
  1989                           ; BSR set to: 0
  1990  000970  0E00               	movlw	0
  1991  000972  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  1992  000974  0E00               	movlw	0
  1993  000976  6FAC               	movwf	config_ccp2@j& (0+255),b
  1994  000978                     l2552:
  1995                           
  1996                           ; BSR set to: 0
  1997  000978  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  1998  00097A  D006               	goto	l191
  1999  00097C  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2000  00097E  E159               	bnz	l2568
  2001  000980  0E02               	movlw	2
  2002  000982  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2003  000984  B0D8               	btfsc	status,0,c
  2004  000986  D055               	goto	u2740
  2005  000988                     l191:
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;Pwm.c: 110: {
  2009                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2010                           
  2011                           ; BSR set to: 0
  2012  000988  C0AC  F009         	movff	config_ccp2@j,___awtoft@c
  2013  00098C  C0AD  F00A         	movff	config_ccp2@j+1,___awtoft@c+1
  2014  000990  ECFE  F00F         	call	___awtoft	;wreg free
  2015  000994  C009  F09E         	movff	?___awtoft,_config_ccp2$1545
  2016  000998  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1545+1
  2017  00099C  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1545+2
  2018                           
  2019                           ;Pwm.c: 110: {
  2020                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2021  0009A0  C09E  F069         	movff	_config_ccp2$1545,pow@y
  2022  0009A4  C09F  F06A         	movff	_config_ccp2$1545+1,pow@y+1
  2023  0009A8  C0A0  F06B         	movff	_config_ccp2$1545+2,pow@y+2
  2024  0009AC  0E00               	movlw	0
  2025  0009AE  0100               	movlb	0	; () banked
  2026  0009B0  6F66               	movwf	pow@x& (0+255),b
  2027  0009B2  0E00               	movlw	0
  2028  0009B4  6F67               	movwf	(pow@x+1)& (0+255),b
  2029  0009B6  0E40               	movlw	64
  2030  0009B8  6F68               	movwf	(pow@x+2)& (0+255),b
  2031  0009BA  ECBC  F008         	call	_pow	;wreg free
  2032  0009BE  C066  F0A1         	movff	?_pow,_config_ccp2$1546
  2033  0009C2  C067  F0A2         	movff	?_pow+1,_config_ccp2$1546+1
  2034  0009C6  C068  F0A3         	movff	?_pow+2,_config_ccp2$1546+2
  2035                           
  2036                           ;Pwm.c: 110: {
  2037                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2038  0009CA  C0A1  F010         	movff	_config_ccp2$1546,___ftmul@f2
  2039  0009CE  C0A2  F011         	movff	_config_ccp2$1546+1,___ftmul@f2+1
  2040  0009D2  C0A3  F012         	movff	_config_ccp2$1546+2,___ftmul@f2+2
  2041  0009D6  90D8               	bcf	status,0,c
  2042  0009D8  0100               	movlb	0	; () banked
  2043  0009DA  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2044  0009DC  6ED9               	movwf	fsr2l,c
  2045  0009DE  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2046  0009E0  6EDA               	movwf	fsr2h,c
  2047  0009E2  0E77               	movlw	low config_ccp2@a
  2048  0009E4  26D9               	addwf	fsr2l,f,c
  2049  0009E6  0E00               	movlw	high config_ccp2@a
  2050  0009E8  22DA               	addwfc	fsr2h,f,c
  2051  0009EA  CFDE F009          	movff	postinc2,___awtoft@c
  2052  0009EE  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2053  0009F2  ECFE  F00F         	call	___awtoft	;wreg free
  2054  0009F6  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2055  0009FA  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2056  0009FE  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2057  000A02  EC39  F00B         	call	___ftmul	;wreg free
  2058  000A06  C00D  F037         	movff	?___ftmul,___fttol@f1
  2059  000A0A  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2060  000A0E  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2061  000A12  ECBF  F00A         	call	___fttol	;wreg free
  2062  000A16  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2063  000A1A  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2064                           
  2065                           ;Pwm.c: 112: y = x + y;
  2066  000A1E  0100               	movlb	0	; () banked
  2067  000A20  51A8               	movf	config_ccp2@y& (0+255),w,b
  2068  000A22  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2069  000A24  6FA8               	movwf	config_ccp2@y& (0+255),b
  2070  000A26  51A9               	movf	(config_ccp2@y+1)& (0+255),w,b
  2071  000A28  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2072  000A2A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075  000A2C  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2076  000A2E  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2077  000A30  D7A3               	goto	l2552
  2078  000A32                     u2740:
  2079  000A32                     l2568:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;Pwm.c: 113: }
  2083                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  2084  000A32  0E00               	movlw	0
  2085  000A34  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2086  000A36  0E02               	movlw	2
  2087  000A38  6FAC               	movwf	config_ccp2@j& (0+255),b
  2088  000A3A                     l2570:
  2089                           
  2090                           ; BSR set to: 0
  2091  000A3A  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2092  000A3C  D006               	goto	l193
  2093  000A3E  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2094  000A40  E15B               	bnz	l2588
  2095  000A42  0E0A               	movlw	10
  2096  000A44  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2097  000A46  B0D8               	btfsc	status,0,c
  2098  000A48  D057               	goto	u2760
  2099  000A4A                     l193:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;Pwm.c: 115: {
  2103                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2104                           
  2105                           ; BSR set to: 0
  2106  000A4A  C09C  F009         	movff	config_ccp2@z,___awtoft@c
  2107  000A4E  C09D  F00A         	movff	config_ccp2@z+1,___awtoft@c+1
  2108  000A52  ECFE  F00F         	call	___awtoft	;wreg free
  2109  000A56  C009  F09E         	movff	?___awtoft,_config_ccp2$1545
  2110  000A5A  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1545+1
  2111  000A5E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1545+2
  2112                           
  2113                           ;Pwm.c: 115: {
  2114                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2115  000A62  C09E  F069         	movff	_config_ccp2$1545,pow@y
  2116  000A66  C09F  F06A         	movff	_config_ccp2$1545+1,pow@y+1
  2117  000A6A  C0A0  F06B         	movff	_config_ccp2$1545+2,pow@y+2
  2118  000A6E  0E00               	movlw	0
  2119  000A70  0100               	movlb	0	; () banked
  2120  000A72  6F66               	movwf	pow@x& (0+255),b
  2121  000A74  0E00               	movlw	0
  2122  000A76  6F67               	movwf	(pow@x+1)& (0+255),b
  2123  000A78  0E40               	movlw	64
  2124  000A7A  6F68               	movwf	(pow@x+2)& (0+255),b
  2125  000A7C  ECBC  F008         	call	_pow	;wreg free
  2126  000A80  C066  F0A1         	movff	?_pow,_config_ccp2$1546
  2127  000A84  C067  F0A2         	movff	?_pow+1,_config_ccp2$1546+1
  2128  000A88  C068  F0A3         	movff	?_pow+2,_config_ccp2$1546+2
  2129                           
  2130                           ;Pwm.c: 115: {
  2131                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2132  000A8C  C0A1  F010         	movff	_config_ccp2$1546,___ftmul@f2
  2133  000A90  C0A2  F011         	movff	_config_ccp2$1546+1,___ftmul@f2+1
  2134  000A94  C0A3  F012         	movff	_config_ccp2$1546+2,___ftmul@f2+2
  2135  000A98  90D8               	bcf	status,0,c
  2136  000A9A  0100               	movlb	0	; () banked
  2137  000A9C  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2138  000A9E  6ED9               	movwf	fsr2l,c
  2139  000AA0  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2140  000AA2  6EDA               	movwf	fsr2h,c
  2141  000AA4  0E77               	movlw	low config_ccp2@a
  2142  000AA6  26D9               	addwf	fsr2l,f,c
  2143  000AA8  0E00               	movlw	high config_ccp2@a
  2144  000AAA  22DA               	addwfc	fsr2h,f,c
  2145  000AAC  CFDE F009          	movff	postinc2,___awtoft@c
  2146  000AB0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2147  000AB4  ECFE  F00F         	call	___awtoft	;wreg free
  2148  000AB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2149  000ABC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2150  000AC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2151  000AC4  EC39  F00B         	call	___ftmul	;wreg free
  2152  000AC8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2153  000ACC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2154  000AD0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2155  000AD4  ECBF  F00A         	call	___fttol	;wreg free
  2156  000AD8  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2157  000ADC  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2158                           
  2159                           ;Pwm.c: 117: w = x + w;
  2160  000AE0  0100               	movlb	0	; () banked
  2161  000AE2  51A6               	movf	config_ccp2@w& (0+255),w,b
  2162  000AE4  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2163  000AE6  6FA6               	movwf	config_ccp2@w& (0+255),b
  2164  000AE8  51A7               	movf	(config_ccp2@w+1)& (0+255),w,b
  2165  000AEA  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2166  000AEC  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;Pwm.c: 118: z++;
  2170  000AEE  4B9C               	infsnz	config_ccp2@z& (0+255),f,b
  2171  000AF0  2B9D               	incf	(config_ccp2@z+1)& (0+255),f,b
  2172                           
  2173                           ; BSR set to: 0
  2174  000AF2  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2175  000AF4  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2176  000AF6  D7A1               	goto	l2570
  2177  000AF8                     u2760:
  2178  000AF8                     l2588:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;Pwm.c: 119: }
  2182                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  2183  000AF8  C0A8  F05D         	movff	config_ccp2@y,??_config_ccp2
  2184  000AFC  3A5D               	swapf	??_config_ccp2,f,c
  2185  000AFE  50BA               	movf	4026,w,c	;volatile
  2186  000B00  185D               	xorwf	??_config_ccp2,w,c
  2187  000B02  0BCF               	andlw	-49
  2188  000B04  185D               	xorwf	??_config_ccp2,w,c
  2189  000B06  6EBA               	movwf	4026,c	;volatile
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;Pwm.c: 122: CCPR2L = w;
  2193  000B08  C0A6  FFBB         	movff	config_ccp2@w,4027	;volatile
  2194                           
  2195                           ; BSR set to: 0
  2196  000B0C  0012               	return		;funcret
  2197  000B0E                     __end_of_config_ccp2:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           intcon	equ	0xFF2
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           plusw1	equ	0xFE3
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           plusw2	equ	0xFDB
  2207                           fsr2h	equ	0xFDA
  2208                           fsr2l	equ	0xFD9
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function _config_ccp1 *****************
  2212 ;; Defined at:
  2213 ;;		line 43 in file "Pwm.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  duty1           2   90[COMRAM] int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  a              30   23[BANK0 ] int [15]
  2218 ;;  j               2   76[BANK0 ] int 
  2219 ;;  n               2   74[BANK0 ] int 
  2220 ;;  y               2   72[BANK0 ] unsigned int 
  2221 ;;  w               2   70[BANK0 ] unsigned int 
  2222 ;;  x               2   68[BANK0 ] int 
  2223 ;;  z               2   60[BANK0 ] int 
  2224 ;;  i               2   58[BANK0 ] int 
  2225 ;;  valreg          2   56[BANK0 ] int 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2235 ;;      Params:         2       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         0      55       0       0       0       0       0       0       0
  2237 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2238 ;;      Totals:         4      55       0       0       0       0       0       0       0
  2239 ;;Total ram usage:       59 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    5
  2242 ;; This function calls:
  2243 ;;		___awdiv
  2244 ;;		___awtoft
  2245 ;;		___ftadd
  2246 ;;		___ftdiv
  2247 ;;		___ftmul
  2248 ;;		___fttol
  2249 ;;		_pow
  2250 ;; This function is called by:
  2251 ;;		_carroAvanzar
  2252 ;;		_carroAvanzarEspecial
  2253 ;;		_carroGirar
  2254 ;;		_carroAtras
  2255 ;;		_carroMatar
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text9
  2260  000B0E                     __ptext9:
  2261                           	opt stack 0
  2262  000B0E                     _config_ccp1:
  2263                           	opt stack 24
  2264                           
  2265                           ;Pwm.c: 45: int valreg;
  2266                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;incstack = 0
  2270  000B0E  C05B  F009         	movff	config_ccp1@duty1,___awtoft@c
  2271  000B12  C05C  F00A         	movff	config_ccp1@duty1+1,___awtoft@c+1
  2272  000B16  ECFE  F00F         	call	___awtoft	;wreg free
  2273  000B1A  C009  F010         	movff	?___awtoft,___ftmul@f2
  2274  000B1E  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  2275  000B22  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  2276  000B26  0E00               	movlw	0
  2277  000B28  6E2E               	movwf	___ftadd@f2,c
  2278  000B2A  0E80               	movlw	128
  2279  000B2C  6E2F               	movwf	___ftadd@f2+1,c
  2280  000B2E  0E3F               	movlw	63
  2281  000B30  6E30               	movwf	___ftadd@f2+2,c
  2282  000B32  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  2283  000B36  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  2284  000B3A  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  2285  000B3E  ECE6  F007         	call	___ftadd	;wreg free
  2286  000B42  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  2287  000B46  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  2288  000B4A  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  2289  000B4E  EC39  F00B         	call	___ftmul	;wreg free
  2290  000B52  C00D  F095         	movff	?___ftmul,_config_ccp1$1541
  2291  000B56  C00E  F096         	movff	?___ftmul+1,_config_ccp1$1541+1
  2292  000B5A  C00F  F097         	movff	?___ftmul+2,_config_ccp1$1541+2
  2293                           
  2294                           ;Pwm.c: 45: int valreg;
  2295                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2296  000B5E  0E00               	movlw	0
  2297  000B60  6E1F               	movwf	___ftdiv@f2,c
  2298  000B62  0EC8               	movlw	200
  2299  000B64  6E20               	movwf	___ftdiv@f2+1,c
  2300  000B66  0E42               	movlw	66
  2301  000B68  6E21               	movwf	___ftdiv@f2+2,c
  2302  000B6A  0E00               	movlw	0
  2303  000B6C  6E10               	movwf	___ftmul@f2,c
  2304  000B6E  0E80               	movlw	128
  2305  000B70  6E11               	movwf	___ftmul@f2+1,c
  2306  000B72  0E40               	movlw	64
  2307  000B74  6E12               	movwf	___ftmul@f2+2,c
  2308  000B76  C095  F00D         	movff	_config_ccp1$1541,___ftmul@f1
  2309  000B7A  C096  F00E         	movff	_config_ccp1$1541+1,___ftmul@f1+1
  2310  000B7E  C097  F00F         	movff	_config_ccp1$1541+2,___ftmul@f1+2
  2311  000B82  EC39  F00B         	call	___ftmul	;wreg free
  2312  000B86  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2313  000B8A  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2314  000B8E  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2315  000B92  ECB3  F00B         	call	___ftdiv	;wreg free
  2316  000B96  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2317  000B9A  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2318  000B9E  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2319  000BA2  ECBF  F00A         	call	___fttol	;wreg free
  2320  000BA6  C037  F098         	movff	?___fttol,config_ccp1@valreg
  2321  000BAA  C038  F099         	movff	?___fttol+1,config_ccp1@valreg+1
  2322                           
  2323                           ;Pwm.c: 50: int n,x,i,j,z;
  2324                           ;Pwm.c: 51: unsigned int w,y;
  2325                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2326  000BAE  EE20  F0CC         	lfsr	2,config_ccp1@F3967
  2327  000BB2  EE10  F077         	lfsr	1,config_ccp1@a
  2328  000BB6  0E1D               	movlw	29
  2329  000BB8                     u2651:
  2330  000BB8  CFDB FFE3          	movff	plusw2,plusw1
  2331  000BBC  06E8               	decf	wreg,f,c
  2332  000BBE  E2FC               	bc	u2651
  2333                           
  2334                           ;Pwm.c: 54: n = valreg;
  2335  000BC0  C098  F0AA         	movff	config_ccp1@valreg,config_ccp1@n
  2336  000BC4  C099  F0AB         	movff	config_ccp1@valreg+1,config_ccp1@n+1
  2337                           
  2338                           ;Pwm.c: 55: i = 0;
  2339  000BC8  0E00               	movlw	0
  2340  000BCA  0100               	movlb	0	; () banked
  2341  000BCC  6F9B               	movwf	(config_ccp1@i+1)& (0+255),b
  2342  000BCE  0E00               	movlw	0
  2343  000BD0  6F9A               	movwf	config_ccp1@i& (0+255),b
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;Pwm.c: 56: z = 0;
  2347  000BD2  0E00               	movlw	0
  2348  000BD4  6F9D               	movwf	(config_ccp1@z+1)& (0+255),b
  2349  000BD6  0E00               	movlw	0
  2350  000BD8  6F9C               	movwf	config_ccp1@z& (0+255),b
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;Pwm.c: 57: y = 0;
  2354  000BDA  0E00               	movlw	0
  2355  000BDC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2356  000BDE  0E00               	movlw	0
  2357  000BE0  6FA8               	movwf	config_ccp1@y& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;Pwm.c: 58: w = 0;
  2361  000BE2  0E00               	movlw	0
  2362  000BE4  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2363  000BE6  0E00               	movlw	0
  2364  000BE8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2365                           
  2366                           ;Pwm.c: 60: while(n > 0)
  2367  000BEA  D024               	goto	l176
  2368  000BEC                     l2478:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;Pwm.c: 61: {
  2372                           ;Pwm.c: 62: a[i] = n % 2;
  2373  000BEC  0E01               	movlw	1
  2374  000BEE  15AA               	andwf	config_ccp1@n& (0+255),w,b
  2375  000BF0  6E5D               	movwf	??_config_ccp1& (0+255),c
  2376  000BF2  0E00               	movlw	0
  2377  000BF4  15AB               	andwf	(config_ccp1@n+1)& (0+255),w,b
  2378  000BF6  6E5E               	movwf	(??_config_ccp1+1)& (0+255),c
  2379  000BF8  90D8               	bcf	status,0,c
  2380  000BFA  359A               	rlcf	config_ccp1@i& (0+255),w,b
  2381  000BFC  6ED9               	movwf	fsr2l,c
  2382  000BFE  359B               	rlcf	(config_ccp1@i+1)& (0+255),w,b
  2383  000C00  6EDA               	movwf	fsr2h,c
  2384  000C02  0E77               	movlw	low config_ccp1@a
  2385  000C04  26D9               	addwf	fsr2l,f,c
  2386  000C06  0E00               	movlw	high config_ccp1@a
  2387  000C08  22DA               	addwfc	fsr2h,f,c
  2388  000C0A  C05D  FFDE         	movff	??_config_ccp1,postinc2
  2389  000C0E  C05E  FFDD         	movff	??_config_ccp1+1,postdec2
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;Pwm.c: 63: n = n / 2;
  2393  000C12  C0AA  F001         	movff	config_ccp1@n,___awdiv@dividend
  2394  000C16  C0AB  F002         	movff	config_ccp1@n+1,___awdiv@dividend+1
  2395  000C1A  0E00               	movlw	0
  2396  000C1C  6E04               	movwf	___awdiv@divisor+1,c
  2397  000C1E  0E02               	movlw	2
  2398  000C20  6E03               	movwf	___awdiv@divisor,c
  2399  000C22  ECA4  F00E         	call	___awdiv	;wreg free
  2400  000C26  C001  F0AA         	movff	?___awdiv,config_ccp1@n
  2401  000C2A  C002  F0AB         	movff	?___awdiv+1,config_ccp1@n+1
  2402                           
  2403                           ;Pwm.c: 64: i++;
  2404  000C2E  0100               	movlb	0	; () banked
  2405  000C30  4B9A               	infsnz	config_ccp1@i& (0+255),f,b
  2406  000C32  2B9B               	incf	(config_ccp1@i+1)& (0+255),f,b
  2407  000C34                     l176:
  2408                           
  2409                           ; BSR set to: 0
  2410                           
  2411                           ; BSR set to: 0
  2412  000C34  BFAB               	btfsc	(config_ccp1@n+1)& (0+255),7,b
  2413  000C36  D005               	goto	u2660
  2414  000C38  51AB               	movf	(config_ccp1@n+1)& (0+255),w,b
  2415  000C3A  E1D8               	bnz	l2478
  2416  000C3C  05AA               	decf	config_ccp1@n& (0+255),w,b
  2417  000C3E  B0D8               	btfsc	status,0,c
  2418  000C40  D7D5               	goto	l177
  2419  000C42                     u2660:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;Pwm.c: 65: }
  2423                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  2424                           
  2425                           ; BSR set to: 0
  2426  000C42  0E00               	movlw	0
  2427  000C44  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2428  000C46  0E00               	movlw	0
  2429  000C48  6FAC               	movwf	config_ccp1@j& (0+255),b
  2430  000C4A                     l2488:
  2431                           
  2432                           ; BSR set to: 0
  2433  000C4A  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2434  000C4C  D006               	goto	l179
  2435  000C4E  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2436  000C50  E159               	bnz	l2504
  2437  000C52  0E02               	movlw	2
  2438  000C54  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2439  000C56  B0D8               	btfsc	status,0,c
  2440  000C58  D055               	goto	u2680
  2441  000C5A                     l179:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;Pwm.c: 68: {
  2445                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2446                           
  2447                           ; BSR set to: 0
  2448  000C5A  C0AC  F009         	movff	config_ccp1@j,___awtoft@c
  2449  000C5E  C0AD  F00A         	movff	config_ccp1@j+1,___awtoft@c+1
  2450  000C62  ECFE  F00F         	call	___awtoft	;wreg free
  2451  000C66  C009  F09E         	movff	?___awtoft,_config_ccp1$1542
  2452  000C6A  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1542+1
  2453  000C6E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1542+2
  2454                           
  2455                           ;Pwm.c: 68: {
  2456                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2457  000C72  C09E  F069         	movff	_config_ccp1$1542,pow@y
  2458  000C76  C09F  F06A         	movff	_config_ccp1$1542+1,pow@y+1
  2459  000C7A  C0A0  F06B         	movff	_config_ccp1$1542+2,pow@y+2
  2460  000C7E  0E00               	movlw	0
  2461  000C80  0100               	movlb	0	; () banked
  2462  000C82  6F66               	movwf	pow@x& (0+255),b
  2463  000C84  0E00               	movlw	0
  2464  000C86  6F67               	movwf	(pow@x+1)& (0+255),b
  2465  000C88  0E40               	movlw	64
  2466  000C8A  6F68               	movwf	(pow@x+2)& (0+255),b
  2467  000C8C  ECBC  F008         	call	_pow	;wreg free
  2468  000C90  C066  F0A1         	movff	?_pow,_config_ccp1$1543
  2469  000C94  C067  F0A2         	movff	?_pow+1,_config_ccp1$1543+1
  2470  000C98  C068  F0A3         	movff	?_pow+2,_config_ccp1$1543+2
  2471                           
  2472                           ;Pwm.c: 68: {
  2473                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2474  000C9C  C0A1  F010         	movff	_config_ccp1$1543,___ftmul@f2
  2475  000CA0  C0A2  F011         	movff	_config_ccp1$1543+1,___ftmul@f2+1
  2476  000CA4  C0A3  F012         	movff	_config_ccp1$1543+2,___ftmul@f2+2
  2477  000CA8  90D8               	bcf	status,0,c
  2478  000CAA  0100               	movlb	0	; () banked
  2479  000CAC  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2480  000CAE  6ED9               	movwf	fsr2l,c
  2481  000CB0  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2482  000CB2  6EDA               	movwf	fsr2h,c
  2483  000CB4  0E77               	movlw	low config_ccp1@a
  2484  000CB6  26D9               	addwf	fsr2l,f,c
  2485  000CB8  0E00               	movlw	high config_ccp1@a
  2486  000CBA  22DA               	addwfc	fsr2h,f,c
  2487  000CBC  CFDE F009          	movff	postinc2,___awtoft@c
  2488  000CC0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2489  000CC4  ECFE  F00F         	call	___awtoft	;wreg free
  2490  000CC8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2491  000CCC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2492  000CD0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2493  000CD4  EC39  F00B         	call	___ftmul	;wreg free
  2494  000CD8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2495  000CDC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2496  000CE0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2497  000CE4  ECBF  F00A         	call	___fttol	;wreg free
  2498  000CE8  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2499  000CEC  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2500                           
  2501                           ;Pwm.c: 70: y = x + y;
  2502  000CF0  0100               	movlb	0	; () banked
  2503  000CF2  51A8               	movf	config_ccp1@y& (0+255),w,b
  2504  000CF4  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2505  000CF6  6FA8               	movwf	config_ccp1@y& (0+255),b
  2506  000CF8  51A9               	movf	(config_ccp1@y+1)& (0+255),w,b
  2507  000CFA  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2508  000CFC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2509                           
  2510                           ; BSR set to: 0
  2511  000CFE  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2512  000D00  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2513  000D02  D7A3               	goto	l2488
  2514  000D04                     u2680:
  2515  000D04                     l2504:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;Pwm.c: 71: }
  2519                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  2520  000D04  0E00               	movlw	0
  2521  000D06  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2522  000D08  0E02               	movlw	2
  2523  000D0A  6FAC               	movwf	config_ccp1@j& (0+255),b
  2524  000D0C                     l2506:
  2525                           
  2526                           ; BSR set to: 0
  2527  000D0C  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2528  000D0E  D006               	goto	l181
  2529  000D10  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2530  000D12  E15B               	bnz	l2524
  2531  000D14  0E0A               	movlw	10
  2532  000D16  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2533  000D18  B0D8               	btfsc	status,0,c
  2534  000D1A  D057               	goto	u2700
  2535  000D1C                     l181:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;Pwm.c: 73: {
  2539                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2540                           
  2541                           ; BSR set to: 0
  2542  000D1C  C09C  F009         	movff	config_ccp1@z,___awtoft@c
  2543  000D20  C09D  F00A         	movff	config_ccp1@z+1,___awtoft@c+1
  2544  000D24  ECFE  F00F         	call	___awtoft	;wreg free
  2545  000D28  C009  F09E         	movff	?___awtoft,_config_ccp1$1542
  2546  000D2C  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1542+1
  2547  000D30  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1542+2
  2548                           
  2549                           ;Pwm.c: 73: {
  2550                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2551  000D34  C09E  F069         	movff	_config_ccp1$1542,pow@y
  2552  000D38  C09F  F06A         	movff	_config_ccp1$1542+1,pow@y+1
  2553  000D3C  C0A0  F06B         	movff	_config_ccp1$1542+2,pow@y+2
  2554  000D40  0E00               	movlw	0
  2555  000D42  0100               	movlb	0	; () banked
  2556  000D44  6F66               	movwf	pow@x& (0+255),b
  2557  000D46  0E00               	movlw	0
  2558  000D48  6F67               	movwf	(pow@x+1)& (0+255),b
  2559  000D4A  0E40               	movlw	64
  2560  000D4C  6F68               	movwf	(pow@x+2)& (0+255),b
  2561  000D4E  ECBC  F008         	call	_pow	;wreg free
  2562  000D52  C066  F0A1         	movff	?_pow,_config_ccp1$1543
  2563  000D56  C067  F0A2         	movff	?_pow+1,_config_ccp1$1543+1
  2564  000D5A  C068  F0A3         	movff	?_pow+2,_config_ccp1$1543+2
  2565                           
  2566                           ;Pwm.c: 73: {
  2567                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2568  000D5E  C0A1  F010         	movff	_config_ccp1$1543,___ftmul@f2
  2569  000D62  C0A2  F011         	movff	_config_ccp1$1543+1,___ftmul@f2+1
  2570  000D66  C0A3  F012         	movff	_config_ccp1$1543+2,___ftmul@f2+2
  2571  000D6A  90D8               	bcf	status,0,c
  2572  000D6C  0100               	movlb	0	; () banked
  2573  000D6E  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2574  000D70  6ED9               	movwf	fsr2l,c
  2575  000D72  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2576  000D74  6EDA               	movwf	fsr2h,c
  2577  000D76  0E77               	movlw	low config_ccp1@a
  2578  000D78  26D9               	addwf	fsr2l,f,c
  2579  000D7A  0E00               	movlw	high config_ccp1@a
  2580  000D7C  22DA               	addwfc	fsr2h,f,c
  2581  000D7E  CFDE F009          	movff	postinc2,___awtoft@c
  2582  000D82  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2583  000D86  ECFE  F00F         	call	___awtoft	;wreg free
  2584  000D8A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2585  000D8E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2586  000D92  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2587  000D96  EC39  F00B         	call	___ftmul	;wreg free
  2588  000D9A  C00D  F037         	movff	?___ftmul,___fttol@f1
  2589  000D9E  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2590  000DA2  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2591  000DA6  ECBF  F00A         	call	___fttol	;wreg free
  2592  000DAA  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2593  000DAE  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2594                           
  2595                           ;Pwm.c: 75: w = x + w;
  2596  000DB2  0100               	movlb	0	; () banked
  2597  000DB4  51A6               	movf	config_ccp1@w& (0+255),w,b
  2598  000DB6  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2599  000DB8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2600  000DBA  51A7               	movf	(config_ccp1@w+1)& (0+255),w,b
  2601  000DBC  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2602  000DBE  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;Pwm.c: 76: z++;
  2606  000DC0  4B9C               	infsnz	config_ccp1@z& (0+255),f,b
  2607  000DC2  2B9D               	incf	(config_ccp1@z+1)& (0+255),f,b
  2608                           
  2609                           ; BSR set to: 0
  2610  000DC4  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2611  000DC6  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2612  000DC8  D7A1               	goto	l2506
  2613  000DCA                     u2700:
  2614  000DCA                     l2524:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;Pwm.c: 77: }
  2618                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  2619  000DCA  C0A8  F05D         	movff	config_ccp1@y,??_config_ccp1
  2620  000DCE  3A5D               	swapf	??_config_ccp1,f,c
  2621  000DD0  50BD               	movf	4029,w,c	;volatile
  2622  000DD2  185D               	xorwf	??_config_ccp1,w,c
  2623  000DD4  0BCF               	andlw	-49
  2624  000DD6  185D               	xorwf	??_config_ccp1,w,c
  2625  000DD8  6EBD               	movwf	4029,c	;volatile
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;Pwm.c: 80: CCPR1L = w;
  2629  000DDA  C0A6  FFBE         	movff	config_ccp1@w,4030	;volatile
  2630                           
  2631                           ; BSR set to: 0
  2632  000DDE  0012               	return		;funcret
  2633  000DE0                     __end_of_config_ccp1:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           plusw1	equ	0xFE3
  2640                           postinc2	equ	0xFDE
  2641                           postdec2	equ	0xFDD
  2642                           plusw2	equ	0xFDB
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function _pow *****************
  2648 ;; Defined at:
  2649 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  x               3    6[BANK0 ] void 
  2652 ;;  y               3    9[BANK0 ] void 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  yi              4   19[BANK0 ] unsigned long 
  2655 ;;  sign            1   18[BANK0 ] unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  3    6[BANK0 ] unsigned char 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2665 ;;      Params:         0       6       0       0       0       0       0       0       0
  2666 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2669 ;;Total ram usage:       17 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    4
  2672 ;; This function calls:
  2673 ;;		___ftge
  2674 ;;		___ftmul
  2675 ;;		___ftneg
  2676 ;;		___fttol
  2677 ;;		___lltoft
  2678 ;;		_exp
  2679 ;;		_log
  2680 ;; This function is called by:
  2681 ;;		_config_ccp1
  2682 ;;		_config_ccp2
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text10
  2687  001178                     __ptext10:
  2688                           	opt stack 0
  2689  001178                     _pow:
  2690                           	opt stack 24
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;incstack = 0
  2694  001178  0E00               	movlw	0
  2695  00117A  0100               	movlb	0	; () banked
  2696  00117C  6F72               	movwf	pow@sign& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699  00117E  5166               	movf	pow@x& (0+255),w,b
  2700  001180  1167               	iorwf	(pow@x+1)& (0+255),w,b
  2701  001182  1168               	iorwf	(pow@x+2)& (0+255),w,b
  2702  001184  A4D8               	btfss	status,2,c
  2703  001186  D01D               	goto	l629
  2704                           
  2705                           ; BSR set to: 0
  2706  001188  0E00               	movlw	0
  2707  00118A  6E01               	movwf	___ftge@ff1,c
  2708  00118C  0E00               	movlw	0
  2709  00118E  6E02               	movwf	___ftge@ff1+1,c
  2710  001190  0E00               	movlw	0
  2711  001192  6E03               	movwf	___ftge@ff1+2,c
  2712  001194  C069  F004         	movff	pow@y,___ftge@ff2
  2713  001198  C06A  F005         	movff	pow@y+1,___ftge@ff2+1
  2714  00119C  C06B  F006         	movff	pow@y+2,___ftge@ff2+2
  2715  0011A0  EC5C  F00E         	call	___ftge	;wreg free
  2716  0011A4  A0D8               	btfss	status,0,c
  2717  0011A6  D005               	goto	l630
  2718  0011A8  0E00               	movlw	0
  2719  0011AA  0100               	movlb	0	; () banked
  2720  0011AC  6FEE               	movwf	(_errno+1)& (0+255),b
  2721  0011AE  0E21               	movlw	33
  2722  0011B0  6FED               	movwf	_errno& (0+255),b
  2723  0011B2                     l630:
  2724  0011B2  0E00               	movlw	0
  2725  0011B4  0100               	movlb	0	; () banked
  2726  0011B6  6F66               	movwf	?_pow& (0+255),b
  2727  0011B8  0E00               	movlw	0
  2728  0011BA  6F67               	movwf	(?_pow+1)& (0+255),b
  2729  0011BC  0E00               	movlw	0
  2730  0011BE  6F68               	movwf	(?_pow+2)& (0+255),b
  2731                           
  2732                           ; BSR set to: 0
  2733  0011C0  0012               	return	
  2734  0011C2                     l629:
  2735                           
  2736                           ; BSR set to: 0
  2737                           
  2738                           ; BSR set to: 0
  2739  0011C2  5169               	movf	pow@y& (0+255),w,b
  2740  0011C4  116A               	iorwf	(pow@y+1)& (0+255),w,b
  2741  0011C6  116B               	iorwf	(pow@y+2)& (0+255),w,b
  2742  0011C8  A4D8               	btfss	status,2,c
  2743  0011CA  D007               	goto	l632
  2744                           
  2745                           ; BSR set to: 0
  2746  0011CC  0E00               	movlw	0
  2747  0011CE  6F66               	movwf	?_pow& (0+255),b
  2748  0011D0  0E80               	movlw	128
  2749  0011D2  6F67               	movwf	(?_pow+1)& (0+255),b
  2750  0011D4  0E3F               	movlw	63
  2751  0011D6  6F68               	movwf	(?_pow+2)& (0+255),b
  2752                           
  2753                           ; BSR set to: 0
  2754  0011D8  0012               	return	
  2755  0011DA                     l632:
  2756                           
  2757                           ; BSR set to: 0
  2758                           
  2759                           ; BSR set to: 0
  2760  0011DA  AF68               	btfss	(pow@x+2)& (0+255),7,b
  2761  0011DC  D041               	goto	l633
  2762                           
  2763                           ; BSR set to: 0
  2764  0011DE  C069  F037         	movff	pow@y,___fttol@f1
  2765  0011E2  C06A  F038         	movff	pow@y+1,___fttol@f1+1
  2766  0011E6  C06B  F039         	movff	pow@y+2,___fttol@f1+2
  2767  0011EA  ECBF  F00A         	call	___fttol	;wreg free
  2768  0011EE  C037  F073         	movff	?___fttol,pow@yi
  2769  0011F2  C038  F074         	movff	?___fttol+1,pow@yi+1
  2770  0011F6  C039  F075         	movff	?___fttol+2,pow@yi+2
  2771  0011FA  C03A  F076         	movff	?___fttol+3,pow@yi+3
  2772  0011FE  C073  F009         	movff	pow@yi,___lltoft@c
  2773  001202  C074  F00A         	movff	pow@yi+1,___lltoft@c+1
  2774  001206  C075  F00B         	movff	pow@yi+2,___lltoft@c+2
  2775  00120A  C076  F00C         	movff	pow@yi+3,___lltoft@c+3
  2776  00120E  EC8A  F00F         	call	___lltoft	;wreg free
  2777  001212  0100               	movlb	0	; () banked
  2778  001214  5169               	movf	pow@y& (0+255),w,b
  2779  001216  1809               	xorwf	?___lltoft,w,c
  2780  001218  E107               	bnz	u2570
  2781  00121A  516A               	movf	(pow@y+1)& (0+255),w,b
  2782  00121C  180A               	xorwf	?___lltoft+1,w,c
  2783  00121E  E104               	bnz	u2570
  2784  001220  516B               	movf	(pow@y+2)& (0+255),w,b
  2785  001222  180B               	xorwf	?___lltoft+2,w,c
  2786  001224  B4D8               	btfsc	status,2,c
  2787  001226  D00B               	goto	l634
  2788  001228                     u2570:
  2789                           
  2790                           ; BSR set to: 0
  2791  001228  0E00               	movlw	0
  2792  00122A  6FEE               	movwf	(_errno+1)& (0+255),b
  2793  00122C  0E21               	movlw	33
  2794  00122E  6FED               	movwf	_errno& (0+255),b
  2795  001230  0E00               	movlw	0
  2796  001232  6F66               	movwf	?_pow& (0+255),b
  2797  001234  0E00               	movlw	0
  2798  001236  6F67               	movwf	(?_pow+1)& (0+255),b
  2799  001238  0E00               	movlw	0
  2800  00123A  6F68               	movwf	(?_pow+2)& (0+255),b
  2801                           
  2802                           ; BSR set to: 0
  2803  00123C  0012               	return	
  2804  00123E                     l634:
  2805                           
  2806                           ; BSR set to: 0
  2807                           
  2808                           ; BSR set to: 0
  2809  00123E  5173               	movf	pow@yi& (0+255),w,b
  2810  001240  0B01               	andlw	1
  2811  001242  6F72               	movwf	pow@sign& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814  001244  C066  F001         	movff	pow@x,___ftneg@f1
  2815  001248  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2816  00124C  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2817  001250  EC3F  F010         	call	___ftneg	;wreg free
  2818  001254  C001  F066         	movff	?___ftneg,pow@x
  2819  001258  C002  F067         	movff	?___ftneg+1,pow@x+1
  2820  00125C  C003  F068         	movff	?___ftneg+2,pow@x+2
  2821  001260                     l633:
  2822  001260  C066  F043         	movff	pow@x,log@x
  2823  001264  C067  F044         	movff	pow@x+1,log@x+1
  2824  001268  C068  F045         	movff	pow@x+2,log@x+2
  2825  00126C  EC30  F00A         	call	_log	;wreg free
  2826  001270  C043  F06C         	movff	?_log,_pow$1547
  2827  001274  C044  F06D         	movff	?_log+1,_pow$1547+1
  2828  001278  C045  F06E         	movff	?_log+2,_pow$1547+2
  2829  00127C  C06C  F00D         	movff	_pow$1547,___ftmul@f1
  2830  001280  C06D  F00E         	movff	_pow$1547+1,___ftmul@f1+1
  2831  001284  C06E  F00F         	movff	_pow$1547+2,___ftmul@f1+2
  2832  001288  C069  F010         	movff	pow@y,___ftmul@f2
  2833  00128C  C06A  F011         	movff	pow@y+1,___ftmul@f2+1
  2834  001290  C06B  F012         	movff	pow@y+2,___ftmul@f2+2
  2835  001294  EC39  F00B         	call	___ftmul	;wreg free
  2836  001298  C00D  F06F         	movff	?___ftmul,_pow$1548
  2837  00129C  C00E  F070         	movff	?___ftmul+1,_pow$1548+1
  2838  0012A0  C00F  F071         	movff	?___ftmul+2,_pow$1548+2
  2839  0012A4  C06F  F058         	movff	_pow$1548,exp@x
  2840  0012A8  C070  F059         	movff	_pow$1548+1,exp@x+1
  2841  0012AC  C071  F05A         	movff	_pow$1548+2,exp@x+2
  2842  0012B0  ECF0  F006         	call	_exp	;wreg free
  2843  0012B4  C058  F066         	movff	?_exp,pow@x
  2844  0012B8  C059  F067         	movff	?_exp+1,pow@x+1
  2845  0012BC  C05A  F068         	movff	?_exp+2,pow@x+2
  2846  0012C0  0100               	movlb	0	; () banked
  2847  0012C2  5172               	movf	pow@sign& (0+255),w,b
  2848  0012C4  B4D8               	btfsc	status,2,c
  2849  0012C6  D00F               	goto	l635
  2850                           
  2851                           ; BSR set to: 0
  2852  0012C8  C066  F001         	movff	pow@x,___ftneg@f1
  2853  0012CC  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2854  0012D0  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2855  0012D4  EC3F  F010         	call	___ftneg	;wreg free
  2856  0012D8  C001  F066         	movff	?___ftneg,?_pow
  2857  0012DC  C002  F067         	movff	?___ftneg+1,?_pow+1
  2858  0012E0  C003  F068         	movff	?___ftneg+2,?_pow+2
  2859  0012E4  0012               	return	
  2860  0012E6                     l635:
  2861                           
  2862                           ; BSR set to: 0
  2863  0012E6  C066  F066         	movff	pow@x,?_pow
  2864  0012EA  C067  F067         	movff	pow@x+1,?_pow+1
  2865  0012EE  C068  F068         	movff	pow@x+2,?_pow+2
  2866  0012F2  0012               	return		;funcret
  2867  0012F4                     __end_of_pow:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           intcon	equ	0xFF2
  2871                           postinc0	equ	0xFEE
  2872                           wreg	equ	0xFE8
  2873                           plusw1	equ	0xFE3
  2874                           postinc2	equ	0xFDE
  2875                           postdec2	equ	0xFDD
  2876                           plusw2	equ	0xFDB
  2877                           fsr2h	equ	0xFDA
  2878                           fsr2l	equ	0xFD9
  2879                           status	equ	0xFD8
  2880                           
  2881 ;; *************** function _log *****************
  2882 ;; Defined at:
  2883 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  x               3   66[COMRAM] unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  exponent        2   69[COMRAM] int 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  3   66[COMRAM] int 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2897 ;;      Params:         3       0       0       0       0       0       0       0       0
  2898 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2900 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2901 ;;Total ram usage:        5 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    3
  2904 ;; This function calls:
  2905 ;;		___awtoft
  2906 ;;		___ftadd
  2907 ;;		___ftmul
  2908 ;;		_eval_poly
  2909 ;;		_frexp
  2910 ;; This function is called by:
  2911 ;;		_pow
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text11
  2916  001460                     __ptext11:
  2917                           	opt stack 0
  2918  001460                     _log:
  2919                           	opt stack 24
  2920                           
  2921                           ;incstack = 0
  2922  001460  AE45               	btfss	log@x+2,7,c
  2923  001462  D00C               	goto	l831
  2924  001464  0E00               	movlw	0
  2925  001466  0100               	movlb	0	; () banked
  2926  001468  6FEE               	movwf	(_errno+1)& (0+255),b
  2927  00146A  0E21               	movlw	33
  2928  00146C  6FED               	movwf	_errno& (0+255),b
  2929  00146E  0E00               	movlw	0
  2930  001470  6E43               	movwf	?_log,c
  2931  001472  0E00               	movlw	0
  2932  001474  6E44               	movwf	?_log+1,c
  2933  001476  0E00               	movlw	0
  2934  001478  6E45               	movwf	?_log+2,c
  2935                           
  2936                           ; BSR set to: 0
  2937  00147A  0012               	return	
  2938  00147C                     l831:
  2939                           
  2940                           ; BSR set to: 0
  2941  00147C  5043               	movf	log@x,w,c
  2942  00147E  1044               	iorwf	log@x+1,w,c
  2943  001480  1045               	iorwf	log@x+2,w,c
  2944  001482  A4D8               	btfss	status,2,c
  2945  001484  D00C               	goto	l833
  2946  001486  0E00               	movlw	0
  2947  001488  0100               	movlb	0	; () banked
  2948  00148A  6FEE               	movwf	(_errno+1)& (0+255),b
  2949  00148C  0E22               	movlw	34
  2950  00148E  6FED               	movwf	_errno& (0+255),b
  2951  001490  0E00               	movlw	0
  2952  001492  6E43               	movwf	?_log,c
  2953  001494  0E00               	movlw	0
  2954  001496  6E44               	movwf	?_log+1,c
  2955  001498  0E00               	movlw	0
  2956  00149A  6E45               	movwf	?_log+2,c
  2957                           
  2958                           ; BSR set to: 0
  2959  00149C  0012               	return	
  2960  00149E                     l833:
  2961                           
  2962                           ; BSR set to: 0
  2963  00149E  0E00               	movlw	0
  2964  0014A0  6E10               	movwf	___ftmul@f2,c
  2965  0014A2  0E00               	movlw	0
  2966  0014A4  6E11               	movwf	___ftmul@f2+1,c
  2967  0014A6  0E40               	movlw	64
  2968  0014A8  6E12               	movwf	___ftmul@f2+2,c
  2969  0014AA  0E46               	movlw	low log@exponent
  2970  0014AC  6E04               	movwf	frexp@eptr,c
  2971  0014AE  0E00               	movlw	high log@exponent
  2972  0014B0  6E05               	movwf	frexp@eptr+1,c
  2973  0014B2  C043  F001         	movff	log@x,frexp@value
  2974  0014B6  C044  F002         	movff	log@x+1,frexp@value+1
  2975  0014BA  C045  F003         	movff	log@x+2,frexp@value+2
  2976  0014BE  EC14  F00E         	call	_frexp	;wreg free
  2977  0014C2  C001  F00D         	movff	?_frexp,___ftmul@f1
  2978  0014C6  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  2979  0014CA  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  2980  0014CE  EC39  F00B         	call	___ftmul	;wreg free
  2981  0014D2  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2982  0014D6  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2983  0014DA  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2984  0014DE  0E00               	movlw	0
  2985  0014E0  6E2E               	movwf	___ftadd@f2,c
  2986  0014E2  0E80               	movlw	128
  2987  0014E4  6E2F               	movwf	___ftadd@f2+1,c
  2988  0014E6  0EBF               	movlw	191
  2989  0014E8  6E30               	movwf	___ftadd@f2+2,c
  2990  0014EA  ECE6  F007         	call	___ftadd	;wreg free
  2991  0014EE  C02B  F043         	movff	?___ftadd,log@x
  2992  0014F2  C02C  F044         	movff	?___ftadd+1,log@x+1
  2993  0014F6  C02D  F045         	movff	?___ftadd+2,log@x+2
  2994  0014FA  0646               	decf	log@exponent,f,c
  2995  0014FC  A0D8               	btfss	status,0,c
  2996  0014FE  0647               	decf	log@exponent+1,f,c
  2997  001500  C043  F037         	movff	log@x,eval_poly@x
  2998  001504  C044  F038         	movff	log@x+1,eval_poly@x+1
  2999  001508  C045  F039         	movff	log@x+2,eval_poly@x+2
  3000  00150C  0E1F               	movlw	low log@coeff
  3001  00150E  6E3A               	movwf	eval_poly@d,c
  3002  001510  0E08               	movlw	high log@coeff
  3003  001512  6E3B               	movwf	eval_poly@d+1,c
  3004  001514  0E00               	movlw	0
  3005  001516  6E3D               	movwf	eval_poly@n+1,c
  3006  001518  0E08               	movlw	8
  3007  00151A  6E3C               	movwf	eval_poly@n,c
  3008  00151C  EC95  F00C         	call	_eval_poly	;wreg free
  3009  001520  C037  F043         	movff	?_eval_poly,log@x
  3010  001524  C038  F044         	movff	?_eval_poly+1,log@x+1
  3011  001528  C039  F045         	movff	?_eval_poly+2,log@x+2
  3012  00152C  0E72               	movlw	114
  3013  00152E  6E10               	movwf	___ftmul@f2,c
  3014  001530  0E31               	movlw	49
  3015  001532  6E11               	movwf	___ftmul@f2+1,c
  3016  001534  0E3F               	movlw	63
  3017  001536  6E12               	movwf	___ftmul@f2+2,c
  3018  001538  C046  F009         	movff	log@exponent,___awtoft@c
  3019  00153C  C047  F00A         	movff	log@exponent+1,___awtoft@c+1
  3020  001540  ECFE  F00F         	call	___awtoft	;wreg free
  3021  001544  C009  F00D         	movff	?___awtoft,___ftmul@f1
  3022  001548  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  3023  00154C  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  3024  001550  EC39  F00B         	call	___ftmul	;wreg free
  3025  001554  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3026  001558  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3027  00155C  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3028  001560  C043  F02E         	movff	log@x,___ftadd@f2
  3029  001564  C044  F02F         	movff	log@x+1,___ftadd@f2+1
  3030  001568  C045  F030         	movff	log@x+2,___ftadd@f2+2
  3031  00156C  ECE6  F007         	call	___ftadd	;wreg free
  3032  001570  C02B  F043         	movff	?___ftadd,?_log
  3033  001574  C02C  F044         	movff	?___ftadd+1,?_log+1
  3034  001578  C02D  F045         	movff	?___ftadd+2,?_log+2
  3035  00157C  0012               	return	
  3036  00157E                     __end_of_log:
  3037                           	opt stack 0
  3038                           tblptru	equ	0xFF8
  3039                           intcon	equ	0xFF2
  3040                           postinc0	equ	0xFEE
  3041                           wreg	equ	0xFE8
  3042                           plusw1	equ	0xFE3
  3043                           postinc2	equ	0xFDE
  3044                           postdec2	equ	0xFDD
  3045                           plusw2	equ	0xFDB
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _exp *****************
  3051 ;; Defined at:
  3052 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  x               3   87[COMRAM] int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  exponent        2    3[BANK0 ] int 
  3057 ;;  sign            1    5[BANK0 ] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  3   87[COMRAM] unsigned char 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3067 ;;      Params:         3       0       0       0       0       0       0       0       0
  3068 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3070 ;;      Totals:         3       6       0       0       0       0       0       0       0
  3071 ;;Total ram usage:        9 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    3
  3074 ;; This function calls:
  3075 ;;		___awtoft
  3076 ;;		___ftdiv
  3077 ;;		___ftge
  3078 ;;		___ftmul
  3079 ;;		___ftneg
  3080 ;;		___ftsub
  3081 ;;		___fttol
  3082 ;;		_eval_poly
  3083 ;;		_floor
  3084 ;;		_ldexp
  3085 ;; This function is called by:
  3086 ;;		_pow
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text12
  3091  000DE0                     __ptext12:
  3092                           	opt stack 0
  3093  000DE0                     _exp:
  3094                           	opt stack 24
  3095                           
  3096                           ;incstack = 0
  3097  000DE0  5058               	movf	exp@x,w,c
  3098  000DE2  1059               	iorwf	exp@x+1,w,c
  3099  000DE4  105A               	iorwf	exp@x+2,w,c
  3100  000DE6  A4D8               	btfss	status,2,c
  3101  000DE8  D007               	goto	l789
  3102  000DEA  0E00               	movlw	0
  3103  000DEC  6E58               	movwf	?_exp,c
  3104  000DEE  0E80               	movlw	128
  3105  000DF0  6E59               	movwf	?_exp+1,c
  3106  000DF2  0E3F               	movlw	63
  3107  000DF4  6E5A               	movwf	?_exp+2,c
  3108  000DF6  0012               	return	
  3109  000DF8                     l789:
  3110  000DF8  0E72               	movlw	114
  3111  000DFA  6E01               	movwf	___ftge@ff1,c
  3112  000DFC  0E31               	movlw	49
  3113  000DFE  6E02               	movwf	___ftge@ff1+1,c
  3114  000E00  0E44               	movlw	68
  3115  000E02  6E03               	movwf	___ftge@ff1+2,c
  3116  000E04  C058  F004         	movff	exp@x,___ftge@ff2
  3117  000E08  C059  F005         	movff	exp@x+1,___ftge@ff2+1
  3118  000E0C  C05A  F006         	movff	exp@x+2,___ftge@ff2+2
  3119  000E10  EC5C  F00E         	call	___ftge	;wreg free
  3120  000E14  B0D8               	btfsc	status,0,c
  3121  000E16  D00C               	goto	l791
  3122  000E18  0E00               	movlw	0
  3123  000E1A  0100               	movlb	0	; () banked
  3124  000E1C  6FEE               	movwf	(_errno+1)& (0+255),b
  3125  000E1E  0E22               	movlw	34
  3126  000E20  6FED               	movwf	_errno& (0+255),b
  3127  000E22  0EFF               	movlw	255
  3128  000E24  6E58               	movwf	?_exp,c
  3129  000E26  0E7F               	movlw	127
  3130  000E28  6E59               	movwf	?_exp+1,c
  3131  000E2A  0E7F               	movlw	127
  3132  000E2C  6E5A               	movwf	?_exp+2,c
  3133                           
  3134                           ; BSR set to: 0
  3135  000E2E  0012               	return	
  3136  000E30                     l791:
  3137                           
  3138                           ; BSR set to: 0
  3139  000E30  C058  F001         	movff	exp@x,___ftge@ff1
  3140  000E34  C059  F002         	movff	exp@x+1,___ftge@ff1+1
  3141  000E38  C05A  F003         	movff	exp@x+2,___ftge@ff1+2
  3142  000E3C  0E49               	movlw	73
  3143  000E3E  6E04               	movwf	___ftge@ff2,c
  3144  000E40  0E3A               	movlw	58
  3145  000E42  6E05               	movwf	___ftge@ff2+1,c
  3146  000E44  0EC4               	movlw	196
  3147  000E46  6E06               	movwf	___ftge@ff2+2,c
  3148  000E48  EC5C  F00E         	call	___ftge	;wreg free
  3149  000E4C  B0D8               	btfsc	status,0,c
  3150  000E4E  D00C               	goto	l792
  3151  000E50  0E00               	movlw	0
  3152  000E52  0100               	movlb	0	; () banked
  3153  000E54  6FEE               	movwf	(_errno+1)& (0+255),b
  3154  000E56  0E22               	movlw	34
  3155  000E58  6FED               	movwf	_errno& (0+255),b
  3156  000E5A  0E00               	movlw	0
  3157  000E5C  6E58               	movwf	?_exp,c
  3158  000E5E  0E00               	movlw	0
  3159  000E60  6E59               	movwf	?_exp+1,c
  3160  000E62  0E00               	movlw	0
  3161  000E64  6E5A               	movwf	?_exp+2,c
  3162                           
  3163                           ; BSR set to: 0
  3164  000E66  0012               	return	
  3165  000E68                     l792:
  3166                           
  3167                           ; BSR set to: 0
  3168  000E68  AE5A               	btfss	exp@x+2,7,c
  3169  000E6A  D002               	goto	u2480
  3170  000E6C  0E01               	movlw	1
  3171  000E6E  D001               	goto	u2490
  3172  000E70                     u2480:
  3173  000E70  0E00               	movlw	0
  3174  000E72                     u2490:
  3175  000E72  0100               	movlb	0	; () banked
  3176  000E74  6F65               	movwf	exp@sign& (0+255),b
  3177                           
  3178                           ; BSR set to: 0
  3179  000E76  5165               	movf	exp@sign& (0+255),w,b
  3180  000E78  B4D8               	btfsc	status,2,c
  3181  000E7A  D00E               	goto	l793
  3182                           
  3183                           ; BSR set to: 0
  3184  000E7C  C058  F001         	movff	exp@x,___ftneg@f1
  3185  000E80  C059  F002         	movff	exp@x+1,___ftneg@f1+1
  3186  000E84  C05A  F003         	movff	exp@x+2,___ftneg@f1+2
  3187  000E88  EC3F  F010         	call	___ftneg	;wreg free
  3188  000E8C  C001  F058         	movff	?___ftneg,exp@x
  3189  000E90  C002  F059         	movff	?___ftneg+1,exp@x+1
  3190  000E94  C003  F05A         	movff	?___ftneg+2,exp@x+2
  3191  000E98                     l793:
  3192  000E98  C058  F00D         	movff	exp@x,___ftmul@f1
  3193  000E9C  C059  F00E         	movff	exp@x+1,___ftmul@f1+1
  3194  000EA0  C05A  F00F         	movff	exp@x+2,___ftmul@f1+2
  3195  000EA4  0EAA               	movlw	170
  3196  000EA6  6E10               	movwf	___ftmul@f2,c
  3197  000EA8  0EB8               	movlw	184
  3198  000EAA  6E11               	movwf	___ftmul@f2+1,c
  3199  000EAC  0E3F               	movlw	63
  3200  000EAE  6E12               	movwf	___ftmul@f2+2,c
  3201  000EB0  EC39  F00B         	call	___ftmul	;wreg free
  3202  000EB4  C00D  F058         	movff	?___ftmul,exp@x
  3203  000EB8  C00E  F059         	movff	?___ftmul+1,exp@x+1
  3204  000EBC  C00F  F05A         	movff	?___ftmul+2,exp@x+2
  3205  000EC0  C058  F050         	movff	exp@x,floor@x
  3206  000EC4  C059  F051         	movff	exp@x+1,floor@x+1
  3207  000EC8  C05A  F052         	movff	exp@x+2,floor@x+2
  3208  000ECC  EC26  F00C         	call	_floor	;wreg free
  3209  000ED0  C050  F060         	movff	?_floor,_exp$1549
  3210  000ED4  C051  F061         	movff	?_floor+1,_exp$1549+1
  3211  000ED8  C052  F062         	movff	?_floor+2,_exp$1549+2
  3212  000EDC  C060  F037         	movff	_exp$1549,___fttol@f1
  3213  000EE0  C061  F038         	movff	_exp$1549+1,___fttol@f1+1
  3214  000EE4  C062  F039         	movff	_exp$1549+2,___fttol@f1+2
  3215  000EE8  ECBF  F00A         	call	___fttol	;wreg free
  3216  000EEC  C037  F063         	movff	?___fttol,exp@exponent
  3217  000EF0  C038  F064         	movff	?___fttol+1,exp@exponent+1
  3218  000EF4  C058  F037         	movff	exp@x,___ftsub@f1
  3219  000EF8  C059  F038         	movff	exp@x+1,___ftsub@f1+1
  3220  000EFC  C05A  F039         	movff	exp@x+2,___ftsub@f1+2
  3221  000F00  C063  F009         	movff	exp@exponent,___awtoft@c
  3222  000F04  C064  F00A         	movff	exp@exponent+1,___awtoft@c+1
  3223  000F08  ECFE  F00F         	call	___awtoft	;wreg free
  3224  000F0C  C009  F03A         	movff	?___awtoft,___ftsub@f2
  3225  000F10  C00A  F03B         	movff	?___awtoft+1,___ftsub@f2+1
  3226  000F14  C00B  F03C         	movff	?___awtoft+2,___ftsub@f2+2
  3227  000F18  ECDE  F00F         	call	___ftsub	;wreg free
  3228  000F1C  C037  F058         	movff	?___ftsub,exp@x
  3229  000F20  C038  F059         	movff	?___ftsub+1,exp@x+1
  3230  000F24  C039  F05A         	movff	?___ftsub+2,exp@x+2
  3231  000F28  C058  F037         	movff	exp@x,eval_poly@x
  3232  000F2C  C059  F038         	movff	exp@x+1,eval_poly@x+1
  3233  000F30  C05A  F039         	movff	exp@x+2,eval_poly@x+2
  3234  000F34  0E01               	movlw	low exp@coeff
  3235  000F36  6E3A               	movwf	eval_poly@d,c
  3236  000F38  0E08               	movlw	high exp@coeff
  3237  000F3A  6E3B               	movwf	eval_poly@d+1,c
  3238  000F3C  0E00               	movlw	0
  3239  000F3E  6E3D               	movwf	eval_poly@n+1,c
  3240  000F40  0E09               	movlw	9
  3241  000F42  6E3C               	movwf	eval_poly@n,c
  3242  000F44  EC95  F00C         	call	_eval_poly	;wreg free
  3243  000F48  C037  F043         	movff	?_eval_poly,ldexp@value
  3244  000F4C  C038  F044         	movff	?_eval_poly+1,ldexp@value+1
  3245  000F50  C039  F045         	movff	?_eval_poly+2,ldexp@value+2
  3246  000F54  C063  F046         	movff	exp@exponent,ldexp@newexp
  3247  000F58  C064  F047         	movff	exp@exponent+1,ldexp@newexp+1
  3248  000F5C  ECFE  F00C         	call	_ldexp	;wreg free
  3249  000F60  C043  F058         	movff	?_ldexp,exp@x
  3250  000F64  C044  F059         	movff	?_ldexp+1,exp@x+1
  3251  000F68  C045  F05A         	movff	?_ldexp+2,exp@x+2
  3252  000F6C  0100               	movlb	0	; () banked
  3253  000F6E  5165               	movf	exp@sign& (0+255),w,b
  3254  000F70  B4D8               	btfsc	status,2,c
  3255  000F72  D025               	goto	l794
  3256                           
  3257                           ; BSR set to: 0
  3258  000F74  2858               	incf	exp@x,w,c
  3259  000F76  E10E               	bnz	l2376
  3260  000F78  0E7F               	movlw	127
  3261  000F7A  1859               	xorwf	exp@x+1,w,c
  3262  000F7C  E10B               	bnz	l2376
  3263  000F7E  0E7F               	movlw	127
  3264  000F80  185A               	xorwf	exp@x+2,w,c
  3265  000F82  A4D8               	btfss	status,2,c
  3266  000F84  D007               	goto	l795
  3267                           
  3268                           ; BSR set to: 0
  3269  000F86  0E00               	movlw	0
  3270  000F88  6E58               	movwf	?_exp,c
  3271  000F8A  0E00               	movlw	0
  3272  000F8C  6E59               	movwf	?_exp+1,c
  3273  000F8E  0E00               	movlw	0
  3274  000F90  6E5A               	movwf	?_exp+2,c
  3275                           
  3276                           ; BSR set to: 0
  3277  000F92  0012               	return	
  3278  000F94                     l795:
  3279  000F94                     l2376:
  3280                           
  3281                           ; BSR set to: 0
  3282  000F94  0E00               	movlw	0
  3283  000F96  6E1C               	movwf	___ftdiv@f1,c
  3284  000F98  0E80               	movlw	128
  3285  000F9A  6E1D               	movwf	___ftdiv@f1+1,c
  3286  000F9C  0E3F               	movlw	63
  3287  000F9E  6E1E               	movwf	___ftdiv@f1+2,c
  3288  000FA0  C058  F01F         	movff	exp@x,___ftdiv@f2
  3289  000FA4  C059  F020         	movff	exp@x+1,___ftdiv@f2+1
  3290  000FA8  C05A  F021         	movff	exp@x+2,___ftdiv@f2+2
  3291  000FAC  ECB3  F00B         	call	___ftdiv	;wreg free
  3292  000FB0  C01C  F058         	movff	?___ftdiv,?_exp
  3293  000FB4  C01D  F059         	movff	?___ftdiv+1,?_exp+1
  3294  000FB8  C01E  F05A         	movff	?___ftdiv+2,?_exp+2
  3295  000FBC  0012               	return	
  3296  000FBE                     l794:
  3297                           
  3298                           ; BSR set to: 0
  3299  000FBE  C058  F058         	movff	exp@x,?_exp
  3300  000FC2  C059  F059         	movff	exp@x+1,?_exp+1
  3301  000FC6  C05A  F05A         	movff	exp@x+2,?_exp+2
  3302  000FCA  0012               	return		;funcret
  3303  000FCC                     __end_of_exp:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           plusw1	equ	0xFE3
  3310                           postinc2	equ	0xFDE
  3311                           postdec2	equ	0xFDD
  3312                           plusw2	equ	0xFDB
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _ldexp *****************
  3318 ;; Defined at:
  3319 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  value           3   66[COMRAM] unsigned char 
  3322 ;;  newexp          2   69[COMRAM] int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  3   66[COMRAM] int 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         5       0       0       0       0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3338 ;;Total ram usage:        7 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_exp
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text13
  3348  0019FC                     __ptext13:
  3349                           	opt stack 0
  3350  0019FC                     _ldexp:
  3351                           	opt stack 26
  3352                           
  3353                           ;incstack = 0
  3354  0019FC  5043               	movf	ldexp@value,w,c
  3355  0019FE  1044               	iorwf	ldexp@value+1,w,c
  3356  001A00  1045               	iorwf	ldexp@value+2,w,c
  3357  001A02  A4D8               	btfss	status,2,c
  3358  001A04  D007               	goto	l813
  3359  001A06  0E00               	movlw	0
  3360  001A08  6E43               	movwf	?_ldexp,c
  3361  001A0A  0E00               	movlw	0
  3362  001A0C  6E44               	movwf	?_ldexp+1,c
  3363  001A0E  0E00               	movlw	0
  3364  001A10  6E45               	movwf	?_ldexp+2,c
  3365  001A12  0012               	return	
  3366  001A14                     l813:
  3367  001A14  5045               	movf	ldexp@value+2,w,c
  3368  001A16  0B7F               	andlw	127
  3369  001A18  6E48               	movwf	??_ldexp& (0+255),c
  3370  001A1A  6A49               	clrf	(??_ldexp+1)& (0+255),c
  3371  001A1C  90D8               	bcf	status,0,c
  3372  001A1E  3648               	rlcf	??_ldexp,f,c
  3373  001A20  3649               	rlcf	??_ldexp+1,f,c
  3374  001A22  5048               	movf	??_ldexp,w,c
  3375  001A24  2646               	addwf	ldexp@newexp,f,c
  3376  001A26  5049               	movf	??_ldexp+1,w,c
  3377  001A28  2247               	addwfc	ldexp@newexp+1,f,c
  3378  001A2A  AE44               	btfss	ldexp@value+1,7,c
  3379  001A2C  D003               	goto	u2380
  3380  001A2E  6A48               	clrf	??_ldexp& (0+255),c
  3381  001A30  2A48               	incf	??_ldexp& (0+255),f,c
  3382  001A32  D001               	goto	u2388
  3383  001A34                     u2380:
  3384  001A34  6A48               	clrf	??_ldexp& (0+255),c
  3385  001A36                     u2388:
  3386  001A36  5048               	movf	??_ldexp,w,c
  3387  001A38  2646               	addwf	ldexp@newexp,f,c
  3388  001A3A  0E00               	movlw	0
  3389  001A3C  2247               	addwfc	ldexp@newexp+1,f,c
  3390  001A3E  AE47               	btfss	ldexp@newexp+1,7,c
  3391  001A40  D00C               	goto	l815
  3392  001A42  0E00               	movlw	0
  3393  001A44  0100               	movlb	0	; () banked
  3394  001A46  6FEE               	movwf	(_errno+1)& (0+255),b
  3395  001A48  0E22               	movlw	34
  3396  001A4A  6FED               	movwf	_errno& (0+255),b
  3397  001A4C  0E00               	movlw	0
  3398  001A4E  6E43               	movwf	?_ldexp,c
  3399  001A50  0E00               	movlw	0
  3400  001A52  6E44               	movwf	?_ldexp+1,c
  3401  001A54  0E00               	movlw	0
  3402  001A56                     L2:
  3403  001A56  6E45               	movwf	?_ldexp+2,c
  3404                           
  3405                           ; BSR set to: 0
  3406  001A58  0012               	return	
  3407  001A5A                     l815:
  3408                           
  3409                           ; BSR set to: 0
  3410  001A5A  BE47               	btfsc	ldexp@newexp+1,7,c
  3411  001A5C  D016               	goto	l817
  3412  001A5E  0447               	decf	ldexp@newexp+1,w,c
  3413  001A60  A0D8               	btfss	status,0,c
  3414  001A62  D013               	goto	l817
  3415  001A64  0E00               	movlw	0
  3416  001A66  0100               	movlb	0	; () banked
  3417  001A68  6FEE               	movwf	(_errno+1)& (0+255),b
  3418  001A6A  0E22               	movlw	34
  3419  001A6C  6FED               	movwf	_errno& (0+255),b
  3420                           
  3421                           ; BSR set to: 0
  3422  001A6E  AE45               	btfss	ldexp@value+2,7,c
  3423  001A70  D006               	goto	l818
  3424                           
  3425                           ; BSR set to: 0
  3426  001A72  0EFF               	movlw	255
  3427  001A74  6E43               	movwf	?_ldexp,c
  3428  001A76  0E7F               	movlw	127
  3429  001A78  6E44               	movwf	?_ldexp+1,c
  3430  001A7A  0EFF               	movlw	255
  3431  001A7C  D7EC               	goto	L2
  3432  001A7E                     l818:
  3433                           
  3434                           ; BSR set to: 0
  3435                           
  3436                           ; BSR set to: 0
  3437  001A7E  0EFF               	movlw	255
  3438  001A80  6E43               	movwf	?_ldexp,c
  3439  001A82  0E7F               	movlw	127
  3440  001A84  6E44               	movwf	?_ldexp+1,c
  3441  001A86  0E7F               	movlw	127
  3442  001A88  D7E6               	goto	L2
  3443  001A8A                     l817:
  3444                           
  3445                           ; BSR set to: 0
  3446  001A8A  3447               	rlcf	ldexp@newexp+1,w,c
  3447  001A8C  3047               	rrcf	ldexp@newexp+1,w,c
  3448  001A8E  6E49               	movwf	(??_ldexp+1)& (0+255),c
  3449  001A90  3046               	rrcf	ldexp@newexp,w,c
  3450  001A92  6E48               	movwf	??_ldexp& (0+255),c
  3451  001A94  5045               	movf	ldexp@value+2,w,c
  3452  001A96  1848               	xorwf	??_ldexp,w,c
  3453  001A98  0B80               	andlw	-128
  3454  001A9A  1848               	xorwf	??_ldexp,w,c
  3455  001A9C  6E45               	movwf	ldexp@value+2,c
  3456  001A9E  C046  F048         	movff	ldexp@newexp,??_ldexp
  3457  001AA2  0E01               	movlw	1
  3458  001AA4  1648               	andwf	??_ldexp,f,c
  3459  001AA6  3248               	rrcf	??_ldexp,f,c
  3460  001AA8  3248               	rrcf	??_ldexp,f,c
  3461  001AAA  5044               	movf	ldexp@value+1,w,c
  3462  001AAC  1848               	xorwf	??_ldexp,w,c
  3463  001AAE  0B7F               	andlw	-129
  3464  001AB0  1848               	xorwf	??_ldexp,w,c
  3465  001AB2  6E44               	movwf	ldexp@value+1,c
  3466  001AB4  C043  F043         	movff	ldexp@value,?_ldexp
  3467  001AB8  C044  F044         	movff	ldexp@value+1,?_ldexp+1
  3468  001ABC  C045  F045         	movff	ldexp@value+2,?_ldexp+2
  3469  001AC0  0012               	return	
  3470  001AC2                     __end_of_ldexp:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           intcon	equ	0xFF2
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           plusw1	equ	0xFE3
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           plusw2	equ	0xFDB
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _floor *****************
  3485 ;; Defined at:
  3486 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  x               3   79[COMRAM] int 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               3   82[COMRAM] int 
  3491 ;;  expon           2   85[COMRAM] int 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  3   79[COMRAM] int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         3       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        8 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    2
  3508 ;; This function calls:
  3509 ;;		___altoft
  3510 ;;		___ftadd
  3511 ;;		___ftge
  3512 ;;		___fttol
  3513 ;;		_frexp
  3514 ;; This function is called by:
  3515 ;;		_exp
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text14
  3520  00184C                     __ptext14:
  3521                           	opt stack 0
  3522  00184C                     _floor:
  3523                           	opt stack 24
  3524                           
  3525                           ;incstack = 0
  3526  00184C  C050  F001         	movff	floor@x,frexp@value
  3527  001850  C051  F002         	movff	floor@x+1,frexp@value+1
  3528  001854  C052  F003         	movff	floor@x+2,frexp@value+2
  3529  001858  0E56               	movlw	low floor@expon
  3530  00185A  6E04               	movwf	frexp@eptr,c
  3531  00185C  0E00               	movlw	high floor@expon
  3532  00185E  6E05               	movwf	frexp@eptr+1,c
  3533  001860  EC14  F00E         	call	_frexp	;wreg free
  3534  001864  AE57               	btfss	floor@expon+1,7,c
  3535  001866  D010               	goto	l800
  3536  001868  AE52               	btfss	floor@x+2,7,c
  3537  00186A  D007               	goto	l801
  3538  00186C  0E00               	movlw	0
  3539  00186E  6E50               	movwf	?_floor,c
  3540  001870  0E80               	movlw	128
  3541  001872  6E51               	movwf	?_floor+1,c
  3542  001874  0EBF               	movlw	191
  3543  001876  6E52               	movwf	?_floor+2,c
  3544  001878  0012               	return	
  3545  00187A                     l801:
  3546  00187A  0E00               	movlw	0
  3547  00187C  6E50               	movwf	?_floor,c
  3548  00187E  0E00               	movlw	0
  3549  001880  6E51               	movwf	?_floor+1,c
  3550  001882  0E00               	movlw	0
  3551  001884  6E52               	movwf	?_floor+2,c
  3552  001886  0012               	return	
  3553  001888                     l800:
  3554  001888  5057               	movf	floor@expon+1,w,c
  3555  00188A  E104               	bnz	u2340
  3556  00188C  0E15               	movlw	21
  3557  00188E  5C56               	subwf	floor@expon,w,c
  3558  001890  A0D8               	btfss	status,0,c
  3559  001892  D007               	goto	l803
  3560  001894                     u2340:
  3561  001894  C050  F050         	movff	floor@x,?_floor
  3562  001898  C051  F051         	movff	floor@x+1,?_floor+1
  3563  00189C  C052  F052         	movff	floor@x+2,?_floor+2
  3564  0018A0  0012               	return	
  3565  0018A2                     l803:
  3566  0018A2  C050  F037         	movff	floor@x,___fttol@f1
  3567  0018A6  C051  F038         	movff	floor@x+1,___fttol@f1+1
  3568  0018AA  C052  F039         	movff	floor@x+2,___fttol@f1+2
  3569  0018AE  ECBF  F00A         	call	___fttol	;wreg free
  3570  0018B2  C037  F046         	movff	?___fttol,___altoft@c
  3571  0018B6  C038  F047         	movff	?___fttol+1,___altoft@c+1
  3572  0018BA  C039  F048         	movff	?___fttol+2,___altoft@c+2
  3573  0018BE  C03A  F049         	movff	?___fttol+3,___altoft@c+3
  3574  0018C2  ECE6  F00E         	call	___altoft	;wreg free
  3575  0018C6  C046  F053         	movff	?___altoft,floor@i
  3576  0018CA  C047  F054         	movff	?___altoft+1,floor@i+1
  3577  0018CE  C048  F055         	movff	?___altoft+2,floor@i+2
  3578  0018D2  C050  F001         	movff	floor@x,___ftge@ff1
  3579  0018D6  C051  F002         	movff	floor@x+1,___ftge@ff1+1
  3580  0018DA  C052  F003         	movff	floor@x+2,___ftge@ff1+2
  3581  0018DE  C053  F004         	movff	floor@i,___ftge@ff2
  3582  0018E2  C054  F005         	movff	floor@i+1,___ftge@ff2+1
  3583  0018E6  C055  F006         	movff	floor@i+2,___ftge@ff2+2
  3584  0018EA  EC5C  F00E         	call	___ftge	;wreg free
  3585  0018EE  B0D8               	btfsc	status,0,c
  3586  0018F0  D015               	goto	l804
  3587  0018F2  C053  F02B         	movff	floor@i,___ftadd@f1
  3588  0018F6  C054  F02C         	movff	floor@i+1,___ftadd@f1+1
  3589  0018FA  C055  F02D         	movff	floor@i+2,___ftadd@f1+2
  3590  0018FE  0E00               	movlw	0
  3591  001900  6E2E               	movwf	___ftadd@f2,c
  3592  001902  0E80               	movlw	128
  3593  001904  6E2F               	movwf	___ftadd@f2+1,c
  3594  001906  0EBF               	movlw	191
  3595  001908  6E30               	movwf	___ftadd@f2+2,c
  3596  00190A  ECE6  F007         	call	___ftadd	;wreg free
  3597  00190E  C02B  F050         	movff	?___ftadd,?_floor
  3598  001912  C02C  F051         	movff	?___ftadd+1,?_floor+1
  3599  001916  C02D  F052         	movff	?___ftadd+2,?_floor+2
  3600  00191A  0012               	return	
  3601  00191C                     l804:
  3602  00191C  C053  F050         	movff	floor@i,?_floor
  3603  001920  C054  F051         	movff	floor@i+1,?_floor+1
  3604  001924  C055  F052         	movff	floor@i+2,?_floor+2
  3605  001928  0012               	return		;funcret
  3606  00192A                     __end_of_floor:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           plusw1	equ	0xFE3
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           plusw2	equ	0xFDB
  3616                           fsr2h	equ	0xFDA
  3617                           fsr2l	equ	0xFD9
  3618                           status	equ	0xFD8
  3619                           
  3620 ;; *************** function _frexp *****************
  3621 ;; Defined at:
  3622 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  value           3    0[COMRAM] int 
  3625 ;;  eptr            2    3[COMRAM] PTR int 
  3626 ;;		 -> log@exponent(2), floor@expon(2), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  3    0[COMRAM] PTR int 
  3631 ;; Registers used:
  3632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3638 ;;      Params:         5       0       0       0       0       0       0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3640 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3641 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3642 ;;Total ram usage:        7 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_floor
  3648 ;;		_log
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text15
  3653  001C28                     __ptext15:
  3654                           	opt stack 0
  3655  001C28                     _frexp:
  3656                           	opt stack 26
  3657                           
  3658                           ;incstack = 0
  3659  001C28  5001               	movf	frexp@value,w,c
  3660  001C2A  1002               	iorwf	frexp@value+1,w,c
  3661  001C2C  1003               	iorwf	frexp@value+2,w,c
  3662  001C2E  A4D8               	btfss	status,2,c
  3663  001C30  D00F               	goto	l809
  3664  001C32  C004  FFD9         	movff	frexp@eptr,fsr2l
  3665  001C36  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3666  001C3A  0E00               	movlw	0
  3667  001C3C  6EDE               	movwf	postinc2,c
  3668  001C3E  0E00               	movlw	0
  3669  001C40  6EDD               	movwf	postdec2,c
  3670  001C42  0E00               	movlw	0
  3671  001C44  6E01               	movwf	?_frexp,c
  3672  001C46  0E00               	movlw	0
  3673  001C48  6E02               	movwf	?_frexp+1,c
  3674  001C4A  0E00               	movlw	0
  3675  001C4C  6E03               	movwf	?_frexp+2,c
  3676  001C4E  0012               	return	
  3677  001C50                     l809:
  3678  001C50  5003               	movf	frexp@value+2,w,c
  3679  001C52  0B7F               	andlw	127
  3680  001C54  6E06               	movwf	??_frexp& (0+255),c
  3681  001C56  6A07               	clrf	(??_frexp+1)& (0+255),c
  3682  001C58  90D8               	bcf	status,0,c
  3683  001C5A  3606               	rlcf	??_frexp,f,c
  3684  001C5C  3607               	rlcf	??_frexp+1,f,c
  3685  001C5E  C004  FFD9         	movff	frexp@eptr,fsr2l
  3686  001C62  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3687  001C66  C006  FFDE         	movff	??_frexp,postinc2
  3688  001C6A  C007  FFDD         	movff	??_frexp+1,postdec2
  3689  001C6E  AE02               	btfss	frexp@value+1,7,c
  3690  001C70  D003               	goto	u2230
  3691  001C72  6A06               	clrf	??_frexp& (0+255),c
  3692  001C74  2A06               	incf	??_frexp& (0+255),f,c
  3693  001C76  D001               	goto	u2238
  3694  001C78                     u2230:
  3695  001C78  6A06               	clrf	??_frexp& (0+255),c
  3696  001C7A                     u2238:
  3697  001C7A  5006               	movf	??_frexp,w,c
  3698  001C7C  C004  FFD9         	movff	frexp@eptr,fsr2l
  3699  001C80  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3700  001C84  12DE               	iorwf	postinc2,f,c
  3701  001C86  0E00               	movlw	0
  3702  001C88  12DD               	iorwf	postdec2,f,c
  3703  001C8A  C004  FFD9         	movff	frexp@eptr,fsr2l
  3704  001C8E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3705  001C92  0E82               	movlw	130
  3706  001C94  26DE               	addwf	postinc2,f,c
  3707  001C96  0EFF               	movlw	255
  3708  001C98  22DD               	addwfc	postdec2,f,c
  3709  001C9A  8003               	bsf	frexp@value+2,0,c
  3710  001C9C  8203               	bsf	frexp@value+2,1,c
  3711  001C9E  8403               	bsf	frexp@value+2,2,c
  3712  001CA0  8603               	bsf	frexp@value+2,3,c
  3713  001CA2  8803               	bsf	frexp@value+2,4,c
  3714  001CA4  8A03               	bsf	frexp@value+2,5,c
  3715  001CA6  9C03               	bcf	frexp@value+2,6,c
  3716  001CA8  9E02               	bcf	frexp@value+1,7,c
  3717  001CAA  C001  F001         	movff	frexp@value,?_frexp
  3718  001CAE  C002  F002         	movff	frexp@value+1,?_frexp+1
  3719  001CB2  C003  F003         	movff	frexp@value+2,?_frexp+2
  3720  001CB6  0012               	return	
  3721  001CB8                     __end_of_frexp:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           intcon	equ	0xFF2
  3725                           postinc0	equ	0xFEE
  3726                           wreg	equ	0xFE8
  3727                           plusw1	equ	0xFE3
  3728                           postinc2	equ	0xFDE
  3729                           postdec2	equ	0xFDD
  3730                           plusw2	equ	0xFDB
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735 ;; *************** function ___fttol *****************
  3736 ;; Defined at:
  3737 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  f1              3   54[COMRAM] float 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  lval            4   64[COMRAM] unsigned long 
  3742 ;;  exp1            1   68[COMRAM] unsigned char 
  3743 ;;  sign1           1   63[COMRAM] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  4   54[COMRAM] long 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3753 ;;      Params:         4       0       0       0       0       0       0       0       0
  3754 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3755 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3756 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3757 ;;Total ram usage:       15 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_coinfig_ccpcon
  3763 ;;		_config_ccp1
  3764 ;;		_config_ccp2
  3765 ;;		_pow
  3766 ;;		_exp
  3767 ;;		_floor
  3768 ;;		_wait_in_ms
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text16
  3773  00157E                     __ptext16:
  3774                           	opt stack 0
  3775  00157E                     ___fttol:
  3776                           	opt stack 29
  3777                           
  3778                           ;incstack = 0
  3779  00157E  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3780  001582  6A3C               	clrf	(??___fttol+1)& (0+255),c
  3781  001584  6A3D               	clrf	(??___fttol+2)& (0+255),c
  3782  001586  3438               	rlcf	___fttol@f1+1,w,c
  3783  001588  363B               	rlcf	??___fttol& (0+255),f,c
  3784  00158A  E301               	bnc	u2141
  3785  00158C  803C               	bsf	(??___fttol+1)& (0+255),0,c
  3786  00158E                     u2141:
  3787  00158E  503B               	movf	??___fttol,w,c
  3788  001590  6E45               	movwf	___fttol@exp1,c
  3789  001592  5045               	movf	___fttol@exp1,w,c
  3790  001594  A4D8               	btfss	status,2,c
  3791  001596  D009               	goto	l510
  3792  001598  0E00               	movlw	0
  3793  00159A  6E37               	movwf	?___fttol,c
  3794  00159C  0E00               	movlw	0
  3795  00159E  6E38               	movwf	?___fttol+1,c
  3796  0015A0  0E00               	movlw	0
  3797  0015A2  6E39               	movwf	?___fttol+2,c
  3798  0015A4  0E00               	movlw	0
  3799  0015A6  6E3A               	movwf	?___fttol+3,c
  3800  0015A8  0012               	return	
  3801  0015AA                     l510:
  3802  0015AA  0E17               	movlw	23
  3803  0015AC  6E3B               	movwf	??___fttol& (0+255),c
  3804  0015AE  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3805  0015B2  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3806  0015B6  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3807  0015BA  283B               	incf	??___fttol,w,c
  3808  0015BC  6E3F               	movwf	(??___fttol+4)& (0+255),c
  3809  0015BE  D004               	goto	u2160
  3810  0015C0                     u2165:
  3811  0015C0  90D8               	bcf	status,0,c
  3812  0015C2  323E               	rrcf	??___fttol+3,f,c
  3813  0015C4  323D               	rrcf	??___fttol+2,f,c
  3814  0015C6  323C               	rrcf	??___fttol+1,f,c
  3815  0015C8                     u2160:
  3816  0015C8  2E3F               	decfsz	(??___fttol+4)& (0+255),f,c
  3817  0015CA  D7FA               	goto	u2165
  3818  0015CC  503C               	movf	??___fttol+1,w,c
  3819  0015CE  6E40               	movwf	___fttol@sign1,c
  3820  0015D0  8E38               	bsf	___fttol@f1+1,7,c
  3821  0015D2  0EFF               	movlw	255
  3822  0015D4  1637               	andwf	___fttol@f1,f,c
  3823  0015D6  0EFF               	movlw	255
  3824  0015D8  1638               	andwf	___fttol@f1+1,f,c
  3825  0015DA  0E00               	movlw	0
  3826  0015DC  1639               	andwf	___fttol@f1+2,f,c
  3827  0015DE  5037               	movf	___fttol@f1,w,c
  3828  0015E0  6E41               	movwf	___fttol@lval,c
  3829  0015E2  5038               	movf	___fttol@f1+1,w,c
  3830  0015E4  6E42               	movwf	___fttol@lval+1,c
  3831  0015E6  5039               	movf	___fttol@f1+2,w,c
  3832  0015E8  6E43               	movwf	___fttol@lval+2,c
  3833  0015EA  6A44               	clrf	___fttol@lval+3,c
  3834  0015EC  0E8E               	movlw	142
  3835  0015EE  5E45               	subwf	___fttol@exp1,f,c
  3836  0015F0  AE45               	btfss	___fttol@exp1,7,c
  3837  0015F2  D016               	goto	l512
  3838  0015F4  5045               	movf	___fttol@exp1,w,c
  3839  0015F6  0A80               	xorlw	128
  3840  0015F8  0F8F               	addlw	143
  3841  0015FA  B0D8               	btfsc	status,0,c
  3842  0015FC  D009               	goto	l513
  3843  0015FE  0E00               	movlw	0
  3844  001600  6E37               	movwf	?___fttol,c
  3845  001602  0E00               	movlw	0
  3846  001604  6E38               	movwf	?___fttol+1,c
  3847  001606  0E00               	movlw	0
  3848  001608  6E39               	movwf	?___fttol+2,c
  3849  00160A  0E00               	movlw	0
  3850  00160C  6E3A               	movwf	?___fttol+3,c
  3851  00160E  0012               	return	
  3852  001610                     l513:
  3853  001610  90D8               	bcf	status,0,c
  3854  001612  3244               	rrcf	___fttol@lval+3,f,c
  3855  001614  3243               	rrcf	___fttol@lval+2,f,c
  3856  001616  3242               	rrcf	___fttol@lval+1,f,c
  3857  001618  3241               	rrcf	___fttol@lval,f,c
  3858  00161A  3E45               	incfsz	___fttol@exp1,f,c
  3859  00161C  D7F9               	goto	l513
  3860  00161E  D015               	goto	u2200
  3861  001620                     l512:
  3862  001620  0E17               	movlw	23
  3863  001622  6445               	cpfsgt	___fttol@exp1,c
  3864  001624  D00F               	goto	l518
  3865  001626  0E00               	movlw	0
  3866  001628  6E37               	movwf	?___fttol,c
  3867  00162A  0E00               	movlw	0
  3868  00162C  6E38               	movwf	?___fttol+1,c
  3869  00162E  0E00               	movlw	0
  3870  001630  6E39               	movwf	?___fttol+2,c
  3871  001632  0E00               	movlw	0
  3872  001634  6E3A               	movwf	?___fttol+3,c
  3873  001636  0012               	return	
  3874  001638  90D8               	bcf	status,0,c
  3875  00163A  3641               	rlcf	___fttol@lval,f,c
  3876  00163C  3642               	rlcf	___fttol@lval+1,f,c
  3877  00163E  3643               	rlcf	___fttol@lval+2,f,c
  3878  001640  3644               	rlcf	___fttol@lval+3,f,c
  3879  001642  0645               	decf	___fttol@exp1,f,c
  3880  001644                     l518:
  3881  001644  5045               	movf	___fttol@exp1,w,c
  3882  001646  A4D8               	btfss	status,2,c
  3883  001648  D7F7               	goto	l519
  3884  00164A                     u2200:
  3885  00164A  5040               	movf	___fttol@sign1,w,c
  3886  00164C  B4D8               	btfsc	status,2,c
  3887  00164E  D008               	goto	l521
  3888  001650  1E44               	comf	___fttol@lval+3,f,c
  3889  001652  1E43               	comf	___fttol@lval+2,f,c
  3890  001654  1E42               	comf	___fttol@lval+1,f,c
  3891  001656  6C41               	negf	___fttol@lval,c
  3892  001658  0E00               	movlw	0
  3893  00165A  2242               	addwfc	___fttol@lval+1,f,c
  3894  00165C  2243               	addwfc	___fttol@lval+2,f,c
  3895  00165E  2244               	addwfc	___fttol@lval+3,f,c
  3896  001660                     l521:
  3897  001660  C041  F037         	movff	___fttol@lval,?___fttol
  3898  001664  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  3899  001668  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  3900  00166C  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  3901  001670  0012               	return	
  3902  001672                     __end_of___fttol:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           intcon	equ	0xFF2
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           plusw1	equ	0xFE3
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           plusw2	equ	0xFDB
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function ___ftge *****************
  3917 ;; Defined at:
  3918 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  ff1             3    0[COMRAM] float 
  3921 ;;  ff2             3    3[COMRAM] float 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;		None               void
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         6       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3936 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:        9 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_pow
  3943 ;;		_exp
  3944 ;;		_floor
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text17
  3949  001CB8                     __ptext17:
  3950                           	opt stack 0
  3951  001CB8                     ___ftge:
  3952                           	opt stack 25
  3953                           
  3954                           ;incstack = 0
  3955  001CB8  AE03               	btfss	___ftge@ff1+2,7,c
  3956  001CBA  D016               	goto	l482
  3957  001CBC  C001  F007         	movff	___ftge@ff1,??___ftge
  3958  001CC0  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3959  001CC4  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3960  001CC8  1E07               	comf	??___ftge,f,c
  3961  001CCA  1E08               	comf	??___ftge+1,f,c
  3962  001CCC  1E09               	comf	??___ftge+2,f,c
  3963  001CCE  2A07               	incf	??___ftge,f,c
  3964  001CD0  0E00               	movlw	0
  3965  001CD2  2208               	addwfc	??___ftge+1,f,c
  3966  001CD4  2209               	addwfc	??___ftge+2,f,c
  3967  001CD6  0E00               	movlw	0
  3968  001CD8  2407               	addwf	??___ftge,w,c
  3969  001CDA  6E01               	movwf	___ftge@ff1,c
  3970  001CDC  0E00               	movlw	0
  3971  001CDE  2008               	addwfc	??___ftge+1,w,c
  3972  001CE0  6E02               	movwf	___ftge@ff1+1,c
  3973  001CE2  0E80               	movlw	128
  3974  001CE4  2009               	addwfc	??___ftge+2,w,c
  3975  001CE6  6E03               	movwf	___ftge@ff1+2,c
  3976  001CE8                     l482:
  3977  001CE8  AE06               	btfss	___ftge@ff2+2,7,c
  3978  001CEA  D016               	goto	l483
  3979  001CEC  C004  F007         	movff	___ftge@ff2,??___ftge
  3980  001CF0  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3981  001CF4  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3982  001CF8  1E07               	comf	??___ftge,f,c
  3983  001CFA  1E08               	comf	??___ftge+1,f,c
  3984  001CFC  1E09               	comf	??___ftge+2,f,c
  3985  001CFE  2A07               	incf	??___ftge,f,c
  3986  001D00  0E00               	movlw	0
  3987  001D02  2208               	addwfc	??___ftge+1,f,c
  3988  001D04  2209               	addwfc	??___ftge+2,f,c
  3989  001D06  0E00               	movlw	0
  3990  001D08  2407               	addwf	??___ftge,w,c
  3991  001D0A  6E04               	movwf	___ftge@ff2,c
  3992  001D0C  0E00               	movlw	0
  3993  001D0E  2008               	addwfc	??___ftge+1,w,c
  3994  001D10  6E05               	movwf	___ftge@ff2+1,c
  3995  001D12  0E80               	movlw	128
  3996  001D14  2009               	addwfc	??___ftge+2,w,c
  3997  001D16  6E06               	movwf	___ftge@ff2+2,c
  3998  001D18                     l483:
  3999  001D18  0E00               	movlw	0
  4000  001D1A  1A01               	xorwf	___ftge@ff1,f,c
  4001  001D1C  0E00               	movlw	0
  4002  001D1E  1A02               	xorwf	___ftge@ff1+1,f,c
  4003  001D20  0E80               	movlw	128
  4004  001D22  1A03               	xorwf	___ftge@ff1+2,f,c
  4005  001D24  0E00               	movlw	0
  4006  001D26  1A04               	xorwf	___ftge@ff2,f,c
  4007  001D28  0E00               	movlw	0
  4008  001D2A  1A05               	xorwf	___ftge@ff2+1,f,c
  4009  001D2C  0E80               	movlw	128
  4010  001D2E  1A06               	xorwf	___ftge@ff2+2,f,c
  4011  001D30  5004               	movf	___ftge@ff2,w,c
  4012  001D32  5C01               	subwf	___ftge@ff1,w,c
  4013  001D34  5005               	movf	___ftge@ff2+1,w,c
  4014  001D36  5802               	subwfb	___ftge@ff1+1,w,c
  4015  001D38  5006               	movf	___ftge@ff2+2,w,c
  4016  001D3A  5803               	subwfb	___ftge@ff1+2,w,c
  4017  001D3C  B0D8               	btfsc	status,0,c
  4018  001D3E  D002               	goto	l1904
  4019  001D40  90D8               	bcf	status,0,c
  4020  001D42  0012               	return	
  4021  001D44                     l1904:
  4022  001D44  80D8               	bsf	status,0,c
  4023  001D46  0012               	return	
  4024  001D48                     __end_of___ftge:
  4025                           	opt stack 0
  4026                           tblptru	equ	0xFF8
  4027                           intcon	equ	0xFF2
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           plusw1	equ	0xFE3
  4031                           postinc2	equ	0xFDE
  4032                           postdec2	equ	0xFDD
  4033                           plusw2	equ	0xFDB
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function ___altoft *****************
  4039 ;; Defined at:
  4040 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  c               4   69[COMRAM] long 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  sign            1   78[COMRAM] unsigned char 
  4045 ;;  exp             1   77[COMRAM] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  3   69[COMRAM] float 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4055 ;;      Params:         4       0       0       0       0       0       0       0       0
  4056 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4057 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4058 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4059 ;;Total ram usage:       10 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    1
  4062 ;; This function calls:
  4063 ;;		___ftpack
  4064 ;; This function is called by:
  4065 ;;		_floor
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text18
  4070  001DCC                     __ptext18:
  4071                           	opt stack 0
  4072  001DCC                     ___altoft:
  4073                           	opt stack 24
  4074                           
  4075                           ;incstack = 0
  4076  001DCC  0E00               	movlw	0
  4077  001DCE  6E4F               	movwf	___altoft@sign,c
  4078  001DD0  0E8E               	movlw	142
  4079  001DD2  6E4E               	movwf	___altoft@exp,c
  4080  001DD4  AE49               	btfss	___altoft@c+3,7,c
  4081  001DD6  D011               	goto	l280
  4082  001DD8  1E49               	comf	___altoft@c+3,f,c
  4083  001DDA  1E48               	comf	___altoft@c+2,f,c
  4084  001DDC  1E47               	comf	___altoft@c+1,f,c
  4085  001DDE  6C46               	negf	___altoft@c,c
  4086  001DE0  0E00               	movlw	0
  4087  001DE2  2247               	addwfc	___altoft@c+1,f,c
  4088  001DE4  2248               	addwfc	___altoft@c+2,f,c
  4089  001DE6  2249               	addwfc	___altoft@c+3,f,c
  4090  001DE8  0E01               	movlw	1
  4091  001DEA  6E4F               	movwf	___altoft@sign,c
  4092  001DEC  D006               	goto	l280
  4093  001DEE  90D8               	bcf	status,0,c
  4094  001DF0  3249               	rrcf	___altoft@c+3,f,c
  4095  001DF2  3248               	rrcf	___altoft@c+2,f,c
  4096  001DF4  3247               	rrcf	___altoft@c+1,f,c
  4097  001DF6  3246               	rrcf	___altoft@c,f,c
  4098  001DF8  2A4E               	incf	___altoft@exp,f,c
  4099  001DFA                     l280:
  4100  001DFA  0E00               	movlw	0
  4101  001DFC  1446               	andwf	___altoft@c,w,c
  4102  001DFE  6E4A               	movwf	??___altoft& (0+255),c
  4103  001E00  0E00               	movlw	0
  4104  001E02  1447               	andwf	___altoft@c+1,w,c
  4105  001E04  6E4B               	movwf	(??___altoft+1)& (0+255),c
  4106  001E06  0E00               	movlw	0
  4107  001E08  1448               	andwf	___altoft@c+2,w,c
  4108  001E0A  6E4C               	movwf	(??___altoft+2)& (0+255),c
  4109  001E0C  0EFF               	movlw	255
  4110  001E0E  1449               	andwf	___altoft@c+3,w,c
  4111  001E10  6E4D               	movwf	(??___altoft+3)& (0+255),c
  4112  001E12  504A               	movf	??___altoft,w,c
  4113  001E14  104B               	iorwf	??___altoft+1,w,c
  4114  001E16  104C               	iorwf	??___altoft+2,w,c
  4115  001E18  104D               	iorwf	??___altoft+3,w,c
  4116  001E1A  A4D8               	btfss	status,2,c
  4117  001E1C  D7E8               	goto	l281
  4118  001E1E  C046  F001         	movff	___altoft@c,___ftpack@arg
  4119  001E22  C047  F002         	movff	___altoft@c+1,___ftpack@arg+1
  4120  001E26  C048  F003         	movff	___altoft@c+2,___ftpack@arg+2
  4121  001E2A  C04E  F004         	movff	___altoft@exp,___ftpack@exp
  4122  001E2E  C04F  F005         	movff	___altoft@sign,___ftpack@sign
  4123  001E32  ECBD  F00D         	call	___ftpack	;wreg free
  4124  001E36  C001  F046         	movff	?___ftpack,?___altoft
  4125  001E3A  C002  F047         	movff	?___ftpack+1,?___altoft+1
  4126  001E3E  C003  F048         	movff	?___ftpack+2,?___altoft+2
  4127  001E42  0012               	return	
  4128  001E44                     __end_of___altoft:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           intcon	equ	0xFF2
  4132                           postinc0	equ	0xFEE
  4133                           wreg	equ	0xFE8
  4134                           plusw1	equ	0xFE3
  4135                           postinc2	equ	0xFDE
  4136                           postdec2	equ	0xFDD
  4137                           plusw2	equ	0xFDB
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142 ;; *************** function _eval_poly *****************
  4143 ;; Defined at:
  4144 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  x               3   54[COMRAM] float 
  4147 ;;  d               2   57[COMRAM] PTR const 
  4148 ;;		 -> log@coeff(27), exp@coeff(30), 
  4149 ;;  n               2   59[COMRAM] int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  res             3   63[COMRAM] int 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  3   54[COMRAM] int 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4161 ;;      Params:         7       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4164 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:       12 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    2
  4168 ;; This function calls:
  4169 ;;		___ftadd
  4170 ;;		___ftmul
  4171 ;;		___wmul
  4172 ;; This function is called by:
  4173 ;;		_exp
  4174 ;;		_log
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text19
  4179  00192A                     __ptext19:
  4180                           	opt stack 0
  4181  00192A                     _eval_poly:
  4182                           	opt stack 24
  4183                           
  4184                           ;incstack = 0
  4185  00192A  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4186  00192E  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4187  001932  0E00               	movlw	0
  4188  001934  6E04               	movwf	___wmul@multiplicand+1,c
  4189  001936  0E03               	movlw	3
  4190  001938  6E03               	movwf	___wmul@multiplicand,c
  4191  00193A  EC1A  F010         	call	___wmul	;wreg free
  4192  00193E  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4193  001942  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4194  001946  5001               	movf	?___wmul,w,c
  4195  001948  263E               	addwf	??_eval_poly,f,c
  4196  00194A  5002               	movf	?___wmul+1,w,c
  4197  00194C  223F               	addwfc	??_eval_poly+1,f,c
  4198  00194E  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4199  001952  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4200  001956                     	if	0	;tblptru may be non-zero
  4201  001956                     	endif
  4202  001956                     	if	0	;tblptru may be non-zero
  4203  001956                     	endif
  4204  001956  0009               	tblrd		*+
  4205  001958  CFF5 F040          	movff	tablat,eval_poly@res
  4206  00195C  0009               	tblrd		*+
  4207  00195E  CFF5 F041          	movff	tablat,eval_poly@res+1
  4208  001962  000A               	tblrd		*-
  4209  001964  CFF5 F042          	movff	tablat,eval_poly@res+2
  4210  001968  D03E               	goto	l839
  4211  00196A  C040  F010         	movff	eval_poly@res,___ftmul@f2
  4212  00196E  C041  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  4213  001972  C042  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  4214  001976  C037  F00D         	movff	eval_poly@x,___ftmul@f1
  4215  00197A  C038  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  4216  00197E  C039  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  4217  001982  EC39  F00B         	call	___ftmul	;wreg free
  4218  001986  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  4219  00198A  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  4220  00198E  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  4221  001992  0E00               	movlw	0
  4222  001994  6E04               	movwf	___wmul@multiplicand+1,c
  4223  001996  0E03               	movlw	3
  4224  001998  6E03               	movwf	___wmul@multiplicand,c
  4225  00199A  063C               	decf	eval_poly@n,f,c
  4226  00199C  A0D8               	btfss	status,0,c
  4227  00199E  063D               	decf	eval_poly@n+1,f,c
  4228  0019A0  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4229  0019A4  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4230  0019A8  EC1A  F010         	call	___wmul	;wreg free
  4231  0019AC  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4232  0019B0  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4233  0019B4  5001               	movf	?___wmul,w,c
  4234  0019B6  263E               	addwf	??_eval_poly,f,c
  4235  0019B8  5002               	movf	?___wmul+1,w,c
  4236  0019BA  223F               	addwfc	??_eval_poly+1,f,c
  4237  0019BC  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4238  0019C0  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4239  0019C4                     	if	0	;tblptru may be non-zero
  4240  0019C4                     	endif
  4241  0019C4                     	if	0	;tblptru may be non-zero
  4242  0019C4                     	endif
  4243  0019C4  0009               	tblrd		*+
  4244  0019C6  CFF5 F02E          	movff	tablat,___ftadd@f2
  4245  0019CA  0009               	tblrd		*+
  4246  0019CC  CFF5 F02F          	movff	tablat,___ftadd@f2+1
  4247  0019D0  000A               	tblrd		*-
  4248  0019D2  CFF5 F030          	movff	tablat,___ftadd@f2+2
  4249  0019D6  ECE6  F007         	call	___ftadd	;wreg free
  4250  0019DA  C02B  F040         	movff	?___ftadd,eval_poly@res
  4251  0019DE  C02C  F041         	movff	?___ftadd+1,eval_poly@res+1
  4252  0019E2  C02D  F042         	movff	?___ftadd+2,eval_poly@res+2
  4253  0019E6                     l839:
  4254  0019E6  503C               	movf	eval_poly@n,w,c
  4255  0019E8  103D               	iorwf	eval_poly@n+1,w,c
  4256  0019EA  A4D8               	btfss	status,2,c
  4257  0019EC  D7BE               	goto	l840
  4258  0019EE  C040  F037         	movff	eval_poly@res,?_eval_poly
  4259  0019F2  C041  F038         	movff	eval_poly@res+1,?_eval_poly+1
  4260  0019F6  C042  F039         	movff	eval_poly@res+2,?_eval_poly+2
  4261  0019FA  0012               	return		;funcret
  4262  0019FC                     __end_of_eval_poly:
  4263                           	opt stack 0
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           intcon	equ	0xFF2
  4269                           postinc0	equ	0xFEE
  4270                           wreg	equ	0xFE8
  4271                           plusw1	equ	0xFE3
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           plusw2	equ	0xFDB
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function ___wmul *****************
  4280 ;; Defined at:
  4281 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  multiplier      2    0[COMRAM] unsigned int 
  4284 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  product         2    4[COMRAM] unsigned int 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    0[COMRAM] unsigned int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, prodl, prodh
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4296 ;;      Params:         4       0       0       0       0       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4299 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4300 ;;Total ram usage:        6 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_eval_poly
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text20
  4310  002034                     __ptext20:
  4311                           	opt stack 0
  4312  002034                     ___wmul:
  4313                           	opt stack 25
  4314                           
  4315                           ;incstack = 0
  4316  002034  5001               	movf	___wmul@multiplier,w,c
  4317  002036  0203               	mulwf	___wmul@multiplicand,c
  4318  002038  CFF3 F005          	movff	prodl,___wmul@product
  4319  00203C  CFF4 F006          	movff	prodh,___wmul@product+1
  4320  002040  5001               	movf	___wmul@multiplier,w,c
  4321  002042  0204               	mulwf	___wmul@multiplicand+1,c
  4322  002044  50F3               	movf	prodl,w,c
  4323  002046  2606               	addwf	___wmul@product+1,f,c
  4324  002048  5002               	movf	___wmul@multiplier+1,w,c
  4325  00204A  0203               	mulwf	___wmul@multiplicand,c
  4326  00204C  50F3               	movf	prodl,w,c
  4327  00204E  2606               	addwf	___wmul@product+1,f,c
  4328  002050  C005  F001         	movff	___wmul@product,?___wmul
  4329  002054  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4330  002058  0012               	return	
  4331  00205A                     __end_of___wmul:
  4332                           	opt stack 0
  4333                           tblptru	equ	0xFF8
  4334                           tblptrh	equ	0xFF7
  4335                           tblptrl	equ	0xFF6
  4336                           tablat	equ	0xFF5
  4337                           prodh	equ	0xFF4
  4338                           prodl	equ	0xFF3
  4339                           intcon	equ	0xFF2
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           plusw1	equ	0xFE3
  4343                           postinc2	equ	0xFDE
  4344                           postdec2	equ	0xFDD
  4345                           plusw2	equ	0xFDB
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function ___ftmul *****************
  4351 ;; Defined at:
  4352 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  f1              3   12[COMRAM] float 
  4355 ;;  f2              3   15[COMRAM] float 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4358 ;;  sign            1   26[COMRAM] unsigned char 
  4359 ;;  cntr            1   25[COMRAM] unsigned char 
  4360 ;;  exp             1   21[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  3   12[COMRAM] float 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4370 ;;      Params:         6       0       0       0       0       0       0       0       0
  4371 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4372 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4373 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4374 ;;Total ram usage:       15 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    1
  4377 ;; This function calls:
  4378 ;;		___ftpack
  4379 ;; This function is called by:
  4380 ;;		_coinfig_ccpcon
  4381 ;;		_config_ccp1
  4382 ;;		_config_ccp2
  4383 ;;		_pow
  4384 ;;		_exp
  4385 ;;		_log
  4386 ;;		_eval_poly
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text21
  4391  001672                     __ptext21:
  4392                           	opt stack 0
  4393  001672                     ___ftmul:
  4394                           	opt stack 28
  4395                           
  4396                           ;incstack = 0
  4397  001672  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4398  001676  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4399  001678  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4400  00167A  340E               	rlcf	___ftmul@f1+1,w,c
  4401  00167C  3613               	rlcf	??___ftmul& (0+255),f,c
  4402  00167E  E301               	bnc	u2051
  4403  001680  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4404  001682                     u2051:
  4405  001682  5013               	movf	??___ftmul,w,c
  4406  001684  6E16               	movwf	___ftmul@exp,c
  4407  001686  5016               	movf	___ftmul@exp,w,c
  4408  001688  A4D8               	btfss	status,2,c
  4409  00168A  D007               	goto	l489
  4410  00168C  0E00               	movlw	0
  4411  00168E  6E0D               	movwf	?___ftmul,c
  4412  001690  0E00               	movlw	0
  4413  001692  6E0E               	movwf	?___ftmul+1,c
  4414  001694  0E00               	movlw	0
  4415  001696  6E0F               	movwf	?___ftmul+2,c
  4416  001698  0012               	return	
  4417  00169A                     l489:
  4418  00169A  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4419  00169E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4420  0016A0  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4421  0016A2  3411               	rlcf	___ftmul@f2+1,w,c
  4422  0016A4  3613               	rlcf	??___ftmul& (0+255),f,c
  4423  0016A6  E301               	bnc	u2071
  4424  0016A8  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4425  0016AA                     u2071:
  4426  0016AA  5013               	movf	??___ftmul,w,c
  4427  0016AC  6E1B               	movwf	___ftmul@sign,c
  4428  0016AE  501B               	movf	___ftmul@sign,w,c
  4429  0016B0  A4D8               	btfss	status,2,c
  4430  0016B2  D007               	goto	l491
  4431  0016B4  0E00               	movlw	0
  4432  0016B6  6E0D               	movwf	?___ftmul,c
  4433  0016B8  0E00               	movlw	0
  4434  0016BA  6E0E               	movwf	?___ftmul+1,c
  4435  0016BC  0E00               	movlw	0
  4436  0016BE  6E0F               	movwf	?___ftmul+2,c
  4437  0016C0  0012               	return	
  4438  0016C2                     l491:
  4439  0016C2  501B               	movf	___ftmul@sign,w,c
  4440  0016C4  0F7B               	addlw	123
  4441  0016C6  2616               	addwf	___ftmul@exp,f,c
  4442  0016C8  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4443  0016CC  5012               	movf	___ftmul@f2+2,w,c
  4444  0016CE  1A1B               	xorwf	___ftmul@sign,f,c
  4445  0016D0  0E80               	movlw	128
  4446  0016D2  161B               	andwf	___ftmul@sign,f,c
  4447  0016D4  8E0E               	bsf	___ftmul@f1+1,7,c
  4448  0016D6  8E11               	bsf	___ftmul@f2+1,7,c
  4449  0016D8  0EFF               	movlw	255
  4450  0016DA  1610               	andwf	___ftmul@f2,f,c
  4451  0016DC  0EFF               	movlw	255
  4452  0016DE  1611               	andwf	___ftmul@f2+1,f,c
  4453  0016E0  0E00               	movlw	0
  4454  0016E2  1612               	andwf	___ftmul@f2+2,f,c
  4455  0016E4  0E00               	movlw	0
  4456  0016E6  6E17               	movwf	___ftmul@f3_as_product,c
  4457  0016E8  0E00               	movlw	0
  4458  0016EA  6E18               	movwf	___ftmul@f3_as_product+1,c
  4459  0016EC  0E00               	movlw	0
  4460  0016EE  6E19               	movwf	___ftmul@f3_as_product+2,c
  4461  0016F0  0E07               	movlw	7
  4462  0016F2  6E1A               	movwf	___ftmul@cntr,c
  4463  0016F4  A00D               	btfss	___ftmul@f1,0,c
  4464  0016F6  D006               	goto	l493
  4465  0016F8  5010               	movf	___ftmul@f2,w,c
  4466  0016FA  2617               	addwf	___ftmul@f3_as_product,f,c
  4467  0016FC  5011               	movf	___ftmul@f2+1,w,c
  4468  0016FE  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4469  001700  5012               	movf	___ftmul@f2+2,w,c
  4470  001702  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4471  001704                     l493:
  4472  001704  90D8               	bcf	status,0,c
  4473  001706  320F               	rrcf	___ftmul@f1+2,f,c
  4474  001708  320E               	rrcf	___ftmul@f1+1,f,c
  4475  00170A  320D               	rrcf	___ftmul@f1,f,c
  4476  00170C  90D8               	bcf	status,0,c
  4477  00170E  3610               	rlcf	___ftmul@f2,f,c
  4478  001710  3611               	rlcf	___ftmul@f2+1,f,c
  4479  001712  3612               	rlcf	___ftmul@f2+2,f,c
  4480  001714  2E1A               	decfsz	___ftmul@cntr,f,c
  4481  001716  D7EE               	goto	l492
  4482  001718  0E09               	movlw	9
  4483  00171A  6E1A               	movwf	___ftmul@cntr,c
  4484  00171C  A00D               	btfss	___ftmul@f1,0,c
  4485  00171E  D006               	goto	l496
  4486  001720  5010               	movf	___ftmul@f2,w,c
  4487  001722  2617               	addwf	___ftmul@f3_as_product,f,c
  4488  001724  5011               	movf	___ftmul@f2+1,w,c
  4489  001726  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4490  001728  5012               	movf	___ftmul@f2+2,w,c
  4491  00172A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4492  00172C                     l496:
  4493  00172C  90D8               	bcf	status,0,c
  4494  00172E  320F               	rrcf	___ftmul@f1+2,f,c
  4495  001730  320E               	rrcf	___ftmul@f1+1,f,c
  4496  001732  320D               	rrcf	___ftmul@f1,f,c
  4497  001734  90D8               	bcf	status,0,c
  4498  001736  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  4499  001738  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  4500  00173A  3217               	rrcf	___ftmul@f3_as_product,f,c
  4501  00173C  2E1A               	decfsz	___ftmul@cntr,f,c
  4502  00173E  D7EE               	goto	l495
  4503  001740  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4504  001744  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4505  001748  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4506  00174C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4507  001750  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4508  001754  ECBD  F00D         	call	___ftpack	;wreg free
  4509  001758  C001  F00D         	movff	?___ftpack,?___ftmul
  4510  00175C  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4511  001760  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4512  001764  0012               	return	
  4513  001766                     __end_of___ftmul:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           plusw1	equ	0xFE3
  4525                           postinc2	equ	0xFDE
  4526                           postdec2	equ	0xFDD
  4527                           plusw2	equ	0xFDB
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function ___ftsub *****************
  4533 ;; Defined at:
  4534 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  f1              3   54[COMRAM] float 
  4537 ;;  f2              3   57[COMRAM] float 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  3   54[COMRAM] float 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4549 ;;      Params:         6       0       0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4552 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4553 ;;Total ram usage:        6 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    2
  4556 ;; This function calls:
  4557 ;;		___ftadd
  4558 ;; This function is called by:
  4559 ;;		_exp
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text22
  4564  001FBC                     __ptext22:
  4565                           	opt stack 0
  4566  001FBC                     ___ftsub:
  4567                           	opt stack 24
  4568                           
  4569                           ;incstack = 0
  4570  001FBC  503A               	movf	___ftsub@f2,w,c
  4571  001FBE  103B               	iorwf	___ftsub@f2+1,w,c
  4572  001FC0  103C               	iorwf	___ftsub@f2+2,w,c
  4573  001FC2  B4D8               	btfsc	status,2,c
  4574  001FC4  D006               	goto	l506
  4575  001FC6  0E00               	movlw	0
  4576  001FC8  1A3A               	xorwf	___ftsub@f2,f,c
  4577  001FCA  0E00               	movlw	0
  4578  001FCC  1A3B               	xorwf	___ftsub@f2+1,f,c
  4579  001FCE  0E80               	movlw	128
  4580  001FD0  1A3C               	xorwf	___ftsub@f2+2,f,c
  4581  001FD2                     l506:
  4582  001FD2  C037  F02B         	movff	___ftsub@f1,___ftadd@f1
  4583  001FD6  C038  F02C         	movff	___ftsub@f1+1,___ftadd@f1+1
  4584  001FDA  C039  F02D         	movff	___ftsub@f1+2,___ftadd@f1+2
  4585  001FDE  C03A  F02E         	movff	___ftsub@f2,___ftadd@f2
  4586  001FE2  C03B  F02F         	movff	___ftsub@f2+1,___ftadd@f2+1
  4587  001FE6  C03C  F030         	movff	___ftsub@f2+2,___ftadd@f2+2
  4588  001FEA  ECE6  F007         	call	___ftadd	;wreg free
  4589  001FEE  C02B  F037         	movff	?___ftadd,?___ftsub
  4590  001FF2  C02C  F038         	movff	?___ftadd+1,?___ftsub+1
  4591  001FF6  C02D  F039         	movff	?___ftadd+2,?___ftsub+2
  4592  001FFA  0012               	return	
  4593  001FFC                     __end_of___ftsub:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           postinc0	equ	0xFEE
  4603                           wreg	equ	0xFE8
  4604                           plusw1	equ	0xFE3
  4605                           postinc2	equ	0xFDE
  4606                           postdec2	equ	0xFDD
  4607                           plusw2	equ	0xFDB
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           status	equ	0xFD8
  4611                           
  4612 ;; *************** function ___ftadd *****************
  4613 ;; Defined at:
  4614 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  f1              3   42[COMRAM] float 
  4617 ;;  f2              3   45[COMRAM] float 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  exp1            1   53[COMRAM] unsigned char 
  4620 ;;  exp2            1   52[COMRAM] unsigned char 
  4621 ;;  sign            1   51[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  3   42[COMRAM] float 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4631 ;;      Params:         6       0       0       0       0       0       0       0       0
  4632 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4633 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4634 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:       12 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    1
  4638 ;; This function calls:
  4639 ;;		___ftpack
  4640 ;; This function is called by:
  4641 ;;		_coinfig_ccpcon
  4642 ;;		_config_ccp1
  4643 ;;		_config_ccp2
  4644 ;;		___ftsub
  4645 ;;		_floor
  4646 ;;		_log
  4647 ;;		_eval_poly
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text23
  4652  000FCC                     __ptext23:
  4653                           	opt stack 0
  4654  000FCC                     ___ftadd:
  4655                           	opt stack 28
  4656                           
  4657                           ;incstack = 0
  4658  000FCC  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4659  000FD0  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4660  000FD2  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4661  000FD4  342C               	rlcf	___ftadd@f1+1,w,c
  4662  000FD6  3631               	rlcf	??___ftadd& (0+255),f,c
  4663  000FD8  E301               	bnc	u1841
  4664  000FDA  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4665  000FDC                     u1841:
  4666  000FDC  5031               	movf	??___ftadd,w,c
  4667  000FDE  6E36               	movwf	___ftadd@exp1,c
  4668  000FE0  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4669  000FE4  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4670  000FE6  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4671  000FE8  342F               	rlcf	___ftadd@f2+1,w,c
  4672  000FEA  3631               	rlcf	??___ftadd& (0+255),f,c
  4673  000FEC  E301               	bnc	u1851
  4674  000FEE  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4675  000FF0                     u1851:
  4676  000FF0  5031               	movf	??___ftadd,w,c
  4677  000FF2  6E35               	movwf	___ftadd@exp2,c
  4678  000FF4  5036               	movf	___ftadd@exp1,w,c
  4679  000FF6  B4D8               	btfsc	status,2,c
  4680  000FF8  D00B               	goto	u1880
  4681  000FFA  5035               	movf	___ftadd@exp2,w,c
  4682  000FFC  5C36               	subwf	___ftadd@exp1,w,c
  4683  000FFE  B0D8               	btfsc	status,0,c
  4684  001000  D00E               	goto	l441
  4685  001002  5036               	movf	___ftadd@exp1,w,c
  4686  001004  0800               	sublw	0
  4687  001006  2435               	addwf	___ftadd@exp2,w,c
  4688  001008  6E31               	movwf	??___ftadd& (0+255),c
  4689  00100A  0E18               	movlw	24
  4690  00100C  6431               	cpfsgt	??___ftadd,c
  4691  00100E  D007               	goto	l441
  4692  001010                     u1880:
  4693  001010  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4694  001014  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4695  001018  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4696  00101C  0012               	return	
  4697  00101E                     l441:
  4698  00101E  5035               	movf	___ftadd@exp2,w,c
  4699  001020  B4D8               	btfsc	status,2,c
  4700  001022  D00B               	goto	u1910
  4701  001024  5036               	movf	___ftadd@exp1,w,c
  4702  001026  5C35               	subwf	___ftadd@exp2,w,c
  4703  001028  B0D8               	btfsc	status,0,c
  4704  00102A  D00E               	goto	l445
  4705  00102C  5035               	movf	___ftadd@exp2,w,c
  4706  00102E  0800               	sublw	0
  4707  001030  2436               	addwf	___ftadd@exp1,w,c
  4708  001032  6E31               	movwf	??___ftadd& (0+255),c
  4709  001034  0E18               	movlw	24
  4710  001036  6431               	cpfsgt	??___ftadd,c
  4711  001038  D007               	goto	l445
  4712  00103A                     u1910:
  4713  00103A  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4714  00103E  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4715  001042  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4716  001046  0012               	return	
  4717  001048                     l445:
  4718  001048  0E06               	movlw	6
  4719  00104A  6E34               	movwf	___ftadd@sign,c
  4720  00104C  BE2D               	btfsc	___ftadd@f1+2,7,c
  4721  00104E  8E34               	bsf	___ftadd@sign,7,c
  4722  001050  BE30               	btfsc	___ftadd@f2+2,7,c
  4723  001052  8C34               	bsf	___ftadd@sign,6,c
  4724  001054  8E2C               	bsf	___ftadd@f1+1,7,c
  4725  001056  0EFF               	movlw	255
  4726  001058  162B               	andwf	___ftadd@f1,f,c
  4727  00105A  0EFF               	movlw	255
  4728  00105C  162C               	andwf	___ftadd@f1+1,f,c
  4729  00105E  0E00               	movlw	0
  4730  001060  162D               	andwf	___ftadd@f1+2,f,c
  4731  001062  8E2F               	bsf	___ftadd@f2+1,7,c
  4732  001064  0EFF               	movlw	255
  4733  001066  162E               	andwf	___ftadd@f2,f,c
  4734  001068  0EFF               	movlw	255
  4735  00106A  162F               	andwf	___ftadd@f2+1,f,c
  4736  00106C  0E00               	movlw	0
  4737  00106E  1630               	andwf	___ftadd@f2+2,f,c
  4738  001070  5035               	movf	___ftadd@exp2,w,c
  4739  001072  5C36               	subwf	___ftadd@exp1,w,c
  4740  001074  B0D8               	btfsc	status,0,c
  4741  001076  D01B               	goto	l450
  4742  001078                     u1940:
  4743  001078  90D8               	bcf	status,0,c
  4744  00107A  362E               	rlcf	___ftadd@f2,f,c
  4745  00107C  362F               	rlcf	___ftadd@f2+1,f,c
  4746  00107E  3630               	rlcf	___ftadd@f2+2,f,c
  4747  001080  0635               	decf	___ftadd@exp2,f,c
  4748  001082  5036               	movf	___ftadd@exp1,w,c
  4749  001084  1835               	xorwf	___ftadd@exp2,w,c
  4750  001086  B4D8               	btfsc	status,2,c
  4751  001088  D00D               	goto	l455
  4752  00108A  0634               	decf	___ftadd@sign,f,c
  4753  00108C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4754  001090  0E07               	movlw	7
  4755  001092  1631               	andwf	??___ftadd,f,c
  4756  001094  B4D8               	btfsc	status,2,c
  4757  001096  D006               	goto	l455
  4758  001098  D7EF               	goto	u1940
  4759  00109A  90D8               	bcf	status,0,c
  4760  00109C  322D               	rrcf	___ftadd@f1+2,f,c
  4761  00109E  322C               	rrcf	___ftadd@f1+1,f,c
  4762  0010A0  322B               	rrcf	___ftadd@f1,f,c
  4763  0010A2  2A36               	incf	___ftadd@exp1,f,c
  4764  0010A4                     l455:
  4765  0010A4  5035               	movf	___ftadd@exp2,w,c
  4766  0010A6  1836               	xorwf	___ftadd@exp1,w,c
  4767  0010A8  B4D8               	btfsc	status,2,c
  4768  0010AA  D01F               	goto	u2010
  4769  0010AC  D7F6               	goto	l456
  4770  0010AE                     l450:
  4771  0010AE  5036               	movf	___ftadd@exp1,w,c
  4772  0010B0  5C35               	subwf	___ftadd@exp2,w,c
  4773  0010B2  B0D8               	btfsc	status,0,c
  4774  0010B4  D01A               	goto	u2010
  4775  0010B6                     u1980:
  4776  0010B6  90D8               	bcf	status,0,c
  4777  0010B8  362B               	rlcf	___ftadd@f1,f,c
  4778  0010BA  362C               	rlcf	___ftadd@f1+1,f,c
  4779  0010BC  362D               	rlcf	___ftadd@f1+2,f,c
  4780  0010BE  0636               	decf	___ftadd@exp1,f,c
  4781  0010C0  5036               	movf	___ftadd@exp1,w,c
  4782  0010C2  1835               	xorwf	___ftadd@exp2,w,c
  4783  0010C4  B4D8               	btfsc	status,2,c
  4784  0010C6  D00D               	goto	l464
  4785  0010C8  0634               	decf	___ftadd@sign,f,c
  4786  0010CA  C034  F031         	movff	___ftadd@sign,??___ftadd
  4787  0010CE  0E07               	movlw	7
  4788  0010D0  1631               	andwf	??___ftadd,f,c
  4789  0010D2  B4D8               	btfsc	status,2,c
  4790  0010D4  D006               	goto	l464
  4791  0010D6  D7EF               	goto	u1980
  4792  0010D8  90D8               	bcf	status,0,c
  4793  0010DA  3230               	rrcf	___ftadd@f2+2,f,c
  4794  0010DC  322F               	rrcf	___ftadd@f2+1,f,c
  4795  0010DE  322E               	rrcf	___ftadd@f2,f,c
  4796  0010E0  2A35               	incf	___ftadd@exp2,f,c
  4797  0010E2                     l464:
  4798  0010E2  5035               	movf	___ftadd@exp2,w,c
  4799  0010E4  1836               	xorwf	___ftadd@exp1,w,c
  4800  0010E6  A4D8               	btfss	status,2,c
  4801  0010E8  D7F7               	goto	l465
  4802  0010EA                     u2010:
  4803  0010EA  AE34               	btfss	___ftadd@sign,7,c
  4804  0010EC  D00C               	goto	l467
  4805  0010EE  0EFF               	movlw	255
  4806  0010F0  1A2B               	xorwf	___ftadd@f1,f,c
  4807  0010F2  0EFF               	movlw	255
  4808  0010F4  1A2C               	xorwf	___ftadd@f1+1,f,c
  4809  0010F6  0EFF               	movlw	255
  4810  0010F8  1A2D               	xorwf	___ftadd@f1+2,f,c
  4811  0010FA  0E01               	movlw	1
  4812  0010FC  262B               	addwf	___ftadd@f1,f,c
  4813  0010FE  0E00               	movlw	0
  4814  001100  222C               	addwfc	___ftadd@f1+1,f,c
  4815  001102  0E00               	movlw	0
  4816  001104  222D               	addwfc	___ftadd@f1+2,f,c
  4817  001106                     l467:
  4818  001106  AC34               	btfss	___ftadd@sign,6,c
  4819  001108  D00C               	goto	l468
  4820  00110A  0EFF               	movlw	255
  4821  00110C  1A2E               	xorwf	___ftadd@f2,f,c
  4822  00110E  0EFF               	movlw	255
  4823  001110  1A2F               	xorwf	___ftadd@f2+1,f,c
  4824  001112  0EFF               	movlw	255
  4825  001114  1A30               	xorwf	___ftadd@f2+2,f,c
  4826  001116  0E01               	movlw	1
  4827  001118  262E               	addwf	___ftadd@f2,f,c
  4828  00111A  0E00               	movlw	0
  4829  00111C  222F               	addwfc	___ftadd@f2+1,f,c
  4830  00111E  0E00               	movlw	0
  4831  001120  2230               	addwfc	___ftadd@f2+2,f,c
  4832  001122                     l468:
  4833  001122  0E00               	movlw	0
  4834  001124  6E34               	movwf	___ftadd@sign,c
  4835  001126  502B               	movf	___ftadd@f1,w,c
  4836  001128  262E               	addwf	___ftadd@f2,f,c
  4837  00112A  502C               	movf	___ftadd@f1+1,w,c
  4838  00112C  222F               	addwfc	___ftadd@f2+1,f,c
  4839  00112E  502D               	movf	___ftadd@f1+2,w,c
  4840  001130  2230               	addwfc	___ftadd@f2+2,f,c
  4841  001132  AE30               	btfss	___ftadd@f2+2,7,c
  4842  001134  D00E               	goto	l469
  4843  001136  0EFF               	movlw	255
  4844  001138  1A2E               	xorwf	___ftadd@f2,f,c
  4845  00113A  0EFF               	movlw	255
  4846  00113C  1A2F               	xorwf	___ftadd@f2+1,f,c
  4847  00113E  0EFF               	movlw	255
  4848  001140  1A30               	xorwf	___ftadd@f2+2,f,c
  4849  001142  0E01               	movlw	1
  4850  001144  262E               	addwf	___ftadd@f2,f,c
  4851  001146  0E00               	movlw	0
  4852  001148  222F               	addwfc	___ftadd@f2+1,f,c
  4853  00114A  0E00               	movlw	0
  4854  00114C  2230               	addwfc	___ftadd@f2+2,f,c
  4855  00114E  0E01               	movlw	1
  4856  001150  6E34               	movwf	___ftadd@sign,c
  4857  001152                     l469:
  4858  001152  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  4859  001156  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4860  00115A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4861  00115E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  4862  001162  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  4863  001166  ECBD  F00D         	call	___ftpack	;wreg free
  4864  00116A  C001  F02B         	movff	?___ftpack,?___ftadd
  4865  00116E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  4866  001172  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  4867  001176  0012               	return	
  4868  001178                     __end_of___ftadd:
  4869                           	opt stack 0
  4870                           tblptru	equ	0xFF8
  4871                           tblptrh	equ	0xFF7
  4872                           tblptrl	equ	0xFF6
  4873                           tablat	equ	0xFF5
  4874                           prodh	equ	0xFF4
  4875                           prodl	equ	0xFF3
  4876                           intcon	equ	0xFF2
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           plusw1	equ	0xFE3
  4880                           postinc2	equ	0xFDE
  4881                           postdec2	equ	0xFDD
  4882                           plusw2	equ	0xFDB
  4883                           fsr2h	equ	0xFDA
  4884                           fsr2l	equ	0xFD9
  4885                           status	equ	0xFD8
  4886                           
  4887 ;; *************** function ___ftneg *****************
  4888 ;; Defined at:
  4889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  f1              3    0[COMRAM] float 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  3    0[COMRAM] float 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4903 ;;      Params:         3       0       0       0       0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4906 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4907 ;;Total ram usage:        3 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_pow
  4913 ;;		_exp
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text24
  4918  00207E                     __ptext24:
  4919                           	opt stack 0
  4920  00207E                     ___ftneg:
  4921                           	opt stack 26
  4922                           
  4923                           ;incstack = 0
  4924  00207E  5001               	movf	___ftneg@f1,w,c
  4925  002080  1002               	iorwf	___ftneg@f1+1,w,c
  4926  002082  1003               	iorwf	___ftneg@f1+2,w,c
  4927  002084  B4D8               	btfsc	status,2,c
  4928  002086  D006               	goto	l500
  4929  002088  0E00               	movlw	0
  4930  00208A  1A01               	xorwf	___ftneg@f1,f,c
  4931  00208C  0E00               	movlw	0
  4932  00208E  1A02               	xorwf	___ftneg@f1+1,f,c
  4933  002090  0E80               	movlw	128
  4934  002092  1A03               	xorwf	___ftneg@f1+2,f,c
  4935  002094                     l500:
  4936  002094  C001  F001         	movff	___ftneg@f1,?___ftneg
  4937  002098  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4938  00209C  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4939  0020A0  0012               	return		;funcret
  4940  0020A2                     __end_of___ftneg:
  4941                           	opt stack 0
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           prodh	equ	0xFF4
  4947                           prodl	equ	0xFF3
  4948                           intcon	equ	0xFF2
  4949                           postinc0	equ	0xFEE
  4950                           wreg	equ	0xFE8
  4951                           plusw1	equ	0xFE3
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           plusw2	equ	0xFDB
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8
  4958                           
  4959 ;; *************** function ___ftdiv *****************
  4960 ;; Defined at:
  4961 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  f1              3   27[COMRAM] float 
  4964 ;;  f2              3   30[COMRAM] float 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  f3              3   37[COMRAM] float 
  4967 ;;  sign            1   41[COMRAM] unsigned char 
  4968 ;;  exp             1   40[COMRAM] unsigned char 
  4969 ;;  cntr            1   36[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  3   27[COMRAM] float 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4979 ;;      Params:         6       0       0       0       0       0       0       0       0
  4980 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4981 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4982 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4983 ;;Total ram usage:       15 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		___ftpack
  4988 ;; This function is called by:
  4989 ;;		_coinfig_ccpcon
  4990 ;;		_config_ccp1
  4991 ;;		_config_ccp2
  4992 ;;		_exp
  4993 ;;		_wait_in_ms
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text25
  4998  001766                     __ptext25:
  4999                           	opt stack 0
  5000  001766                     ___ftdiv:
  5001                           	opt stack 28
  5002                           
  5003                           ;incstack = 0
  5004  001766  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  5005  00176A  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5006  00176C  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5007  00176E  341D               	rlcf	___ftdiv@f1+1,w,c
  5008  001770  3622               	rlcf	??___ftdiv& (0+255),f,c
  5009  001772  E301               	bnc	u2241
  5010  001774  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5011  001776                     u2241:
  5012  001776  5022               	movf	??___ftdiv,w,c
  5013  001778  6E29               	movwf	___ftdiv@exp,c
  5014  00177A  5029               	movf	___ftdiv@exp,w,c
  5015  00177C  A4D8               	btfss	status,2,c
  5016  00177E  D007               	goto	l474
  5017  001780  0E00               	movlw	0
  5018  001782  6E1C               	movwf	?___ftdiv,c
  5019  001784  0E00               	movlw	0
  5020  001786  6E1D               	movwf	?___ftdiv+1,c
  5021  001788  0E00               	movlw	0
  5022  00178A  6E1E               	movwf	?___ftdiv+2,c
  5023  00178C  0012               	return	
  5024  00178E                     l474:
  5025  00178E  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  5026  001792  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5027  001794  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5028  001796  3420               	rlcf	___ftdiv@f2+1,w,c
  5029  001798  3622               	rlcf	??___ftdiv& (0+255),f,c
  5030  00179A  E301               	bnc	u2261
  5031  00179C  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5032  00179E                     u2261:
  5033  00179E  5022               	movf	??___ftdiv,w,c
  5034  0017A0  6E2A               	movwf	___ftdiv@sign,c
  5035  0017A2  502A               	movf	___ftdiv@sign,w,c
  5036  0017A4  A4D8               	btfss	status,2,c
  5037  0017A6  D007               	goto	l476
  5038  0017A8  0E00               	movlw	0
  5039  0017AA  6E1C               	movwf	?___ftdiv,c
  5040  0017AC  0E00               	movlw	0
  5041  0017AE  6E1D               	movwf	?___ftdiv+1,c
  5042  0017B0  0E00               	movlw	0
  5043  0017B2  6E1E               	movwf	?___ftdiv+2,c
  5044  0017B4  0012               	return	
  5045  0017B6                     l476:
  5046  0017B6  0E00               	movlw	0
  5047  0017B8  6E26               	movwf	___ftdiv@f3,c
  5048  0017BA  0E00               	movlw	0
  5049  0017BC  6E27               	movwf	___ftdiv@f3+1,c
  5050  0017BE  0E00               	movlw	0
  5051  0017C0  6E28               	movwf	___ftdiv@f3+2,c
  5052  0017C2  502A               	movf	___ftdiv@sign,w,c
  5053  0017C4  0F89               	addlw	137
  5054  0017C6  5E29               	subwf	___ftdiv@exp,f,c
  5055  0017C8  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5056  0017CC  5021               	movf	___ftdiv@f2+2,w,c
  5057  0017CE  1A2A               	xorwf	___ftdiv@sign,f,c
  5058  0017D0  0E80               	movlw	128
  5059  0017D2  162A               	andwf	___ftdiv@sign,f,c
  5060  0017D4  8E1D               	bsf	___ftdiv@f1+1,7,c
  5061  0017D6  0EFF               	movlw	255
  5062  0017D8  161C               	andwf	___ftdiv@f1,f,c
  5063  0017DA  0EFF               	movlw	255
  5064  0017DC  161D               	andwf	___ftdiv@f1+1,f,c
  5065  0017DE  0E00               	movlw	0
  5066  0017E0  161E               	andwf	___ftdiv@f1+2,f,c
  5067  0017E2  8E20               	bsf	___ftdiv@f2+1,7,c
  5068  0017E4  0EFF               	movlw	255
  5069  0017E6  161F               	andwf	___ftdiv@f2,f,c
  5070  0017E8  0EFF               	movlw	255
  5071  0017EA  1620               	andwf	___ftdiv@f2+1,f,c
  5072  0017EC  0E00               	movlw	0
  5073  0017EE  1621               	andwf	___ftdiv@f2+2,f,c
  5074  0017F0  0E18               	movlw	24
  5075  0017F2  6E25               	movwf	___ftdiv@cntr,c
  5076  0017F4  90D8               	bcf	status,0,c
  5077  0017F6  3626               	rlcf	___ftdiv@f3,f,c
  5078  0017F8  3627               	rlcf	___ftdiv@f3+1,f,c
  5079  0017FA  3628               	rlcf	___ftdiv@f3+2,f,c
  5080  0017FC  501F               	movf	___ftdiv@f2,w,c
  5081  0017FE  5C1C               	subwf	___ftdiv@f1,w,c
  5082  001800  5020               	movf	___ftdiv@f2+1,w,c
  5083  001802  581D               	subwfb	___ftdiv@f1+1,w,c
  5084  001804  5021               	movf	___ftdiv@f2+2,w,c
  5085  001806  581E               	subwfb	___ftdiv@f1+2,w,c
  5086  001808  A0D8               	btfss	status,0,c
  5087  00180A  D007               	goto	l478
  5088  00180C  501F               	movf	___ftdiv@f2,w,c
  5089  00180E  5E1C               	subwf	___ftdiv@f1,f,c
  5090  001810  5020               	movf	___ftdiv@f2+1,w,c
  5091  001812  5A1D               	subwfb	___ftdiv@f1+1,f,c
  5092  001814  5021               	movf	___ftdiv@f2+2,w,c
  5093  001816  5A1E               	subwfb	___ftdiv@f1+2,f,c
  5094  001818  8026               	bsf	___ftdiv@f3,0,c
  5095  00181A                     l478:
  5096  00181A  90D8               	bcf	status,0,c
  5097  00181C  361C               	rlcf	___ftdiv@f1,f,c
  5098  00181E  361D               	rlcf	___ftdiv@f1+1,f,c
  5099  001820  361E               	rlcf	___ftdiv@f1+2,f,c
  5100  001822  2E25               	decfsz	___ftdiv@cntr,f,c
  5101  001824  D7E7               	goto	l477
  5102  001826  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  5103  00182A  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5104  00182E  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5105  001832  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  5106  001836  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5107  00183A  ECBD  F00D         	call	___ftpack	;wreg free
  5108  00183E  C001  F01C         	movff	?___ftpack,?___ftdiv
  5109  001842  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  5110  001846  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  5111  00184A  0012               	return	
  5112  00184C                     __end_of___ftdiv:
  5113                           	opt stack 0
  5114                           tblptru	equ	0xFF8
  5115                           tblptrh	equ	0xFF7
  5116                           tblptrl	equ	0xFF6
  5117                           tablat	equ	0xFF5
  5118                           prodh	equ	0xFF4
  5119                           prodl	equ	0xFF3
  5120                           intcon	equ	0xFF2
  5121                           postinc0	equ	0xFEE
  5122                           wreg	equ	0xFE8
  5123                           plusw1	equ	0xFE3
  5124                           postinc2	equ	0xFDE
  5125                           postdec2	equ	0xFDD
  5126                           plusw2	equ	0xFDB
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function ___awtoft *****************
  5132 ;; Defined at:
  5133 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  c               2    8[COMRAM] int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  sign            1   11[COMRAM] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  3    8[COMRAM] float 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5147 ;;      Params:         3       0       0       0       0       0       0       0       0
  5148 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5150 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5151 ;;Total ram usage:        4 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		___ftpack
  5156 ;; This function is called by:
  5157 ;;		_config_timer2
  5158 ;;		_config_ccp1
  5159 ;;		_config_ccp2
  5160 ;;		_exp
  5161 ;;		_log
  5162 ;;		_wait_in_ms
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text26
  5167  001FFC                     __ptext26:
  5168                           	opt stack 0
  5169  001FFC                     ___awtoft:
  5170                           	opt stack 28
  5171                           
  5172                           ;incstack = 0
  5173  001FFC  0E00               	movlw	0
  5174  001FFE  6E0C               	movwf	___awtoft@sign,c
  5175  002000  AE0A               	btfss	___awtoft@c+1,7,c
  5176  002002  D006               	goto	l391
  5177  002004  6C09               	negf	___awtoft@c,c
  5178  002006  1E0A               	comf	___awtoft@c+1,f,c
  5179  002008  B0D8               	btfsc	status,0,c
  5180  00200A  2A0A               	incf	___awtoft@c+1,f,c
  5181  00200C  0E01               	movlw	1
  5182  00200E  6E0C               	movwf	___awtoft@sign,c
  5183  002010                     l391:
  5184  002010  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5185  002014  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5186  002018  6A03               	clrf	___ftpack@arg+2,c
  5187  00201A  0E8E               	movlw	142
  5188  00201C  6E04               	movwf	___ftpack@exp,c
  5189  00201E  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5190  002022  ECBD  F00D         	call	___ftpack	;wreg free
  5191  002026  C001  F009         	movff	?___ftpack,?___awtoft
  5192  00202A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5193  00202E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5194  002032  0012               	return	
  5195  002034                     __end_of___awtoft:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           prodh	equ	0xFF4
  5202                           prodl	equ	0xFF3
  5203                           intcon	equ	0xFF2
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           plusw1	equ	0xFE3
  5207                           postinc2	equ	0xFDE
  5208                           postdec2	equ	0xFDD
  5209                           plusw2	equ	0xFDB
  5210                           fsr2h	equ	0xFDA
  5211                           fsr2l	equ	0xFD9
  5212                           status	equ	0xFD8
  5213                           
  5214 ;; *************** function ___lltoft *****************
  5215 ;; Defined at:
  5216 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  c               4    8[COMRAM] unsigned long 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  exp             1   16[COMRAM] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  3    8[COMRAM] float 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5230 ;;      Params:         4       0       0       0       0       0       0       0       0
  5231 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5232 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5233 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5234 ;;Total ram usage:        9 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    1
  5237 ;; This function calls:
  5238 ;;		___ftpack
  5239 ;; This function is called by:
  5240 ;;		_pow
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text27
  5245  001F14                     __ptext27:
  5246                           	opt stack 0
  5247  001F14                     ___lltoft:
  5248                           	opt stack 26
  5249                           
  5250                           ;incstack = 0
  5251  001F14  0E8E               	movlw	142
  5252  001F16  6E11               	movwf	___lltoft@exp,c
  5253  001F18  D006               	goto	l567
  5254  001F1A  90D8               	bcf	status,0,c
  5255  001F1C  320C               	rrcf	___lltoft@c+3,f,c
  5256  001F1E  320B               	rrcf	___lltoft@c+2,f,c
  5257  001F20  320A               	rrcf	___lltoft@c+1,f,c
  5258  001F22  3209               	rrcf	___lltoft@c,f,c
  5259  001F24  2A11               	incf	___lltoft@exp,f,c
  5260  001F26                     l567:
  5261  001F26  0E00               	movlw	0
  5262  001F28  1409               	andwf	___lltoft@c,w,c
  5263  001F2A  6E0D               	movwf	??___lltoft& (0+255),c
  5264  001F2C  0E00               	movlw	0
  5265  001F2E  140A               	andwf	___lltoft@c+1,w,c
  5266  001F30  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5267  001F32  0E00               	movlw	0
  5268  001F34  140B               	andwf	___lltoft@c+2,w,c
  5269  001F36  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5270  001F38  0EFF               	movlw	255
  5271  001F3A  140C               	andwf	___lltoft@c+3,w,c
  5272  001F3C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5273  001F3E  500D               	movf	??___lltoft,w,c
  5274  001F40  100E               	iorwf	??___lltoft+1,w,c
  5275  001F42  100F               	iorwf	??___lltoft+2,w,c
  5276  001F44  1010               	iorwf	??___lltoft+3,w,c
  5277  001F46  A4D8               	btfss	status,2,c
  5278  001F48  D7E8               	goto	l568
  5279  001F4A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5280  001F4E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5281  001F52  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5282  001F56  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5283  001F5A  0E00               	movlw	0
  5284  001F5C  6E05               	movwf	___ftpack@sign,c
  5285  001F5E  ECBD  F00D         	call	___ftpack	;wreg free
  5286  001F62  C001  F009         	movff	?___ftpack,?___lltoft
  5287  001F66  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5288  001F6A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5289  001F6E  0012               	return	
  5290  001F70                     __end_of___lltoft:
  5291                           	opt stack 0
  5292                           tblptru	equ	0xFF8
  5293                           tblptrh	equ	0xFF7
  5294                           tblptrl	equ	0xFF6
  5295                           tablat	equ	0xFF5
  5296                           prodh	equ	0xFF4
  5297                           prodl	equ	0xFF3
  5298                           intcon	equ	0xFF2
  5299                           postinc0	equ	0xFEE
  5300                           wreg	equ	0xFE8
  5301                           plusw1	equ	0xFE3
  5302                           postinc2	equ	0xFDE
  5303                           postdec2	equ	0xFDD
  5304                           plusw2	equ	0xFDB
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function ___ftpack *****************
  5310 ;; Defined at:
  5311 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  arg             3    0[COMRAM] unsigned um
  5314 ;;  exp             1    3[COMRAM] unsigned char 
  5315 ;;  sign            1    4[COMRAM] unsigned char 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  3    0[COMRAM] float 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5327 ;;      Params:         5       0       0       0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5329 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5330 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5331 ;;Total ram usage:        8 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		___altoft
  5337 ;;		___awtoft
  5338 ;;		___ftadd
  5339 ;;		___ftdiv
  5340 ;;		___ftmul
  5341 ;;		___lbtoft
  5342 ;;		___lltoft
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text28
  5347  001B7A                     __ptext28:
  5348                           	opt stack 0
  5349  001B7A                     ___ftpack:
  5350                           	opt stack 28
  5351                           
  5352                           ;incstack = 0
  5353  001B7A  5004               	movf	___ftpack@exp,w,c
  5354  001B7C  B4D8               	btfsc	status,2,c
  5355  001B7E  D005               	goto	u1750
  5356  001B80  5001               	movf	___ftpack@arg,w,c
  5357  001B82  1002               	iorwf	___ftpack@arg+1,w,c
  5358  001B84  1003               	iorwf	___ftpack@arg+2,w,c
  5359  001B86  A4D8               	btfss	status,2,c
  5360  001B88  D00C               	goto	l410
  5361  001B8A                     u1750:
  5362  001B8A  0E00               	movlw	0
  5363  001B8C  6E01               	movwf	?___ftpack,c
  5364  001B8E  0E00               	movlw	0
  5365  001B90  6E02               	movwf	?___ftpack+1,c
  5366  001B92  0E00               	movlw	0
  5367  001B94  6E03               	movwf	?___ftpack+2,c
  5368  001B96  0012               	return	
  5369  001B98  2A04               	incf	___ftpack@exp,f,c
  5370  001B9A  90D8               	bcf	status,0,c
  5371  001B9C  3203               	rrcf	___ftpack@arg+2,f,c
  5372  001B9E  3202               	rrcf	___ftpack@arg+1,f,c
  5373  001BA0  3201               	rrcf	___ftpack@arg,f,c
  5374  001BA2                     l410:
  5375  001BA2  0E00               	movlw	0
  5376  001BA4  1401               	andwf	___ftpack@arg,w,c
  5377  001BA6  6E06               	movwf	??___ftpack& (0+255),c
  5378  001BA8  0E00               	movlw	0
  5379  001BAA  1402               	andwf	___ftpack@arg+1,w,c
  5380  001BAC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5381  001BAE  0EFE               	movlw	254
  5382  001BB0  1403               	andwf	___ftpack@arg+2,w,c
  5383  001BB2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5384  001BB4  5006               	movf	??___ftpack,w,c
  5385  001BB6  1007               	iorwf	??___ftpack+1,w,c
  5386  001BB8  1008               	iorwf	??___ftpack+2,w,c
  5387  001BBA  B4D8               	btfsc	status,2,c
  5388  001BBC  D00C               	goto	l413
  5389  001BBE  D7EC               	goto	l411
  5390  001BC0  2A04               	incf	___ftpack@exp,f,c
  5391  001BC2  0E01               	movlw	1
  5392  001BC4  2601               	addwf	___ftpack@arg,f,c
  5393  001BC6  0E00               	movlw	0
  5394  001BC8  2202               	addwfc	___ftpack@arg+1,f,c
  5395  001BCA  0E00               	movlw	0
  5396  001BCC  2203               	addwfc	___ftpack@arg+2,f,c
  5397  001BCE  90D8               	bcf	status,0,c
  5398  001BD0  3203               	rrcf	___ftpack@arg+2,f,c
  5399  001BD2  3202               	rrcf	___ftpack@arg+1,f,c
  5400  001BD4  3201               	rrcf	___ftpack@arg,f,c
  5401  001BD6                     l413:
  5402  001BD6  0E00               	movlw	0
  5403  001BD8  1401               	andwf	___ftpack@arg,w,c
  5404  001BDA  6E06               	movwf	??___ftpack& (0+255),c
  5405  001BDC  0E00               	movlw	0
  5406  001BDE  1402               	andwf	___ftpack@arg+1,w,c
  5407  001BE0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5408  001BE2  0EFF               	movlw	255
  5409  001BE4  1403               	andwf	___ftpack@arg+2,w,c
  5410  001BE6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5411  001BE8  5006               	movf	??___ftpack,w,c
  5412  001BEA  1007               	iorwf	??___ftpack+1,w,c
  5413  001BEC  1008               	iorwf	??___ftpack+2,w,c
  5414  001BEE  B4D8               	btfsc	status,2,c
  5415  001BF0  D006               	goto	l416
  5416  001BF2  D7E6               	goto	l414
  5417  001BF4  0604               	decf	___ftpack@exp,f,c
  5418  001BF6  90D8               	bcf	status,0,c
  5419  001BF8  3601               	rlcf	___ftpack@arg,f,c
  5420  001BFA  3602               	rlcf	___ftpack@arg+1,f,c
  5421  001BFC  3603               	rlcf	___ftpack@arg+2,f,c
  5422  001BFE                     l416:
  5423  001BFE  BE02               	btfsc	___ftpack@arg+1,7,c
  5424  001C00  D003               	goto	u1790
  5425  001C02  0E02               	movlw	2
  5426  001C04  6004               	cpfslt	___ftpack@exp,c
  5427  001C06  D7F6               	goto	l417
  5428  001C08                     u1790:
  5429  001C08  A004               	btfss	___ftpack@exp,0,c
  5430  001C0A  9E02               	bcf	___ftpack@arg+1,7,c
  5431  001C0C  90D8               	bcf	status,0,c
  5432  001C0E  3204               	rrcf	___ftpack@exp,f,c
  5433  001C10  5004               	movf	___ftpack@exp,w,c
  5434  001C12  1203               	iorwf	___ftpack@arg+2,f,c
  5435  001C14  5005               	movf	___ftpack@sign,w,c
  5436  001C16  A4D8               	btfss	status,2,c
  5437  001C18  8E03               	bsf	___ftpack@arg+2,7,c
  5438  001C1A  C001  F001         	movff	___ftpack@arg,?___ftpack
  5439  001C1E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5440  001C22  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5441  001C26  0012               	return	
  5442  001C28                     __end_of___ftpack:
  5443                           	opt stack 0
  5444                           tblptru	equ	0xFF8
  5445                           tblptrh	equ	0xFF7
  5446                           tblptrl	equ	0xFF6
  5447                           tablat	equ	0xFF5
  5448                           prodh	equ	0xFF4
  5449                           prodl	equ	0xFF3
  5450                           intcon	equ	0xFF2
  5451                           postinc0	equ	0xFEE
  5452                           wreg	equ	0xFE8
  5453                           plusw1	equ	0xFE3
  5454                           postinc2	equ	0xFDE
  5455                           postdec2	equ	0xFDD
  5456                           plusw2	equ	0xFDB
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function ___awdiv *****************
  5462 ;; Defined at:
  5463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        2    0[COMRAM] int 
  5466 ;;  divisor         2    2[COMRAM] int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  quotient        2    6[COMRAM] int 
  5469 ;;  sign            1    5[COMRAM] unsigned char 
  5470 ;;  counter         1    4[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2    0[COMRAM] int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5480 ;;      Params:         4       0       0       0       0       0       0       0       0
  5481 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5483 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5484 ;;Total ram usage:        8 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_config_ccp1
  5490 ;;		_config_ccp2
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text29
  5495  001D48                     __ptext29:
  5496                           	opt stack 0
  5497  001D48                     ___awdiv:
  5498                           	opt stack 28
  5499                           
  5500                           ;incstack = 0
  5501  001D48  0E00               	movlw	0
  5502  001D4A  6E06               	movwf	___awdiv@sign,c
  5503  001D4C  AE04               	btfss	___awdiv@divisor+1,7,c
  5504  001D4E  D006               	goto	l363
  5505  001D50  6C03               	negf	___awdiv@divisor,c
  5506  001D52  1E04               	comf	___awdiv@divisor+1,f,c
  5507  001D54  B0D8               	btfsc	status,0,c
  5508  001D56  2A04               	incf	___awdiv@divisor+1,f,c
  5509  001D58  0E01               	movlw	1
  5510  001D5A  6E06               	movwf	___awdiv@sign,c
  5511  001D5C                     l363:
  5512  001D5C  AE02               	btfss	___awdiv@dividend+1,7,c
  5513  001D5E  D006               	goto	l364
  5514  001D60  6C01               	negf	___awdiv@dividend,c
  5515  001D62  1E02               	comf	___awdiv@dividend+1,f,c
  5516  001D64  B0D8               	btfsc	status,0,c
  5517  001D66  2A02               	incf	___awdiv@dividend+1,f,c
  5518  001D68  0E01               	movlw	1
  5519  001D6A  1A06               	xorwf	___awdiv@sign,f,c
  5520  001D6C                     l364:
  5521  001D6C  0E00               	movlw	0
  5522  001D6E  6E08               	movwf	___awdiv@quotient+1,c
  5523  001D70  0E00               	movlw	0
  5524  001D72  6E07               	movwf	___awdiv@quotient,c
  5525  001D74  5003               	movf	___awdiv@divisor,w,c
  5526  001D76  1004               	iorwf	___awdiv@divisor+1,w,c
  5527  001D78  B4D8               	btfsc	status,2,c
  5528  001D7A  D01C               	goto	l371
  5529  001D7C  0E01               	movlw	1
  5530  001D7E  6E05               	movwf	___awdiv@counter,c
  5531  001D80  D004               	goto	l366
  5532  001D82  90D8               	bcf	status,0,c
  5533  001D84  3603               	rlcf	___awdiv@divisor,f,c
  5534  001D86  3604               	rlcf	___awdiv@divisor+1,f,c
  5535  001D88  2A05               	incf	___awdiv@counter,f,c
  5536  001D8A                     l366:
  5537  001D8A  AE04               	btfss	___awdiv@divisor+1,7,c
  5538  001D8C  D7FA               	goto	l367
  5539  001D8E                     u2620:
  5540  001D8E  90D8               	bcf	status,0,c
  5541  001D90  3607               	rlcf	___awdiv@quotient,f,c
  5542  001D92  3608               	rlcf	___awdiv@quotient+1,f,c
  5543  001D94  5003               	movf	___awdiv@divisor,w,c
  5544  001D96  5C01               	subwf	___awdiv@dividend,w,c
  5545  001D98  5004               	movf	___awdiv@divisor+1,w,c
  5546  001D9A  5802               	subwfb	___awdiv@dividend+1,w,c
  5547  001D9C  A0D8               	btfss	status,0,c
  5548  001D9E  D005               	goto	l370
  5549  001DA0  5003               	movf	___awdiv@divisor,w,c
  5550  001DA2  5E01               	subwf	___awdiv@dividend,f,c
  5551  001DA4  5004               	movf	___awdiv@divisor+1,w,c
  5552  001DA6  5A02               	subwfb	___awdiv@dividend+1,f,c
  5553  001DA8  8007               	bsf	___awdiv@quotient,0,c
  5554  001DAA                     l370:
  5555  001DAA  90D8               	bcf	status,0,c
  5556  001DAC  3204               	rrcf	___awdiv@divisor+1,f,c
  5557  001DAE  3203               	rrcf	___awdiv@divisor,f,c
  5558  001DB0  2E05               	decfsz	___awdiv@counter,f,c
  5559  001DB2  D7ED               	goto	u2620
  5560  001DB4                     l371:
  5561  001DB4  5006               	movf	___awdiv@sign,w,c
  5562  001DB6  B4D8               	btfsc	status,2,c
  5563  001DB8  D004               	goto	l372
  5564  001DBA  6C07               	negf	___awdiv@quotient,c
  5565  001DBC  1E08               	comf	___awdiv@quotient+1,f,c
  5566  001DBE  B0D8               	btfsc	status,0,c
  5567  001DC0  2A08               	incf	___awdiv@quotient+1,f,c
  5568  001DC2                     l372:
  5569  001DC2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5570  001DC6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5571  001DCA  0012               	return	
  5572  001DCC                     __end_of___awdiv:
  5573                           	opt stack 0
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           prodh	equ	0xFF4
  5579                           prodl	equ	0xFF3
  5580                           intcon	equ	0xFF2
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           plusw1	equ	0xFE3
  5584                           postinc2	equ	0xFDE
  5585                           postdec2	equ	0xFDD
  5586                           plusw2	equ	0xFDB
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           tblptru	equ	0xFF8
  5591                           tblptrh	equ	0xFF7
  5592                           tblptrl	equ	0xFF6
  5593                           tablat	equ	0xFF5
  5594                           prodh	equ	0xFF4
  5595                           prodl	equ	0xFF3
  5596                           intcon	equ	0xFF2
  5597                           postinc0	equ	0xFEE
  5598                           wreg	equ	0xFE8
  5599                           plusw1	equ	0xFE3
  5600                           postinc2	equ	0xFDE
  5601                           postdec2	equ	0xFDD
  5602                           plusw2	equ	0xFDB
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607                           	psect	rparam
  5608  0000                     tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           intcon	equ	0xFF2
  5615                           postinc0	equ	0xFEE
  5616                           wreg	equ	0xFE8
  5617                           plusw1	equ	0xFE3
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           plusw2	equ	0xFDB
  5621                           fsr2h	equ	0xFDA
  5622                           fsr2l	equ	0xFD9
  5623                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         65
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_carroGirar
    _config_timer2->___awtoft
    _coinfig_ccpcon->___fttol
    ___lbtoft->___ftpack
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _config_ccp2->_pow
    _config_ccp1->_pow
    _pow->_exp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  623569
                       _carroAvanzar
               _carroAvanzarEspecial
                         _carroGirar
                     _coinfig_ccpcon
                        _configBoard
                      _config_timer2
 ---------------------------------------------------------------------------------
 (1) _config_timer2                                        6     2      4    3956
                                             12 COMRAM     6     2      4
                           ___awtoft
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coinfig_ccpcon                                       9     3      6   17867
                                             69 COMRAM     9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _carroGirar                                           1     1      0  200626
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzarEspecial                                 0     0      0  200560
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzar                                         0     0      0  200560
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _config_ccp2                                         59    57      2  100280
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _config_ccp1                                         59    57      2  100280
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   79872
                                              6 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   26079
                                             66 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   42552
                                             87 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     400
                                             66 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   10249
                                             79 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1088
                                             54 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2797
                                             69 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11303
                                             54 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5441
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5110
                                             54 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4765
                                             42 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3749
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3738
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _carroAvanzar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroAvanzarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _coinfig_ccpcon
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lbtoft
       ___ftpack
   _configBoard
   _config_timer2
     ___awtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      92       5       91.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 20:05:04 2018

                 ___altoft@exp 004E                  ___altoft@sign 004F                             l50 13A6  
                           l43 1348                             l60 141A                             l52 13BC  
                           l44 135E                             l62 1432                             l54 13D4  
                           l46 1376                             l64 144A                             l56 13EC  
                           l48 138E                             l81 1F80                             l58 1404  
                           l83 1F92                             l85 1FA2                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003                    __CFG_BORV$3 000000                   ___ftadd@exp1 0036  
                 ___ftadd@exp2 0035                   ___ftadd@sign 0034                            l410 1BA2  
                          l411 1B98                            l163 1E7C                            l500 2094  
                          l164 1E66                            l413 1BD6                            l181 0D1C  
                          l165 1EA0                            l414 1BC0                            l510 15AA  
                          l166 1E6C                            l191 0988                            l167 1E76  
                          l416 1BFE                            l280 1DFA                            l512 1620  
                          l176 0C34                            l417 1BF4                            l441 101E  
                          l281 1DEE                            l521 1660                            l513 1610  
                          l177 0BEC                            l193 0A4A                            l370 1DAA  
                          l450 10AE                            l506 1FD2                            l371 1DB4  
                          l363 1D5C                            l179 0C5A                            l372 1DC2  
                          l364 1D6C                            l188 0962                            l445 1048  
                          l189 091A                            l366 1D8A                            l518 1644  
                          l630 11B2                            l367 1D82                            l391 2010  
                          l455 10A4                            l519 1638                            l464 10E2  
                          l456 109A                            l800 1888                            l632 11DA  
                          l465 10D8                            l801 187A                            l633 1260  
                          l474 178E                            l482 1CE8                            l634 123E  
                          l467 1106                            l491 16C2                            l483 1D18  
                          l803 18A2                            l635 12E6                            l476 17B6  
                          l468 1122                            l492 16F4                            l804 191C  
                          l477 17F4                            l469 1152                            l493 1704  
                          l813 1A14                            l629 11C2                            l478 181A  
                          l567 1F26                            l495 171C                            l815 1A5A  
                          l831 147C                            l568 1F1A                            l496 172C  
                          l840 196A                            l489 169A                            l809 1C50  
                          l817 1A8A                            l833 149E                            l818 1A7E  
                          l839 19E6                            l791 0E30                            l792 0E68  
                          l793 0E98                            l794 0FBE                            l795 0F94  
                          l789 0DF8                            _PR2 000FCB                            _exp 0DE0  
                          _log 1460                            _pow 1178                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   ___ftdiv@cntr 0025                   ___ftdiv@sign 002A  
                 __CFG_WDT$OFF 000000                           l2504 0D04                           l2506 0D0C  
                         l2524 0DCA                           l2542 091A                           l1904 1D44  
                         l2376 0F94                           l2552 0978                           l2570 0A3A  
                         l2478 0BEC                           l2488 0C4A                           l2568 0A32  
                         l2588 0AF8                           ?_exp 0058                           ?_log 0043  
                         ?_pow 0066                           u2010 10EA                           u2200 164A  
                         u2051 1682                           u2141 158E                           u2230 1C78  
                         u2071 16AA                           u2160 15C8                           u2241 1776  
                         u2340 1894                           u2261 179E                           u2165 15C0  
                         u2238 1C7A                           u2620 1D8E                           u2380 1A34  
                         u2700 0DCA                           u1750 1B8A                           u1910 103A  
                         u2711 08E6                           u2480 0E70                           u2720 0970  
                         u1841 0FDC                           u2490 0E72                           u2570 1228  
                         u1851 0FF0                           u2651 0BB8                           u1940 1078  
                         u2388 1A36                           u2660 0C42                           u2740 0A32  
                         u1790 1C08                           u1880 1010                           u2680 0D04  
                         u2760 0AF8                           u1980 10B6                           u2775 1EB0  
                         u2776 1EB2                           _RCIF 007CF5                   config_ccp1@a 0077  
                 config_ccp2@a 0077                   config_ccp1@i 009A                   config_ccp1@j 00AC  
                 config_ccp2@i 009A                   config_ccp2@j 00AC                   config_ccp1@n 00AA  
                 config_ccp2@n 00AA                   config_ccp1@w 00A6                   config_ccp1@x 00A4  
                 config_ccp1@y 00A8                   config_ccp1@z 009C                   config_ccp2@w 00A6  
                 config_ccp2@x 00A4                   config_ccp2@y 00A8                   config_ccp2@z 009C  
                         _pr2g 00EA                           _main 12F4                   ___ftpack@arg 0001  
                 ___ftpack@exp 0004                           fsr2h 000FDA                           fsr2l 000FD9  
                         exp@x 0058                           log@x 0043                           pow@x 0066  
                         pow@y 0069                           prodh 000FF4                           prodl 000FF3  
         __end_of_carroAvanzar 20E6                           start 0000                  __CFG_MCLRE$ON 000000  
                 ___ftmul@cntr 001A                   ___param_bank 000000                   ___ftmul@sign 001B  
                 ___fttol@exp1 0045                          ??_exp 005B                          ??_log 0046  
                 ___fttol@lval 0041                          ??_pow 005B                  __CFG_PLLDIV$2 000000  
                        ?_main 0001                __end_of___awdiv 1DCC                __end_of___ftadd 1178  
              __end_of___ftdiv 184C                __end_of___ftneg 20A2                __end_of___ftmul 1766  
              ___awdiv@divisor 0003                __end_of___ftsub 1FFC                __end_of___fttol 1672  
              ___awdiv@counter 0005                          _TMR0L 000FD6                          _PORTA 000F80  
                        _TRISD 000F95                   ___lltoft@exp 0011                 __CFG_FCMEN$OFF 000000  
                ___awtoft@sign 000C                          _floor 184C                          _ldexp 19FC  
                        _frexp 1C28                          _errno 00ED                  ___ftpack@sign 0005  
                        tablat 000FF5                          pow@yi 0073                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8                ??_config_timer2 0011  
                  exp@exponent 0063                    ldexp@newexp 0046                __initialization 20E6  
                  log@exponent 0046                   __end_of_main 1460                         ??_main 0060  
                ___fttol@sign1 0040                  __activetblptr 000002                         _ADCON0 000FC2  
                       ?_floor 0050                         ?_ldexp 0043                         ?_frexp 0001  
             __end_of___altoft 1E44                         _CCPR1L 000FBE                         _CCPR2L 000FBB  
                       _T08BIT 007EAE               ___awdiv@dividend 0001               __end_of___awtoft 2034  
             __end_of___ftpack 1C28               __end_of___lbtoft 207E   __end_of_carroAvanzarEspecial 20C4  
             __end_of___lltoft 1F70               ??_coinfig_ccpcon 004C                         _TMR0IF 007F92  
                       _TMR0ON 007EAF           __size_of_configBoard 0060             config_timer2@onoff 000D  
           config_timer2@presc 000F                         ___ftge 1CB8           __size_of_config_ccp1 02D2  
         __size_of_config_ccp2 02D2                         ___wmul 2034                      ??___awdiv 0005  
                    ??___ftadd 0031                      ??___ftdiv 0022                      ??___ftneg 0004  
                    ??___ftmul 0013                      ??___ftsub 003D                      ??___fttol 003B  
                       clear_0 20EC               ___awdiv@quotient 0007                         _prescg 00EF  
                       floor@i 0053                         floor@x 0050          ___ftmul@f3_as_product 0017  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8          __size_of_carroAvanzar 0022               __end_ofexp@coeff 081F  
             __end_oflog@coeff 083A                     __accesstop 0060        __end_of__initialization 20F2  
                   ___altoft@c 0046                     ___ftadd@f1 002B                     ___ftadd@f2 002E  
                   ___ftge@ff1 0001                     ___ftge@ff2 0004                   eval_poly@res 0040  
                ___rparam_used 000001                     ___ftdiv@f1 001C                     ___ftdiv@f2 001F  
                   ___ftdiv@f3 0026                     ___ftneg@f1 0001                     ___awtoft@c 0009  
                   ___lbtoft@c 000C                     ___ftmul@f1 000D                     ___ftmul@f2 0010  
                   ___ftsub@f1 0037                     ___ftsub@f2 003A                     ___fttol@f1 0037  
               __pcstackCOMRAM 0001                     ___lltoft@c 0009                  __end_of_floor 192A  
                __end_of_ldexp 1AC2                  __end_of_frexp 1CB8                   _carroAvanzar 20C4  
                      ??_floor 0053                        ??_ldexp 0048                        ??_frexp 0006  
           coinfig_ccpcon@freq 0049             coinfig_ccpcon@fosc 0046               _config_ccp1$1541 0095  
             _config_ccp1$1542 009E               _config_ccp1$1543 00A1               _config_ccp2$1544 0095  
             _config_ccp2$1545 009E               _config_ccp2$1546 00A1                     __pbssBANK0 00AE  
           __size_of_eval_poly 00D2                     _carroGirar 1F70                        ?___ftge 0001  
                      ?___wmul 0001                      ?___altoft 0046           _carroAvanzarEspecial 20A2  
                    ?___awtoft 0009                      ?___ftpack 0001                      ?___lbtoft 0009  
                    ?___lltoft 0009                        __Hparam 0000                        __Lparam 0000  
              __size_of___ftge 0090                        ___awdiv 1D48                        ___ftadd 0FCC  
                      ___ftdiv 1766                        ___ftneg 207E                __size_of___wmul 0026  
                      ___ftmul 1672                        ___ftsub 1FBC                        ___fttol 157E  
                 __psmallconst 0800          ?_carroAvanzarEspecial 0001                     ??___altoft 004A  
                      __pcinit 20E6                     ??___awtoft 000C                     ??___ftpack 0006  
                   ??___lbtoft 000C              __end_of_eval_poly 19FC                        __ramtop 0800  
                   ??___lltoft 000D                        __ptext0 12F4                        __ptext1 1E44  
                      __ptext2 1EB4                        __ptext3 1AC2                        __ptext4 205A  
                      __ptext5 1F70                        __ptext6 20A2                        __ptext7 20C4  
                      __ptext8 083C                        __ptext9 0B0E                      _T0CONbits 000FD5  
                    _T2CONbits 000FCA                   __size_of_exp 01EC                   __size_of_log 011E  
                 __size_of_pow 017C           end_of_initialization 20F2                        exp@sign 0065  
                __Lmediumconst 0000                    ?_carroGirar 0001          __end_of_config_timer2 1EB4  
                      pow@sign 0072                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTBbits 000F81                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISEbits 000F96  
                  _CCP1CONbits 000FBD                    ___ftdiv@exp 0029                  ??_configBoard 0001  
                  _CCP2CONbits 000FBA                  ??_config_ccp1 005D                  ??_config_ccp2 005D  
                  ___ftmul@exp 0016         ??_carroAvanzarEspecial 005F                 __end_of___ftge 1D48  
               __end_of___wmul 205A                     floor@expon 0056            __size_of_carroGirar 004C  
          start_initialization 20E6                     eval_poly@d 003A                     eval_poly@n 003C  
                   eval_poly@x 0037                     ldexp@value 0043                    __end_of_exp 0FCC  
                  __end_of_log 157E                    __end_of_pow 12F4                     frexp@value 0001  
                     ??___ftge 0007        __size_of_coinfig_ccpcon 00B8                       ??___wmul 0005  
          __end_of_configBoard 1F14            __end_of_config_ccp1 0DE0            __end_of_config_ccp2 0B0E  
            __size_of___altoft 0078              __size_of___awtoft 0038              __size_of___ftpack 00AE  
            __size_of___lbtoft 0024              __size_of___lltoft 005C                  __pcstackBANK0 0060  
          _coinfig_ccpcon$1540 004C              config_ccp1@valreg 0098                      __pnvBANK0 00EF  
            config_ccp2@valreg 0098                       ?___awdiv 0001                       ?___ftadd 002B  
                     ?___ftdiv 001C                       ?___ftneg 0001                       ?___ftmul 000D  
                     ?___ftsub 0037                       ?___fttol 0037                    __smallconst 0800  
                    _eval_poly 192A                 __size_of_floor 00DE                 __size_of_ldexp 00C6  
               __size_of_frexp 0090                 ___wmul@product 0005                       _LATAbits 000F89  
                     _LATEbits 000F8D                   ??_carroGirar 005F                    _configBoard 1EB4  
                     _PIE1bits 000F9D                    _config_ccp1 0B0E                    _config_ccp2 083C  
                     _PIR1bits 000F9E                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0001                     ?_eval_poly 0037  
           __end_of_carroGirar 1FBC                      frexp@eptr 0004                       __Hrparam 0000  
                     __Lrparam 0000                 _coinfig_ccpcon 1AC2               config_ccp1@F3967 00CC  
             config_ccp2@F3978 00AE            carroGirar@direccion 005F               __size_of___awdiv 0084  
             __size_of___ftadd 01AC               __size_of___ftdiv 00E6               __size_of___ftneg 0024  
                     ___altoft 1DCC               __size_of___ftmul 00F4               __size_of___ftsub 0040  
             __size_of___fttol 00F4                       ___awtoft 1FFC                       ___ftpack 1B7A  
                     ___lbtoft 205A                       ___lltoft 1F14               config_ccp1@duty1 005B  
                     _exp$1549 0060                  ?_carroAvanzar 0001               config_ccp2@duty2 005B  
       __size_of_config_timer2 0070                       __ptext10 1178                       __ptext11 1460  
                     __ptext20 2034                       __ptext12 0DE0                       __ptext21 1672  
                     __ptext13 19FC                       __ptext22 1FBC                       __ptext14 184C  
                     __ptext23 0FCC                       __ptext15 1C28                       __ptext24 207E  
                     __ptext16 157E                       __ptext25 1766                       __ptext17 1CB8  
                     __ptext26 1FFC                       __ptext18 1DCC                       __ptext27 1F14  
                     __ptext19 192A                       __ptext28 1B7A                       __ptext29 1D48  
                     _pow$1547 006C                       _pow$1548 006F                  __size_of_main 016C  
       __end_of_coinfig_ccpcon 1B7A  __size_of_carroAvanzarEspecial 0022          __CFG_CPUDIV$OSC1_PLL2 000000  
                     exp@coeff 0801                 ??_carroAvanzar 005F                       log@coeff 081F  
                   _INTCONbits 000FF2                    ??_eval_poly 003E                ?_coinfig_ccpcon 0046  
                _config_timer2 1E44             __CFG_FOSC$HSPLL_HS 000000                   ?_configBoard 0001  
               ?_config_timer2 000D                   ?_config_ccp1 005B                   ?_config_ccp2 005B  
