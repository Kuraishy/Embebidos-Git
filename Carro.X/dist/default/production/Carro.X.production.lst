

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 20:02:11 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	opt stack 0
    83  000800  00                 	db	0
    84  000801                     exp@coeff:
    85                           	opt stack 0
    86  000801  00                 	db	0
    87  000802  80                 	db	128
    88  000803  3F                 	db	63
    89  000804  72                 	db	114
    90  000805  31                 	db	49
    91  000806  3F                 	db	63
    92  000807  FE                 	db	254
    93  000808  75                 	db	117
    94  000809  3E                 	db	62
    95  00080A  58                 	db	88
    96  00080B  63                 	db	99
    97  00080C  3D                 	db	61
    98  00080D  95                 	db	149
    99  00080E  1D                 	db	29
   100  00080F  3C                 	db	60
   101  000810  C5                 	db	197
   102  000811  AE                 	db	174
   103  000812  3A                 	db	58
   104  000813  79                 	db	121
   105  000814  21                 	db	33
   106  000815  39                 	db	57
   107  000816  94                 	db	148
   108  000817  80                 	db	128
   109  000818  37                 	db	55
   110  000819  93                 	db	147
   111  00081A  A7                 	db	167
   112  00081B  35                 	db	53
   113  00081C  56                 	db	86
   114  00081D  15                 	db	21
   115  00081E  34                 	db	52
   116  00081F                     __end_ofexp@coeff:
   117                           	opt stack 0
   118  00081F                     log@coeff:
   119                           	opt stack 0
   120  00081F  00                 	db	0
   121  000820  00                 	db	0
   122  000821  00                 	db	0
   123  000822  00                 	db	0
   124  000823  80                 	db	128
   125  000824  3F                 	db	63
   126  000825  F0                 	db	240
   127  000826  FF                 	db	255
   128  000827  BE                 	db	190
   129  000828  E2                 	db	226
   130  000829  A9                 	db	169
   131  00082A  3E                 	db	62
   132  00082B  83                 	db	131
   133  00082C  76                 	db	118
   134  00082D  BE                 	db	190
   135  00082E  AE                 	db	174
   136  00082F  2B                 	db	43
   137  000830  3E                 	db	62
   138  000831  3C                 	db	60
   139  000832  C3                 	db	195
   140  000833  BD                 	db	189
   141  000834  D2                 	db	210
   142  000835  13                 	db	19
   143  000836  3D                 	db	61
   144  000837  78                 	db	120
   145  000838  D3                 	db	211
   146  000839  BB                 	db	187
   147  00083A                     __end_oflog@coeff:
   148                           	opt stack 0
   149  00083A  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           	psect	nvBANK0
   152  0000EF                     __pnvBANK0:
   153                           	opt stack 0
   154  0000EF                     _prescg:
   155                           	opt stack 0
   156  0000EF                     	ds	3
   157  0000                     _CCPR2L	set	4027
   158  0000                     _CCPR1L	set	4030
   159  0000                     _CCP2CONbits	set	4026
   160  0000                     _CCP1CONbits	set	4029
   161  0000                     _PR2	set	4043
   162  0000                     _PORTA	set	3968
   163  0000                     _TRISD	set	3989
   164  0000                     _PIR1bits	set	3998
   165  0000                     _PIE1bits	set	3997
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _ADCON0	set	4034
   169  0000                     _T0CONbits	set	4053
   170  0000                     _INTCONbits	set	4082
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATEbits	set	3981
   173  0000                     _PORTBbits	set	3969
   174  0000                     _T2CONbits	set	4042
   175  0000                     _TRISCbits	set	3988
   176  0000                     _TRISBbits	set	3987
   177  0000                     _TRISEbits	set	3990
   178  0000                     _TRISAbits	set	3986
   179  0000                     _ADCON1bits	set	4033
   180  0000                     _TMR0L	set	4054
   181  0000                     _TMR0IF	set	32658
   182  0000                     _TMR0ON	set	32431
   183  0000                     _RCIF	set	31989
   184  0000                     _T08BIT	set	32430
   185                           
   186                           ; #config settings
   187  0000                     
   188                           	psect	cinit
   189  002160                     __pcinit:
   190                           	opt stack 0
   191  002160                     start_initialization:
   192                           	opt stack 0
   193  002160                     __initialization:
   194                           	opt stack 0
   195                           
   196                           ; Clear objects allocated to BANK0 (65 bytes)
   197  002160  EE00  F0AE         	lfsr	0,__pbssBANK0
   198  002164  0E41               	movlw	65
   199  002166                     clear_0:
   200  002166  6AEE               	clrf	postinc0,c
   201  002168  06E8               	decf	wreg,f,c
   202  00216A  E1FD               	bnz	clear_0
   203  00216C                     end_of_initialization:
   204                           	opt stack 0
   205  00216C                     __end_of__initialization:
   206                           	opt stack 0
   207  00216C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  00216E  6EF8               	movwf	tblptru,c
   209  002170  0100               	movlb	0
   210  002172  EFBC  F008         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssBANK0
   216  0000AE                     __pbssBANK0:
   217                           	opt stack 0
   218  0000AE                     config_ccp2@F3978:
   219                           	opt stack 0
   220  0000AE                     	ds	30
   221  0000CC                     config_ccp1@F3967:
   222                           	opt stack 0
   223  0000CC                     	ds	30
   224  0000EA                     _pr2g:
   225                           	opt stack 0
   226  0000EA                     	ds	3
   227  0000ED                     _errno:
   228                           	opt stack 0
   229  0000ED                     	ds	2
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK0
   235  000060                     __pcstackBANK0:
   236                           	opt stack 0
   237  000060                     _exp$1562:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x0
   241  000060                     	ds	3
   242  000063                     exp@exponent:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000063                     	ds	2
   247  000065                     exp@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x5
   251  000065                     	ds	1
   252  000066                     ?_pow:
   253                           	opt stack 0
   254  000066                     pow@x:
   255                           	opt stack 0
   256                           
   257                           ; 3 bytes @ 0x6
   258  000066                     	ds	3
   259  000069                     pow@y:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x9
   263  000069                     	ds	3
   264  00006C                     _pow$1560:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xC
   268  00006C                     	ds	3
   269  00006F                     _pow$1561:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0xF
   273  00006F                     	ds	3
   274  000072                     pow@sign:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x12
   278  000072                     	ds	1
   279  000073                     pow@yi:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x13
   283  000073                     	ds	4
   284  000077                     config_ccp1@a:
   285                           	opt stack 0
   286  000077                     config_ccp2@a:
   287                           	opt stack 0
   288                           
   289                           ; 30 bytes @ 0x17
   290  000077                     	ds	30
   291  000095                     _config_ccp1$1554:
   292                           	opt stack 0
   293  000095                     _config_ccp2$1557:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x35
   297  000095                     	ds	3
   298  000098                     config_ccp1@valreg:
   299                           	opt stack 0
   300  000098                     config_ccp2@valreg:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x38
   304  000098                     	ds	2
   305  00009A                     config_ccp1@i:
   306                           	opt stack 0
   307  00009A                     config_ccp2@i:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x3A
   311  00009A                     	ds	2
   312  00009C                     config_ccp1@z:
   313                           	opt stack 0
   314  00009C                     config_ccp2@z:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x3C
   318  00009C                     	ds	2
   319  00009E                     _config_ccp1$1555:
   320                           	opt stack 0
   321  00009E                     _config_ccp2$1558:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x3E
   325  00009E                     	ds	3
   326  0000A1                     _config_ccp1$1556:
   327                           	opt stack 0
   328  0000A1                     _config_ccp2$1559:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x41
   332  0000A1                     	ds	3
   333  0000A4                     config_ccp1@x:
   334                           	opt stack 0
   335  0000A4                     config_ccp2@x:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x44
   339  0000A4                     	ds	2
   340  0000A6                     config_ccp1@w:
   341                           	opt stack 0
   342  0000A6                     config_ccp2@w:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x46
   346  0000A6                     	ds	2
   347  0000A8                     config_ccp1@y:
   348                           	opt stack 0
   349  0000A8                     config_ccp2@y:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x48
   353  0000A8                     	ds	2
   354  0000AA                     config_ccp1@n:
   355                           	opt stack 0
   356  0000AA                     config_ccp2@n:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4A
   360  0000AA                     	ds	2
   361  0000AC                     config_ccp1@j:
   362                           	opt stack 0
   363  0000AC                     config_ccp2@j:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x4C
   367  0000AC                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	cstackCOMRAM
   373  000001                     __pcstackCOMRAM:
   374                           	opt stack 0
   375  000001                     ?___wmul:
   376                           	opt stack 0
   377  000001                     ?___awdiv:
   378                           	opt stack 0
   379  000001                     ?___ftpack:
   380                           	opt stack 0
   381  000001                     ?_frexp:
   382                           	opt stack 0
   383  000001                     ?___ftneg:
   384                           	opt stack 0
   385  000001                     ___wmul@multiplier:
   386                           	opt stack 0
   387  000001                     ___awdiv@dividend:
   388                           	opt stack 0
   389  000001                     ___ftpack@arg:
   390                           	opt stack 0
   391  000001                     ___ftge@ff1:
   392                           	opt stack 0
   393  000001                     ___ftneg@f1:
   394                           	opt stack 0
   395  000001                     frexp@value:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x0
   399  000001                     	ds	2
   400  000003                     ___wmul@multiplicand:
   401                           	opt stack 0
   402  000003                     ___awdiv@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406  000003                     	ds	1
   407  000004                     ___ftpack@exp:
   408                           	opt stack 0
   409  000004                     frexp@eptr:
   410                           	opt stack 0
   411  000004                     ___ftge@ff2:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x3
   415  000004                     	ds	1
   416  000005                     ___awdiv@counter:
   417                           	opt stack 0
   418  000005                     ___ftpack@sign:
   419                           	opt stack 0
   420  000005                     ___wmul@product:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     ??___ftpack:
   426  000006                     ??_frexp:
   427  000006                     ___awdiv@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ??___ftge:
   433  000007                     ___awdiv@quotient:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x6
   437  000007                     	ds	2
   438  000009                     ?___awtoft:
   439                           	opt stack 0
   440  000009                     ?___lbtoft:
   441                           	opt stack 0
   442  000009                     ?___lltoft:
   443                           	opt stack 0
   444  000009                     ___awtoft@c:
   445                           	opt stack 0
   446  000009                     ___lltoft@c:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0x8
   450  000009                     	ds	3
   451  00000C                     ___awtoft@sign:
   452                           	opt stack 0
   453  00000C                     ___lbtoft@c:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ??___lltoft:
   459  00000D                     ?___ftmul:
   460                           	opt stack 0
   461  00000D                     config_timer2@onoff:
   462                           	opt stack 0
   463  00000D                     ___ftmul@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xC
   467  00000D                     	ds	2
   468  00000F                     config_timer2@presc:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     ___ftmul@f2:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ??_config_timer2:
   479  000011                     ___lltoft@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     ??___ftmul:
   485                           
   486                           ; 1 bytes @ 0x12
   487  000013                     	ds	3
   488  000016                     ___ftmul@exp:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x15
   492  000016                     	ds	1
   493  000017                     ___ftmul@f3_as_product:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x16
   497  000017                     	ds	3
   498  00001A                     ___ftmul@cntr:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x19
   502  00001A                     	ds	1
   503  00001B                     ___ftmul@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1A
   507  00001B                     	ds	1
   508  00001C                     ?___ftdiv:
   509                           	opt stack 0
   510  00001C                     ___ftdiv@f1:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x1B
   514  00001C                     	ds	3
   515  00001F                     ___ftdiv@f2:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x1E
   519  00001F                     	ds	3
   520  000022                     ??___ftdiv:
   521                           
   522                           ; 1 bytes @ 0x21
   523  000022                     	ds	3
   524  000025                     ___ftdiv@cntr:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x24
   528  000025                     	ds	1
   529  000026                     ___ftdiv@f3:
   530                           	opt stack 0
   531                           
   532                           ; 3 bytes @ 0x25
   533  000026                     	ds	3
   534  000029                     ___ftdiv@exp:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x28
   538  000029                     	ds	1
   539  00002A                     ___ftdiv@sign:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x29
   543  00002A                     	ds	1
   544  00002B                     ?___ftadd:
   545                           	opt stack 0
   546  00002B                     ___ftadd@f1:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x2A
   550  00002B                     	ds	3
   551  00002E                     ___ftadd@f2:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x2D
   555  00002E                     	ds	3
   556  000031                     ??___ftadd:
   557                           
   558                           ; 1 bytes @ 0x30
   559  000031                     	ds	3
   560  000034                     ___ftadd@sign:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x33
   564  000034                     	ds	1
   565  000035                     ___ftadd@exp2:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x34
   569  000035                     	ds	1
   570  000036                     ___ftadd@exp1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x35
   574  000036                     	ds	1
   575  000037                     ?___ftsub:
   576                           	opt stack 0
   577  000037                     ?_eval_poly:
   578                           	opt stack 0
   579  000037                     ?___fttol:
   580                           	opt stack 0
   581  000037                     ___ftsub@f1:
   582                           	opt stack 0
   583  000037                     ___fttol@f1:
   584                           	opt stack 0
   585  000037                     eval_poly@x:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x36
   589  000037                     	ds	3
   590  00003A                     eval_poly@d:
   591                           	opt stack 0
   592  00003A                     ___ftsub@f2:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x39
   596  00003A                     	ds	1
   597  00003B                     ??___fttol:
   598                           
   599                           ; 1 bytes @ 0x3A
   600  00003B                     	ds	1
   601  00003C                     eval_poly@n:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x3B
   605  00003C                     	ds	1
   606  00003D                     
   607                           ; 1 bytes @ 0x3C
   608  00003D                     	ds	1
   609  00003E                     ??_eval_poly:
   610                           
   611                           ; 1 bytes @ 0x3D
   612  00003E                     	ds	2
   613  000040                     ___fttol@sign1:
   614                           	opt stack 0
   615  000040                     eval_poly@res:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x3F
   619  000040                     	ds	1
   620  000041                     ___fttol@lval:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x40
   624  000041                     	ds	2
   625  000043                     ?_log:
   626                           	opt stack 0
   627  000043                     ?_ldexp:
   628                           	opt stack 0
   629  000043                     ldexp@value:
   630                           	opt stack 0
   631  000043                     log@x:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x42
   635  000043                     	ds	2
   636  000045                     ___fttol@exp1:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x44
   640  000045                     	ds	1
   641  000046                     ?___altoft:
   642                           	opt stack 0
   643  000046                     ldexp@newexp:
   644                           	opt stack 0
   645  000046                     log@exponent:
   646                           	opt stack 0
   647  000046                     coinfig_ccpcon@fosc:
   648                           	opt stack 0
   649  000046                     ___altoft@c:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x45
   653  000046                     	ds	2
   654  000048                     ??_ldexp:
   655                           
   656                           ; 1 bytes @ 0x47
   657  000048                     	ds	1
   658  000049                     coinfig_ccpcon@freq:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x48
   662  000049                     	ds	1
   663  00004A                     ??___altoft:
   664                           
   665                           ; 1 bytes @ 0x49
   666  00004A                     	ds	2
   667  00004C                     _coinfig_ccpcon$1553:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x4B
   671  00004C                     	ds	2
   672  00004E                     ___altoft@exp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x4D
   676  00004E                     	ds	1
   677  00004F                     ___altoft@sign:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x4E
   681  00004F                     	ds	1
   682  000050                     ?_floor:
   683                           	opt stack 0
   684  000050                     floor@x:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x4F
   688  000050                     	ds	3
   689  000053                     floor@i:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x52
   693  000053                     	ds	3
   694  000056                     floor@expon:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x55
   698  000056                     	ds	2
   699  000058                     ?_exp:
   700                           	opt stack 0
   701  000058                     exp@x:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x57
   705  000058                     	ds	3
   706  00005B                     config_ccp1@duty1:
   707                           	opt stack 0
   708  00005B                     config_ccp2@duty2:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x5A
   712  00005B                     	ds	2
   713  00005D                     ??_config_ccp1:
   714  00005D                     ??_config_ccp2:
   715                           
   716                           ; 1 bytes @ 0x5C
   717  00005D                     	ds	2
   718  00005F                     carroGirarEspecial@direccion2:
   719                           	opt stack 0
   720  00005F                     carroGirar@direccion:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x5E
   724  00005F                     	ds	1
   725  000060                     tblptru	equ	0xFF8
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           
   729                           ; 1 bytes @ 0x5F
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 247 in file "carroMain.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels required when called:    7
   755 ;; This function calls:
   756 ;;		_carroAvanzar
   757 ;;		_carroAvanzarEspecial
   758 ;;		_carroGirar
   759 ;;		_carroGirarEspecial
   760 ;;		_coinfig_ccpcon
   761 ;;		_configBoard
   762 ;;		_config_timer2
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text0
   769  001178                     __ptext0:
   770                           	opt stack 0
   771  001178                     _main:
   772                           	opt stack 24
   773                           
   774                           ;carroMain.c: 249: configBoard();
   775                           
   776                           ;incstack = 0
   777  001178  EC73  F00F         	call	_configBoard	;wreg free
   778                           
   779                           ;carroMain.c: 250: ADCON1bits.PCFG = 0b1111;
   780  00117C  80C1               	bsf	4033,0,c	;volatile
   781  00117E  82C1               	bsf	4033,1,c	;volatile
   782  001180  84C1               	bsf	4033,2,c	;volatile
   783  001182  86C1               	bsf	4033,3,c	;volatile
   784                           
   785                           ;carroMain.c: 252: TRISAbits.RA4=0;
   786  001184  9892               	bcf	3986,4,c	;volatile
   787                           
   788                           ;carroMain.c: 253: TRISAbits.RA1=0;
   789  001186  9292               	bcf	3986,1,c	;volatile
   790                           
   791                           ;carroMain.c: 254: TRISEbits.RE0=0;
   792  001188  9096               	bcf	3990,0,c	;volatile
   793                           
   794                           ;carroMain.c: 255: TRISEbits.RE1=0;
   795  00118A  9296               	bcf	3990,1,c	;volatile
   796                           
   797                           ;carroMain.c: 257: TRISBbits.RB5=1;
   798  00118C  8A93               	bsf	3987,5,c	;volatile
   799                           
   800                           ;carroMain.c: 258: TRISBbits.RB4=1;
   801  00118E  8893               	bsf	3987,4,c	;volatile
   802                           
   803                           ;carroMain.c: 259: TRISBbits.RB3=1;
   804  001190  8693               	bsf	3987,3,c	;volatile
   805                           
   806                           ;carroMain.c: 260: TRISBbits.RB2=1;
   807  001192  8493               	bsf	3987,2,c	;volatile
   808                           
   809                           ;carroMain.c: 261: TRISBbits.RB1=1;
   810  001194  8293               	bsf	3987,1,c	;volatile
   811                           
   812                           ;carroMain.c: 263: TRISAbits.RA0=1;
   813  001196  8092               	bsf	3986,0,c	;volatile
   814                           
   815                           ;carroMain.c: 265: TRISCbits.RC2 = 0;
   816  001198  9494               	bcf	3988,2,c	;volatile
   817                           
   818                           ;carroMain.c: 266: TRISCbits.RC1 = 0;
   819  00119A  9294               	bcf	3988,1,c	;volatile
   820                           
   821                           ;carroMain.c: 268: config_timer2(0,16);
   822  00119C  0E00               	movlw	0
   823  00119E  6E0E               	movwf	config_timer2@onoff+1,c
   824  0011A0  0E00               	movlw	0
   825  0011A2  6E0D               	movwf	config_timer2@onoff,c
   826  0011A4  0E00               	movlw	0
   827  0011A6  6E10               	movwf	config_timer2@presc+1,c
   828  0011A8  0E10               	movlw	16
   829  0011AA  6E0F               	movwf	config_timer2@presc,c
   830  0011AC  EC3B  F00F         	call	_config_timer2	;wreg free
   831                           
   832                           ;carroMain.c: 269: coinfig_ccpcon(48000000,15000);
   833  0011B0  0E1B               	movlw	27
   834  0011B2  6E46               	movwf	coinfig_ccpcon@fosc,c
   835  0011B4  0E37               	movlw	55
   836  0011B6  6E47               	movwf	coinfig_ccpcon@fosc+1,c
   837  0011B8  0E4C               	movlw	76
   838  0011BA  6E48               	movwf	coinfig_ccpcon@fosc+2,c
   839  0011BC  0E60               	movlw	96
   840  0011BE  6E49               	movwf	coinfig_ccpcon@freq,c
   841  0011C0  0E6A               	movlw	106
   842  0011C2  6E4A               	movwf	coinfig_ccpcon@freq+1,c
   843  0011C4  0E46               	movlw	70
   844  0011C6  6E4B               	movwf	coinfig_ccpcon@freq+2,c
   845  0011C8  EC7A  F00D         	call	_coinfig_ccpcon	;wreg free
   846                           
   847                           ;carroMain.c: 273: T2CONbits.TMR2ON = 1;
   848  0011CC  84CA               	bsf	4042,2,c	;volatile
   849  0011CE                     
   850                           ;carroMain.c: 281: if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbits.RB
      +                          3==0&&PORTBbits.RB1==0){
   851  0011CE  A481               	btfss	3969,2,c	;volatile
   852  0011D0  BA81               	btfsc	3969,5,c	;volatile
   853  0011D2  D008               	goto	l48
   854  0011D4  A881               	btfss	3969,4,c	;volatile
   855  0011D6  B681               	btfsc	3969,3,c	;volatile
   856  0011D8  D005               	goto	l48
   857  0011DA  B281               	btfsc	3969,1,c	;volatile
   858  0011DC  D003               	goto	l48
   859                           
   860                           ;carroMain.c: 282: carroAvanzarEspecial();
   861  0011DE  EC8E  F010         	call	_carroAvanzarEspecial	;wreg free
   862                           
   863                           ;carroMain.c: 283: }
   864  0011E2  D7F5               	goto	l47
   865  0011E4                     l48:
   866                           
   867                           ;carroMain.c: 284: else if (PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBb
      +                          its.RB3==0&&PORTBbits.RB1==1){
   868  0011E4  A481               	btfss	3969,2,c	;volatile
   869  0011E6  BA81               	btfsc	3969,5,c	;volatile
   870  0011E8  D009               	goto	l50
   871  0011EA  A881               	btfss	3969,4,c	;volatile
   872  0011EC  B681               	btfsc	3969,3,c	;volatile
   873  0011EE  D006               	goto	l50
   874  0011F0  A281               	btfss	3969,1,c	;volatile
   875  0011F2  D004               	goto	l50
   876                           
   877                           ;carroMain.c: 285: carroGirar(1);
   878  0011F4  0E01               	movlw	1
   879  0011F6  ECD1  F00F         	call	_carroGirar
   880                           
   881                           ;carroMain.c: 286: }
   882  0011FA  D7E9               	goto	l47
   883  0011FC                     l50:
   884                           
   885                           ;carroMain.c: 287: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   886  0011FC  A481               	btfss	3969,2,c	;volatile
   887  0011FE  BA81               	btfsc	3969,5,c	;volatile
   888  001200  D009               	goto	l52
   889  001202  A881               	btfss	3969,4,c	;volatile
   890  001204  A681               	btfss	3969,3,c	;volatile
   891  001206  D006               	goto	l52
   892  001208  B281               	btfsc	3969,1,c	;volatile
   893  00120A  D004               	goto	l52
   894                           
   895                           ;carroMain.c: 288: carroGirar(1);
   896  00120C  0E01               	movlw	1
   897  00120E  ECD1  F00F         	call	_carroGirar
   898                           
   899                           ;carroMain.c: 289: }
   900  001212  D7DD               	goto	l47
   901  001214                     l52:
   902                           
   903                           ;carroMain.c: 290: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==1){
   904  001214  A481               	btfss	3969,2,c	;volatile
   905  001216  BA81               	btfsc	3969,5,c	;volatile
   906  001218  D009               	goto	l54
   907  00121A  A881               	btfss	3969,4,c	;volatile
   908  00121C  A681               	btfss	3969,3,c	;volatile
   909  00121E  D006               	goto	l54
   910  001220  A281               	btfss	3969,1,c	;volatile
   911  001222  D004               	goto	l54
   912                           
   913                           ;carroMain.c: 291: carroGirar(1);
   914  001224  0E01               	movlw	1
   915  001226  ECD1  F00F         	call	_carroGirar
   916                           
   917                           ;carroMain.c: 292: }
   918  00122A  D7D1               	goto	l47
   919  00122C                     l54:
   920                           
   921                           ;carroMain.c: 293: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   922  00122C  A481               	btfss	3969,2,c	;volatile
   923  00122E  BA81               	btfsc	3969,5,c	;volatile
   924  001230  D008               	goto	l56
   925  001232  B881               	btfsc	3969,4,c	;volatile
   926  001234  B681               	btfsc	3969,3,c	;volatile
   927  001236  D005               	goto	l56
   928  001238  B281               	btfsc	3969,1,c	;volatile
   929  00123A  D003               	goto	l56
   930                           
   931                           ;carroMain.c: 294: carroAvanzar();
   932  00123C  EC9F  F010         	call	_carroAvanzar	;wreg free
   933                           
   934                           ;carroMain.c: 295: }
   935  001240  D7C6               	goto	l47
   936  001242                     l56:
   937                           
   938                           ;carroMain.c: 296: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   939  001242  A481               	btfss	3969,2,c	;volatile
   940  001244  BA81               	btfsc	3969,5,c	;volatile
   941  001246  D009               	goto	l58
   942  001248  B881               	btfsc	3969,4,c	;volatile
   943  00124A  A681               	btfss	3969,3,c	;volatile
   944  00124C  D006               	goto	l58
   945  00124E  B281               	btfsc	3969,1,c	;volatile
   946  001250  D004               	goto	l58
   947                           
   948                           ;carroMain.c: 297: carroGirar(1);
   949  001252  0E01               	movlw	1
   950  001254  ECD1  F00F         	call	_carroGirar
   951                           
   952                           ;carroMain.c: 298: }
   953  001258  D7BA               	goto	l47
   954  00125A                     l58:
   955                           
   956                           ;carroMain.c: 299: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   957  00125A  A481               	btfss	3969,2,c	;volatile
   958  00125C  AA81               	btfss	3969,5,c	;volatile
   959  00125E  D009               	goto	l60
   960  001260  A881               	btfss	3969,4,c	;volatile
   961  001262  B681               	btfsc	3969,3,c	;volatile
   962  001264  D006               	goto	l60
   963  001266  B281               	btfsc	3969,1,c	;volatile
   964  001268  D004               	goto	l60
   965                           
   966                           ;carroMain.c: 300: carroGirar(3);
   967  00126A  0E03               	movlw	3
   968  00126C  ECD1  F00F         	call	_carroGirar
   969                           
   970                           ;carroMain.c: 301: }
   971  001270  D7AE               	goto	l47
   972  001272                     l60:
   973                           
   974                           ;carroMain.c: 302: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   975  001272  A481               	btfss	3969,2,c	;volatile
   976  001274  AA81               	btfss	3969,5,c	;volatile
   977  001276  D009               	goto	l62
   978  001278  B881               	btfsc	3969,4,c	;volatile
   979  00127A  B681               	btfsc	3969,3,c	;volatile
   980  00127C  D006               	goto	l62
   981  00127E  B281               	btfsc	3969,1,c	;volatile
   982  001280  D004               	goto	l62
   983                           
   984                           ;carroMain.c: 303: carroGirar(3);
   985  001282  0E03               	movlw	3
   986  001284  ECD1  F00F         	call	_carroGirar
   987                           
   988                           ;carroMain.c: 304: }
   989  001288  D7A2               	goto	l47
   990  00128A                     l62:
   991                           
   992                           ;carroMain.c: 305: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   993  00128A  A481               	btfss	3969,2,c	;volatile
   994  00128C  AA81               	btfss	3969,5,c	;volatile
   995  00128E  D008               	goto	l64
   996  001290  B881               	btfsc	3969,4,c	;volatile
   997  001292  A681               	btfss	3969,3,c	;volatile
   998  001294  D005               	goto	l64
   999  001296  B281               	btfsc	3969,1,c	;volatile
  1000  001298  D003               	goto	l64
  1001                           
  1002                           ;carroMain.c: 306: carroAvanzarEspecial();
  1003  00129A  EC8E  F010         	call	_carroAvanzarEspecial	;wreg free
  1004                           
  1005                           ;carroMain.c: 307: }
  1006  00129E  D797               	goto	l47
  1007  0012A0                     l64:
  1008                           
  1009                           ;carroMain.c: 308: else if(PORTBbits.RB2==1&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1010  0012A0  B481               	btfsc	3969,2,c	;volatile
  1011  0012A2  BA81               	btfsc	3969,5,c	;volatile
  1012  0012A4  D009               	goto	l66
  1013  0012A6  A881               	btfss	3969,4,c	;volatile
  1014  0012A8  B681               	btfsc	3969,3,c	;volatile
  1015  0012AA  D006               	goto	l66
  1016  0012AC  B281               	btfsc	3969,1,c	;volatile
  1017  0012AE  D004               	goto	l66
  1018                           
  1019                           ;carroMain.c: 309: carroGirar(3);
  1020  0012B0  0E03               	movlw	3
  1021  0012B2  ECD1  F00F         	call	_carroGirar
  1022                           
  1023                           ;carroMain.c: 310: }
  1024  0012B6  D78B               	goto	l47
  1025  0012B8                     l66:
  1026                           
  1027                           ;carroMain.c: 311: else if(PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1028  0012B8  B481               	btfsc	3969,2,c	;volatile
  1029  0012BA  AA81               	btfss	3969,5,c	;volatile
  1030  0012BC  D009               	goto	l68
  1031  0012BE  A881               	btfss	3969,4,c	;volatile
  1032  0012C0  B681               	btfsc	3969,3,c	;volatile
  1033  0012C2  D006               	goto	l68
  1034  0012C4  B281               	btfsc	3969,1,c	;volatile
  1035  0012C6  D004               	goto	l68
  1036                           
  1037                           ;carroMain.c: 312: carroGirar(3);
  1038  0012C8  0E03               	movlw	3
  1039  0012CA  ECD1  F00F         	call	_carroGirar
  1040                           
  1041                           ;carroMain.c: 313: }
  1042  0012CE  D77F               	goto	l47
  1043  0012D0                     l68:
  1044                           
  1045                           ;carroMain.c: 314: else if (PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBb
      +                          its.RB3==1&&PORTBbits.RB1==1){
  1046  0012D0  B481               	btfsc	3969,2,c	;volatile
  1047  0012D2  AA81               	btfss	3969,5,c	;volatile
  1048  0012D4  D008               	goto	l70
  1049  0012D6  B881               	btfsc	3969,4,c	;volatile
  1050  0012D8  A681               	btfss	3969,3,c	;volatile
  1051  0012DA  D005               	goto	l70
  1052  0012DC  A281               	btfss	3969,1,c	;volatile
  1053  0012DE  D003               	goto	l70
  1054                           
  1055                           ;carroMain.c: 315: carroAvanzarEspecial();
  1056  0012E0  EC8E  F010         	call	_carroAvanzarEspecial	;wreg free
  1057                           
  1058                           ;carroMain.c: 316: }
  1059  0012E4  D774               	goto	l47
  1060  0012E6                     l70:
  1061                           
  1062                           ;carroMain.c: 317: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==1){
  1063  0012E6  A481               	btfss	3969,2,c	;volatile
  1064  0012E8  BA81               	btfsc	3969,5,c	;volatile
  1065  0012EA  D009               	goto	l72
  1066  0012EC  B881               	btfsc	3969,4,c	;volatile
  1067  0012EE  A681               	btfss	3969,3,c	;volatile
  1068  0012F0  D006               	goto	l72
  1069  0012F2  A281               	btfss	3969,1,c	;volatile
  1070  0012F4  D004               	goto	l72
  1071                           
  1072                           ;carroMain.c: 318: carroGirarEspecial(1);
  1073  0012F6  0E01               	movlw	1
  1074  0012F8  EC1E  F010         	call	_carroGirarEspecial
  1075                           
  1076                           ;carroMain.c: 319: }
  1077  0012FC  D768               	goto	l47
  1078  0012FE                     l72:
  1079                           
  1080                           ;carroMain.c: 320: else if(PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1081  0012FE  B481               	btfsc	3969,2,c	;volatile
  1082  001300  AA81               	btfss	3969,5,c	;volatile
  1083  001302  D765               	goto	l47
  1084  001304  B881               	btfsc	3969,4,c	;volatile
  1085  001306  B681               	btfsc	3969,3,c	;volatile
  1086  001308  D762               	goto	l47
  1087  00130A  B281               	btfsc	3969,1,c	;volatile
  1088  00130C  D760               	goto	l47
  1089                           
  1090                           ;carroMain.c: 321: carroGirarEspecial(2);
  1091  00130E  0E02               	movlw	2
  1092  001310  EC1E  F010         	call	_carroGirarEspecial
  1093  001314  D75C               	goto	l47
  1094  001316                     __end_of_main:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           
  1100 ;; *************** function _config_timer2 *****************
  1101 ;; Defined at:
  1102 ;;		line 14 in file "Pwm.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  onoff           2   12[COMRAM] int 
  1105 ;;  presc           2   14[COMRAM] int 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         4       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        6 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		___awtoft
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text1
  1132  001E76                     __ptext1:
  1133                           	opt stack 0
  1134  001E76                     _config_timer2:
  1135                           	opt stack 28
  1136                           
  1137                           ;Pwm.c: 16: T2CONbits.TOUTPS = 0b0000;
  1138                           
  1139                           ;incstack = 0
  1140  001E76  96CA               	bcf	4042,3,c	;volatile
  1141  001E78  98CA               	bcf	4042,4,c	;volatile
  1142  001E7A  9ACA               	bcf	4042,5,c	;volatile
  1143  001E7C  9CCA               	bcf	4042,6,c	;volatile
  1144                           
  1145                           ;Pwm.c: 18: prescg = presc;
  1146  001E7E  C00F  F009         	movff	config_timer2@presc,___awtoft@c
  1147  001E82  C010  F00A         	movff	config_timer2@presc+1,___awtoft@c+1
  1148  001E86  EC3B  F010         	call	___awtoft	;wreg free
  1149  001E8A  C009  F0EF         	movff	?___awtoft,_prescg
  1150  001E8E  C00A  F0F0         	movff	?___awtoft+1,_prescg+1
  1151  001E92  C00B  F0F1         	movff	?___awtoft+2,_prescg+2
  1152                           
  1153                           ;Pwm.c: 20: switch(presc)
  1154  001E96  D00B               	goto	l182
  1155  001E98  0EFC               	movlw	-4
  1156  001E9A  16CA               	andwf	4042,f,c	;volatile
  1157  001E9C  D01A               	goto	l184
  1158  001E9E  50CA               	movf	4042,w,c	;volatile
  1159  001EA0  0BFC               	andlw	-4
  1160  001EA2  0901               	iorlw	1
  1161  001EA4  6ECA               	movwf	4042,c	;volatile
  1162  001EA6  D015               	goto	l184
  1163  001EA8  0E03               	movlw	3
  1164  001EAA  12CA               	iorwf	4042,f,c	;volatile
  1165                           
  1166                           ;Pwm.c: 25: }
  1167  001EAC  D012               	goto	l184
  1168  001EAE                     l182:
  1169  001EAE  C00F  F011         	movff	config_timer2@presc,??_config_timer2
  1170  001EB2  C010  F012         	movff	config_timer2@presc+1,??_config_timer2+1
  1171                           
  1172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1173                           ; Switch size 1, requested type "space"
  1174                           ; Number of cases is 1, Range of values is 0 to 0
  1175                           ; switch strategies available:
  1176                           ; Name         Instructions Cycles
  1177                           ; simple_byte            4     3 (average)
  1178                           ;	Chosen strategy is simple_byte
  1179  001EB6  5012               	movf	??_config_timer2+1,w,c
  1180  001EB8  0A00               	xorlw	0	; case 0
  1181  001EBA  A4D8               	btfss	status,2,c
  1182  001EBC  D00A               	goto	l184
  1183                           
  1184                           ; Switch size 1, requested type "space"
  1185                           ; Number of cases is 3, Range of values is 1 to 16
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           10     6 (average)
  1189                           ;	Chosen strategy is simple_byte
  1190  001EBE  5011               	movf	??_config_timer2,w,c
  1191  001EC0  0A01               	xorlw	1	; case 1
  1192  001EC2  B4D8               	btfsc	status,2,c
  1193  001EC4  D7E9               	goto	l183
  1194  001EC6  0A05               	xorlw	5	; case 4
  1195  001EC8  B4D8               	btfsc	status,2,c
  1196  001ECA  D7E9               	goto	l185
  1197  001ECC  0A14               	xorlw	20	; case 16
  1198  001ECE  B4D8               	btfsc	status,2,c
  1199  001ED0  D7EB               	goto	l186
  1200  001ED2                     l184:
  1201                           
  1202                           ;Pwm.c: 27: T2CONbits.TOUTPS = 0b0000;
  1203  001ED2  96CA               	bcf	4042,3,c	;volatile
  1204  001ED4  98CA               	bcf	4042,4,c	;volatile
  1205  001ED6  9ACA               	bcf	4042,5,c	;volatile
  1206  001ED8  9CCA               	bcf	4042,6,c	;volatile
  1207                           
  1208                           ;Pwm.c: 29: T2CONbits.TMR2ON = onoff;
  1209  001EDA  B00D               	btfsc	config_timer2@onoff,0,c
  1210  001EDC  D002               	bra	u2905
  1211  001EDE  94CA               	bcf	4042,2,c	;volatile
  1212  001EE0  D001               	bra	u2906
  1213  001EE2                     u2905:
  1214  001EE2  84CA               	bsf	4042,2,c	;volatile
  1215  001EE4                     u2906:
  1216  001EE4  0012               	return		;funcret
  1217  001EE6                     __end_of_config_timer2:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _configBoard *****************
  1225 ;; Defined at:
  1226 ;;		line 11 in file "config.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text2
  1254  001EE6                     __ptext2:
  1255                           	opt stack 0
  1256  001EE6                     _configBoard:
  1257                           	opt stack 30
  1258                           
  1259                           ;config.c: 15: INTCONbits.GIE = 0;
  1260                           
  1261                           ;incstack = 0
  1262  001EE6  9EF2               	bcf	intcon,7,c	;volatile
  1263                           
  1264                           ;config.c: 16: INTCONbits.PEIE = 0;
  1265  001EE8  9CF2               	bcf	intcon,6,c	;volatile
  1266                           
  1267                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1268  001EEA  8ED5               	bsf	4053,7,c	;volatile
  1269                           
  1270                           ;config.c: 26: T08BIT = 1;
  1271  001EEC  8CD5               	bsf	4053,6,c	;volatile
  1272                           
  1273                           ;config.c: 27: T0CONbits.T0CS = 0;
  1274  001EEE  9AD5               	bcf	4053,5,c	;volatile
  1275                           
  1276                           ;config.c: 29: T0CONbits.PSA = 0;
  1277  001EF0  96D5               	bcf	4053,3,c	;volatile
  1278                           
  1279                           ;config.c: 30: T0CONbits.T0PS = 100;
  1280  001EF2  50D5               	movf	4053,w,c	;volatile
  1281  001EF4  0BF8               	andlw	-8
  1282  001EF6  0904               	iorlw	4
  1283  001EF8  6ED5               	movwf	4053,c	;volatile
  1284                           
  1285                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1286  001EFA  94F2               	bcf	intcon,2,c	;volatile
  1287                           
  1288                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1289  001EFC  80C1               	bsf	4033,0,c	;volatile
  1290  001EFE  82C1               	bsf	4033,1,c	;volatile
  1291  001F00  84C1               	bsf	4033,2,c	;volatile
  1292  001F02  86C1               	bsf	4033,3,c	;volatile
  1293                           
  1294                           ;config.c: 44: ADCON0 = 0b00000111;
  1295  001F04  0E07               	movlw	7
  1296  001F06  6EC2               	movwf	4034,c	;volatile
  1297                           
  1298                           ;config.c: 47: ADCON0bits.ADON = 0;
  1299  001F08  90C2               	bcf	4034,0,c	;volatile
  1300                           
  1301                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1302  001F0A  8EC0               	bsf	4032,7,c	;volatile
  1303                           
  1304                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1305  001F0C  50C0               	movf	4032,w,c	;volatile
  1306  001F0E  0BF8               	andlw	-8
  1307  001F10  0906               	iorlw	6
  1308  001F12  6EC0               	movwf	4032,c	;volatile
  1309                           
  1310                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1311  001F14  50C0               	movf	4032,w,c	;volatile
  1312  001F16  0BC7               	andlw	-57
  1313  001F18  0928               	iorlw	40
  1314  001F1A  6EC0               	movwf	4032,c	;volatile
  1315                           
  1316                           ;config.c: 55: TRISAbits.RA1=1;
  1317  001F1C  8292               	bsf	3986,1,c	;volatile
  1318                           
  1319                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1320  001F1E  50C0               	movf	4032,w,c	;volatile
  1321  001F20  0BF8               	andlw	-8
  1322  001F22  0906               	iorlw	6
  1323  001F24  6EC0               	movwf	4032,c	;volatile
  1324                           
  1325                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1326  001F26  9AC1               	bcf	4033,5,c	;volatile
  1327                           
  1328                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1329  001F28  98C1               	bcf	4033,4,c	;volatile
  1330                           
  1331                           ;config.c: 60: ADCON2bits.ADFM=1;
  1332  001F2A  8EC0               	bsf	4032,7,c	;volatile
  1333                           
  1334                           ;config.c: 64: ADCON0bits.ADON=0;
  1335  001F2C  90C2               	bcf	4034,0,c	;volatile
  1336                           
  1337                           ;config.c: 66: PIE1bits.ADIE=0;
  1338  001F2E  9C9D               	bcf	3997,6,c	;volatile
  1339                           
  1340                           ;config.c: 67: PIR1bits.ADIF=0;
  1341  001F30  9C9E               	bcf	3998,6,c	;volatile
  1342                           
  1343                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1344  001F32  86C0               	bsf	4032,3,c	;volatile
  1345  001F34  88C0               	bsf	4032,4,c	;volatile
  1346  001F36  8AC0               	bsf	4032,5,c	;volatile
  1347                           
  1348                           ;config.c: 70: ADCON0bits.GO=1;
  1349  001F38  82C2               	bsf	4034,1,c	;volatile
  1350                           
  1351                           ;config.c: 72: RCIF=0;
  1352  001F3A  9A9E               	bcf	3998,5,c	;volatile
  1353                           
  1354                           ;config.c: 75: TRISD=0;
  1355  001F3C  0E00               	movlw	0
  1356  001F3E  6E95               	movwf	3989,c	;volatile
  1357                           
  1358                           ;config.c: 76: PORTA=0;
  1359  001F40  0E00               	movlw	0
  1360  001F42  6E80               	movwf	3968,c	;volatile
  1361  001F44  0012               	return		;funcret
  1362  001F46                     __end_of_configBoard:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           intcon	equ	0xFF2
  1366                           postinc0	equ	0xFEE
  1367                           wreg	equ	0xFE8
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _coinfig_ccpcon *****************
  1371 ;; Defined at:
  1372 ;;		line 34 in file "Pwm.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  fosc            3   69[COMRAM] float 
  1375 ;;  freq            3   72[COMRAM] float 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1387 ;;      Params:         6       0       0       0       0       0       0       0       0
  1388 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1390 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1391 ;;Total ram usage:        9 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		___ftadd
  1396 ;;		___ftdiv
  1397 ;;		___ftmul
  1398 ;;		___fttol
  1399 ;;		___lbtoft
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text3
  1406  001AF4                     __ptext3:
  1407                           	opt stack 0
  1408  001AF4                     _coinfig_ccpcon:
  1409                           	opt stack 28
  1410                           
  1411                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1412                           
  1413                           ;incstack = 0
  1414  001AF4  C0EF  F010         	movff	_prescg,___ftmul@f2
  1415  001AF8  C0F0  F011         	movff	_prescg+1,___ftmul@f2+1
  1416  001AFC  C0F1  F012         	movff	_prescg+2,___ftmul@f2+2
  1417  001B00  C049  F00D         	movff	coinfig_ccpcon@freq,___ftmul@f1
  1418  001B04  C04A  F00E         	movff	coinfig_ccpcon@freq+1,___ftmul@f1+1
  1419  001B08  C04B  F00F         	movff	coinfig_ccpcon@freq+2,___ftmul@f1+2
  1420  001B0C  EC52  F00B         	call	___ftmul	;wreg free
  1421  001B10  C00D  F04C         	movff	?___ftmul,_coinfig_ccpcon$1553
  1422  001B14  C00E  F04D         	movff	?___ftmul+1,_coinfig_ccpcon$1553+1
  1423  001B18  C00F  F04E         	movff	?___ftmul+2,_coinfig_ccpcon$1553+2
  1424                           
  1425                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1426  001B1C  0E00               	movlw	0
  1427  001B1E  6E2E               	movwf	___ftadd@f2,c
  1428  001B20  0E80               	movlw	128
  1429  001B22  6E2F               	movwf	___ftadd@f2+1,c
  1430  001B24  0EBF               	movlw	191
  1431  001B26  6E30               	movwf	___ftadd@f2+2,c
  1432  001B28  0E00               	movlw	0
  1433  001B2A  6E10               	movwf	___ftmul@f2,c
  1434  001B2C  0E80               	movlw	128
  1435  001B2E  6E11               	movwf	___ftmul@f2+1,c
  1436  001B30  0E40               	movlw	64
  1437  001B32  6E12               	movwf	___ftmul@f2+2,c
  1438  001B34  C04C  F00D         	movff	_coinfig_ccpcon$1553,___ftmul@f1
  1439  001B38  C04D  F00E         	movff	_coinfig_ccpcon$1553+1,___ftmul@f1+1
  1440  001B3C  C04E  F00F         	movff	_coinfig_ccpcon$1553+2,___ftmul@f1+2
  1441  001B40  EC52  F00B         	call	___ftmul	;wreg free
  1442  001B44  C00D  F01F         	movff	?___ftmul,___ftdiv@f2
  1443  001B48  C00E  F020         	movff	?___ftmul+1,___ftdiv@f2+1
  1444  001B4C  C00F  F021         	movff	?___ftmul+2,___ftdiv@f2+2
  1445  001B50  C046  F01C         	movff	coinfig_ccpcon@fosc,___ftdiv@f1
  1446  001B54  C047  F01D         	movff	coinfig_ccpcon@fosc+1,___ftdiv@f1+1
  1447  001B58  C048  F01E         	movff	coinfig_ccpcon@fosc+2,___ftdiv@f1+2
  1448  001B5C  ECCC  F00B         	call	___ftdiv	;wreg free
  1449  001B60  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  1450  001B64  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  1451  001B68  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  1452  001B6C  ECE6  F007         	call	___ftadd	;wreg free
  1453  001B70  C02B  F037         	movff	?___ftadd,___fttol@f1
  1454  001B74  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  1455  001B78  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  1456  001B7C  ECD8  F00A         	call	___fttol	;wreg free
  1457  001B80  5037               	movf	?___fttol,w,c
  1458  001B82  6ECB               	movwf	4043,c	;volatile
  1459                           
  1460                           ;Pwm.c: 37: pr2g = PR2;
  1461  001B84  50CB               	movf	4043,w,c	;volatile
  1462  001B86  EC6A  F010         	call	___lbtoft
  1463  001B8A  C009  F0EA         	movff	?___lbtoft,_pr2g
  1464  001B8E  C00A  F0EB         	movff	?___lbtoft+1,_pr2g+1
  1465  001B92  C00B  F0EC         	movff	?___lbtoft+2,_pr2g+2
  1466                           
  1467                           ;Pwm.c: 38: CCP1CONbits.P1M = 0b00;
  1468  001B96  0E3F               	movlw	-193
  1469  001B98  16BD               	andwf	4029,f,c	;volatile
  1470                           
  1471                           ;Pwm.c: 39: CCP2CONbits.CCP2M = 1100;
  1472  001B9A  50BA               	movf	4026,w,c	;volatile
  1473  001B9C  0BF0               	andlw	-16
  1474  001B9E  090C               	iorlw	12
  1475  001BA0  6EBA               	movwf	4026,c	;volatile
  1476                           
  1477                           ;Pwm.c: 40: CCP1CONbits.CCP1M = 1100;
  1478  001BA2  50BD               	movf	4029,w,c	;volatile
  1479  001BA4  0BF0               	andlw	-16
  1480  001BA6  090C               	iorlw	12
  1481  001BA8  6EBD               	movwf	4029,c	;volatile
  1482  001BAA  0012               	return		;funcret
  1483  001BAC                     __end_of_coinfig_ccpcon:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           intcon	equ	0xFF2
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           status	equ	0xFD8
  1490                           
  1491 ;; *************** function ___lbtoft *****************
  1492 ;; Defined at:
  1493 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  c               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  c               1   11[COMRAM] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  3    8[COMRAM] float 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1507 ;;      Params:         3       0       0       0       0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		___ftpack
  1516 ;; This function is called by:
  1517 ;;		_coinfig_ccpcon
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text4
  1522  0020D4                     __ptext4:
  1523                           	opt stack 0
  1524  0020D4                     ___lbtoft:
  1525                           	opt stack 28
  1526                           
  1527                           ;incstack = 0
  1528                           ;___lbtoft@c stored from wreg
  1529  0020D4  6E0C               	movwf	___lbtoft@c,c
  1530  0020D6  500C               	movf	___lbtoft@c,w,c
  1531  0020D8  6E01               	movwf	___ftpack@arg,c
  1532  0020DA  6A02               	clrf	___ftpack@arg+1,c
  1533  0020DC  6A03               	clrf	___ftpack@arg+2,c
  1534  0020DE  0E8E               	movlw	142
  1535  0020E0  6E04               	movwf	___ftpack@exp,c
  1536  0020E2  0E00               	movlw	0
  1537  0020E4  6E05               	movwf	___ftpack@sign,c
  1538  0020E6  ECD6  F00D         	call	___ftpack	;wreg free
  1539  0020EA  C001  F009         	movff	?___ftpack,?___lbtoft
  1540  0020EE  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1541  0020F2  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1542  0020F6  0012               	return	
  1543  0020F8                     __end_of___lbtoft:
  1544                           	opt stack 0
  1545                           tblptru	equ	0xFF8
  1546                           intcon	equ	0xFF2
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           status	equ	0xFD8
  1550                           
  1551 ;; *************** function _carroGirarEspecial *****************
  1552 ;; Defined at:
  1553 ;;		line 362 in file "carroMain.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  direccion2      1    wreg     unsigned char 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  direccion2      1   94[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1570 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1571 ;;Total ram usage:        1 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    6
  1574 ;; This function calls:
  1575 ;;		_config_ccp1
  1576 ;;		_config_ccp2
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text5
  1583  00203C                     __ptext5:
  1584                           	opt stack 0
  1585  00203C                     _carroGirarEspecial:
  1586                           	opt stack 24
  1587                           
  1588                           ;incstack = 0
  1589                           ;carroGirarEspecial@direccion2 stored from wreg
  1590  00203C  6E5F               	movwf	carroGirarEspecial@direccion2,c
  1591                           
  1592                           ;carroMain.c: 363: if(direccion2==1){
  1593  00203E  045F               	decf	carroGirarEspecial@direccion2,w,c
  1594  002040  A4D8               	btfss	status,2,c
  1595  002042  D004               	goto	l89
  1596                           
  1597                           ;carroMain.c: 364: LATAbits.LA4=1;
  1598  002044  8889               	bsf	3977,4,c	;volatile
  1599                           
  1600                           ;carroMain.c: 365: LATAbits.LA1=0;
  1601  002046  9289               	bcf	3977,1,c	;volatile
  1602                           
  1603                           ;carroMain.c: 366: LATEbits.LE1=0;
  1604  002048  928D               	bcf	3981,1,c	;volatile
  1605  00204A  D007               	goto	L1
  1606  00204C                     l89:
  1607                           
  1608                           ;carroMain.c: 370: else if(direccion2==2){
  1609  00204C  0E02               	movlw	2
  1610  00204E  185F               	xorwf	carroGirarEspecial@direccion2,w,c
  1611  002050  A4D8               	btfss	status,2,c
  1612  002052  D004               	goto	l91
  1613                           
  1614                           ;carroMain.c: 371: LATAbits.LA4=0;
  1615  002054  9889               	bcf	3977,4,c	;volatile
  1616                           
  1617                           ;carroMain.c: 372: LATAbits.LA1=0;
  1618  002056  9289               	bcf	3977,1,c	;volatile
  1619                           
  1620                           ;carroMain.c: 373: LATEbits.LE1=1;
  1621  002058  828D               	bsf	3981,1,c	;volatile
  1622  00205A                     L1:
  1623                           
  1624                           ;carroMain.c: 374: LATEbits.LE0=0;
  1625  00205A  908D               	bcf	3981,0,c	;volatile
  1626  00205C                     l91:
  1627                           
  1628                           ;carroMain.c: 375: }
  1629                           ;carroMain.c: 376: config_ccp1(40);
  1630  00205C  0E00               	movlw	0
  1631  00205E  6E5C               	movwf	config_ccp1@duty1+1,c
  1632  002060  0E28               	movlw	40
  1633  002062  6E5B               	movwf	config_ccp1@duty1,c
  1634  002064  EC87  F005         	call	_config_ccp1	;wreg free
  1635                           
  1636                           ;carroMain.c: 377: config_ccp2(40);
  1637  002068  0E00               	movlw	0
  1638  00206A  6E5C               	movwf	config_ccp2@duty2+1,c
  1639  00206C  0E28               	movlw	40
  1640  00206E  6E5B               	movwf	config_ccp2@duty2,c
  1641  002070  EC1E  F004         	call	_config_ccp2	;wreg free
  1642  002074  0012               	return		;funcret
  1643  002076                     __end_of_carroGirarEspecial:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           intcon	equ	0xFF2
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           status	equ	0xFD8
  1650                           
  1651 ;; *************** function _carroGirar *****************
  1652 ;; Defined at:
  1653 ;;		line 379 in file "carroMain.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  direccion       1    wreg     unsigned char 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  direccion       1   94[COMRAM] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1667 ;;      Params:         0       0       0       0       0       0       0       0       0
  1668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1670 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1671 ;;Total ram usage:        1 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		_config_ccp1
  1676 ;;		_config_ccp2
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;;		_carroEsquivar
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  001FA2                     __ptext6:
  1685                           	opt stack 0
  1686  001FA2                     _carroGirar:
  1687                           	opt stack 24
  1688                           
  1689                           ;incstack = 0
  1690                           ;carroGirar@direccion stored from wreg
  1691  001FA2  6E5F               	movwf	carroGirar@direccion,c
  1692                           
  1693                           ;carroMain.c: 381: if(direccion==1){
  1694  001FA4  045F               	decf	carroGirar@direccion,w,c
  1695  001FA6  A4D8               	btfss	status,2,c
  1696  001FA8  D004               	goto	l95
  1697                           
  1698                           ;carroMain.c: 382: LATAbits.LA4=1;
  1699  001FAA  8889               	bsf	3977,4,c	;volatile
  1700                           
  1701                           ;carroMain.c: 383: LATAbits.LA1=0;
  1702  001FAC  9289               	bcf	3977,1,c	;volatile
  1703                           
  1704                           ;carroMain.c: 384: LATEbits.LE1 =0;
  1705  001FAE  928D               	bcf	3981,1,c	;volatile
  1706  001FB0  D017               	goto	L4
  1707  001FB2                     l95:
  1708                           
  1709                           ;carroMain.c: 387: else if(direccion==2){
  1710  001FB2  0E02               	movlw	2
  1711  001FB4  185F               	xorwf	carroGirar@direccion,w,c
  1712  001FB6  A4D8               	btfss	status,2,c
  1713  001FB8  D005               	goto	l97
  1714                           
  1715                           ;carroMain.c: 388: LATAbits.LA4=1;
  1716  001FBA  8889               	bsf	3977,4,c	;volatile
  1717                           
  1718                           ;carroMain.c: 389: LATAbits.LA1=0;
  1719  001FBC  9289               	bcf	3977,1,c	;volatile
  1720                           
  1721                           ;carroMain.c: 390: LATEbits.LE1 =0;
  1722  001FBE  928D               	bcf	3981,1,c	;volatile
  1723                           
  1724                           ;carroMain.c: 391: LATEbits.LE0=1;
  1725  001FC0  808D               	bsf	3981,0,c	;volatile
  1726                           
  1727                           ;carroMain.c: 392: }
  1728  001FC2  D00F               	goto	l101
  1729  001FC4                     l97:
  1730                           
  1731                           ;carroMain.c: 393: else if(direccion==3){
  1732  001FC4  0E03               	movlw	3
  1733  001FC6  185F               	xorwf	carroGirar@direccion,w,c
  1734  001FC8  A4D8               	btfss	status,2,c
  1735  001FCA  D003               	goto	l99
  1736                           
  1737                           ;carroMain.c: 394: LATAbits.LA4=0;
  1738  001FCC  9889               	bcf	3977,4,c	;volatile
  1739                           
  1740                           ;carroMain.c: 395: LATAbits.LA1=0;
  1741  001FCE  9289               	bcf	3977,1,c	;volatile
  1742  001FD0  D006               	goto	L3
  1743  001FD2                     l99:
  1744                           
  1745                           ;carroMain.c: 399: else if(direccion==4){
  1746  001FD2  0E04               	movlw	4
  1747  001FD4  185F               	xorwf	carroGirar@direccion,w,c
  1748  001FD6  A4D8               	btfss	status,2,c
  1749  001FD8  D004               	goto	l101
  1750                           
  1751                           ;carroMain.c: 400: LATAbits.LA4=0;
  1752  001FDA  9889               	bcf	3977,4,c	;volatile
  1753                           
  1754                           ;carroMain.c: 401: LATAbits.LA1=1;
  1755  001FDC  8289               	bsf	3977,1,c	;volatile
  1756  001FDE                     L3:
  1757                           
  1758                           ;carroMain.c: 402: LATEbits.LE1 =1;
  1759  001FDE  828D               	bsf	3981,1,c	;volatile
  1760  001FE0                     L4:
  1761                           
  1762                           ;carroMain.c: 403: LATEbits.LE0=0;
  1763  001FE0  908D               	bcf	3981,0,c	;volatile
  1764  001FE2                     l101:
  1765                           
  1766                           ;carroMain.c: 404: }
  1767                           ;carroMain.c: 405: config_ccp1(85);
  1768  001FE2  0E00               	movlw	0
  1769  001FE4  6E5C               	movwf	config_ccp1@duty1+1,c
  1770  001FE6  0E55               	movlw	85
  1771  001FE8  6E5B               	movwf	config_ccp1@duty1,c
  1772  001FEA  EC87  F005         	call	_config_ccp1	;wreg free
  1773                           
  1774                           ;carroMain.c: 406: config_ccp2(85);
  1775  001FEE  0E00               	movlw	0
  1776  001FF0  6E5C               	movwf	config_ccp2@duty2+1,c
  1777  001FF2  0E55               	movlw	85
  1778  001FF4  6E5B               	movwf	config_ccp2@duty2,c
  1779  001FF6  EC1E  F004         	call	_config_ccp2	;wreg free
  1780  001FFA  0012               	return		;funcret
  1781  001FFC                     __end_of_carroGirar:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           intcon	equ	0xFF2
  1785                           postinc0	equ	0xFEE
  1786                           wreg	equ	0xFE8
  1787                           status	equ	0xFD8
  1788                           
  1789 ;; *************** function _carroAvanzarEspecial *****************
  1790 ;; Defined at:
  1791 ;;		line 342 in file "carroMain.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1805 ;;      Params:         0       0       0       0       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1809 ;;Total ram usage:        0 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    6
  1812 ;; This function calls:
  1813 ;;		_config_ccp1
  1814 ;;		_config_ccp2
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;;		_carroEsquivar
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text7
  1822  00211C                     __ptext7:
  1823                           	opt stack 0
  1824  00211C                     _carroAvanzarEspecial:
  1825                           	opt stack 24
  1826                           
  1827                           ;carroMain.c: 344: LATEbits.LE1=1;
  1828                           
  1829                           ;incstack = 0
  1830  00211C  828D               	bsf	3981,1,c	;volatile
  1831                           
  1832                           ;carroMain.c: 345: LATEbits.LE0=0;
  1833  00211E  908D               	bcf	3981,0,c	;volatile
  1834                           
  1835                           ;carroMain.c: 346: LATAbits.LA4=1;
  1836  002120  8889               	bsf	3977,4,c	;volatile
  1837                           
  1838                           ;carroMain.c: 347: LATAbits.LA1=0;
  1839  002122  9289               	bcf	3977,1,c	;volatile
  1840                           
  1841                           ;carroMain.c: 348: config_ccp1(70);
  1842  002124  0E00               	movlw	0
  1843  002126  6E5C               	movwf	config_ccp1@duty1+1,c
  1844  002128  0E46               	movlw	70
  1845  00212A  6E5B               	movwf	config_ccp1@duty1,c
  1846  00212C  EC87  F005         	call	_config_ccp1	;wreg free
  1847                           
  1848                           ;carroMain.c: 349: config_ccp2(70);
  1849  002130  0E00               	movlw	0
  1850  002132  6E5C               	movwf	config_ccp2@duty2+1,c
  1851  002134  0E46               	movlw	70
  1852  002136  6E5B               	movwf	config_ccp2@duty2,c
  1853  002138  EC1E  F004         	call	_config_ccp2	;wreg free
  1854  00213C  0012               	return		;funcret
  1855  00213E                     __end_of_carroAvanzarEspecial:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _carroAvanzar *****************
  1864 ;; Defined at:
  1865 ;;		line 333 in file "carroMain.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    6
  1886 ;; This function calls:
  1887 ;;		_config_ccp1
  1888 ;;		_config_ccp2
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text8
  1895  00213E                     __ptext8:
  1896                           	opt stack 0
  1897  00213E                     _carroAvanzar:
  1898                           	opt stack 24
  1899                           
  1900                           ;carroMain.c: 334: LATEbits.LE1=1;
  1901                           
  1902                           ;incstack = 0
  1903  00213E  828D               	bsf	3981,1,c	;volatile
  1904                           
  1905                           ;carroMain.c: 335: LATEbits.LE0=0;
  1906  002140  908D               	bcf	3981,0,c	;volatile
  1907                           
  1908                           ;carroMain.c: 336: LATAbits.LA4=1;
  1909  002142  8889               	bsf	3977,4,c	;volatile
  1910                           
  1911                           ;carroMain.c: 337: LATAbits.LA1=0;
  1912  002144  9289               	bcf	3977,1,c	;volatile
  1913                           
  1914                           ;carroMain.c: 338: config_ccp1(85);
  1915  002146  0E00               	movlw	0
  1916  002148  6E5C               	movwf	config_ccp1@duty1+1,c
  1917  00214A  0E55               	movlw	85
  1918  00214C  6E5B               	movwf	config_ccp1@duty1,c
  1919  00214E  EC87  F005         	call	_config_ccp1	;wreg free
  1920                           
  1921                           ;carroMain.c: 339: config_ccp2(85);
  1922  002152  0E00               	movlw	0
  1923  002154  6E5C               	movwf	config_ccp2@duty2+1,c
  1924  002156  0E55               	movlw	85
  1925  002158  6E5B               	movwf	config_ccp2@duty2,c
  1926  00215A  EC1E  F004         	call	_config_ccp2	;wreg free
  1927  00215E  0012               	return		;funcret
  1928  002160                     __end_of_carroAvanzar:
  1929                           	opt stack 0
  1930                           tblptru	equ	0xFF8
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function _config_ccp2 *****************
  1937 ;; Defined at:
  1938 ;;		line 85 in file "Pwm.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  duty2           2   90[COMRAM] int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  a              30   23[BANK0 ] int [15]
  1943 ;;  j               2   76[BANK0 ] int 
  1944 ;;  n               2   74[BANK0 ] int 
  1945 ;;  y               2   72[BANK0 ] unsigned int 
  1946 ;;  w               2   70[BANK0 ] unsigned int 
  1947 ;;  x               2   68[BANK0 ] int 
  1948 ;;  z               2   60[BANK0 ] int 
  1949 ;;  i               2   58[BANK0 ] int 
  1950 ;;  valreg          2   56[BANK0 ] int 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         2       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0      55       0       0       0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         4      55       0       0       0       0       0       0       0
  1964 ;;Total ram usage:       59 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    5
  1967 ;; This function calls:
  1968 ;;		___awdiv
  1969 ;;		___awtoft
  1970 ;;		___ftadd
  1971 ;;		___ftdiv
  1972 ;;		___ftmul
  1973 ;;		___fttol
  1974 ;;		_pow
  1975 ;; This function is called by:
  1976 ;;		_carroAvanzar
  1977 ;;		_carroAvanzarEspecial
  1978 ;;		_carroGirarEspecial
  1979 ;;		_carroGirar
  1980 ;;		_carroAtras
  1981 ;;		_carroMatar
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text9
  1986  00083C                     __ptext9:
  1987                           	opt stack 0
  1988  00083C                     _config_ccp2:
  1989                           	opt stack 24
  1990                           
  1991                           ;Pwm.c: 87: int valreg;
  1992                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1993                           
  1994                           ;incstack = 0
  1995  00083C  C05B  F009         	movff	config_ccp2@duty2,___awtoft@c
  1996  000840  C05C  F00A         	movff	config_ccp2@duty2+1,___awtoft@c+1
  1997  000844  EC3B  F010         	call	___awtoft	;wreg free
  1998  000848  C009  F010         	movff	?___awtoft,___ftmul@f2
  1999  00084C  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  2000  000850  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  2001  000854  0E00               	movlw	0
  2002  000856  6E2E               	movwf	___ftadd@f2,c
  2003  000858  0E80               	movlw	128
  2004  00085A  6E2F               	movwf	___ftadd@f2+1,c
  2005  00085C  0E3F               	movlw	63
  2006  00085E  6E30               	movwf	___ftadd@f2+2,c
  2007  000860  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  2008  000864  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  2009  000868  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  2010  00086C  ECE6  F007         	call	___ftadd	;wreg free
  2011  000870  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  2012  000874  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  2013  000878  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  2014  00087C  EC52  F00B         	call	___ftmul	;wreg free
  2015  000880  C00D  F095         	movff	?___ftmul,_config_ccp2$1557
  2016  000884  C00E  F096         	movff	?___ftmul+1,_config_ccp2$1557+1
  2017  000888  C00F  F097         	movff	?___ftmul+2,_config_ccp2$1557+2
  2018                           
  2019                           ;Pwm.c: 87: int valreg;
  2020                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  2021  00088C  0E00               	movlw	0
  2022  00088E  6E1F               	movwf	___ftdiv@f2,c
  2023  000890  0EC8               	movlw	200
  2024  000892  6E20               	movwf	___ftdiv@f2+1,c
  2025  000894  0E42               	movlw	66
  2026  000896  6E21               	movwf	___ftdiv@f2+2,c
  2027  000898  0E00               	movlw	0
  2028  00089A  6E10               	movwf	___ftmul@f2,c
  2029  00089C  0E80               	movlw	128
  2030  00089E  6E11               	movwf	___ftmul@f2+1,c
  2031  0008A0  0E40               	movlw	64
  2032  0008A2  6E12               	movwf	___ftmul@f2+2,c
  2033  0008A4  C095  F00D         	movff	_config_ccp2$1557,___ftmul@f1
  2034  0008A8  C096  F00E         	movff	_config_ccp2$1557+1,___ftmul@f1+1
  2035  0008AC  C097  F00F         	movff	_config_ccp2$1557+2,___ftmul@f1+2
  2036  0008B0  EC52  F00B         	call	___ftmul	;wreg free
  2037  0008B4  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2038  0008B8  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2039  0008BC  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2040  0008C0  ECCC  F00B         	call	___ftdiv	;wreg free
  2041  0008C4  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2042  0008C8  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2043  0008CC  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2044  0008D0  ECD8  F00A         	call	___fttol	;wreg free
  2045  0008D4  C037  F098         	movff	?___fttol,config_ccp2@valreg
  2046  0008D8  C038  F099         	movff	?___fttol+1,config_ccp2@valreg+1
  2047                           
  2048                           ;Pwm.c: 92: int n,x,i,j,z;
  2049                           ;Pwm.c: 93: unsigned int w,y;
  2050                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2051  0008DC  EE20  F0AE         	lfsr	2,config_ccp2@F3978
  2052  0008E0  EE10  F077         	lfsr	1,config_ccp2@a
  2053  0008E4  0E1D               	movlw	29
  2054  0008E6                     u2841:
  2055  0008E6  CFDB FFE3          	movff	plusw2,plusw1
  2056  0008EA  06E8               	decf	wreg,f,c
  2057  0008EC  E2FC               	bc	u2841
  2058                           
  2059                           ;Pwm.c: 96: n = valreg;
  2060  0008EE  C098  F0AA         	movff	config_ccp2@valreg,config_ccp2@n
  2061  0008F2  C099  F0AB         	movff	config_ccp2@valreg+1,config_ccp2@n+1
  2062                           
  2063                           ;Pwm.c: 97: i = 0;
  2064  0008F6  0E00               	movlw	0
  2065  0008F8  0100               	movlb	0	; () banked
  2066  0008FA  6F9B               	movwf	(config_ccp2@i+1)& (0+255),b
  2067  0008FC  0E00               	movlw	0
  2068  0008FE  6F9A               	movwf	config_ccp2@i& (0+255),b
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;Pwm.c: 98: z = 0;
  2072  000900  0E00               	movlw	0
  2073  000902  6F9D               	movwf	(config_ccp2@z+1)& (0+255),b
  2074  000904  0E00               	movlw	0
  2075  000906  6F9C               	movwf	config_ccp2@z& (0+255),b
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;Pwm.c: 99: y = 0;
  2079  000908  0E00               	movlw	0
  2080  00090A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2081  00090C  0E00               	movlw	0
  2082  00090E  6FA8               	movwf	config_ccp2@y& (0+255),b
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;Pwm.c: 100: w = 0;
  2086  000910  0E00               	movlw	0
  2087  000912  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2088  000914  0E00               	movlw	0
  2089  000916  6FA6               	movwf	config_ccp2@w& (0+255),b
  2090                           
  2091                           ;Pwm.c: 102: while(n > 0)
  2092  000918  D024               	goto	l207
  2093  00091A                     l2619:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;Pwm.c: 103: {
  2097                           ;Pwm.c: 104: a[i] = n % 2;
  2098  00091A  0E01               	movlw	1
  2099  00091C  15AA               	andwf	config_ccp2@n& (0+255),w,b
  2100  00091E  6E5D               	movwf	??_config_ccp2& (0+255),c
  2101  000920  0E00               	movlw	0
  2102  000922  15AB               	andwf	(config_ccp2@n+1)& (0+255),w,b
  2103  000924  6E5E               	movwf	(??_config_ccp2+1)& (0+255),c
  2104  000926  90D8               	bcf	status,0,c
  2105  000928  359A               	rlcf	config_ccp2@i& (0+255),w,b
  2106  00092A  6ED9               	movwf	fsr2l,c
  2107  00092C  359B               	rlcf	(config_ccp2@i+1)& (0+255),w,b
  2108  00092E  6EDA               	movwf	fsr2h,c
  2109  000930  0E77               	movlw	low config_ccp2@a
  2110  000932  26D9               	addwf	fsr2l,f,c
  2111  000934  0E00               	movlw	high config_ccp2@a
  2112  000936  22DA               	addwfc	fsr2h,f,c
  2113  000938  C05D  FFDE         	movff	??_config_ccp2,postinc2
  2114  00093C  C05E  FFDD         	movff	??_config_ccp2+1,postdec2
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;Pwm.c: 105: n = n / 2;
  2118  000940  C0AA  F001         	movff	config_ccp2@n,___awdiv@dividend
  2119  000944  C0AB  F002         	movff	config_ccp2@n+1,___awdiv@dividend+1
  2120  000948  0E00               	movlw	0
  2121  00094A  6E04               	movwf	___awdiv@divisor+1,c
  2122  00094C  0E02               	movlw	2
  2123  00094E  6E03               	movwf	___awdiv@divisor,c
  2124  000950  ECBD  F00E         	call	___awdiv	;wreg free
  2125  000954  C001  F0AA         	movff	?___awdiv,config_ccp2@n
  2126  000958  C002  F0AB         	movff	?___awdiv+1,config_ccp2@n+1
  2127                           
  2128                           ;Pwm.c: 106: i++;
  2129  00095C  0100               	movlb	0	; () banked
  2130  00095E  4B9A               	infsnz	config_ccp2@i& (0+255),f,b
  2131  000960  2B9B               	incf	(config_ccp2@i+1)& (0+255),f,b
  2132  000962                     l207:
  2133                           
  2134                           ; BSR set to: 0
  2135                           
  2136                           ; BSR set to: 0
  2137  000962  BFAB               	btfsc	(config_ccp2@n+1)& (0+255),7,b
  2138  000964  D005               	goto	u2850
  2139  000966  51AB               	movf	(config_ccp2@n+1)& (0+255),w,b
  2140  000968  E1D8               	bnz	l2619
  2141  00096A  05AA               	decf	config_ccp2@n& (0+255),w,b
  2142  00096C  B0D8               	btfsc	status,0,c
  2143  00096E  D7D5               	goto	l208
  2144  000970                     u2850:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;Pwm.c: 107: }
  2148                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  2149                           
  2150                           ; BSR set to: 0
  2151  000970  0E00               	movlw	0
  2152  000972  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2153  000974  0E00               	movlw	0
  2154  000976  6FAC               	movwf	config_ccp2@j& (0+255),b
  2155  000978                     l2629:
  2156                           
  2157                           ; BSR set to: 0
  2158  000978  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2159  00097A  D006               	goto	l210
  2160  00097C  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2161  00097E  E159               	bnz	l2645
  2162  000980  0E02               	movlw	2
  2163  000982  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2164  000984  B0D8               	btfsc	status,0,c
  2165  000986  D055               	goto	u2870
  2166  000988                     l210:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;Pwm.c: 110: {
  2170                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2171                           
  2172                           ; BSR set to: 0
  2173  000988  C0AC  F009         	movff	config_ccp2@j,___awtoft@c
  2174  00098C  C0AD  F00A         	movff	config_ccp2@j+1,___awtoft@c+1
  2175  000990  EC3B  F010         	call	___awtoft	;wreg free
  2176  000994  C009  F09E         	movff	?___awtoft,_config_ccp2$1558
  2177  000998  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1558+1
  2178  00099C  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1558+2
  2179                           
  2180                           ;Pwm.c: 110: {
  2181                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2182  0009A0  C09E  F069         	movff	_config_ccp2$1558,pow@y
  2183  0009A4  C09F  F06A         	movff	_config_ccp2$1558+1,pow@y+1
  2184  0009A8  C0A0  F06B         	movff	_config_ccp2$1558+2,pow@y+2
  2185  0009AC  0E00               	movlw	0
  2186  0009AE  0100               	movlb	0	; () banked
  2187  0009B0  6F66               	movwf	pow@x& (0+255),b
  2188  0009B2  0E00               	movlw	0
  2189  0009B4  6F67               	movwf	(pow@x+1)& (0+255),b
  2190  0009B6  0E40               	movlw	64
  2191  0009B8  6F68               	movwf	(pow@x+2)& (0+255),b
  2192  0009BA  EC8B  F009         	call	_pow	;wreg free
  2193  0009BE  C066  F0A1         	movff	?_pow,_config_ccp2$1559
  2194  0009C2  C067  F0A2         	movff	?_pow+1,_config_ccp2$1559+1
  2195  0009C6  C068  F0A3         	movff	?_pow+2,_config_ccp2$1559+2
  2196                           
  2197                           ;Pwm.c: 110: {
  2198                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2199  0009CA  C0A1  F010         	movff	_config_ccp2$1559,___ftmul@f2
  2200  0009CE  C0A2  F011         	movff	_config_ccp2$1559+1,___ftmul@f2+1
  2201  0009D2  C0A3  F012         	movff	_config_ccp2$1559+2,___ftmul@f2+2
  2202  0009D6  90D8               	bcf	status,0,c
  2203  0009D8  0100               	movlb	0	; () banked
  2204  0009DA  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2205  0009DC  6ED9               	movwf	fsr2l,c
  2206  0009DE  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2207  0009E0  6EDA               	movwf	fsr2h,c
  2208  0009E2  0E77               	movlw	low config_ccp2@a
  2209  0009E4  26D9               	addwf	fsr2l,f,c
  2210  0009E6  0E00               	movlw	high config_ccp2@a
  2211  0009E8  22DA               	addwfc	fsr2h,f,c
  2212  0009EA  CFDE F009          	movff	postinc2,___awtoft@c
  2213  0009EE  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2214  0009F2  EC3B  F010         	call	___awtoft	;wreg free
  2215  0009F6  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2216  0009FA  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2217  0009FE  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2218  000A02  EC52  F00B         	call	___ftmul	;wreg free
  2219  000A06  C00D  F037         	movff	?___ftmul,___fttol@f1
  2220  000A0A  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2221  000A0E  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2222  000A12  ECD8  F00A         	call	___fttol	;wreg free
  2223  000A16  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2224  000A1A  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2225                           
  2226                           ;Pwm.c: 112: y = x + y;
  2227  000A1E  0100               	movlb	0	; () banked
  2228  000A20  51A8               	movf	config_ccp2@y& (0+255),w,b
  2229  000A22  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2230  000A24  6FA8               	movwf	config_ccp2@y& (0+255),b
  2231  000A26  51A9               	movf	(config_ccp2@y+1)& (0+255),w,b
  2232  000A28  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2233  000A2A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2234                           
  2235                           ; BSR set to: 0
  2236  000A2C  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2237  000A2E  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2238  000A30  D7A3               	goto	l2629
  2239  000A32                     u2870:
  2240  000A32                     l2645:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;Pwm.c: 113: }
  2244                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  2245  000A32  0E00               	movlw	0
  2246  000A34  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2247  000A36  0E02               	movlw	2
  2248  000A38  6FAC               	movwf	config_ccp2@j& (0+255),b
  2249  000A3A                     l2647:
  2250                           
  2251                           ; BSR set to: 0
  2252  000A3A  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2253  000A3C  D006               	goto	l212
  2254  000A3E  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2255  000A40  E15B               	bnz	l2665
  2256  000A42  0E0A               	movlw	10
  2257  000A44  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2258  000A46  B0D8               	btfsc	status,0,c
  2259  000A48  D057               	goto	u2890
  2260  000A4A                     l212:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;Pwm.c: 115: {
  2264                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2265                           
  2266                           ; BSR set to: 0
  2267  000A4A  C09C  F009         	movff	config_ccp2@z,___awtoft@c
  2268  000A4E  C09D  F00A         	movff	config_ccp2@z+1,___awtoft@c+1
  2269  000A52  EC3B  F010         	call	___awtoft	;wreg free
  2270  000A56  C009  F09E         	movff	?___awtoft,_config_ccp2$1558
  2271  000A5A  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1558+1
  2272  000A5E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1558+2
  2273                           
  2274                           ;Pwm.c: 115: {
  2275                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2276  000A62  C09E  F069         	movff	_config_ccp2$1558,pow@y
  2277  000A66  C09F  F06A         	movff	_config_ccp2$1558+1,pow@y+1
  2278  000A6A  C0A0  F06B         	movff	_config_ccp2$1558+2,pow@y+2
  2279  000A6E  0E00               	movlw	0
  2280  000A70  0100               	movlb	0	; () banked
  2281  000A72  6F66               	movwf	pow@x& (0+255),b
  2282  000A74  0E00               	movlw	0
  2283  000A76  6F67               	movwf	(pow@x+1)& (0+255),b
  2284  000A78  0E40               	movlw	64
  2285  000A7A  6F68               	movwf	(pow@x+2)& (0+255),b
  2286  000A7C  EC8B  F009         	call	_pow	;wreg free
  2287  000A80  C066  F0A1         	movff	?_pow,_config_ccp2$1559
  2288  000A84  C067  F0A2         	movff	?_pow+1,_config_ccp2$1559+1
  2289  000A88  C068  F0A3         	movff	?_pow+2,_config_ccp2$1559+2
  2290                           
  2291                           ;Pwm.c: 115: {
  2292                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2293  000A8C  C0A1  F010         	movff	_config_ccp2$1559,___ftmul@f2
  2294  000A90  C0A2  F011         	movff	_config_ccp2$1559+1,___ftmul@f2+1
  2295  000A94  C0A3  F012         	movff	_config_ccp2$1559+2,___ftmul@f2+2
  2296  000A98  90D8               	bcf	status,0,c
  2297  000A9A  0100               	movlb	0	; () banked
  2298  000A9C  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2299  000A9E  6ED9               	movwf	fsr2l,c
  2300  000AA0  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2301  000AA2  6EDA               	movwf	fsr2h,c
  2302  000AA4  0E77               	movlw	low config_ccp2@a
  2303  000AA6  26D9               	addwf	fsr2l,f,c
  2304  000AA8  0E00               	movlw	high config_ccp2@a
  2305  000AAA  22DA               	addwfc	fsr2h,f,c
  2306  000AAC  CFDE F009          	movff	postinc2,___awtoft@c
  2307  000AB0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2308  000AB4  EC3B  F010         	call	___awtoft	;wreg free
  2309  000AB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2310  000ABC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2311  000AC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2312  000AC4  EC52  F00B         	call	___ftmul	;wreg free
  2313  000AC8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2314  000ACC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2315  000AD0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2316  000AD4  ECD8  F00A         	call	___fttol	;wreg free
  2317  000AD8  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2318  000ADC  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2319                           
  2320                           ;Pwm.c: 117: w = x + w;
  2321  000AE0  0100               	movlb	0	; () banked
  2322  000AE2  51A6               	movf	config_ccp2@w& (0+255),w,b
  2323  000AE4  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2324  000AE6  6FA6               	movwf	config_ccp2@w& (0+255),b
  2325  000AE8  51A7               	movf	(config_ccp2@w+1)& (0+255),w,b
  2326  000AEA  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2327  000AEC  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;Pwm.c: 118: z++;
  2331  000AEE  4B9C               	infsnz	config_ccp2@z& (0+255),f,b
  2332  000AF0  2B9D               	incf	(config_ccp2@z+1)& (0+255),f,b
  2333                           
  2334                           ; BSR set to: 0
  2335  000AF2  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2336  000AF4  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2337  000AF6  D7A1               	goto	l2647
  2338  000AF8                     u2890:
  2339  000AF8                     l2665:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;Pwm.c: 119: }
  2343                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  2344  000AF8  C0A8  F05D         	movff	config_ccp2@y,??_config_ccp2
  2345  000AFC  3A5D               	swapf	??_config_ccp2,f,c
  2346  000AFE  50BA               	movf	4026,w,c	;volatile
  2347  000B00  185D               	xorwf	??_config_ccp2,w,c
  2348  000B02  0BCF               	andlw	-49
  2349  000B04  185D               	xorwf	??_config_ccp2,w,c
  2350  000B06  6EBA               	movwf	4026,c	;volatile
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;Pwm.c: 122: CCPR2L = w;
  2354  000B08  C0A6  FFBB         	movff	config_ccp2@w,4027	;volatile
  2355                           
  2356                           ; BSR set to: 0
  2357  000B0C  0012               	return		;funcret
  2358  000B0E                     __end_of_config_ccp2:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           plusw1	equ	0xFE3
  2365                           postinc2	equ	0xFDE
  2366                           postdec2	equ	0xFDD
  2367                           plusw2	equ	0xFDB
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _config_ccp1 *****************
  2373 ;; Defined at:
  2374 ;;		line 43 in file "Pwm.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  duty1           2   90[COMRAM] int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  a              30   23[BANK0 ] int [15]
  2379 ;;  j               2   76[BANK0 ] int 
  2380 ;;  n               2   74[BANK0 ] int 
  2381 ;;  y               2   72[BANK0 ] unsigned int 
  2382 ;;  w               2   70[BANK0 ] unsigned int 
  2383 ;;  x               2   68[BANK0 ] int 
  2384 ;;  z               2   60[BANK0 ] int 
  2385 ;;  i               2   58[BANK0 ] int 
  2386 ;;  valreg          2   56[BANK0 ] int 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2396 ;;      Params:         2       0       0       0       0       0       0       0       0
  2397 ;;      Locals:         0      55       0       0       0       0       0       0       0
  2398 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2399 ;;      Totals:         4      55       0       0       0       0       0       0       0
  2400 ;;Total ram usage:       59 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    5
  2403 ;; This function calls:
  2404 ;;		___awdiv
  2405 ;;		___awtoft
  2406 ;;		___ftadd
  2407 ;;		___ftdiv
  2408 ;;		___ftmul
  2409 ;;		___fttol
  2410 ;;		_pow
  2411 ;; This function is called by:
  2412 ;;		_carroAvanzar
  2413 ;;		_carroAvanzarEspecial
  2414 ;;		_carroGirarEspecial
  2415 ;;		_carroGirar
  2416 ;;		_carroAtras
  2417 ;;		_carroMatar
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text10
  2422  000B0E                     __ptext10:
  2423                           	opt stack 0
  2424  000B0E                     _config_ccp1:
  2425                           	opt stack 24
  2426                           
  2427                           ;Pwm.c: 45: int valreg;
  2428                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;incstack = 0
  2432  000B0E  C05B  F009         	movff	config_ccp1@duty1,___awtoft@c
  2433  000B12  C05C  F00A         	movff	config_ccp1@duty1+1,___awtoft@c+1
  2434  000B16  EC3B  F010         	call	___awtoft	;wreg free
  2435  000B1A  C009  F010         	movff	?___awtoft,___ftmul@f2
  2436  000B1E  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  2437  000B22  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  2438  000B26  0E00               	movlw	0
  2439  000B28  6E2E               	movwf	___ftadd@f2,c
  2440  000B2A  0E80               	movlw	128
  2441  000B2C  6E2F               	movwf	___ftadd@f2+1,c
  2442  000B2E  0E3F               	movlw	63
  2443  000B30  6E30               	movwf	___ftadd@f2+2,c
  2444  000B32  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  2445  000B36  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  2446  000B3A  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  2447  000B3E  ECE6  F007         	call	___ftadd	;wreg free
  2448  000B42  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  2449  000B46  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  2450  000B4A  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  2451  000B4E  EC52  F00B         	call	___ftmul	;wreg free
  2452  000B52  C00D  F095         	movff	?___ftmul,_config_ccp1$1554
  2453  000B56  C00E  F096         	movff	?___ftmul+1,_config_ccp1$1554+1
  2454  000B5A  C00F  F097         	movff	?___ftmul+2,_config_ccp1$1554+2
  2455                           
  2456                           ;Pwm.c: 45: int valreg;
  2457                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2458  000B5E  0E00               	movlw	0
  2459  000B60  6E1F               	movwf	___ftdiv@f2,c
  2460  000B62  0EC8               	movlw	200
  2461  000B64  6E20               	movwf	___ftdiv@f2+1,c
  2462  000B66  0E42               	movlw	66
  2463  000B68  6E21               	movwf	___ftdiv@f2+2,c
  2464  000B6A  0E00               	movlw	0
  2465  000B6C  6E10               	movwf	___ftmul@f2,c
  2466  000B6E  0E80               	movlw	128
  2467  000B70  6E11               	movwf	___ftmul@f2+1,c
  2468  000B72  0E40               	movlw	64
  2469  000B74  6E12               	movwf	___ftmul@f2+2,c
  2470  000B76  C095  F00D         	movff	_config_ccp1$1554,___ftmul@f1
  2471  000B7A  C096  F00E         	movff	_config_ccp1$1554+1,___ftmul@f1+1
  2472  000B7E  C097  F00F         	movff	_config_ccp1$1554+2,___ftmul@f1+2
  2473  000B82  EC52  F00B         	call	___ftmul	;wreg free
  2474  000B86  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2475  000B8A  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2476  000B8E  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2477  000B92  ECCC  F00B         	call	___ftdiv	;wreg free
  2478  000B96  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2479  000B9A  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2480  000B9E  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2481  000BA2  ECD8  F00A         	call	___fttol	;wreg free
  2482  000BA6  C037  F098         	movff	?___fttol,config_ccp1@valreg
  2483  000BAA  C038  F099         	movff	?___fttol+1,config_ccp1@valreg+1
  2484                           
  2485                           ;Pwm.c: 50: int n,x,i,j,z;
  2486                           ;Pwm.c: 51: unsigned int w,y;
  2487                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2488  000BAE  EE20  F0CC         	lfsr	2,config_ccp1@F3967
  2489  000BB2  EE10  F077         	lfsr	1,config_ccp1@a
  2490  000BB6  0E1D               	movlw	29
  2491  000BB8                     u2781:
  2492  000BB8  CFDB FFE3          	movff	plusw2,plusw1
  2493  000BBC  06E8               	decf	wreg,f,c
  2494  000BBE  E2FC               	bc	u2781
  2495                           
  2496                           ;Pwm.c: 54: n = valreg;
  2497  000BC0  C098  F0AA         	movff	config_ccp1@valreg,config_ccp1@n
  2498  000BC4  C099  F0AB         	movff	config_ccp1@valreg+1,config_ccp1@n+1
  2499                           
  2500                           ;Pwm.c: 55: i = 0;
  2501  000BC8  0E00               	movlw	0
  2502  000BCA  0100               	movlb	0	; () banked
  2503  000BCC  6F9B               	movwf	(config_ccp1@i+1)& (0+255),b
  2504  000BCE  0E00               	movlw	0
  2505  000BD0  6F9A               	movwf	config_ccp1@i& (0+255),b
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;Pwm.c: 56: z = 0;
  2509  000BD2  0E00               	movlw	0
  2510  000BD4  6F9D               	movwf	(config_ccp1@z+1)& (0+255),b
  2511  000BD6  0E00               	movlw	0
  2512  000BD8  6F9C               	movwf	config_ccp1@z& (0+255),b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;Pwm.c: 57: y = 0;
  2516  000BDA  0E00               	movlw	0
  2517  000BDC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2518  000BDE  0E00               	movlw	0
  2519  000BE0  6FA8               	movwf	config_ccp1@y& (0+255),b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;Pwm.c: 58: w = 0;
  2523  000BE2  0E00               	movlw	0
  2524  000BE4  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2525  000BE6  0E00               	movlw	0
  2526  000BE8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2527                           
  2528                           ;Pwm.c: 60: while(n > 0)
  2529  000BEA  D024               	goto	l195
  2530  000BEC                     l2555:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;Pwm.c: 61: {
  2534                           ;Pwm.c: 62: a[i] = n % 2;
  2535  000BEC  0E01               	movlw	1
  2536  000BEE  15AA               	andwf	config_ccp1@n& (0+255),w,b
  2537  000BF0  6E5D               	movwf	??_config_ccp1& (0+255),c
  2538  000BF2  0E00               	movlw	0
  2539  000BF4  15AB               	andwf	(config_ccp1@n+1)& (0+255),w,b
  2540  000BF6  6E5E               	movwf	(??_config_ccp1+1)& (0+255),c
  2541  000BF8  90D8               	bcf	status,0,c
  2542  000BFA  359A               	rlcf	config_ccp1@i& (0+255),w,b
  2543  000BFC  6ED9               	movwf	fsr2l,c
  2544  000BFE  359B               	rlcf	(config_ccp1@i+1)& (0+255),w,b
  2545  000C00  6EDA               	movwf	fsr2h,c
  2546  000C02  0E77               	movlw	low config_ccp1@a
  2547  000C04  26D9               	addwf	fsr2l,f,c
  2548  000C06  0E00               	movlw	high config_ccp1@a
  2549  000C08  22DA               	addwfc	fsr2h,f,c
  2550  000C0A  C05D  FFDE         	movff	??_config_ccp1,postinc2
  2551  000C0E  C05E  FFDD         	movff	??_config_ccp1+1,postdec2
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;Pwm.c: 63: n = n / 2;
  2555  000C12  C0AA  F001         	movff	config_ccp1@n,___awdiv@dividend
  2556  000C16  C0AB  F002         	movff	config_ccp1@n+1,___awdiv@dividend+1
  2557  000C1A  0E00               	movlw	0
  2558  000C1C  6E04               	movwf	___awdiv@divisor+1,c
  2559  000C1E  0E02               	movlw	2
  2560  000C20  6E03               	movwf	___awdiv@divisor,c
  2561  000C22  ECBD  F00E         	call	___awdiv	;wreg free
  2562  000C26  C001  F0AA         	movff	?___awdiv,config_ccp1@n
  2563  000C2A  C002  F0AB         	movff	?___awdiv+1,config_ccp1@n+1
  2564                           
  2565                           ;Pwm.c: 64: i++;
  2566  000C2E  0100               	movlb	0	; () banked
  2567  000C30  4B9A               	infsnz	config_ccp1@i& (0+255),f,b
  2568  000C32  2B9B               	incf	(config_ccp1@i+1)& (0+255),f,b
  2569  000C34                     l195:
  2570                           
  2571                           ; BSR set to: 0
  2572                           
  2573                           ; BSR set to: 0
  2574  000C34  BFAB               	btfsc	(config_ccp1@n+1)& (0+255),7,b
  2575  000C36  D005               	goto	u2790
  2576  000C38  51AB               	movf	(config_ccp1@n+1)& (0+255),w,b
  2577  000C3A  E1D8               	bnz	l2555
  2578  000C3C  05AA               	decf	config_ccp1@n& (0+255),w,b
  2579  000C3E  B0D8               	btfsc	status,0,c
  2580  000C40  D7D5               	goto	l196
  2581  000C42                     u2790:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;Pwm.c: 65: }
  2585                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  2586                           
  2587                           ; BSR set to: 0
  2588  000C42  0E00               	movlw	0
  2589  000C44  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2590  000C46  0E00               	movlw	0
  2591  000C48  6FAC               	movwf	config_ccp1@j& (0+255),b
  2592  000C4A                     l2565:
  2593                           
  2594                           ; BSR set to: 0
  2595  000C4A  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2596  000C4C  D006               	goto	l198
  2597  000C4E  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2598  000C50  E159               	bnz	l2581
  2599  000C52  0E02               	movlw	2
  2600  000C54  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2601  000C56  B0D8               	btfsc	status,0,c
  2602  000C58  D055               	goto	u2810
  2603  000C5A                     l198:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;Pwm.c: 68: {
  2607                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2608                           
  2609                           ; BSR set to: 0
  2610  000C5A  C0AC  F009         	movff	config_ccp1@j,___awtoft@c
  2611  000C5E  C0AD  F00A         	movff	config_ccp1@j+1,___awtoft@c+1
  2612  000C62  EC3B  F010         	call	___awtoft	;wreg free
  2613  000C66  C009  F09E         	movff	?___awtoft,_config_ccp1$1555
  2614  000C6A  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1555+1
  2615  000C6E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1555+2
  2616                           
  2617                           ;Pwm.c: 68: {
  2618                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2619  000C72  C09E  F069         	movff	_config_ccp1$1555,pow@y
  2620  000C76  C09F  F06A         	movff	_config_ccp1$1555+1,pow@y+1
  2621  000C7A  C0A0  F06B         	movff	_config_ccp1$1555+2,pow@y+2
  2622  000C7E  0E00               	movlw	0
  2623  000C80  0100               	movlb	0	; () banked
  2624  000C82  6F66               	movwf	pow@x& (0+255),b
  2625  000C84  0E00               	movlw	0
  2626  000C86  6F67               	movwf	(pow@x+1)& (0+255),b
  2627  000C88  0E40               	movlw	64
  2628  000C8A  6F68               	movwf	(pow@x+2)& (0+255),b
  2629  000C8C  EC8B  F009         	call	_pow	;wreg free
  2630  000C90  C066  F0A1         	movff	?_pow,_config_ccp1$1556
  2631  000C94  C067  F0A2         	movff	?_pow+1,_config_ccp1$1556+1
  2632  000C98  C068  F0A3         	movff	?_pow+2,_config_ccp1$1556+2
  2633                           
  2634                           ;Pwm.c: 68: {
  2635                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2636  000C9C  C0A1  F010         	movff	_config_ccp1$1556,___ftmul@f2
  2637  000CA0  C0A2  F011         	movff	_config_ccp1$1556+1,___ftmul@f2+1
  2638  000CA4  C0A3  F012         	movff	_config_ccp1$1556+2,___ftmul@f2+2
  2639  000CA8  90D8               	bcf	status,0,c
  2640  000CAA  0100               	movlb	0	; () banked
  2641  000CAC  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2642  000CAE  6ED9               	movwf	fsr2l,c
  2643  000CB0  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2644  000CB2  6EDA               	movwf	fsr2h,c
  2645  000CB4  0E77               	movlw	low config_ccp1@a
  2646  000CB6  26D9               	addwf	fsr2l,f,c
  2647  000CB8  0E00               	movlw	high config_ccp1@a
  2648  000CBA  22DA               	addwfc	fsr2h,f,c
  2649  000CBC  CFDE F009          	movff	postinc2,___awtoft@c
  2650  000CC0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2651  000CC4  EC3B  F010         	call	___awtoft	;wreg free
  2652  000CC8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2653  000CCC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2654  000CD0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2655  000CD4  EC52  F00B         	call	___ftmul	;wreg free
  2656  000CD8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2657  000CDC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2658  000CE0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2659  000CE4  ECD8  F00A         	call	___fttol	;wreg free
  2660  000CE8  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2661  000CEC  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2662                           
  2663                           ;Pwm.c: 70: y = x + y;
  2664  000CF0  0100               	movlb	0	; () banked
  2665  000CF2  51A8               	movf	config_ccp1@y& (0+255),w,b
  2666  000CF4  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2667  000CF6  6FA8               	movwf	config_ccp1@y& (0+255),b
  2668  000CF8  51A9               	movf	(config_ccp1@y+1)& (0+255),w,b
  2669  000CFA  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2670  000CFC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673  000CFE  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2674  000D00  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2675  000D02  D7A3               	goto	l2565
  2676  000D04                     u2810:
  2677  000D04                     l2581:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;Pwm.c: 71: }
  2681                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  2682  000D04  0E00               	movlw	0
  2683  000D06  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2684  000D08  0E02               	movlw	2
  2685  000D0A  6FAC               	movwf	config_ccp1@j& (0+255),b
  2686  000D0C                     l2583:
  2687                           
  2688                           ; BSR set to: 0
  2689  000D0C  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2690  000D0E  D006               	goto	l200
  2691  000D10  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2692  000D12  E15B               	bnz	l2601
  2693  000D14  0E0A               	movlw	10
  2694  000D16  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2695  000D18  B0D8               	btfsc	status,0,c
  2696  000D1A  D057               	goto	u2830
  2697  000D1C                     l200:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;Pwm.c: 73: {
  2701                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2702                           
  2703                           ; BSR set to: 0
  2704  000D1C  C09C  F009         	movff	config_ccp1@z,___awtoft@c
  2705  000D20  C09D  F00A         	movff	config_ccp1@z+1,___awtoft@c+1
  2706  000D24  EC3B  F010         	call	___awtoft	;wreg free
  2707  000D28  C009  F09E         	movff	?___awtoft,_config_ccp1$1555
  2708  000D2C  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1555+1
  2709  000D30  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1555+2
  2710                           
  2711                           ;Pwm.c: 73: {
  2712                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2713  000D34  C09E  F069         	movff	_config_ccp1$1555,pow@y
  2714  000D38  C09F  F06A         	movff	_config_ccp1$1555+1,pow@y+1
  2715  000D3C  C0A0  F06B         	movff	_config_ccp1$1555+2,pow@y+2
  2716  000D40  0E00               	movlw	0
  2717  000D42  0100               	movlb	0	; () banked
  2718  000D44  6F66               	movwf	pow@x& (0+255),b
  2719  000D46  0E00               	movlw	0
  2720  000D48  6F67               	movwf	(pow@x+1)& (0+255),b
  2721  000D4A  0E40               	movlw	64
  2722  000D4C  6F68               	movwf	(pow@x+2)& (0+255),b
  2723  000D4E  EC8B  F009         	call	_pow	;wreg free
  2724  000D52  C066  F0A1         	movff	?_pow,_config_ccp1$1556
  2725  000D56  C067  F0A2         	movff	?_pow+1,_config_ccp1$1556+1
  2726  000D5A  C068  F0A3         	movff	?_pow+2,_config_ccp1$1556+2
  2727                           
  2728                           ;Pwm.c: 73: {
  2729                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2730  000D5E  C0A1  F010         	movff	_config_ccp1$1556,___ftmul@f2
  2731  000D62  C0A2  F011         	movff	_config_ccp1$1556+1,___ftmul@f2+1
  2732  000D66  C0A3  F012         	movff	_config_ccp1$1556+2,___ftmul@f2+2
  2733  000D6A  90D8               	bcf	status,0,c
  2734  000D6C  0100               	movlb	0	; () banked
  2735  000D6E  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2736  000D70  6ED9               	movwf	fsr2l,c
  2737  000D72  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2738  000D74  6EDA               	movwf	fsr2h,c
  2739  000D76  0E77               	movlw	low config_ccp1@a
  2740  000D78  26D9               	addwf	fsr2l,f,c
  2741  000D7A  0E00               	movlw	high config_ccp1@a
  2742  000D7C  22DA               	addwfc	fsr2h,f,c
  2743  000D7E  CFDE F009          	movff	postinc2,___awtoft@c
  2744  000D82  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2745  000D86  EC3B  F010         	call	___awtoft	;wreg free
  2746  000D8A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2747  000D8E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2748  000D92  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2749  000D96  EC52  F00B         	call	___ftmul	;wreg free
  2750  000D9A  C00D  F037         	movff	?___ftmul,___fttol@f1
  2751  000D9E  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2752  000DA2  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2753  000DA6  ECD8  F00A         	call	___fttol	;wreg free
  2754  000DAA  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2755  000DAE  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2756                           
  2757                           ;Pwm.c: 75: w = x + w;
  2758  000DB2  0100               	movlb	0	; () banked
  2759  000DB4  51A6               	movf	config_ccp1@w& (0+255),w,b
  2760  000DB6  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2761  000DB8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2762  000DBA  51A7               	movf	(config_ccp1@w+1)& (0+255),w,b
  2763  000DBC  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2764  000DBE  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;Pwm.c: 76: z++;
  2768  000DC0  4B9C               	infsnz	config_ccp1@z& (0+255),f,b
  2769  000DC2  2B9D               	incf	(config_ccp1@z+1)& (0+255),f,b
  2770                           
  2771                           ; BSR set to: 0
  2772  000DC4  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2773  000DC6  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2774  000DC8  D7A1               	goto	l2583
  2775  000DCA                     u2830:
  2776  000DCA                     l2601:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;Pwm.c: 77: }
  2780                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  2781  000DCA  C0A8  F05D         	movff	config_ccp1@y,??_config_ccp1
  2782  000DCE  3A5D               	swapf	??_config_ccp1,f,c
  2783  000DD0  50BD               	movf	4029,w,c	;volatile
  2784  000DD2  185D               	xorwf	??_config_ccp1,w,c
  2785  000DD4  0BCF               	andlw	-49
  2786  000DD6  185D               	xorwf	??_config_ccp1,w,c
  2787  000DD8  6EBD               	movwf	4029,c	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;Pwm.c: 80: CCPR1L = w;
  2791  000DDA  C0A6  FFBE         	movff	config_ccp1@w,4030	;volatile
  2792                           
  2793                           ; BSR set to: 0
  2794  000DDE  0012               	return		;funcret
  2795  000DE0                     __end_of_config_ccp1:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           intcon	equ	0xFF2
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           plusw1	equ	0xFE3
  2802                           postinc2	equ	0xFDE
  2803                           postdec2	equ	0xFDD
  2804                           plusw2	equ	0xFDB
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _pow *****************
  2810 ;; Defined at:
  2811 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  x               3    6[BANK0 ] void 
  2814 ;;  y               3    9[BANK0 ] void 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  yi              4   19[BANK0 ] unsigned long 
  2817 ;;  sign            1   18[BANK0 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  3    6[BANK0 ] unsigned char 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2827 ;;      Params:         0       6       0       0       0       0       0       0       0
  2828 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2830 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2831 ;;Total ram usage:       17 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    4
  2834 ;; This function calls:
  2835 ;;		___ftge
  2836 ;;		___ftmul
  2837 ;;		___ftneg
  2838 ;;		___fttol
  2839 ;;		___lltoft
  2840 ;;		_exp
  2841 ;;		_log
  2842 ;; This function is called by:
  2843 ;;		_config_ccp1
  2844 ;;		_config_ccp2
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text11
  2849  001316                     __ptext11:
  2850                           	opt stack 0
  2851  001316                     _pow:
  2852                           	opt stack 24
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;incstack = 0
  2856  001316  0E00               	movlw	0
  2857  001318  0100               	movlb	0	; () banked
  2858  00131A  6F72               	movwf	pow@sign& (0+255),b
  2859                           
  2860                           ; BSR set to: 0
  2861  00131C  5166               	movf	pow@x& (0+255),w,b
  2862  00131E  1167               	iorwf	(pow@x+1)& (0+255),w,b
  2863  001320  1168               	iorwf	(pow@x+2)& (0+255),w,b
  2864  001322  A4D8               	btfss	status,2,c
  2865  001324  D01D               	goto	l648
  2866                           
  2867                           ; BSR set to: 0
  2868  001326  0E00               	movlw	0
  2869  001328  6E01               	movwf	___ftge@ff1,c
  2870  00132A  0E00               	movlw	0
  2871  00132C  6E02               	movwf	___ftge@ff1+1,c
  2872  00132E  0E00               	movlw	0
  2873  001330  6E03               	movwf	___ftge@ff1+2,c
  2874  001332  C069  F004         	movff	pow@y,___ftge@ff2
  2875  001336  C06A  F005         	movff	pow@y+1,___ftge@ff2+1
  2876  00133A  C06B  F006         	movff	pow@y+2,___ftge@ff2+2
  2877  00133E  EC75  F00E         	call	___ftge	;wreg free
  2878  001342  A0D8               	btfss	status,0,c
  2879  001344  D005               	goto	l649
  2880  001346  0E00               	movlw	0
  2881  001348  0100               	movlb	0	; () banked
  2882  00134A  6FEE               	movwf	(_errno+1)& (0+255),b
  2883  00134C  0E21               	movlw	33
  2884  00134E  6FED               	movwf	_errno& (0+255),b
  2885  001350                     l649:
  2886  001350  0E00               	movlw	0
  2887  001352  0100               	movlb	0	; () banked
  2888  001354  6F66               	movwf	?_pow& (0+255),b
  2889  001356  0E00               	movlw	0
  2890  001358  6F67               	movwf	(?_pow+1)& (0+255),b
  2891  00135A  0E00               	movlw	0
  2892  00135C  6F68               	movwf	(?_pow+2)& (0+255),b
  2893                           
  2894                           ; BSR set to: 0
  2895  00135E  0012               	return	
  2896  001360                     l648:
  2897                           
  2898                           ; BSR set to: 0
  2899                           
  2900                           ; BSR set to: 0
  2901  001360  5169               	movf	pow@y& (0+255),w,b
  2902  001362  116A               	iorwf	(pow@y+1)& (0+255),w,b
  2903  001364  116B               	iorwf	(pow@y+2)& (0+255),w,b
  2904  001366  A4D8               	btfss	status,2,c
  2905  001368  D007               	goto	l651
  2906                           
  2907                           ; BSR set to: 0
  2908  00136A  0E00               	movlw	0
  2909  00136C  6F66               	movwf	?_pow& (0+255),b
  2910  00136E  0E80               	movlw	128
  2911  001370  6F67               	movwf	(?_pow+1)& (0+255),b
  2912  001372  0E3F               	movlw	63
  2913  001374  6F68               	movwf	(?_pow+2)& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916  001376  0012               	return	
  2917  001378                     l651:
  2918                           
  2919                           ; BSR set to: 0
  2920                           
  2921                           ; BSR set to: 0
  2922  001378  AF68               	btfss	(pow@x+2)& (0+255),7,b
  2923  00137A  D041               	goto	l652
  2924                           
  2925                           ; BSR set to: 0
  2926  00137C  C069  F037         	movff	pow@y,___fttol@f1
  2927  001380  C06A  F038         	movff	pow@y+1,___fttol@f1+1
  2928  001384  C06B  F039         	movff	pow@y+2,___fttol@f1+2
  2929  001388  ECD8  F00A         	call	___fttol	;wreg free
  2930  00138C  C037  F073         	movff	?___fttol,pow@yi
  2931  001390  C038  F074         	movff	?___fttol+1,pow@yi+1
  2932  001394  C039  F075         	movff	?___fttol+2,pow@yi+2
  2933  001398  C03A  F076         	movff	?___fttol+3,pow@yi+3
  2934  00139C  C073  F009         	movff	pow@yi,___lltoft@c
  2935  0013A0  C074  F00A         	movff	pow@yi+1,___lltoft@c+1
  2936  0013A4  C075  F00B         	movff	pow@yi+2,___lltoft@c+2
  2937  0013A8  C076  F00C         	movff	pow@yi+3,___lltoft@c+3
  2938  0013AC  ECA3  F00F         	call	___lltoft	;wreg free
  2939  0013B0  0100               	movlb	0	; () banked
  2940  0013B2  5169               	movf	pow@y& (0+255),w,b
  2941  0013B4  1809               	xorwf	?___lltoft,w,c
  2942  0013B6  E107               	bnz	u2700
  2943  0013B8  516A               	movf	(pow@y+1)& (0+255),w,b
  2944  0013BA  180A               	xorwf	?___lltoft+1,w,c
  2945  0013BC  E104               	bnz	u2700
  2946  0013BE  516B               	movf	(pow@y+2)& (0+255),w,b
  2947  0013C0  180B               	xorwf	?___lltoft+2,w,c
  2948  0013C2  B4D8               	btfsc	status,2,c
  2949  0013C4  D00B               	goto	l653
  2950  0013C6                     u2700:
  2951                           
  2952                           ; BSR set to: 0
  2953  0013C6  0E00               	movlw	0
  2954  0013C8  6FEE               	movwf	(_errno+1)& (0+255),b
  2955  0013CA  0E21               	movlw	33
  2956  0013CC  6FED               	movwf	_errno& (0+255),b
  2957  0013CE  0E00               	movlw	0
  2958  0013D0  6F66               	movwf	?_pow& (0+255),b
  2959  0013D2  0E00               	movlw	0
  2960  0013D4  6F67               	movwf	(?_pow+1)& (0+255),b
  2961  0013D6  0E00               	movlw	0
  2962  0013D8  6F68               	movwf	(?_pow+2)& (0+255),b
  2963                           
  2964                           ; BSR set to: 0
  2965  0013DA  0012               	return	
  2966  0013DC                     l653:
  2967                           
  2968                           ; BSR set to: 0
  2969                           
  2970                           ; BSR set to: 0
  2971  0013DC  5173               	movf	pow@yi& (0+255),w,b
  2972  0013DE  0B01               	andlw	1
  2973  0013E0  6F72               	movwf	pow@sign& (0+255),b
  2974                           
  2975                           ; BSR set to: 0
  2976  0013E2  C066  F001         	movff	pow@x,___ftneg@f1
  2977  0013E6  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2978  0013EA  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2979  0013EE  EC7C  F010         	call	___ftneg	;wreg free
  2980  0013F2  C001  F066         	movff	?___ftneg,pow@x
  2981  0013F6  C002  F067         	movff	?___ftneg+1,pow@x+1
  2982  0013FA  C003  F068         	movff	?___ftneg+2,pow@x+2
  2983  0013FE                     l652:
  2984  0013FE  C066  F043         	movff	pow@x,log@x
  2985  001402  C067  F044         	movff	pow@x+1,log@x+1
  2986  001406  C068  F045         	movff	pow@x+2,log@x+2
  2987  00140A  EC49  F00A         	call	_log	;wreg free
  2988  00140E  C043  F06C         	movff	?_log,_pow$1560
  2989  001412  C044  F06D         	movff	?_log+1,_pow$1560+1
  2990  001416  C045  F06E         	movff	?_log+2,_pow$1560+2
  2991  00141A  C06C  F00D         	movff	_pow$1560,___ftmul@f1
  2992  00141E  C06D  F00E         	movff	_pow$1560+1,___ftmul@f1+1
  2993  001422  C06E  F00F         	movff	_pow$1560+2,___ftmul@f1+2
  2994  001426  C069  F010         	movff	pow@y,___ftmul@f2
  2995  00142A  C06A  F011         	movff	pow@y+1,___ftmul@f2+1
  2996  00142E  C06B  F012         	movff	pow@y+2,___ftmul@f2+2
  2997  001432  EC52  F00B         	call	___ftmul	;wreg free
  2998  001436  C00D  F06F         	movff	?___ftmul,_pow$1561
  2999  00143A  C00E  F070         	movff	?___ftmul+1,_pow$1561+1
  3000  00143E  C00F  F071         	movff	?___ftmul+2,_pow$1561+2
  3001  001442  C06F  F058         	movff	_pow$1561,exp@x
  3002  001446  C070  F059         	movff	_pow$1561+1,exp@x+1
  3003  00144A  C071  F05A         	movff	_pow$1561+2,exp@x+2
  3004  00144E  ECF0  F006         	call	_exp	;wreg free
  3005  001452  C058  F066         	movff	?_exp,pow@x
  3006  001456  C059  F067         	movff	?_exp+1,pow@x+1
  3007  00145A  C05A  F068         	movff	?_exp+2,pow@x+2
  3008  00145E  0100               	movlb	0	; () banked
  3009  001460  5172               	movf	pow@sign& (0+255),w,b
  3010  001462  B4D8               	btfsc	status,2,c
  3011  001464  D00F               	goto	l654
  3012                           
  3013                           ; BSR set to: 0
  3014  001466  C066  F001         	movff	pow@x,___ftneg@f1
  3015  00146A  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  3016  00146E  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  3017  001472  EC7C  F010         	call	___ftneg	;wreg free
  3018  001476  C001  F066         	movff	?___ftneg,?_pow
  3019  00147A  C002  F067         	movff	?___ftneg+1,?_pow+1
  3020  00147E  C003  F068         	movff	?___ftneg+2,?_pow+2
  3021  001482  0012               	return	
  3022  001484                     l654:
  3023                           
  3024                           ; BSR set to: 0
  3025  001484  C066  F066         	movff	pow@x,?_pow
  3026  001488  C067  F067         	movff	pow@x+1,?_pow+1
  3027  00148C  C068  F068         	movff	pow@x+2,?_pow+2
  3028  001490  0012               	return		;funcret
  3029  001492                     __end_of_pow:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           intcon	equ	0xFF2
  3033                           postinc0	equ	0xFEE
  3034                           wreg	equ	0xFE8
  3035                           plusw1	equ	0xFE3
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           plusw2	equ	0xFDB
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function _log *****************
  3044 ;; Defined at:
  3045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  x               3   66[COMRAM] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  exponent        2   69[COMRAM] int 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  3   66[COMRAM] int 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3059 ;;      Params:         3       0       0       0       0       0       0       0       0
  3060 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3062 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3063 ;;Total ram usage:        5 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    3
  3066 ;; This function calls:
  3067 ;;		___awtoft
  3068 ;;		___ftadd
  3069 ;;		___ftmul
  3070 ;;		_eval_poly
  3071 ;;		_frexp
  3072 ;; This function is called by:
  3073 ;;		_pow
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text12
  3078  001492                     __ptext12:
  3079                           	opt stack 0
  3080  001492                     _log:
  3081                           	opt stack 24
  3082                           
  3083                           ;incstack = 0
  3084  001492  AE45               	btfss	log@x+2,7,c
  3085  001494  D00C               	goto	l850
  3086  001496  0E00               	movlw	0
  3087  001498  0100               	movlb	0	; () banked
  3088  00149A  6FEE               	movwf	(_errno+1)& (0+255),b
  3089  00149C  0E21               	movlw	33
  3090  00149E  6FED               	movwf	_errno& (0+255),b
  3091  0014A0  0E00               	movlw	0
  3092  0014A2  6E43               	movwf	?_log,c
  3093  0014A4  0E00               	movlw	0
  3094  0014A6  6E44               	movwf	?_log+1,c
  3095  0014A8  0E00               	movlw	0
  3096  0014AA  6E45               	movwf	?_log+2,c
  3097                           
  3098                           ; BSR set to: 0
  3099  0014AC  0012               	return	
  3100  0014AE                     l850:
  3101                           
  3102                           ; BSR set to: 0
  3103  0014AE  5043               	movf	log@x,w,c
  3104  0014B0  1044               	iorwf	log@x+1,w,c
  3105  0014B2  1045               	iorwf	log@x+2,w,c
  3106  0014B4  A4D8               	btfss	status,2,c
  3107  0014B6  D00C               	goto	l852
  3108  0014B8  0E00               	movlw	0
  3109  0014BA  0100               	movlb	0	; () banked
  3110  0014BC  6FEE               	movwf	(_errno+1)& (0+255),b
  3111  0014BE  0E22               	movlw	34
  3112  0014C0  6FED               	movwf	_errno& (0+255),b
  3113  0014C2  0E00               	movlw	0
  3114  0014C4  6E43               	movwf	?_log,c
  3115  0014C6  0E00               	movlw	0
  3116  0014C8  6E44               	movwf	?_log+1,c
  3117  0014CA  0E00               	movlw	0
  3118  0014CC  6E45               	movwf	?_log+2,c
  3119                           
  3120                           ; BSR set to: 0
  3121  0014CE  0012               	return	
  3122  0014D0                     l852:
  3123                           
  3124                           ; BSR set to: 0
  3125  0014D0  0E00               	movlw	0
  3126  0014D2  6E10               	movwf	___ftmul@f2,c
  3127  0014D4  0E00               	movlw	0
  3128  0014D6  6E11               	movwf	___ftmul@f2+1,c
  3129  0014D8  0E40               	movlw	64
  3130  0014DA  6E12               	movwf	___ftmul@f2+2,c
  3131  0014DC  0E46               	movlw	low log@exponent
  3132  0014DE  6E04               	movwf	frexp@eptr,c
  3133  0014E0  0E00               	movlw	high log@exponent
  3134  0014E2  6E05               	movwf	frexp@eptr+1,c
  3135  0014E4  C043  F001         	movff	log@x,frexp@value
  3136  0014E8  C044  F002         	movff	log@x+1,frexp@value+1
  3137  0014EC  C045  F003         	movff	log@x+2,frexp@value+2
  3138  0014F0  EC2D  F00E         	call	_frexp	;wreg free
  3139  0014F4  C001  F00D         	movff	?_frexp,___ftmul@f1
  3140  0014F8  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  3141  0014FC  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  3142  001500  EC52  F00B         	call	___ftmul	;wreg free
  3143  001504  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3144  001508  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3145  00150C  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3146  001510  0E00               	movlw	0
  3147  001512  6E2E               	movwf	___ftadd@f2,c
  3148  001514  0E80               	movlw	128
  3149  001516  6E2F               	movwf	___ftadd@f2+1,c
  3150  001518  0EBF               	movlw	191
  3151  00151A  6E30               	movwf	___ftadd@f2+2,c
  3152  00151C  ECE6  F007         	call	___ftadd	;wreg free
  3153  001520  C02B  F043         	movff	?___ftadd,log@x
  3154  001524  C02C  F044         	movff	?___ftadd+1,log@x+1
  3155  001528  C02D  F045         	movff	?___ftadd+2,log@x+2
  3156  00152C  0646               	decf	log@exponent,f,c
  3157  00152E  A0D8               	btfss	status,0,c
  3158  001530  0647               	decf	log@exponent+1,f,c
  3159  001532  C043  F037         	movff	log@x,eval_poly@x
  3160  001536  C044  F038         	movff	log@x+1,eval_poly@x+1
  3161  00153A  C045  F039         	movff	log@x+2,eval_poly@x+2
  3162  00153E  0E1F               	movlw	low log@coeff
  3163  001540  6E3A               	movwf	eval_poly@d,c
  3164  001542  0E08               	movlw	high log@coeff
  3165  001544  6E3B               	movwf	eval_poly@d+1,c
  3166  001546  0E00               	movlw	0
  3167  001548  6E3D               	movwf	eval_poly@n+1,c
  3168  00154A  0E08               	movlw	8
  3169  00154C  6E3C               	movwf	eval_poly@n,c
  3170  00154E  ECAE  F00C         	call	_eval_poly	;wreg free
  3171  001552  C037  F043         	movff	?_eval_poly,log@x
  3172  001556  C038  F044         	movff	?_eval_poly+1,log@x+1
  3173  00155A  C039  F045         	movff	?_eval_poly+2,log@x+2
  3174  00155E  0E72               	movlw	114
  3175  001560  6E10               	movwf	___ftmul@f2,c
  3176  001562  0E31               	movlw	49
  3177  001564  6E11               	movwf	___ftmul@f2+1,c
  3178  001566  0E3F               	movlw	63
  3179  001568  6E12               	movwf	___ftmul@f2+2,c
  3180  00156A  C046  F009         	movff	log@exponent,___awtoft@c
  3181  00156E  C047  F00A         	movff	log@exponent+1,___awtoft@c+1
  3182  001572  EC3B  F010         	call	___awtoft	;wreg free
  3183  001576  C009  F00D         	movff	?___awtoft,___ftmul@f1
  3184  00157A  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  3185  00157E  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  3186  001582  EC52  F00B         	call	___ftmul	;wreg free
  3187  001586  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3188  00158A  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3189  00158E  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3190  001592  C043  F02E         	movff	log@x,___ftadd@f2
  3191  001596  C044  F02F         	movff	log@x+1,___ftadd@f2+1
  3192  00159A  C045  F030         	movff	log@x+2,___ftadd@f2+2
  3193  00159E  ECE6  F007         	call	___ftadd	;wreg free
  3194  0015A2  C02B  F043         	movff	?___ftadd,?_log
  3195  0015A6  C02C  F044         	movff	?___ftadd+1,?_log+1
  3196  0015AA  C02D  F045         	movff	?___ftadd+2,?_log+2
  3197  0015AE  0012               	return	
  3198  0015B0                     __end_of_log:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           intcon	equ	0xFF2
  3202                           postinc0	equ	0xFEE
  3203                           wreg	equ	0xFE8
  3204                           plusw1	equ	0xFE3
  3205                           postinc2	equ	0xFDE
  3206                           postdec2	equ	0xFDD
  3207                           plusw2	equ	0xFDB
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _exp *****************
  3213 ;; Defined at:
  3214 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  x               3   87[COMRAM] int 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  exponent        2    3[BANK0 ] int 
  3219 ;;  sign            1    5[BANK0 ] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  3   87[COMRAM] unsigned char 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         3       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3232 ;;      Totals:         3       6       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        9 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    3
  3236 ;; This function calls:
  3237 ;;		___awtoft
  3238 ;;		___ftdiv
  3239 ;;		___ftge
  3240 ;;		___ftmul
  3241 ;;		___ftneg
  3242 ;;		___ftsub
  3243 ;;		___fttol
  3244 ;;		_eval_poly
  3245 ;;		_floor
  3246 ;;		_ldexp
  3247 ;; This function is called by:
  3248 ;;		_pow
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text13
  3253  000DE0                     __ptext13:
  3254                           	opt stack 0
  3255  000DE0                     _exp:
  3256                           	opt stack 24
  3257                           
  3258                           ;incstack = 0
  3259  000DE0  5058               	movf	exp@x,w,c
  3260  000DE2  1059               	iorwf	exp@x+1,w,c
  3261  000DE4  105A               	iorwf	exp@x+2,w,c
  3262  000DE6  A4D8               	btfss	status,2,c
  3263  000DE8  D007               	goto	l808
  3264  000DEA  0E00               	movlw	0
  3265  000DEC  6E58               	movwf	?_exp,c
  3266  000DEE  0E80               	movlw	128
  3267  000DF0  6E59               	movwf	?_exp+1,c
  3268  000DF2  0E3F               	movlw	63
  3269  000DF4  6E5A               	movwf	?_exp+2,c
  3270  000DF6  0012               	return	
  3271  000DF8                     l808:
  3272  000DF8  0E72               	movlw	114
  3273  000DFA  6E01               	movwf	___ftge@ff1,c
  3274  000DFC  0E31               	movlw	49
  3275  000DFE  6E02               	movwf	___ftge@ff1+1,c
  3276  000E00  0E44               	movlw	68
  3277  000E02  6E03               	movwf	___ftge@ff1+2,c
  3278  000E04  C058  F004         	movff	exp@x,___ftge@ff2
  3279  000E08  C059  F005         	movff	exp@x+1,___ftge@ff2+1
  3280  000E0C  C05A  F006         	movff	exp@x+2,___ftge@ff2+2
  3281  000E10  EC75  F00E         	call	___ftge	;wreg free
  3282  000E14  B0D8               	btfsc	status,0,c
  3283  000E16  D00C               	goto	l810
  3284  000E18  0E00               	movlw	0
  3285  000E1A  0100               	movlb	0	; () banked
  3286  000E1C  6FEE               	movwf	(_errno+1)& (0+255),b
  3287  000E1E  0E22               	movlw	34
  3288  000E20  6FED               	movwf	_errno& (0+255),b
  3289  000E22  0EFF               	movlw	255
  3290  000E24  6E58               	movwf	?_exp,c
  3291  000E26  0E7F               	movlw	127
  3292  000E28  6E59               	movwf	?_exp+1,c
  3293  000E2A  0E7F               	movlw	127
  3294  000E2C  6E5A               	movwf	?_exp+2,c
  3295                           
  3296                           ; BSR set to: 0
  3297  000E2E  0012               	return	
  3298  000E30                     l810:
  3299                           
  3300                           ; BSR set to: 0
  3301  000E30  C058  F001         	movff	exp@x,___ftge@ff1
  3302  000E34  C059  F002         	movff	exp@x+1,___ftge@ff1+1
  3303  000E38  C05A  F003         	movff	exp@x+2,___ftge@ff1+2
  3304  000E3C  0E49               	movlw	73
  3305  000E3E  6E04               	movwf	___ftge@ff2,c
  3306  000E40  0E3A               	movlw	58
  3307  000E42  6E05               	movwf	___ftge@ff2+1,c
  3308  000E44  0EC4               	movlw	196
  3309  000E46  6E06               	movwf	___ftge@ff2+2,c
  3310  000E48  EC75  F00E         	call	___ftge	;wreg free
  3311  000E4C  B0D8               	btfsc	status,0,c
  3312  000E4E  D00C               	goto	l811
  3313  000E50  0E00               	movlw	0
  3314  000E52  0100               	movlb	0	; () banked
  3315  000E54  6FEE               	movwf	(_errno+1)& (0+255),b
  3316  000E56  0E22               	movlw	34
  3317  000E58  6FED               	movwf	_errno& (0+255),b
  3318  000E5A  0E00               	movlw	0
  3319  000E5C  6E58               	movwf	?_exp,c
  3320  000E5E  0E00               	movlw	0
  3321  000E60  6E59               	movwf	?_exp+1,c
  3322  000E62  0E00               	movlw	0
  3323  000E64  6E5A               	movwf	?_exp+2,c
  3324                           
  3325                           ; BSR set to: 0
  3326  000E66  0012               	return	
  3327  000E68                     l811:
  3328                           
  3329                           ; BSR set to: 0
  3330  000E68  AE5A               	btfss	exp@x+2,7,c
  3331  000E6A  D002               	goto	u2610
  3332  000E6C  0E01               	movlw	1
  3333  000E6E  D001               	goto	u2620
  3334  000E70                     u2610:
  3335  000E70  0E00               	movlw	0
  3336  000E72                     u2620:
  3337  000E72  0100               	movlb	0	; () banked
  3338  000E74  6F65               	movwf	exp@sign& (0+255),b
  3339                           
  3340                           ; BSR set to: 0
  3341  000E76  5165               	movf	exp@sign& (0+255),w,b
  3342  000E78  B4D8               	btfsc	status,2,c
  3343  000E7A  D00E               	goto	l812
  3344                           
  3345                           ; BSR set to: 0
  3346  000E7C  C058  F001         	movff	exp@x,___ftneg@f1
  3347  000E80  C059  F002         	movff	exp@x+1,___ftneg@f1+1
  3348  000E84  C05A  F003         	movff	exp@x+2,___ftneg@f1+2
  3349  000E88  EC7C  F010         	call	___ftneg	;wreg free
  3350  000E8C  C001  F058         	movff	?___ftneg,exp@x
  3351  000E90  C002  F059         	movff	?___ftneg+1,exp@x+1
  3352  000E94  C003  F05A         	movff	?___ftneg+2,exp@x+2
  3353  000E98                     l812:
  3354  000E98  C058  F00D         	movff	exp@x,___ftmul@f1
  3355  000E9C  C059  F00E         	movff	exp@x+1,___ftmul@f1+1
  3356  000EA0  C05A  F00F         	movff	exp@x+2,___ftmul@f1+2
  3357  000EA4  0EAA               	movlw	170
  3358  000EA6  6E10               	movwf	___ftmul@f2,c
  3359  000EA8  0EB8               	movlw	184
  3360  000EAA  6E11               	movwf	___ftmul@f2+1,c
  3361  000EAC  0E3F               	movlw	63
  3362  000EAE  6E12               	movwf	___ftmul@f2+2,c
  3363  000EB0  EC52  F00B         	call	___ftmul	;wreg free
  3364  000EB4  C00D  F058         	movff	?___ftmul,exp@x
  3365  000EB8  C00E  F059         	movff	?___ftmul+1,exp@x+1
  3366  000EBC  C00F  F05A         	movff	?___ftmul+2,exp@x+2
  3367  000EC0  C058  F050         	movff	exp@x,floor@x
  3368  000EC4  C059  F051         	movff	exp@x+1,floor@x+1
  3369  000EC8  C05A  F052         	movff	exp@x+2,floor@x+2
  3370  000ECC  EC3F  F00C         	call	_floor	;wreg free
  3371  000ED0  C050  F060         	movff	?_floor,_exp$1562
  3372  000ED4  C051  F061         	movff	?_floor+1,_exp$1562+1
  3373  000ED8  C052  F062         	movff	?_floor+2,_exp$1562+2
  3374  000EDC  C060  F037         	movff	_exp$1562,___fttol@f1
  3375  000EE0  C061  F038         	movff	_exp$1562+1,___fttol@f1+1
  3376  000EE4  C062  F039         	movff	_exp$1562+2,___fttol@f1+2
  3377  000EE8  ECD8  F00A         	call	___fttol	;wreg free
  3378  000EEC  C037  F063         	movff	?___fttol,exp@exponent
  3379  000EF0  C038  F064         	movff	?___fttol+1,exp@exponent+1
  3380  000EF4  C058  F037         	movff	exp@x,___ftsub@f1
  3381  000EF8  C059  F038         	movff	exp@x+1,___ftsub@f1+1
  3382  000EFC  C05A  F039         	movff	exp@x+2,___ftsub@f1+2
  3383  000F00  C063  F009         	movff	exp@exponent,___awtoft@c
  3384  000F04  C064  F00A         	movff	exp@exponent+1,___awtoft@c+1
  3385  000F08  EC3B  F010         	call	___awtoft	;wreg free
  3386  000F0C  C009  F03A         	movff	?___awtoft,___ftsub@f2
  3387  000F10  C00A  F03B         	movff	?___awtoft+1,___ftsub@f2+1
  3388  000F14  C00B  F03C         	movff	?___awtoft+2,___ftsub@f2+2
  3389  000F18  ECFE  F00F         	call	___ftsub	;wreg free
  3390  000F1C  C037  F058         	movff	?___ftsub,exp@x
  3391  000F20  C038  F059         	movff	?___ftsub+1,exp@x+1
  3392  000F24  C039  F05A         	movff	?___ftsub+2,exp@x+2
  3393  000F28  C058  F037         	movff	exp@x,eval_poly@x
  3394  000F2C  C059  F038         	movff	exp@x+1,eval_poly@x+1
  3395  000F30  C05A  F039         	movff	exp@x+2,eval_poly@x+2
  3396  000F34  0E01               	movlw	low exp@coeff
  3397  000F36  6E3A               	movwf	eval_poly@d,c
  3398  000F38  0E08               	movlw	high exp@coeff
  3399  000F3A  6E3B               	movwf	eval_poly@d+1,c
  3400  000F3C  0E00               	movlw	0
  3401  000F3E  6E3D               	movwf	eval_poly@n+1,c
  3402  000F40  0E09               	movlw	9
  3403  000F42  6E3C               	movwf	eval_poly@n,c
  3404  000F44  ECAE  F00C         	call	_eval_poly	;wreg free
  3405  000F48  C037  F043         	movff	?_eval_poly,ldexp@value
  3406  000F4C  C038  F044         	movff	?_eval_poly+1,ldexp@value+1
  3407  000F50  C039  F045         	movff	?_eval_poly+2,ldexp@value+2
  3408  000F54  C063  F046         	movff	exp@exponent,ldexp@newexp
  3409  000F58  C064  F047         	movff	exp@exponent+1,ldexp@newexp+1
  3410  000F5C  EC17  F00D         	call	_ldexp	;wreg free
  3411  000F60  C043  F058         	movff	?_ldexp,exp@x
  3412  000F64  C044  F059         	movff	?_ldexp+1,exp@x+1
  3413  000F68  C045  F05A         	movff	?_ldexp+2,exp@x+2
  3414  000F6C  0100               	movlb	0	; () banked
  3415  000F6E  5165               	movf	exp@sign& (0+255),w,b
  3416  000F70  B4D8               	btfsc	status,2,c
  3417  000F72  D025               	goto	l813
  3418                           
  3419                           ; BSR set to: 0
  3420  000F74  2858               	incf	exp@x,w,c
  3421  000F76  E10E               	bnz	l2453
  3422  000F78  0E7F               	movlw	127
  3423  000F7A  1859               	xorwf	exp@x+1,w,c
  3424  000F7C  E10B               	bnz	l2453
  3425  000F7E  0E7F               	movlw	127
  3426  000F80  185A               	xorwf	exp@x+2,w,c
  3427  000F82  A4D8               	btfss	status,2,c
  3428  000F84  D007               	goto	l814
  3429                           
  3430                           ; BSR set to: 0
  3431  000F86  0E00               	movlw	0
  3432  000F88  6E58               	movwf	?_exp,c
  3433  000F8A  0E00               	movlw	0
  3434  000F8C  6E59               	movwf	?_exp+1,c
  3435  000F8E  0E00               	movlw	0
  3436  000F90  6E5A               	movwf	?_exp+2,c
  3437                           
  3438                           ; BSR set to: 0
  3439  000F92  0012               	return	
  3440  000F94                     l814:
  3441  000F94                     l2453:
  3442                           
  3443                           ; BSR set to: 0
  3444  000F94  0E00               	movlw	0
  3445  000F96  6E1C               	movwf	___ftdiv@f1,c
  3446  000F98  0E80               	movlw	128
  3447  000F9A  6E1D               	movwf	___ftdiv@f1+1,c
  3448  000F9C  0E3F               	movlw	63
  3449  000F9E  6E1E               	movwf	___ftdiv@f1+2,c
  3450  000FA0  C058  F01F         	movff	exp@x,___ftdiv@f2
  3451  000FA4  C059  F020         	movff	exp@x+1,___ftdiv@f2+1
  3452  000FA8  C05A  F021         	movff	exp@x+2,___ftdiv@f2+2
  3453  000FAC  ECCC  F00B         	call	___ftdiv	;wreg free
  3454  000FB0  C01C  F058         	movff	?___ftdiv,?_exp
  3455  000FB4  C01D  F059         	movff	?___ftdiv+1,?_exp+1
  3456  000FB8  C01E  F05A         	movff	?___ftdiv+2,?_exp+2
  3457  000FBC  0012               	return	
  3458  000FBE                     l813:
  3459                           
  3460                           ; BSR set to: 0
  3461  000FBE  C058  F058         	movff	exp@x,?_exp
  3462  000FC2  C059  F059         	movff	exp@x+1,?_exp+1
  3463  000FC6  C05A  F05A         	movff	exp@x+2,?_exp+2
  3464  000FCA  0012               	return		;funcret
  3465  000FCC                     __end_of_exp:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           intcon	equ	0xFF2
  3469                           postinc0	equ	0xFEE
  3470                           wreg	equ	0xFE8
  3471                           plusw1	equ	0xFE3
  3472                           postinc2	equ	0xFDE
  3473                           postdec2	equ	0xFDD
  3474                           plusw2	equ	0xFDB
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479 ;; *************** function _ldexp *****************
  3480 ;; Defined at:
  3481 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  value           3   66[COMRAM] unsigned char 
  3484 ;;  newexp          2   69[COMRAM] int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  3   66[COMRAM] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         5       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        7 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_exp
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text14
  3510  001A2E                     __ptext14:
  3511                           	opt stack 0
  3512  001A2E                     _ldexp:
  3513                           	opt stack 26
  3514                           
  3515                           ;incstack = 0
  3516  001A2E  5043               	movf	ldexp@value,w,c
  3517  001A30  1044               	iorwf	ldexp@value+1,w,c
  3518  001A32  1045               	iorwf	ldexp@value+2,w,c
  3519  001A34  A4D8               	btfss	status,2,c
  3520  001A36  D007               	goto	l832
  3521  001A38  0E00               	movlw	0
  3522  001A3A  6E43               	movwf	?_ldexp,c
  3523  001A3C  0E00               	movlw	0
  3524  001A3E  6E44               	movwf	?_ldexp+1,c
  3525  001A40  0E00               	movlw	0
  3526  001A42  6E45               	movwf	?_ldexp+2,c
  3527  001A44  0012               	return	
  3528  001A46                     l832:
  3529  001A46  5045               	movf	ldexp@value+2,w,c
  3530  001A48  0B7F               	andlw	127
  3531  001A4A  6E48               	movwf	??_ldexp& (0+255),c
  3532  001A4C  6A49               	clrf	(??_ldexp+1)& (0+255),c
  3533  001A4E  90D8               	bcf	status,0,c
  3534  001A50  3648               	rlcf	??_ldexp,f,c
  3535  001A52  3649               	rlcf	??_ldexp+1,f,c
  3536  001A54  5048               	movf	??_ldexp,w,c
  3537  001A56  2646               	addwf	ldexp@newexp,f,c
  3538  001A58  5049               	movf	??_ldexp+1,w,c
  3539  001A5A  2247               	addwfc	ldexp@newexp+1,f,c
  3540  001A5C  AE44               	btfss	ldexp@value+1,7,c
  3541  001A5E  D003               	goto	u2510
  3542  001A60  6A48               	clrf	??_ldexp& (0+255),c
  3543  001A62  2A48               	incf	??_ldexp& (0+255),f,c
  3544  001A64  D001               	goto	u2518
  3545  001A66                     u2510:
  3546  001A66  6A48               	clrf	??_ldexp& (0+255),c
  3547  001A68                     u2518:
  3548  001A68  5048               	movf	??_ldexp,w,c
  3549  001A6A  2646               	addwf	ldexp@newexp,f,c
  3550  001A6C  0E00               	movlw	0
  3551  001A6E  2247               	addwfc	ldexp@newexp+1,f,c
  3552  001A70  AE47               	btfss	ldexp@newexp+1,7,c
  3553  001A72  D00C               	goto	l834
  3554  001A74  0E00               	movlw	0
  3555  001A76  0100               	movlb	0	; () banked
  3556  001A78  6FEE               	movwf	(_errno+1)& (0+255),b
  3557  001A7A  0E22               	movlw	34
  3558  001A7C  6FED               	movwf	_errno& (0+255),b
  3559  001A7E  0E00               	movlw	0
  3560  001A80  6E43               	movwf	?_ldexp,c
  3561  001A82  0E00               	movlw	0
  3562  001A84  6E44               	movwf	?_ldexp+1,c
  3563  001A86  0E00               	movlw	0
  3564  001A88                     L5:
  3565  001A88  6E45               	movwf	?_ldexp+2,c
  3566                           
  3567                           ; BSR set to: 0
  3568  001A8A  0012               	return	
  3569  001A8C                     l834:
  3570                           
  3571                           ; BSR set to: 0
  3572  001A8C  BE47               	btfsc	ldexp@newexp+1,7,c
  3573  001A8E  D016               	goto	l836
  3574  001A90  0447               	decf	ldexp@newexp+1,w,c
  3575  001A92  A0D8               	btfss	status,0,c
  3576  001A94  D013               	goto	l836
  3577  001A96  0E00               	movlw	0
  3578  001A98  0100               	movlb	0	; () banked
  3579  001A9A  6FEE               	movwf	(_errno+1)& (0+255),b
  3580  001A9C  0E22               	movlw	34
  3581  001A9E  6FED               	movwf	_errno& (0+255),b
  3582                           
  3583                           ; BSR set to: 0
  3584  001AA0  AE45               	btfss	ldexp@value+2,7,c
  3585  001AA2  D006               	goto	l837
  3586                           
  3587                           ; BSR set to: 0
  3588  001AA4  0EFF               	movlw	255
  3589  001AA6  6E43               	movwf	?_ldexp,c
  3590  001AA8  0E7F               	movlw	127
  3591  001AAA  6E44               	movwf	?_ldexp+1,c
  3592  001AAC  0EFF               	movlw	255
  3593  001AAE  D7EC               	goto	L5
  3594  001AB0                     l837:
  3595                           
  3596                           ; BSR set to: 0
  3597                           
  3598                           ; BSR set to: 0
  3599  001AB0  0EFF               	movlw	255
  3600  001AB2  6E43               	movwf	?_ldexp,c
  3601  001AB4  0E7F               	movlw	127
  3602  001AB6  6E44               	movwf	?_ldexp+1,c
  3603  001AB8  0E7F               	movlw	127
  3604  001ABA  D7E6               	goto	L5
  3605  001ABC                     l836:
  3606                           
  3607                           ; BSR set to: 0
  3608  001ABC  3447               	rlcf	ldexp@newexp+1,w,c
  3609  001ABE  3047               	rrcf	ldexp@newexp+1,w,c
  3610  001AC0  6E49               	movwf	(??_ldexp+1)& (0+255),c
  3611  001AC2  3046               	rrcf	ldexp@newexp,w,c
  3612  001AC4  6E48               	movwf	??_ldexp& (0+255),c
  3613  001AC6  5045               	movf	ldexp@value+2,w,c
  3614  001AC8  1848               	xorwf	??_ldexp,w,c
  3615  001ACA  0B80               	andlw	-128
  3616  001ACC  1848               	xorwf	??_ldexp,w,c
  3617  001ACE  6E45               	movwf	ldexp@value+2,c
  3618  001AD0  C046  F048         	movff	ldexp@newexp,??_ldexp
  3619  001AD4  0E01               	movlw	1
  3620  001AD6  1648               	andwf	??_ldexp,f,c
  3621  001AD8  3248               	rrcf	??_ldexp,f,c
  3622  001ADA  3248               	rrcf	??_ldexp,f,c
  3623  001ADC  5044               	movf	ldexp@value+1,w,c
  3624  001ADE  1848               	xorwf	??_ldexp,w,c
  3625  001AE0  0B7F               	andlw	-129
  3626  001AE2  1848               	xorwf	??_ldexp,w,c
  3627  001AE4  6E44               	movwf	ldexp@value+1,c
  3628  001AE6  C043  F043         	movff	ldexp@value,?_ldexp
  3629  001AEA  C044  F044         	movff	ldexp@value+1,?_ldexp+1
  3630  001AEE  C045  F045         	movff	ldexp@value+2,?_ldexp+2
  3631  001AF2  0012               	return	
  3632  001AF4                     __end_of_ldexp:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           intcon	equ	0xFF2
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           plusw1	equ	0xFE3
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           plusw2	equ	0xFDB
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _floor *****************
  3647 ;; Defined at:
  3648 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  x               3   79[COMRAM] int 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  i               3   82[COMRAM] int 
  3653 ;;  expon           2   85[COMRAM] int 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  3   79[COMRAM] int 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         3       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3666 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:        8 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    2
  3670 ;; This function calls:
  3671 ;;		___altoft
  3672 ;;		___ftadd
  3673 ;;		___ftge
  3674 ;;		___fttol
  3675 ;;		_frexp
  3676 ;; This function is called by:
  3677 ;;		_exp
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text15
  3682  00187E                     __ptext15:
  3683                           	opt stack 0
  3684  00187E                     _floor:
  3685                           	opt stack 24
  3686                           
  3687                           ;incstack = 0
  3688  00187E  C050  F001         	movff	floor@x,frexp@value
  3689  001882  C051  F002         	movff	floor@x+1,frexp@value+1
  3690  001886  C052  F003         	movff	floor@x+2,frexp@value+2
  3691  00188A  0E56               	movlw	low floor@expon
  3692  00188C  6E04               	movwf	frexp@eptr,c
  3693  00188E  0E00               	movlw	high floor@expon
  3694  001890  6E05               	movwf	frexp@eptr+1,c
  3695  001892  EC2D  F00E         	call	_frexp	;wreg free
  3696  001896  AE57               	btfss	floor@expon+1,7,c
  3697  001898  D010               	goto	l819
  3698  00189A  AE52               	btfss	floor@x+2,7,c
  3699  00189C  D007               	goto	l820
  3700  00189E  0E00               	movlw	0
  3701  0018A0  6E50               	movwf	?_floor,c
  3702  0018A2  0E80               	movlw	128
  3703  0018A4  6E51               	movwf	?_floor+1,c
  3704  0018A6  0EBF               	movlw	191
  3705  0018A8  6E52               	movwf	?_floor+2,c
  3706  0018AA  0012               	return	
  3707  0018AC                     l820:
  3708  0018AC  0E00               	movlw	0
  3709  0018AE  6E50               	movwf	?_floor,c
  3710  0018B0  0E00               	movlw	0
  3711  0018B2  6E51               	movwf	?_floor+1,c
  3712  0018B4  0E00               	movlw	0
  3713  0018B6  6E52               	movwf	?_floor+2,c
  3714  0018B8  0012               	return	
  3715  0018BA                     l819:
  3716  0018BA  5057               	movf	floor@expon+1,w,c
  3717  0018BC  E104               	bnz	u2470
  3718  0018BE  0E15               	movlw	21
  3719  0018C0  5C56               	subwf	floor@expon,w,c
  3720  0018C2  A0D8               	btfss	status,0,c
  3721  0018C4  D007               	goto	l822
  3722  0018C6                     u2470:
  3723  0018C6  C050  F050         	movff	floor@x,?_floor
  3724  0018CA  C051  F051         	movff	floor@x+1,?_floor+1
  3725  0018CE  C052  F052         	movff	floor@x+2,?_floor+2
  3726  0018D2  0012               	return	
  3727  0018D4                     l822:
  3728  0018D4  C050  F037         	movff	floor@x,___fttol@f1
  3729  0018D8  C051  F038         	movff	floor@x+1,___fttol@f1+1
  3730  0018DC  C052  F039         	movff	floor@x+2,___fttol@f1+2
  3731  0018E0  ECD8  F00A         	call	___fttol	;wreg free
  3732  0018E4  C037  F046         	movff	?___fttol,___altoft@c
  3733  0018E8  C038  F047         	movff	?___fttol+1,___altoft@c+1
  3734  0018EC  C039  F048         	movff	?___fttol+2,___altoft@c+2
  3735  0018F0  C03A  F049         	movff	?___fttol+3,___altoft@c+3
  3736  0018F4  ECFF  F00E         	call	___altoft	;wreg free
  3737  0018F8  C046  F053         	movff	?___altoft,floor@i
  3738  0018FC  C047  F054         	movff	?___altoft+1,floor@i+1
  3739  001900  C048  F055         	movff	?___altoft+2,floor@i+2
  3740  001904  C050  F001         	movff	floor@x,___ftge@ff1
  3741  001908  C051  F002         	movff	floor@x+1,___ftge@ff1+1
  3742  00190C  C052  F003         	movff	floor@x+2,___ftge@ff1+2
  3743  001910  C053  F004         	movff	floor@i,___ftge@ff2
  3744  001914  C054  F005         	movff	floor@i+1,___ftge@ff2+1
  3745  001918  C055  F006         	movff	floor@i+2,___ftge@ff2+2
  3746  00191C  EC75  F00E         	call	___ftge	;wreg free
  3747  001920  B0D8               	btfsc	status,0,c
  3748  001922  D015               	goto	l823
  3749  001924  C053  F02B         	movff	floor@i,___ftadd@f1
  3750  001928  C054  F02C         	movff	floor@i+1,___ftadd@f1+1
  3751  00192C  C055  F02D         	movff	floor@i+2,___ftadd@f1+2
  3752  001930  0E00               	movlw	0
  3753  001932  6E2E               	movwf	___ftadd@f2,c
  3754  001934  0E80               	movlw	128
  3755  001936  6E2F               	movwf	___ftadd@f2+1,c
  3756  001938  0EBF               	movlw	191
  3757  00193A  6E30               	movwf	___ftadd@f2+2,c
  3758  00193C  ECE6  F007         	call	___ftadd	;wreg free
  3759  001940  C02B  F050         	movff	?___ftadd,?_floor
  3760  001944  C02C  F051         	movff	?___ftadd+1,?_floor+1
  3761  001948  C02D  F052         	movff	?___ftadd+2,?_floor+2
  3762  00194C  0012               	return	
  3763  00194E                     l823:
  3764  00194E  C053  F050         	movff	floor@i,?_floor
  3765  001952  C054  F051         	movff	floor@i+1,?_floor+1
  3766  001956  C055  F052         	movff	floor@i+2,?_floor+2
  3767  00195A  0012               	return		;funcret
  3768  00195C                     __end_of_floor:
  3769                           	opt stack 0
  3770                           tblptru	equ	0xFF8
  3771                           intcon	equ	0xFF2
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           plusw1	equ	0xFE3
  3775                           postinc2	equ	0xFDE
  3776                           postdec2	equ	0xFDD
  3777                           plusw2	equ	0xFDB
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _frexp *****************
  3783 ;; Defined at:
  3784 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  value           3    0[COMRAM] int 
  3787 ;;  eptr            2    3[COMRAM] PTR int 
  3788 ;;		 -> log@exponent(2), floor@expon(2), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  3    0[COMRAM] PTR int 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3800 ;;      Params:         5       0       0       0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3802 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3803 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3804 ;;Total ram usage:        7 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_floor
  3810 ;;		_log
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text16
  3815  001C5A                     __ptext16:
  3816                           	opt stack 0
  3817  001C5A                     _frexp:
  3818                           	opt stack 26
  3819                           
  3820                           ;incstack = 0
  3821  001C5A  5001               	movf	frexp@value,w,c
  3822  001C5C  1002               	iorwf	frexp@value+1,w,c
  3823  001C5E  1003               	iorwf	frexp@value+2,w,c
  3824  001C60  A4D8               	btfss	status,2,c
  3825  001C62  D00F               	goto	l828
  3826  001C64  C004  FFD9         	movff	frexp@eptr,fsr2l
  3827  001C68  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3828  001C6C  0E00               	movlw	0
  3829  001C6E  6EDE               	movwf	postinc2,c
  3830  001C70  0E00               	movlw	0
  3831  001C72  6EDD               	movwf	postdec2,c
  3832  001C74  0E00               	movlw	0
  3833  001C76  6E01               	movwf	?_frexp,c
  3834  001C78  0E00               	movlw	0
  3835  001C7A  6E02               	movwf	?_frexp+1,c
  3836  001C7C  0E00               	movlw	0
  3837  001C7E  6E03               	movwf	?_frexp+2,c
  3838  001C80  0012               	return	
  3839  001C82                     l828:
  3840  001C82  5003               	movf	frexp@value+2,w,c
  3841  001C84  0B7F               	andlw	127
  3842  001C86  6E06               	movwf	??_frexp& (0+255),c
  3843  001C88  6A07               	clrf	(??_frexp+1)& (0+255),c
  3844  001C8A  90D8               	bcf	status,0,c
  3845  001C8C  3606               	rlcf	??_frexp,f,c
  3846  001C8E  3607               	rlcf	??_frexp+1,f,c
  3847  001C90  C004  FFD9         	movff	frexp@eptr,fsr2l
  3848  001C94  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3849  001C98  C006  FFDE         	movff	??_frexp,postinc2
  3850  001C9C  C007  FFDD         	movff	??_frexp+1,postdec2
  3851  001CA0  AE02               	btfss	frexp@value+1,7,c
  3852  001CA2  D003               	goto	u2360
  3853  001CA4  6A06               	clrf	??_frexp& (0+255),c
  3854  001CA6  2A06               	incf	??_frexp& (0+255),f,c
  3855  001CA8  D001               	goto	u2368
  3856  001CAA                     u2360:
  3857  001CAA  6A06               	clrf	??_frexp& (0+255),c
  3858  001CAC                     u2368:
  3859  001CAC  5006               	movf	??_frexp,w,c
  3860  001CAE  C004  FFD9         	movff	frexp@eptr,fsr2l
  3861  001CB2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3862  001CB6  12DE               	iorwf	postinc2,f,c
  3863  001CB8  0E00               	movlw	0
  3864  001CBA  12DD               	iorwf	postdec2,f,c
  3865  001CBC  C004  FFD9         	movff	frexp@eptr,fsr2l
  3866  001CC0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3867  001CC4  0E82               	movlw	130
  3868  001CC6  26DE               	addwf	postinc2,f,c
  3869  001CC8  0EFF               	movlw	255
  3870  001CCA  22DD               	addwfc	postdec2,f,c
  3871  001CCC  8003               	bsf	frexp@value+2,0,c
  3872  001CCE  8203               	bsf	frexp@value+2,1,c
  3873  001CD0  8403               	bsf	frexp@value+2,2,c
  3874  001CD2  8603               	bsf	frexp@value+2,3,c
  3875  001CD4  8803               	bsf	frexp@value+2,4,c
  3876  001CD6  8A03               	bsf	frexp@value+2,5,c
  3877  001CD8  9C03               	bcf	frexp@value+2,6,c
  3878  001CDA  9E02               	bcf	frexp@value+1,7,c
  3879  001CDC  C001  F001         	movff	frexp@value,?_frexp
  3880  001CE0  C002  F002         	movff	frexp@value+1,?_frexp+1
  3881  001CE4  C003  F003         	movff	frexp@value+2,?_frexp+2
  3882  001CE8  0012               	return	
  3883  001CEA                     __end_of_frexp:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           intcon	equ	0xFF2
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           plusw1	equ	0xFE3
  3890                           postinc2	equ	0xFDE
  3891                           postdec2	equ	0xFDD
  3892                           plusw2	equ	0xFDB
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function ___fttol *****************
  3898 ;; Defined at:
  3899 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  f1              3   54[COMRAM] float 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  lval            4   64[COMRAM] unsigned long 
  3904 ;;  exp1            1   68[COMRAM] unsigned char 
  3905 ;;  sign1           1   63[COMRAM] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  4   54[COMRAM] long 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3915 ;;      Params:         4       0       0       0       0       0       0       0       0
  3916 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3917 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3918 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3919 ;;Total ram usage:       15 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_coinfig_ccpcon
  3925 ;;		_config_ccp1
  3926 ;;		_config_ccp2
  3927 ;;		_pow
  3928 ;;		_exp
  3929 ;;		_floor
  3930 ;;		_wait_in_ms
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text17
  3935  0015B0                     __ptext17:
  3936                           	opt stack 0
  3937  0015B0                     ___fttol:
  3938                           	opt stack 29
  3939                           
  3940                           ;incstack = 0
  3941  0015B0  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3942  0015B4  6A3C               	clrf	(??___fttol+1)& (0+255),c
  3943  0015B6  6A3D               	clrf	(??___fttol+2)& (0+255),c
  3944  0015B8  3438               	rlcf	___fttol@f1+1,w,c
  3945  0015BA  363B               	rlcf	??___fttol& (0+255),f,c
  3946  0015BC  E301               	bnc	u2271
  3947  0015BE  803C               	bsf	(??___fttol+1)& (0+255),0,c
  3948  0015C0                     u2271:
  3949  0015C0  503B               	movf	??___fttol,w,c
  3950  0015C2  6E45               	movwf	___fttol@exp1,c
  3951  0015C4  5045               	movf	___fttol@exp1,w,c
  3952  0015C6  A4D8               	btfss	status,2,c
  3953  0015C8  D009               	goto	l529
  3954  0015CA  0E00               	movlw	0
  3955  0015CC  6E37               	movwf	?___fttol,c
  3956  0015CE  0E00               	movlw	0
  3957  0015D0  6E38               	movwf	?___fttol+1,c
  3958  0015D2  0E00               	movlw	0
  3959  0015D4  6E39               	movwf	?___fttol+2,c
  3960  0015D6  0E00               	movlw	0
  3961  0015D8  6E3A               	movwf	?___fttol+3,c
  3962  0015DA  0012               	return	
  3963  0015DC                     l529:
  3964  0015DC  0E17               	movlw	23
  3965  0015DE  6E3B               	movwf	??___fttol& (0+255),c
  3966  0015E0  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3967  0015E4  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3968  0015E8  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3969  0015EC  283B               	incf	??___fttol,w,c
  3970  0015EE  6E3F               	movwf	(??___fttol+4)& (0+255),c
  3971  0015F0  D004               	goto	u2290
  3972  0015F2                     u2295:
  3973  0015F2  90D8               	bcf	status,0,c
  3974  0015F4  323E               	rrcf	??___fttol+3,f,c
  3975  0015F6  323D               	rrcf	??___fttol+2,f,c
  3976  0015F8  323C               	rrcf	??___fttol+1,f,c
  3977  0015FA                     u2290:
  3978  0015FA  2E3F               	decfsz	(??___fttol+4)& (0+255),f,c
  3979  0015FC  D7FA               	goto	u2295
  3980  0015FE  503C               	movf	??___fttol+1,w,c
  3981  001600  6E40               	movwf	___fttol@sign1,c
  3982  001602  8E38               	bsf	___fttol@f1+1,7,c
  3983  001604  0EFF               	movlw	255
  3984  001606  1637               	andwf	___fttol@f1,f,c
  3985  001608  0EFF               	movlw	255
  3986  00160A  1638               	andwf	___fttol@f1+1,f,c
  3987  00160C  0E00               	movlw	0
  3988  00160E  1639               	andwf	___fttol@f1+2,f,c
  3989  001610  5037               	movf	___fttol@f1,w,c
  3990  001612  6E41               	movwf	___fttol@lval,c
  3991  001614  5038               	movf	___fttol@f1+1,w,c
  3992  001616  6E42               	movwf	___fttol@lval+1,c
  3993  001618  5039               	movf	___fttol@f1+2,w,c
  3994  00161A  6E43               	movwf	___fttol@lval+2,c
  3995  00161C  6A44               	clrf	___fttol@lval+3,c
  3996  00161E  0E8E               	movlw	142
  3997  001620  5E45               	subwf	___fttol@exp1,f,c
  3998  001622  AE45               	btfss	___fttol@exp1,7,c
  3999  001624  D016               	goto	l531
  4000  001626  5045               	movf	___fttol@exp1,w,c
  4001  001628  0A80               	xorlw	128
  4002  00162A  0F8F               	addlw	143
  4003  00162C  B0D8               	btfsc	status,0,c
  4004  00162E  D009               	goto	l532
  4005  001630  0E00               	movlw	0
  4006  001632  6E37               	movwf	?___fttol,c
  4007  001634  0E00               	movlw	0
  4008  001636  6E38               	movwf	?___fttol+1,c
  4009  001638  0E00               	movlw	0
  4010  00163A  6E39               	movwf	?___fttol+2,c
  4011  00163C  0E00               	movlw	0
  4012  00163E  6E3A               	movwf	?___fttol+3,c
  4013  001640  0012               	return	
  4014  001642                     l532:
  4015  001642  90D8               	bcf	status,0,c
  4016  001644  3244               	rrcf	___fttol@lval+3,f,c
  4017  001646  3243               	rrcf	___fttol@lval+2,f,c
  4018  001648  3242               	rrcf	___fttol@lval+1,f,c
  4019  00164A  3241               	rrcf	___fttol@lval,f,c
  4020  00164C  3E45               	incfsz	___fttol@exp1,f,c
  4021  00164E  D7F9               	goto	l532
  4022  001650  D015               	goto	u2330
  4023  001652                     l531:
  4024  001652  0E17               	movlw	23
  4025  001654  6445               	cpfsgt	___fttol@exp1,c
  4026  001656  D00F               	goto	l537
  4027  001658  0E00               	movlw	0
  4028  00165A  6E37               	movwf	?___fttol,c
  4029  00165C  0E00               	movlw	0
  4030  00165E  6E38               	movwf	?___fttol+1,c
  4031  001660  0E00               	movlw	0
  4032  001662  6E39               	movwf	?___fttol+2,c
  4033  001664  0E00               	movlw	0
  4034  001666  6E3A               	movwf	?___fttol+3,c
  4035  001668  0012               	return	
  4036  00166A  90D8               	bcf	status,0,c
  4037  00166C  3641               	rlcf	___fttol@lval,f,c
  4038  00166E  3642               	rlcf	___fttol@lval+1,f,c
  4039  001670  3643               	rlcf	___fttol@lval+2,f,c
  4040  001672  3644               	rlcf	___fttol@lval+3,f,c
  4041  001674  0645               	decf	___fttol@exp1,f,c
  4042  001676                     l537:
  4043  001676  5045               	movf	___fttol@exp1,w,c
  4044  001678  A4D8               	btfss	status,2,c
  4045  00167A  D7F7               	goto	l538
  4046  00167C                     u2330:
  4047  00167C  5040               	movf	___fttol@sign1,w,c
  4048  00167E  B4D8               	btfsc	status,2,c
  4049  001680  D008               	goto	l540
  4050  001682  1E44               	comf	___fttol@lval+3,f,c
  4051  001684  1E43               	comf	___fttol@lval+2,f,c
  4052  001686  1E42               	comf	___fttol@lval+1,f,c
  4053  001688  6C41               	negf	___fttol@lval,c
  4054  00168A  0E00               	movlw	0
  4055  00168C  2242               	addwfc	___fttol@lval+1,f,c
  4056  00168E  2243               	addwfc	___fttol@lval+2,f,c
  4057  001690  2244               	addwfc	___fttol@lval+3,f,c
  4058  001692                     l540:
  4059  001692  C041  F037         	movff	___fttol@lval,?___fttol
  4060  001696  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  4061  00169A  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  4062  00169E  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  4063  0016A2  0012               	return	
  4064  0016A4                     __end_of___fttol:
  4065                           	opt stack 0
  4066                           tblptru	equ	0xFF8
  4067                           intcon	equ	0xFF2
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           plusw1	equ	0xFE3
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           plusw2	equ	0xFDB
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function ___ftge *****************
  4079 ;; Defined at:
  4080 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  ff1             3    0[COMRAM] float 
  4083 ;;  ff2             3    3[COMRAM] float 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4095 ;;      Params:         6       0       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4097 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4098 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4099 ;;Total ram usage:        9 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_pow
  4105 ;;		_exp
  4106 ;;		_floor
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text18
  4111  001CEA                     __ptext18:
  4112                           	opt stack 0
  4113  001CEA                     ___ftge:
  4114                           	opt stack 25
  4115                           
  4116                           ;incstack = 0
  4117  001CEA  AE03               	btfss	___ftge@ff1+2,7,c
  4118  001CEC  D016               	goto	l501
  4119  001CEE  C001  F007         	movff	___ftge@ff1,??___ftge
  4120  001CF2  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4121  001CF6  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4122  001CFA  1E07               	comf	??___ftge,f,c
  4123  001CFC  1E08               	comf	??___ftge+1,f,c
  4124  001CFE  1E09               	comf	??___ftge+2,f,c
  4125  001D00  2A07               	incf	??___ftge,f,c
  4126  001D02  0E00               	movlw	0
  4127  001D04  2208               	addwfc	??___ftge+1,f,c
  4128  001D06  2209               	addwfc	??___ftge+2,f,c
  4129  001D08  0E00               	movlw	0
  4130  001D0A  2407               	addwf	??___ftge,w,c
  4131  001D0C  6E01               	movwf	___ftge@ff1,c
  4132  001D0E  0E00               	movlw	0
  4133  001D10  2008               	addwfc	??___ftge+1,w,c
  4134  001D12  6E02               	movwf	___ftge@ff1+1,c
  4135  001D14  0E80               	movlw	128
  4136  001D16  2009               	addwfc	??___ftge+2,w,c
  4137  001D18  6E03               	movwf	___ftge@ff1+2,c
  4138  001D1A                     l501:
  4139  001D1A  AE06               	btfss	___ftge@ff2+2,7,c
  4140  001D1C  D016               	goto	l502
  4141  001D1E  C004  F007         	movff	___ftge@ff2,??___ftge
  4142  001D22  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4143  001D26  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4144  001D2A  1E07               	comf	??___ftge,f,c
  4145  001D2C  1E08               	comf	??___ftge+1,f,c
  4146  001D2E  1E09               	comf	??___ftge+2,f,c
  4147  001D30  2A07               	incf	??___ftge,f,c
  4148  001D32  0E00               	movlw	0
  4149  001D34  2208               	addwfc	??___ftge+1,f,c
  4150  001D36  2209               	addwfc	??___ftge+2,f,c
  4151  001D38  0E00               	movlw	0
  4152  001D3A  2407               	addwf	??___ftge,w,c
  4153  001D3C  6E04               	movwf	___ftge@ff2,c
  4154  001D3E  0E00               	movlw	0
  4155  001D40  2008               	addwfc	??___ftge+1,w,c
  4156  001D42  6E05               	movwf	___ftge@ff2+1,c
  4157  001D44  0E80               	movlw	128
  4158  001D46  2009               	addwfc	??___ftge+2,w,c
  4159  001D48  6E06               	movwf	___ftge@ff2+2,c
  4160  001D4A                     l502:
  4161  001D4A  0E00               	movlw	0
  4162  001D4C  1A01               	xorwf	___ftge@ff1,f,c
  4163  001D4E  0E00               	movlw	0
  4164  001D50  1A02               	xorwf	___ftge@ff1+1,f,c
  4165  001D52  0E80               	movlw	128
  4166  001D54  1A03               	xorwf	___ftge@ff1+2,f,c
  4167  001D56  0E00               	movlw	0
  4168  001D58  1A04               	xorwf	___ftge@ff2,f,c
  4169  001D5A  0E00               	movlw	0
  4170  001D5C  1A05               	xorwf	___ftge@ff2+1,f,c
  4171  001D5E  0E80               	movlw	128
  4172  001D60  1A06               	xorwf	___ftge@ff2+2,f,c
  4173  001D62  5004               	movf	___ftge@ff2,w,c
  4174  001D64  5C01               	subwf	___ftge@ff1,w,c
  4175  001D66  5005               	movf	___ftge@ff2+1,w,c
  4176  001D68  5802               	subwfb	___ftge@ff1+1,w,c
  4177  001D6A  5006               	movf	___ftge@ff2+2,w,c
  4178  001D6C  5803               	subwfb	___ftge@ff1+2,w,c
  4179  001D6E  B0D8               	btfsc	status,0,c
  4180  001D70  D002               	goto	l1981
  4181  001D72  90D8               	bcf	status,0,c
  4182  001D74  0012               	return	
  4183  001D76                     l1981:
  4184  001D76  80D8               	bsf	status,0,c
  4185  001D78  0012               	return	
  4186  001D7A                     __end_of___ftge:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           intcon	equ	0xFF2
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           plusw1	equ	0xFE3
  4193                           postinc2	equ	0xFDE
  4194                           postdec2	equ	0xFDD
  4195                           plusw2	equ	0xFDB
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function ___altoft *****************
  4201 ;; Defined at:
  4202 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  c               4   69[COMRAM] long 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  sign            1   78[COMRAM] unsigned char 
  4207 ;;  exp             1   77[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  3   69[COMRAM] float 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4220 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:       10 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    1
  4224 ;; This function calls:
  4225 ;;		___ftpack
  4226 ;; This function is called by:
  4227 ;;		_floor
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text19
  4232  001DFE                     __ptext19:
  4233                           	opt stack 0
  4234  001DFE                     ___altoft:
  4235                           	opt stack 24
  4236                           
  4237                           ;incstack = 0
  4238  001DFE  0E00               	movlw	0
  4239  001E00  6E4F               	movwf	___altoft@sign,c
  4240  001E02  0E8E               	movlw	142
  4241  001E04  6E4E               	movwf	___altoft@exp,c
  4242  001E06  AE49               	btfss	___altoft@c+3,7,c
  4243  001E08  D011               	goto	l299
  4244  001E0A  1E49               	comf	___altoft@c+3,f,c
  4245  001E0C  1E48               	comf	___altoft@c+2,f,c
  4246  001E0E  1E47               	comf	___altoft@c+1,f,c
  4247  001E10  6C46               	negf	___altoft@c,c
  4248  001E12  0E00               	movlw	0
  4249  001E14  2247               	addwfc	___altoft@c+1,f,c
  4250  001E16  2248               	addwfc	___altoft@c+2,f,c
  4251  001E18  2249               	addwfc	___altoft@c+3,f,c
  4252  001E1A  0E01               	movlw	1
  4253  001E1C  6E4F               	movwf	___altoft@sign,c
  4254  001E1E  D006               	goto	l299
  4255  001E20  90D8               	bcf	status,0,c
  4256  001E22  3249               	rrcf	___altoft@c+3,f,c
  4257  001E24  3248               	rrcf	___altoft@c+2,f,c
  4258  001E26  3247               	rrcf	___altoft@c+1,f,c
  4259  001E28  3246               	rrcf	___altoft@c,f,c
  4260  001E2A  2A4E               	incf	___altoft@exp,f,c
  4261  001E2C                     l299:
  4262  001E2C  0E00               	movlw	0
  4263  001E2E  1446               	andwf	___altoft@c,w,c
  4264  001E30  6E4A               	movwf	??___altoft& (0+255),c
  4265  001E32  0E00               	movlw	0
  4266  001E34  1447               	andwf	___altoft@c+1,w,c
  4267  001E36  6E4B               	movwf	(??___altoft+1)& (0+255),c
  4268  001E38  0E00               	movlw	0
  4269  001E3A  1448               	andwf	___altoft@c+2,w,c
  4270  001E3C  6E4C               	movwf	(??___altoft+2)& (0+255),c
  4271  001E3E  0EFF               	movlw	255
  4272  001E40  1449               	andwf	___altoft@c+3,w,c
  4273  001E42  6E4D               	movwf	(??___altoft+3)& (0+255),c
  4274  001E44  504A               	movf	??___altoft,w,c
  4275  001E46  104B               	iorwf	??___altoft+1,w,c
  4276  001E48  104C               	iorwf	??___altoft+2,w,c
  4277  001E4A  104D               	iorwf	??___altoft+3,w,c
  4278  001E4C  A4D8               	btfss	status,2,c
  4279  001E4E  D7E8               	goto	l300
  4280  001E50  C046  F001         	movff	___altoft@c,___ftpack@arg
  4281  001E54  C047  F002         	movff	___altoft@c+1,___ftpack@arg+1
  4282  001E58  C048  F003         	movff	___altoft@c+2,___ftpack@arg+2
  4283  001E5C  C04E  F004         	movff	___altoft@exp,___ftpack@exp
  4284  001E60  C04F  F005         	movff	___altoft@sign,___ftpack@sign
  4285  001E64  ECD6  F00D         	call	___ftpack	;wreg free
  4286  001E68  C001  F046         	movff	?___ftpack,?___altoft
  4287  001E6C  C002  F047         	movff	?___ftpack+1,?___altoft+1
  4288  001E70  C003  F048         	movff	?___ftpack+2,?___altoft+2
  4289  001E74  0012               	return	
  4290  001E76                     __end_of___altoft:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           intcon	equ	0xFF2
  4294                           postinc0	equ	0xFEE
  4295                           wreg	equ	0xFE8
  4296                           plusw1	equ	0xFE3
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           plusw2	equ	0xFDB
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _eval_poly *****************
  4305 ;; Defined at:
  4306 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  x               3   54[COMRAM] float 
  4309 ;;  d               2   57[COMRAM] PTR const 
  4310 ;;		 -> log@coeff(27), exp@coeff(30), 
  4311 ;;  n               2   59[COMRAM] int 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  res             3   63[COMRAM] int 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  3   54[COMRAM] int 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         7       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4326 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:       12 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		___ftadd
  4332 ;;		___ftmul
  4333 ;;		___wmul
  4334 ;; This function is called by:
  4335 ;;		_exp
  4336 ;;		_log
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text20
  4341  00195C                     __ptext20:
  4342                           	opt stack 0
  4343  00195C                     _eval_poly:
  4344                           	opt stack 24
  4345                           
  4346                           ;incstack = 0
  4347  00195C  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4348  001960  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4349  001964  0E00               	movlw	0
  4350  001966  6E04               	movwf	___wmul@multiplicand+1,c
  4351  001968  0E03               	movlw	3
  4352  00196A  6E03               	movwf	___wmul@multiplicand,c
  4353  00196C  EC57  F010         	call	___wmul	;wreg free
  4354  001970  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4355  001974  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4356  001978  5001               	movf	?___wmul,w,c
  4357  00197A  263E               	addwf	??_eval_poly,f,c
  4358  00197C  5002               	movf	?___wmul+1,w,c
  4359  00197E  223F               	addwfc	??_eval_poly+1,f,c
  4360  001980  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4361  001984  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4362  001988                     	if	0	;tblptru may be non-zero
  4363  001988                     	endif
  4364  001988                     	if	0	;tblptru may be non-zero
  4365  001988                     	endif
  4366  001988  0009               	tblrd		*+
  4367  00198A  CFF5 F040          	movff	tablat,eval_poly@res
  4368  00198E  0009               	tblrd		*+
  4369  001990  CFF5 F041          	movff	tablat,eval_poly@res+1
  4370  001994  000A               	tblrd		*-
  4371  001996  CFF5 F042          	movff	tablat,eval_poly@res+2
  4372  00199A  D03E               	goto	l858
  4373  00199C  C040  F010         	movff	eval_poly@res,___ftmul@f2
  4374  0019A0  C041  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  4375  0019A4  C042  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  4376  0019A8  C037  F00D         	movff	eval_poly@x,___ftmul@f1
  4377  0019AC  C038  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  4378  0019B0  C039  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  4379  0019B4  EC52  F00B         	call	___ftmul	;wreg free
  4380  0019B8  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  4381  0019BC  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  4382  0019C0  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  4383  0019C4  0E00               	movlw	0
  4384  0019C6  6E04               	movwf	___wmul@multiplicand+1,c
  4385  0019C8  0E03               	movlw	3
  4386  0019CA  6E03               	movwf	___wmul@multiplicand,c
  4387  0019CC  063C               	decf	eval_poly@n,f,c
  4388  0019CE  A0D8               	btfss	status,0,c
  4389  0019D0  063D               	decf	eval_poly@n+1,f,c
  4390  0019D2  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4391  0019D6  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4392  0019DA  EC57  F010         	call	___wmul	;wreg free
  4393  0019DE  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4394  0019E2  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4395  0019E6  5001               	movf	?___wmul,w,c
  4396  0019E8  263E               	addwf	??_eval_poly,f,c
  4397  0019EA  5002               	movf	?___wmul+1,w,c
  4398  0019EC  223F               	addwfc	??_eval_poly+1,f,c
  4399  0019EE  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4400  0019F2  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4401  0019F6                     	if	0	;tblptru may be non-zero
  4402  0019F6                     	endif
  4403  0019F6                     	if	0	;tblptru may be non-zero
  4404  0019F6                     	endif
  4405  0019F6  0009               	tblrd		*+
  4406  0019F8  CFF5 F02E          	movff	tablat,___ftadd@f2
  4407  0019FC  0009               	tblrd		*+
  4408  0019FE  CFF5 F02F          	movff	tablat,___ftadd@f2+1
  4409  001A02  000A               	tblrd		*-
  4410  001A04  CFF5 F030          	movff	tablat,___ftadd@f2+2
  4411  001A08  ECE6  F007         	call	___ftadd	;wreg free
  4412  001A0C  C02B  F040         	movff	?___ftadd,eval_poly@res
  4413  001A10  C02C  F041         	movff	?___ftadd+1,eval_poly@res+1
  4414  001A14  C02D  F042         	movff	?___ftadd+2,eval_poly@res+2
  4415  001A18                     l858:
  4416  001A18  503C               	movf	eval_poly@n,w,c
  4417  001A1A  103D               	iorwf	eval_poly@n+1,w,c
  4418  001A1C  A4D8               	btfss	status,2,c
  4419  001A1E  D7BE               	goto	l859
  4420  001A20  C040  F037         	movff	eval_poly@res,?_eval_poly
  4421  001A24  C041  F038         	movff	eval_poly@res+1,?_eval_poly+1
  4422  001A28  C042  F039         	movff	eval_poly@res+2,?_eval_poly+2
  4423  001A2C  0012               	return		;funcret
  4424  001A2E                     __end_of_eval_poly:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           intcon	equ	0xFF2
  4431                           postinc0	equ	0xFEE
  4432                           wreg	equ	0xFE8
  4433                           plusw1	equ	0xFE3
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           plusw2	equ	0xFDB
  4437                           fsr2h	equ	0xFDA
  4438                           fsr2l	equ	0xFD9
  4439                           status	equ	0xFD8
  4440                           
  4441 ;; *************** function ___wmul *****************
  4442 ;; Defined at:
  4443 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  multiplier      2    0[COMRAM] unsigned int 
  4446 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  product         2    4[COMRAM] unsigned int 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    0[COMRAM] unsigned int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, prodl, prodh
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         4       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        6 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_eval_poly
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text21
  4472  0020AE                     __ptext21:
  4473                           	opt stack 0
  4474  0020AE                     ___wmul:
  4475                           	opt stack 25
  4476                           
  4477                           ;incstack = 0
  4478  0020AE  5001               	movf	___wmul@multiplier,w,c
  4479  0020B0  0203               	mulwf	___wmul@multiplicand,c
  4480  0020B2  CFF3 F005          	movff	prodl,___wmul@product
  4481  0020B6  CFF4 F006          	movff	prodh,___wmul@product+1
  4482  0020BA  5001               	movf	___wmul@multiplier,w,c
  4483  0020BC  0204               	mulwf	___wmul@multiplicand+1,c
  4484  0020BE  50F3               	movf	prodl,w,c
  4485  0020C0  2606               	addwf	___wmul@product+1,f,c
  4486  0020C2  5002               	movf	___wmul@multiplier+1,w,c
  4487  0020C4  0203               	mulwf	___wmul@multiplicand,c
  4488  0020C6  50F3               	movf	prodl,w,c
  4489  0020C8  2606               	addwf	___wmul@product+1,f,c
  4490  0020CA  C005  F001         	movff	___wmul@product,?___wmul
  4491  0020CE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4492  0020D2  0012               	return	
  4493  0020D4                     __end_of___wmul:
  4494                           	opt stack 0
  4495                           tblptru	equ	0xFF8
  4496                           tblptrh	equ	0xFF7
  4497                           tblptrl	equ	0xFF6
  4498                           tablat	equ	0xFF5
  4499                           prodh	equ	0xFF4
  4500                           prodl	equ	0xFF3
  4501                           intcon	equ	0xFF2
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           plusw1	equ	0xFE3
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           plusw2	equ	0xFDB
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function ___ftmul *****************
  4513 ;; Defined at:
  4514 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  f1              3   12[COMRAM] float 
  4517 ;;  f2              3   15[COMRAM] float 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4520 ;;  sign            1   26[COMRAM] unsigned char 
  4521 ;;  cntr            1   25[COMRAM] unsigned char 
  4522 ;;  exp             1   21[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  3   12[COMRAM] float 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4532 ;;      Params:         6       0       0       0       0       0       0       0       0
  4533 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4534 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4535 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4536 ;;Total ram usage:       15 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    1
  4539 ;; This function calls:
  4540 ;;		___ftpack
  4541 ;; This function is called by:
  4542 ;;		_coinfig_ccpcon
  4543 ;;		_config_ccp1
  4544 ;;		_config_ccp2
  4545 ;;		_pow
  4546 ;;		_exp
  4547 ;;		_log
  4548 ;;		_eval_poly
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text22
  4553  0016A4                     __ptext22:
  4554                           	opt stack 0
  4555  0016A4                     ___ftmul:
  4556                           	opt stack 28
  4557                           
  4558                           ;incstack = 0
  4559  0016A4  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4560  0016A8  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4561  0016AA  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4562  0016AC  340E               	rlcf	___ftmul@f1+1,w,c
  4563  0016AE  3613               	rlcf	??___ftmul& (0+255),f,c
  4564  0016B0  E301               	bnc	u2181
  4565  0016B2  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4566  0016B4                     u2181:
  4567  0016B4  5013               	movf	??___ftmul,w,c
  4568  0016B6  6E16               	movwf	___ftmul@exp,c
  4569  0016B8  5016               	movf	___ftmul@exp,w,c
  4570  0016BA  A4D8               	btfss	status,2,c
  4571  0016BC  D007               	goto	l508
  4572  0016BE  0E00               	movlw	0
  4573  0016C0  6E0D               	movwf	?___ftmul,c
  4574  0016C2  0E00               	movlw	0
  4575  0016C4  6E0E               	movwf	?___ftmul+1,c
  4576  0016C6  0E00               	movlw	0
  4577  0016C8  6E0F               	movwf	?___ftmul+2,c
  4578  0016CA  0012               	return	
  4579  0016CC                     l508:
  4580  0016CC  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4581  0016D0  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4582  0016D2  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4583  0016D4  3411               	rlcf	___ftmul@f2+1,w,c
  4584  0016D6  3613               	rlcf	??___ftmul& (0+255),f,c
  4585  0016D8  E301               	bnc	u2201
  4586  0016DA  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4587  0016DC                     u2201:
  4588  0016DC  5013               	movf	??___ftmul,w,c
  4589  0016DE  6E1B               	movwf	___ftmul@sign,c
  4590  0016E0  501B               	movf	___ftmul@sign,w,c
  4591  0016E2  A4D8               	btfss	status,2,c
  4592  0016E4  D007               	goto	l510
  4593  0016E6  0E00               	movlw	0
  4594  0016E8  6E0D               	movwf	?___ftmul,c
  4595  0016EA  0E00               	movlw	0
  4596  0016EC  6E0E               	movwf	?___ftmul+1,c
  4597  0016EE  0E00               	movlw	0
  4598  0016F0  6E0F               	movwf	?___ftmul+2,c
  4599  0016F2  0012               	return	
  4600  0016F4                     l510:
  4601  0016F4  501B               	movf	___ftmul@sign,w,c
  4602  0016F6  0F7B               	addlw	123
  4603  0016F8  2616               	addwf	___ftmul@exp,f,c
  4604  0016FA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4605  0016FE  5012               	movf	___ftmul@f2+2,w,c
  4606  001700  1A1B               	xorwf	___ftmul@sign,f,c
  4607  001702  0E80               	movlw	128
  4608  001704  161B               	andwf	___ftmul@sign,f,c
  4609  001706  8E0E               	bsf	___ftmul@f1+1,7,c
  4610  001708  8E11               	bsf	___ftmul@f2+1,7,c
  4611  00170A  0EFF               	movlw	255
  4612  00170C  1610               	andwf	___ftmul@f2,f,c
  4613  00170E  0EFF               	movlw	255
  4614  001710  1611               	andwf	___ftmul@f2+1,f,c
  4615  001712  0E00               	movlw	0
  4616  001714  1612               	andwf	___ftmul@f2+2,f,c
  4617  001716  0E00               	movlw	0
  4618  001718  6E17               	movwf	___ftmul@f3_as_product,c
  4619  00171A  0E00               	movlw	0
  4620  00171C  6E18               	movwf	___ftmul@f3_as_product+1,c
  4621  00171E  0E00               	movlw	0
  4622  001720  6E19               	movwf	___ftmul@f3_as_product+2,c
  4623  001722  0E07               	movlw	7
  4624  001724  6E1A               	movwf	___ftmul@cntr,c
  4625  001726  A00D               	btfss	___ftmul@f1,0,c
  4626  001728  D006               	goto	l512
  4627  00172A  5010               	movf	___ftmul@f2,w,c
  4628  00172C  2617               	addwf	___ftmul@f3_as_product,f,c
  4629  00172E  5011               	movf	___ftmul@f2+1,w,c
  4630  001730  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4631  001732  5012               	movf	___ftmul@f2+2,w,c
  4632  001734  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4633  001736                     l512:
  4634  001736  90D8               	bcf	status,0,c
  4635  001738  320F               	rrcf	___ftmul@f1+2,f,c
  4636  00173A  320E               	rrcf	___ftmul@f1+1,f,c
  4637  00173C  320D               	rrcf	___ftmul@f1,f,c
  4638  00173E  90D8               	bcf	status,0,c
  4639  001740  3610               	rlcf	___ftmul@f2,f,c
  4640  001742  3611               	rlcf	___ftmul@f2+1,f,c
  4641  001744  3612               	rlcf	___ftmul@f2+2,f,c
  4642  001746  2E1A               	decfsz	___ftmul@cntr,f,c
  4643  001748  D7EE               	goto	l511
  4644  00174A  0E09               	movlw	9
  4645  00174C  6E1A               	movwf	___ftmul@cntr,c
  4646  00174E  A00D               	btfss	___ftmul@f1,0,c
  4647  001750  D006               	goto	l515
  4648  001752  5010               	movf	___ftmul@f2,w,c
  4649  001754  2617               	addwf	___ftmul@f3_as_product,f,c
  4650  001756  5011               	movf	___ftmul@f2+1,w,c
  4651  001758  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4652  00175A  5012               	movf	___ftmul@f2+2,w,c
  4653  00175C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4654  00175E                     l515:
  4655  00175E  90D8               	bcf	status,0,c
  4656  001760  320F               	rrcf	___ftmul@f1+2,f,c
  4657  001762  320E               	rrcf	___ftmul@f1+1,f,c
  4658  001764  320D               	rrcf	___ftmul@f1,f,c
  4659  001766  90D8               	bcf	status,0,c
  4660  001768  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  4661  00176A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  4662  00176C  3217               	rrcf	___ftmul@f3_as_product,f,c
  4663  00176E  2E1A               	decfsz	___ftmul@cntr,f,c
  4664  001770  D7EE               	goto	l514
  4665  001772  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4666  001776  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4667  00177A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4668  00177E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4669  001782  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4670  001786  ECD6  F00D         	call	___ftpack	;wreg free
  4671  00178A  C001  F00D         	movff	?___ftpack,?___ftmul
  4672  00178E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4673  001792  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4674  001796  0012               	return	
  4675  001798                     __end_of___ftmul:
  4676                           	opt stack 0
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           prodh	equ	0xFF4
  4682                           prodl	equ	0xFF3
  4683                           intcon	equ	0xFF2
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           plusw1	equ	0xFE3
  4687                           postinc2	equ	0xFDE
  4688                           postdec2	equ	0xFDD
  4689                           plusw2	equ	0xFDB
  4690                           fsr2h	equ	0xFDA
  4691                           fsr2l	equ	0xFD9
  4692                           status	equ	0xFD8
  4693                           
  4694 ;; *************** function ___ftsub *****************
  4695 ;; Defined at:
  4696 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  f1              3   54[COMRAM] float 
  4699 ;;  f2              3   57[COMRAM] float 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  3   54[COMRAM] float 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4711 ;;      Params:         6       0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4714 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        6 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		___ftadd
  4720 ;; This function is called by:
  4721 ;;		_exp
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text23
  4726  001FFC                     __ptext23:
  4727                           	opt stack 0
  4728  001FFC                     ___ftsub:
  4729                           	opt stack 24
  4730                           
  4731                           ;incstack = 0
  4732  001FFC  503A               	movf	___ftsub@f2,w,c
  4733  001FFE  103B               	iorwf	___ftsub@f2+1,w,c
  4734  002000  103C               	iorwf	___ftsub@f2+2,w,c
  4735  002002  B4D8               	btfsc	status,2,c
  4736  002004  D006               	goto	l525
  4737  002006  0E00               	movlw	0
  4738  002008  1A3A               	xorwf	___ftsub@f2,f,c
  4739  00200A  0E00               	movlw	0
  4740  00200C  1A3B               	xorwf	___ftsub@f2+1,f,c
  4741  00200E  0E80               	movlw	128
  4742  002010  1A3C               	xorwf	___ftsub@f2+2,f,c
  4743  002012                     l525:
  4744  002012  C037  F02B         	movff	___ftsub@f1,___ftadd@f1
  4745  002016  C038  F02C         	movff	___ftsub@f1+1,___ftadd@f1+1
  4746  00201A  C039  F02D         	movff	___ftsub@f1+2,___ftadd@f1+2
  4747  00201E  C03A  F02E         	movff	___ftsub@f2,___ftadd@f2
  4748  002022  C03B  F02F         	movff	___ftsub@f2+1,___ftadd@f2+1
  4749  002026  C03C  F030         	movff	___ftsub@f2+2,___ftadd@f2+2
  4750  00202A  ECE6  F007         	call	___ftadd	;wreg free
  4751  00202E  C02B  F037         	movff	?___ftadd,?___ftsub
  4752  002032  C02C  F038         	movff	?___ftadd+1,?___ftsub+1
  4753  002036  C02D  F039         	movff	?___ftadd+2,?___ftsub+2
  4754  00203A  0012               	return	
  4755  00203C                     __end_of___ftsub:
  4756                           	opt stack 0
  4757                           tblptru	equ	0xFF8
  4758                           tblptrh	equ	0xFF7
  4759                           tblptrl	equ	0xFF6
  4760                           tablat	equ	0xFF5
  4761                           prodh	equ	0xFF4
  4762                           prodl	equ	0xFF3
  4763                           intcon	equ	0xFF2
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           plusw1	equ	0xFE3
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           plusw2	equ	0xFDB
  4770                           fsr2h	equ	0xFDA
  4771                           fsr2l	equ	0xFD9
  4772                           status	equ	0xFD8
  4773                           
  4774 ;; *************** function ___ftadd *****************
  4775 ;; Defined at:
  4776 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  f1              3   42[COMRAM] float 
  4779 ;;  f2              3   45[COMRAM] float 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  exp1            1   53[COMRAM] unsigned char 
  4782 ;;  exp2            1   52[COMRAM] unsigned char 
  4783 ;;  sign            1   51[COMRAM] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  3   42[COMRAM] float 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4793 ;;      Params:         6       0       0       0       0       0       0       0       0
  4794 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4795 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4796 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4797 ;;Total ram usage:       12 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		___ftpack
  4802 ;; This function is called by:
  4803 ;;		_coinfig_ccpcon
  4804 ;;		_config_ccp1
  4805 ;;		_config_ccp2
  4806 ;;		___ftsub
  4807 ;;		_floor
  4808 ;;		_log
  4809 ;;		_eval_poly
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text24
  4814  000FCC                     __ptext24:
  4815                           	opt stack 0
  4816  000FCC                     ___ftadd:
  4817                           	opt stack 28
  4818                           
  4819                           ;incstack = 0
  4820  000FCC  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4821  000FD0  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4822  000FD2  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4823  000FD4  342C               	rlcf	___ftadd@f1+1,w,c
  4824  000FD6  3631               	rlcf	??___ftadd& (0+255),f,c
  4825  000FD8  E301               	bnc	u1971
  4826  000FDA  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4827  000FDC                     u1971:
  4828  000FDC  5031               	movf	??___ftadd,w,c
  4829  000FDE  6E36               	movwf	___ftadd@exp1,c
  4830  000FE0  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4831  000FE4  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4832  000FE6  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4833  000FE8  342F               	rlcf	___ftadd@f2+1,w,c
  4834  000FEA  3631               	rlcf	??___ftadd& (0+255),f,c
  4835  000FEC  E301               	bnc	u1981
  4836  000FEE  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4837  000FF0                     u1981:
  4838  000FF0  5031               	movf	??___ftadd,w,c
  4839  000FF2  6E35               	movwf	___ftadd@exp2,c
  4840  000FF4  5036               	movf	___ftadd@exp1,w,c
  4841  000FF6  B4D8               	btfsc	status,2,c
  4842  000FF8  D00B               	goto	u2010
  4843  000FFA  5035               	movf	___ftadd@exp2,w,c
  4844  000FFC  5C36               	subwf	___ftadd@exp1,w,c
  4845  000FFE  B0D8               	btfsc	status,0,c
  4846  001000  D00E               	goto	l460
  4847  001002  5036               	movf	___ftadd@exp1,w,c
  4848  001004  0800               	sublw	0
  4849  001006  2435               	addwf	___ftadd@exp2,w,c
  4850  001008  6E31               	movwf	??___ftadd& (0+255),c
  4851  00100A  0E18               	movlw	24
  4852  00100C  6431               	cpfsgt	??___ftadd,c
  4853  00100E  D007               	goto	l460
  4854  001010                     u2010:
  4855  001010  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4856  001014  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4857  001018  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4858  00101C  0012               	return	
  4859  00101E                     l460:
  4860  00101E  5035               	movf	___ftadd@exp2,w,c
  4861  001020  B4D8               	btfsc	status,2,c
  4862  001022  D00B               	goto	u2040
  4863  001024  5036               	movf	___ftadd@exp1,w,c
  4864  001026  5C35               	subwf	___ftadd@exp2,w,c
  4865  001028  B0D8               	btfsc	status,0,c
  4866  00102A  D00E               	goto	l464
  4867  00102C  5035               	movf	___ftadd@exp2,w,c
  4868  00102E  0800               	sublw	0
  4869  001030  2436               	addwf	___ftadd@exp1,w,c
  4870  001032  6E31               	movwf	??___ftadd& (0+255),c
  4871  001034  0E18               	movlw	24
  4872  001036  6431               	cpfsgt	??___ftadd,c
  4873  001038  D007               	goto	l464
  4874  00103A                     u2040:
  4875  00103A  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4876  00103E  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4877  001042  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4878  001046  0012               	return	
  4879  001048                     l464:
  4880  001048  0E06               	movlw	6
  4881  00104A  6E34               	movwf	___ftadd@sign,c
  4882  00104C  BE2D               	btfsc	___ftadd@f1+2,7,c
  4883  00104E  8E34               	bsf	___ftadd@sign,7,c
  4884  001050  BE30               	btfsc	___ftadd@f2+2,7,c
  4885  001052  8C34               	bsf	___ftadd@sign,6,c
  4886  001054  8E2C               	bsf	___ftadd@f1+1,7,c
  4887  001056  0EFF               	movlw	255
  4888  001058  162B               	andwf	___ftadd@f1,f,c
  4889  00105A  0EFF               	movlw	255
  4890  00105C  162C               	andwf	___ftadd@f1+1,f,c
  4891  00105E  0E00               	movlw	0
  4892  001060  162D               	andwf	___ftadd@f1+2,f,c
  4893  001062  8E2F               	bsf	___ftadd@f2+1,7,c
  4894  001064  0EFF               	movlw	255
  4895  001066  162E               	andwf	___ftadd@f2,f,c
  4896  001068  0EFF               	movlw	255
  4897  00106A  162F               	andwf	___ftadd@f2+1,f,c
  4898  00106C  0E00               	movlw	0
  4899  00106E  1630               	andwf	___ftadd@f2+2,f,c
  4900  001070  5035               	movf	___ftadd@exp2,w,c
  4901  001072  5C36               	subwf	___ftadd@exp1,w,c
  4902  001074  B0D8               	btfsc	status,0,c
  4903  001076  D01B               	goto	l469
  4904  001078                     u2070:
  4905  001078  90D8               	bcf	status,0,c
  4906  00107A  362E               	rlcf	___ftadd@f2,f,c
  4907  00107C  362F               	rlcf	___ftadd@f2+1,f,c
  4908  00107E  3630               	rlcf	___ftadd@f2+2,f,c
  4909  001080  0635               	decf	___ftadd@exp2,f,c
  4910  001082  5036               	movf	___ftadd@exp1,w,c
  4911  001084  1835               	xorwf	___ftadd@exp2,w,c
  4912  001086  B4D8               	btfsc	status,2,c
  4913  001088  D00D               	goto	l474
  4914  00108A  0634               	decf	___ftadd@sign,f,c
  4915  00108C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4916  001090  0E07               	movlw	7
  4917  001092  1631               	andwf	??___ftadd,f,c
  4918  001094  B4D8               	btfsc	status,2,c
  4919  001096  D006               	goto	l474
  4920  001098  D7EF               	goto	u2070
  4921  00109A  90D8               	bcf	status,0,c
  4922  00109C  322D               	rrcf	___ftadd@f1+2,f,c
  4923  00109E  322C               	rrcf	___ftadd@f1+1,f,c
  4924  0010A0  322B               	rrcf	___ftadd@f1,f,c
  4925  0010A2  2A36               	incf	___ftadd@exp1,f,c
  4926  0010A4                     l474:
  4927  0010A4  5035               	movf	___ftadd@exp2,w,c
  4928  0010A6  1836               	xorwf	___ftadd@exp1,w,c
  4929  0010A8  B4D8               	btfsc	status,2,c
  4930  0010AA  D01F               	goto	u2140
  4931  0010AC  D7F6               	goto	l475
  4932  0010AE                     l469:
  4933  0010AE  5036               	movf	___ftadd@exp1,w,c
  4934  0010B0  5C35               	subwf	___ftadd@exp2,w,c
  4935  0010B2  B0D8               	btfsc	status,0,c
  4936  0010B4  D01A               	goto	u2140
  4937  0010B6                     u2110:
  4938  0010B6  90D8               	bcf	status,0,c
  4939  0010B8  362B               	rlcf	___ftadd@f1,f,c
  4940  0010BA  362C               	rlcf	___ftadd@f1+1,f,c
  4941  0010BC  362D               	rlcf	___ftadd@f1+2,f,c
  4942  0010BE  0636               	decf	___ftadd@exp1,f,c
  4943  0010C0  5036               	movf	___ftadd@exp1,w,c
  4944  0010C2  1835               	xorwf	___ftadd@exp2,w,c
  4945  0010C4  B4D8               	btfsc	status,2,c
  4946  0010C6  D00D               	goto	l483
  4947  0010C8  0634               	decf	___ftadd@sign,f,c
  4948  0010CA  C034  F031         	movff	___ftadd@sign,??___ftadd
  4949  0010CE  0E07               	movlw	7
  4950  0010D0  1631               	andwf	??___ftadd,f,c
  4951  0010D2  B4D8               	btfsc	status,2,c
  4952  0010D4  D006               	goto	l483
  4953  0010D6  D7EF               	goto	u2110
  4954  0010D8  90D8               	bcf	status,0,c
  4955  0010DA  3230               	rrcf	___ftadd@f2+2,f,c
  4956  0010DC  322F               	rrcf	___ftadd@f2+1,f,c
  4957  0010DE  322E               	rrcf	___ftadd@f2,f,c
  4958  0010E0  2A35               	incf	___ftadd@exp2,f,c
  4959  0010E2                     l483:
  4960  0010E2  5035               	movf	___ftadd@exp2,w,c
  4961  0010E4  1836               	xorwf	___ftadd@exp1,w,c
  4962  0010E6  A4D8               	btfss	status,2,c
  4963  0010E8  D7F7               	goto	l484
  4964  0010EA                     u2140:
  4965  0010EA  AE34               	btfss	___ftadd@sign,7,c
  4966  0010EC  D00C               	goto	l486
  4967  0010EE  0EFF               	movlw	255
  4968  0010F0  1A2B               	xorwf	___ftadd@f1,f,c
  4969  0010F2  0EFF               	movlw	255
  4970  0010F4  1A2C               	xorwf	___ftadd@f1+1,f,c
  4971  0010F6  0EFF               	movlw	255
  4972  0010F8  1A2D               	xorwf	___ftadd@f1+2,f,c
  4973  0010FA  0E01               	movlw	1
  4974  0010FC  262B               	addwf	___ftadd@f1,f,c
  4975  0010FE  0E00               	movlw	0
  4976  001100  222C               	addwfc	___ftadd@f1+1,f,c
  4977  001102  0E00               	movlw	0
  4978  001104  222D               	addwfc	___ftadd@f1+2,f,c
  4979  001106                     l486:
  4980  001106  AC34               	btfss	___ftadd@sign,6,c
  4981  001108  D00C               	goto	l487
  4982  00110A  0EFF               	movlw	255
  4983  00110C  1A2E               	xorwf	___ftadd@f2,f,c
  4984  00110E  0EFF               	movlw	255
  4985  001110  1A2F               	xorwf	___ftadd@f2+1,f,c
  4986  001112  0EFF               	movlw	255
  4987  001114  1A30               	xorwf	___ftadd@f2+2,f,c
  4988  001116  0E01               	movlw	1
  4989  001118  262E               	addwf	___ftadd@f2,f,c
  4990  00111A  0E00               	movlw	0
  4991  00111C  222F               	addwfc	___ftadd@f2+1,f,c
  4992  00111E  0E00               	movlw	0
  4993  001120  2230               	addwfc	___ftadd@f2+2,f,c
  4994  001122                     l487:
  4995  001122  0E00               	movlw	0
  4996  001124  6E34               	movwf	___ftadd@sign,c
  4997  001126  502B               	movf	___ftadd@f1,w,c
  4998  001128  262E               	addwf	___ftadd@f2,f,c
  4999  00112A  502C               	movf	___ftadd@f1+1,w,c
  5000  00112C  222F               	addwfc	___ftadd@f2+1,f,c
  5001  00112E  502D               	movf	___ftadd@f1+2,w,c
  5002  001130  2230               	addwfc	___ftadd@f2+2,f,c
  5003  001132  AE30               	btfss	___ftadd@f2+2,7,c
  5004  001134  D00E               	goto	l488
  5005  001136  0EFF               	movlw	255
  5006  001138  1A2E               	xorwf	___ftadd@f2,f,c
  5007  00113A  0EFF               	movlw	255
  5008  00113C  1A2F               	xorwf	___ftadd@f2+1,f,c
  5009  00113E  0EFF               	movlw	255
  5010  001140  1A30               	xorwf	___ftadd@f2+2,f,c
  5011  001142  0E01               	movlw	1
  5012  001144  262E               	addwf	___ftadd@f2,f,c
  5013  001146  0E00               	movlw	0
  5014  001148  222F               	addwfc	___ftadd@f2+1,f,c
  5015  00114A  0E00               	movlw	0
  5016  00114C  2230               	addwfc	___ftadd@f2+2,f,c
  5017  00114E  0E01               	movlw	1
  5018  001150  6E34               	movwf	___ftadd@sign,c
  5019  001152                     l488:
  5020  001152  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  5021  001156  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5022  00115A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5023  00115E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  5024  001162  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  5025  001166  ECD6  F00D         	call	___ftpack	;wreg free
  5026  00116A  C001  F02B         	movff	?___ftpack,?___ftadd
  5027  00116E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  5028  001172  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  5029  001176  0012               	return	
  5030  001178                     __end_of___ftadd:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           prodh	equ	0xFF4
  5037                           prodl	equ	0xFF3
  5038                           intcon	equ	0xFF2
  5039                           postinc0	equ	0xFEE
  5040                           wreg	equ	0xFE8
  5041                           plusw1	equ	0xFE3
  5042                           postinc2	equ	0xFDE
  5043                           postdec2	equ	0xFDD
  5044                           plusw2	equ	0xFDB
  5045                           fsr2h	equ	0xFDA
  5046                           fsr2l	equ	0xFD9
  5047                           status	equ	0xFD8
  5048                           
  5049 ;; *************** function ___ftneg *****************
  5050 ;; Defined at:
  5051 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  f1              3    0[COMRAM] float 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  3    0[COMRAM] float 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5065 ;;      Params:         3       0       0       0       0       0       0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5068 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5069 ;;Total ram usage:        3 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_pow
  5075 ;;		_exp
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text25
  5080  0020F8                     __ptext25:
  5081                           	opt stack 0
  5082  0020F8                     ___ftneg:
  5083                           	opt stack 26
  5084                           
  5085                           ;incstack = 0
  5086  0020F8  5001               	movf	___ftneg@f1,w,c
  5087  0020FA  1002               	iorwf	___ftneg@f1+1,w,c
  5088  0020FC  1003               	iorwf	___ftneg@f1+2,w,c
  5089  0020FE  B4D8               	btfsc	status,2,c
  5090  002100  D006               	goto	l519
  5091  002102  0E00               	movlw	0
  5092  002104  1A01               	xorwf	___ftneg@f1,f,c
  5093  002106  0E00               	movlw	0
  5094  002108  1A02               	xorwf	___ftneg@f1+1,f,c
  5095  00210A  0E80               	movlw	128
  5096  00210C  1A03               	xorwf	___ftneg@f1+2,f,c
  5097  00210E                     l519:
  5098  00210E  C001  F001         	movff	___ftneg@f1,?___ftneg
  5099  002112  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5100  002116  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5101  00211A  0012               	return		;funcret
  5102  00211C                     __end_of___ftneg:
  5103                           	opt stack 0
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           plusw1	equ	0xFE3
  5114                           postinc2	equ	0xFDE
  5115                           postdec2	equ	0xFDD
  5116                           plusw2	equ	0xFDB
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function ___ftdiv *****************
  5122 ;; Defined at:
  5123 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  f1              3   27[COMRAM] float 
  5126 ;;  f2              3   30[COMRAM] float 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  f3              3   37[COMRAM] float 
  5129 ;;  sign            1   41[COMRAM] unsigned char 
  5130 ;;  exp             1   40[COMRAM] unsigned char 
  5131 ;;  cntr            1   36[COMRAM] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  3   27[COMRAM] float 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5141 ;;      Params:         6       0       0       0       0       0       0       0       0
  5142 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5143 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5144 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5145 ;;Total ram usage:       15 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		___ftpack
  5150 ;; This function is called by:
  5151 ;;		_coinfig_ccpcon
  5152 ;;		_config_ccp1
  5153 ;;		_config_ccp2
  5154 ;;		_exp
  5155 ;;		_wait_in_ms
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text26
  5160  001798                     __ptext26:
  5161                           	opt stack 0
  5162  001798                     ___ftdiv:
  5163                           	opt stack 28
  5164                           
  5165                           ;incstack = 0
  5166  001798  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  5167  00179C  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5168  00179E  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5169  0017A0  341D               	rlcf	___ftdiv@f1+1,w,c
  5170  0017A2  3622               	rlcf	??___ftdiv& (0+255),f,c
  5171  0017A4  E301               	bnc	u2371
  5172  0017A6  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5173  0017A8                     u2371:
  5174  0017A8  5022               	movf	??___ftdiv,w,c
  5175  0017AA  6E29               	movwf	___ftdiv@exp,c
  5176  0017AC  5029               	movf	___ftdiv@exp,w,c
  5177  0017AE  A4D8               	btfss	status,2,c
  5178  0017B0  D007               	goto	l493
  5179  0017B2  0E00               	movlw	0
  5180  0017B4  6E1C               	movwf	?___ftdiv,c
  5181  0017B6  0E00               	movlw	0
  5182  0017B8  6E1D               	movwf	?___ftdiv+1,c
  5183  0017BA  0E00               	movlw	0
  5184  0017BC  6E1E               	movwf	?___ftdiv+2,c
  5185  0017BE  0012               	return	
  5186  0017C0                     l493:
  5187  0017C0  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  5188  0017C4  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5189  0017C6  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5190  0017C8  3420               	rlcf	___ftdiv@f2+1,w,c
  5191  0017CA  3622               	rlcf	??___ftdiv& (0+255),f,c
  5192  0017CC  E301               	bnc	u2391
  5193  0017CE  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5194  0017D0                     u2391:
  5195  0017D0  5022               	movf	??___ftdiv,w,c
  5196  0017D2  6E2A               	movwf	___ftdiv@sign,c
  5197  0017D4  502A               	movf	___ftdiv@sign,w,c
  5198  0017D6  A4D8               	btfss	status,2,c
  5199  0017D8  D007               	goto	l495
  5200  0017DA  0E00               	movlw	0
  5201  0017DC  6E1C               	movwf	?___ftdiv,c
  5202  0017DE  0E00               	movlw	0
  5203  0017E0  6E1D               	movwf	?___ftdiv+1,c
  5204  0017E2  0E00               	movlw	0
  5205  0017E4  6E1E               	movwf	?___ftdiv+2,c
  5206  0017E6  0012               	return	
  5207  0017E8                     l495:
  5208  0017E8  0E00               	movlw	0
  5209  0017EA  6E26               	movwf	___ftdiv@f3,c
  5210  0017EC  0E00               	movlw	0
  5211  0017EE  6E27               	movwf	___ftdiv@f3+1,c
  5212  0017F0  0E00               	movlw	0
  5213  0017F2  6E28               	movwf	___ftdiv@f3+2,c
  5214  0017F4  502A               	movf	___ftdiv@sign,w,c
  5215  0017F6  0F89               	addlw	137
  5216  0017F8  5E29               	subwf	___ftdiv@exp,f,c
  5217  0017FA  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5218  0017FE  5021               	movf	___ftdiv@f2+2,w,c
  5219  001800  1A2A               	xorwf	___ftdiv@sign,f,c
  5220  001802  0E80               	movlw	128
  5221  001804  162A               	andwf	___ftdiv@sign,f,c
  5222  001806  8E1D               	bsf	___ftdiv@f1+1,7,c
  5223  001808  0EFF               	movlw	255
  5224  00180A  161C               	andwf	___ftdiv@f1,f,c
  5225  00180C  0EFF               	movlw	255
  5226  00180E  161D               	andwf	___ftdiv@f1+1,f,c
  5227  001810  0E00               	movlw	0
  5228  001812  161E               	andwf	___ftdiv@f1+2,f,c
  5229  001814  8E20               	bsf	___ftdiv@f2+1,7,c
  5230  001816  0EFF               	movlw	255
  5231  001818  161F               	andwf	___ftdiv@f2,f,c
  5232  00181A  0EFF               	movlw	255
  5233  00181C  1620               	andwf	___ftdiv@f2+1,f,c
  5234  00181E  0E00               	movlw	0
  5235  001820  1621               	andwf	___ftdiv@f2+2,f,c
  5236  001822  0E18               	movlw	24
  5237  001824  6E25               	movwf	___ftdiv@cntr,c
  5238  001826  90D8               	bcf	status,0,c
  5239  001828  3626               	rlcf	___ftdiv@f3,f,c
  5240  00182A  3627               	rlcf	___ftdiv@f3+1,f,c
  5241  00182C  3628               	rlcf	___ftdiv@f3+2,f,c
  5242  00182E  501F               	movf	___ftdiv@f2,w,c
  5243  001830  5C1C               	subwf	___ftdiv@f1,w,c
  5244  001832  5020               	movf	___ftdiv@f2+1,w,c
  5245  001834  581D               	subwfb	___ftdiv@f1+1,w,c
  5246  001836  5021               	movf	___ftdiv@f2+2,w,c
  5247  001838  581E               	subwfb	___ftdiv@f1+2,w,c
  5248  00183A  A0D8               	btfss	status,0,c
  5249  00183C  D007               	goto	l497
  5250  00183E  501F               	movf	___ftdiv@f2,w,c
  5251  001840  5E1C               	subwf	___ftdiv@f1,f,c
  5252  001842  5020               	movf	___ftdiv@f2+1,w,c
  5253  001844  5A1D               	subwfb	___ftdiv@f1+1,f,c
  5254  001846  5021               	movf	___ftdiv@f2+2,w,c
  5255  001848  5A1E               	subwfb	___ftdiv@f1+2,f,c
  5256  00184A  8026               	bsf	___ftdiv@f3,0,c
  5257  00184C                     l497:
  5258  00184C  90D8               	bcf	status,0,c
  5259  00184E  361C               	rlcf	___ftdiv@f1,f,c
  5260  001850  361D               	rlcf	___ftdiv@f1+1,f,c
  5261  001852  361E               	rlcf	___ftdiv@f1+2,f,c
  5262  001854  2E25               	decfsz	___ftdiv@cntr,f,c
  5263  001856  D7E7               	goto	l496
  5264  001858  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  5265  00185C  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5266  001860  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5267  001864  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  5268  001868  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5269  00186C  ECD6  F00D         	call	___ftpack	;wreg free
  5270  001870  C001  F01C         	movff	?___ftpack,?___ftdiv
  5271  001874  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  5272  001878  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  5273  00187C  0012               	return	
  5274  00187E                     __end_of___ftdiv:
  5275                           	opt stack 0
  5276                           tblptru	equ	0xFF8
  5277                           tblptrh	equ	0xFF7
  5278                           tblptrl	equ	0xFF6
  5279                           tablat	equ	0xFF5
  5280                           prodh	equ	0xFF4
  5281                           prodl	equ	0xFF3
  5282                           intcon	equ	0xFF2
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           plusw1	equ	0xFE3
  5286                           postinc2	equ	0xFDE
  5287                           postdec2	equ	0xFDD
  5288                           plusw2	equ	0xFDB
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function ___awtoft *****************
  5294 ;; Defined at:
  5295 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  c               2    8[COMRAM] int 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  sign            1   11[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  3    8[COMRAM] float 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5309 ;;      Params:         3       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5312 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:        4 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    1
  5316 ;; This function calls:
  5317 ;;		___ftpack
  5318 ;; This function is called by:
  5319 ;;		_config_timer2
  5320 ;;		_config_ccp1
  5321 ;;		_config_ccp2
  5322 ;;		_exp
  5323 ;;		_log
  5324 ;;		_wait_in_ms
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text27
  5329  002076                     __ptext27:
  5330                           	opt stack 0
  5331  002076                     ___awtoft:
  5332                           	opt stack 28
  5333                           
  5334                           ;incstack = 0
  5335  002076  0E00               	movlw	0
  5336  002078  6E0C               	movwf	___awtoft@sign,c
  5337  00207A  AE0A               	btfss	___awtoft@c+1,7,c
  5338  00207C  D006               	goto	l410
  5339  00207E  6C09               	negf	___awtoft@c,c
  5340  002080  1E0A               	comf	___awtoft@c+1,f,c
  5341  002082  B0D8               	btfsc	status,0,c
  5342  002084  2A0A               	incf	___awtoft@c+1,f,c
  5343  002086  0E01               	movlw	1
  5344  002088  6E0C               	movwf	___awtoft@sign,c
  5345  00208A                     l410:
  5346  00208A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5347  00208E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5348  002092  6A03               	clrf	___ftpack@arg+2,c
  5349  002094  0E8E               	movlw	142
  5350  002096  6E04               	movwf	___ftpack@exp,c
  5351  002098  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5352  00209C  ECD6  F00D         	call	___ftpack	;wreg free
  5353  0020A0  C001  F009         	movff	?___ftpack,?___awtoft
  5354  0020A4  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5355  0020A8  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5356  0020AC  0012               	return	
  5357  0020AE                     __end_of___awtoft:
  5358                           	opt stack 0
  5359                           tblptru	equ	0xFF8
  5360                           tblptrh	equ	0xFF7
  5361                           tblptrl	equ	0xFF6
  5362                           tablat	equ	0xFF5
  5363                           prodh	equ	0xFF4
  5364                           prodl	equ	0xFF3
  5365                           intcon	equ	0xFF2
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           plusw1	equ	0xFE3
  5369                           postinc2	equ	0xFDE
  5370                           postdec2	equ	0xFDD
  5371                           plusw2	equ	0xFDB
  5372                           fsr2h	equ	0xFDA
  5373                           fsr2l	equ	0xFD9
  5374                           status	equ	0xFD8
  5375                           
  5376 ;; *************** function ___lltoft *****************
  5377 ;; Defined at:
  5378 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  c               4    8[COMRAM] unsigned long 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  exp             1   16[COMRAM] unsigned char 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  3    8[COMRAM] float 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5392 ;;      Params:         4       0       0       0       0       0       0       0       0
  5393 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5394 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5395 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5396 ;;Total ram usage:        9 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    1
  5399 ;; This function calls:
  5400 ;;		___ftpack
  5401 ;; This function is called by:
  5402 ;;		_pow
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text28
  5407  001F46                     __ptext28:
  5408                           	opt stack 0
  5409  001F46                     ___lltoft:
  5410                           	opt stack 26
  5411                           
  5412                           ;incstack = 0
  5413  001F46  0E8E               	movlw	142
  5414  001F48  6E11               	movwf	___lltoft@exp,c
  5415  001F4A  D006               	goto	l586
  5416  001F4C  90D8               	bcf	status,0,c
  5417  001F4E  320C               	rrcf	___lltoft@c+3,f,c
  5418  001F50  320B               	rrcf	___lltoft@c+2,f,c
  5419  001F52  320A               	rrcf	___lltoft@c+1,f,c
  5420  001F54  3209               	rrcf	___lltoft@c,f,c
  5421  001F56  2A11               	incf	___lltoft@exp,f,c
  5422  001F58                     l586:
  5423  001F58  0E00               	movlw	0
  5424  001F5A  1409               	andwf	___lltoft@c,w,c
  5425  001F5C  6E0D               	movwf	??___lltoft& (0+255),c
  5426  001F5E  0E00               	movlw	0
  5427  001F60  140A               	andwf	___lltoft@c+1,w,c
  5428  001F62  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5429  001F64  0E00               	movlw	0
  5430  001F66  140B               	andwf	___lltoft@c+2,w,c
  5431  001F68  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5432  001F6A  0EFF               	movlw	255
  5433  001F6C  140C               	andwf	___lltoft@c+3,w,c
  5434  001F6E  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5435  001F70  500D               	movf	??___lltoft,w,c
  5436  001F72  100E               	iorwf	??___lltoft+1,w,c
  5437  001F74  100F               	iorwf	??___lltoft+2,w,c
  5438  001F76  1010               	iorwf	??___lltoft+3,w,c
  5439  001F78  A4D8               	btfss	status,2,c
  5440  001F7A  D7E8               	goto	l587
  5441  001F7C  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5442  001F80  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5443  001F84  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5444  001F88  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5445  001F8C  0E00               	movlw	0
  5446  001F8E  6E05               	movwf	___ftpack@sign,c
  5447  001F90  ECD6  F00D         	call	___ftpack	;wreg free
  5448  001F94  C001  F009         	movff	?___ftpack,?___lltoft
  5449  001F98  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5450  001F9C  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5451  001FA0  0012               	return	
  5452  001FA2                     __end_of___lltoft:
  5453                           	opt stack 0
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           plusw1	equ	0xFE3
  5464                           postinc2	equ	0xFDE
  5465                           postdec2	equ	0xFDD
  5466                           plusw2	equ	0xFDB
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function ___ftpack *****************
  5472 ;; Defined at:
  5473 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  arg             3    0[COMRAM] unsigned um
  5476 ;;  exp             1    3[COMRAM] unsigned char 
  5477 ;;  sign            1    4[COMRAM] unsigned char 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  3    0[COMRAM] float 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5489 ;;      Params:         5       0       0       0       0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5491 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5492 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:        8 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		___altoft
  5499 ;;		___awtoft
  5500 ;;		___ftadd
  5501 ;;		___ftdiv
  5502 ;;		___ftmul
  5503 ;;		___lbtoft
  5504 ;;		___lltoft
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text29
  5509  001BAC                     __ptext29:
  5510                           	opt stack 0
  5511  001BAC                     ___ftpack:
  5512                           	opt stack 28
  5513                           
  5514                           ;incstack = 0
  5515  001BAC  5004               	movf	___ftpack@exp,w,c
  5516  001BAE  B4D8               	btfsc	status,2,c
  5517  001BB0  D005               	goto	u1880
  5518  001BB2  5001               	movf	___ftpack@arg,w,c
  5519  001BB4  1002               	iorwf	___ftpack@arg+1,w,c
  5520  001BB6  1003               	iorwf	___ftpack@arg+2,w,c
  5521  001BB8  A4D8               	btfss	status,2,c
  5522  001BBA  D00C               	goto	l429
  5523  001BBC                     u1880:
  5524  001BBC  0E00               	movlw	0
  5525  001BBE  6E01               	movwf	?___ftpack,c
  5526  001BC0  0E00               	movlw	0
  5527  001BC2  6E02               	movwf	?___ftpack+1,c
  5528  001BC4  0E00               	movlw	0
  5529  001BC6  6E03               	movwf	?___ftpack+2,c
  5530  001BC8  0012               	return	
  5531  001BCA  2A04               	incf	___ftpack@exp,f,c
  5532  001BCC  90D8               	bcf	status,0,c
  5533  001BCE  3203               	rrcf	___ftpack@arg+2,f,c
  5534  001BD0  3202               	rrcf	___ftpack@arg+1,f,c
  5535  001BD2  3201               	rrcf	___ftpack@arg,f,c
  5536  001BD4                     l429:
  5537  001BD4  0E00               	movlw	0
  5538  001BD6  1401               	andwf	___ftpack@arg,w,c
  5539  001BD8  6E06               	movwf	??___ftpack& (0+255),c
  5540  001BDA  0E00               	movlw	0
  5541  001BDC  1402               	andwf	___ftpack@arg+1,w,c
  5542  001BDE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5543  001BE0  0EFE               	movlw	254
  5544  001BE2  1403               	andwf	___ftpack@arg+2,w,c
  5545  001BE4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5546  001BE6  5006               	movf	??___ftpack,w,c
  5547  001BE8  1007               	iorwf	??___ftpack+1,w,c
  5548  001BEA  1008               	iorwf	??___ftpack+2,w,c
  5549  001BEC  B4D8               	btfsc	status,2,c
  5550  001BEE  D00C               	goto	l432
  5551  001BF0  D7EC               	goto	l430
  5552  001BF2  2A04               	incf	___ftpack@exp,f,c
  5553  001BF4  0E01               	movlw	1
  5554  001BF6  2601               	addwf	___ftpack@arg,f,c
  5555  001BF8  0E00               	movlw	0
  5556  001BFA  2202               	addwfc	___ftpack@arg+1,f,c
  5557  001BFC  0E00               	movlw	0
  5558  001BFE  2203               	addwfc	___ftpack@arg+2,f,c
  5559  001C00  90D8               	bcf	status,0,c
  5560  001C02  3203               	rrcf	___ftpack@arg+2,f,c
  5561  001C04  3202               	rrcf	___ftpack@arg+1,f,c
  5562  001C06  3201               	rrcf	___ftpack@arg,f,c
  5563  001C08                     l432:
  5564  001C08  0E00               	movlw	0
  5565  001C0A  1401               	andwf	___ftpack@arg,w,c
  5566  001C0C  6E06               	movwf	??___ftpack& (0+255),c
  5567  001C0E  0E00               	movlw	0
  5568  001C10  1402               	andwf	___ftpack@arg+1,w,c
  5569  001C12  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5570  001C14  0EFF               	movlw	255
  5571  001C16  1403               	andwf	___ftpack@arg+2,w,c
  5572  001C18  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5573  001C1A  5006               	movf	??___ftpack,w,c
  5574  001C1C  1007               	iorwf	??___ftpack+1,w,c
  5575  001C1E  1008               	iorwf	??___ftpack+2,w,c
  5576  001C20  B4D8               	btfsc	status,2,c
  5577  001C22  D006               	goto	l435
  5578  001C24  D7E6               	goto	l433
  5579  001C26  0604               	decf	___ftpack@exp,f,c
  5580  001C28  90D8               	bcf	status,0,c
  5581  001C2A  3601               	rlcf	___ftpack@arg,f,c
  5582  001C2C  3602               	rlcf	___ftpack@arg+1,f,c
  5583  001C2E  3603               	rlcf	___ftpack@arg+2,f,c
  5584  001C30                     l435:
  5585  001C30  BE02               	btfsc	___ftpack@arg+1,7,c
  5586  001C32  D003               	goto	u1920
  5587  001C34  0E02               	movlw	2
  5588  001C36  6004               	cpfslt	___ftpack@exp,c
  5589  001C38  D7F6               	goto	l436
  5590  001C3A                     u1920:
  5591  001C3A  A004               	btfss	___ftpack@exp,0,c
  5592  001C3C  9E02               	bcf	___ftpack@arg+1,7,c
  5593  001C3E  90D8               	bcf	status,0,c
  5594  001C40  3204               	rrcf	___ftpack@exp,f,c
  5595  001C42  5004               	movf	___ftpack@exp,w,c
  5596  001C44  1203               	iorwf	___ftpack@arg+2,f,c
  5597  001C46  5005               	movf	___ftpack@sign,w,c
  5598  001C48  A4D8               	btfss	status,2,c
  5599  001C4A  8E03               	bsf	___ftpack@arg+2,7,c
  5600  001C4C  C001  F001         	movff	___ftpack@arg,?___ftpack
  5601  001C50  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5602  001C54  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5603  001C58  0012               	return	
  5604  001C5A                     __end_of___ftpack:
  5605                           	opt stack 0
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           intcon	equ	0xFF2
  5613                           postinc0	equ	0xFEE
  5614                           wreg	equ	0xFE8
  5615                           plusw1	equ	0xFE3
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           plusw2	equ	0xFDB
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function ___awdiv *****************
  5624 ;; Defined at:
  5625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  dividend        2    0[COMRAM] int 
  5628 ;;  divisor         2    2[COMRAM] int 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  quotient        2    6[COMRAM] int 
  5631 ;;  sign            1    5[COMRAM] unsigned char 
  5632 ;;  counter         1    4[COMRAM] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2    0[COMRAM] int 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5642 ;;      Params:         4       0       0       0       0       0       0       0       0
  5643 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5645 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5646 ;;Total ram usage:        8 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_config_ccp1
  5652 ;;		_config_ccp2
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text30
  5657  001D7A                     __ptext30:
  5658                           	opt stack 0
  5659  001D7A                     ___awdiv:
  5660                           	opt stack 28
  5661                           
  5662                           ;incstack = 0
  5663  001D7A  0E00               	movlw	0
  5664  001D7C  6E06               	movwf	___awdiv@sign,c
  5665  001D7E  AE04               	btfss	___awdiv@divisor+1,7,c
  5666  001D80  D006               	goto	l382
  5667  001D82  6C03               	negf	___awdiv@divisor,c
  5668  001D84  1E04               	comf	___awdiv@divisor+1,f,c
  5669  001D86  B0D8               	btfsc	status,0,c
  5670  001D88  2A04               	incf	___awdiv@divisor+1,f,c
  5671  001D8A  0E01               	movlw	1
  5672  001D8C  6E06               	movwf	___awdiv@sign,c
  5673  001D8E                     l382:
  5674  001D8E  AE02               	btfss	___awdiv@dividend+1,7,c
  5675  001D90  D006               	goto	l383
  5676  001D92  6C01               	negf	___awdiv@dividend,c
  5677  001D94  1E02               	comf	___awdiv@dividend+1,f,c
  5678  001D96  B0D8               	btfsc	status,0,c
  5679  001D98  2A02               	incf	___awdiv@dividend+1,f,c
  5680  001D9A  0E01               	movlw	1
  5681  001D9C  1A06               	xorwf	___awdiv@sign,f,c
  5682  001D9E                     l383:
  5683  001D9E  0E00               	movlw	0
  5684  001DA0  6E08               	movwf	___awdiv@quotient+1,c
  5685  001DA2  0E00               	movlw	0
  5686  001DA4  6E07               	movwf	___awdiv@quotient,c
  5687  001DA6  5003               	movf	___awdiv@divisor,w,c
  5688  001DA8  1004               	iorwf	___awdiv@divisor+1,w,c
  5689  001DAA  B4D8               	btfsc	status,2,c
  5690  001DAC  D01C               	goto	l390
  5691  001DAE  0E01               	movlw	1
  5692  001DB0  6E05               	movwf	___awdiv@counter,c
  5693  001DB2  D004               	goto	l385
  5694  001DB4  90D8               	bcf	status,0,c
  5695  001DB6  3603               	rlcf	___awdiv@divisor,f,c
  5696  001DB8  3604               	rlcf	___awdiv@divisor+1,f,c
  5697  001DBA  2A05               	incf	___awdiv@counter,f,c
  5698  001DBC                     l385:
  5699  001DBC  AE04               	btfss	___awdiv@divisor+1,7,c
  5700  001DBE  D7FA               	goto	l386
  5701  001DC0                     u2750:
  5702  001DC0  90D8               	bcf	status,0,c
  5703  001DC2  3607               	rlcf	___awdiv@quotient,f,c
  5704  001DC4  3608               	rlcf	___awdiv@quotient+1,f,c
  5705  001DC6  5003               	movf	___awdiv@divisor,w,c
  5706  001DC8  5C01               	subwf	___awdiv@dividend,w,c
  5707  001DCA  5004               	movf	___awdiv@divisor+1,w,c
  5708  001DCC  5802               	subwfb	___awdiv@dividend+1,w,c
  5709  001DCE  A0D8               	btfss	status,0,c
  5710  001DD0  D005               	goto	l389
  5711  001DD2  5003               	movf	___awdiv@divisor,w,c
  5712  001DD4  5E01               	subwf	___awdiv@dividend,f,c
  5713  001DD6  5004               	movf	___awdiv@divisor+1,w,c
  5714  001DD8  5A02               	subwfb	___awdiv@dividend+1,f,c
  5715  001DDA  8007               	bsf	___awdiv@quotient,0,c
  5716  001DDC                     l389:
  5717  001DDC  90D8               	bcf	status,0,c
  5718  001DDE  3204               	rrcf	___awdiv@divisor+1,f,c
  5719  001DE0  3203               	rrcf	___awdiv@divisor,f,c
  5720  001DE2  2E05               	decfsz	___awdiv@counter,f,c
  5721  001DE4  D7ED               	goto	u2750
  5722  001DE6                     l390:
  5723  001DE6  5006               	movf	___awdiv@sign,w,c
  5724  001DE8  B4D8               	btfsc	status,2,c
  5725  001DEA  D004               	goto	l391
  5726  001DEC  6C07               	negf	___awdiv@quotient,c
  5727  001DEE  1E08               	comf	___awdiv@quotient+1,f,c
  5728  001DF0  B0D8               	btfsc	status,0,c
  5729  001DF2  2A08               	incf	___awdiv@quotient+1,f,c
  5730  001DF4                     l391:
  5731  001DF4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5732  001DF8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5733  001DFC  0012               	return	
  5734  001DFE                     __end_of___awdiv:
  5735                           	opt stack 0
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           intcon	equ	0xFF2
  5743                           postinc0	equ	0xFEE
  5744                           wreg	equ	0xFE8
  5745                           plusw1	equ	0xFE3
  5746                           postinc2	equ	0xFDE
  5747                           postdec2	equ	0xFDD
  5748                           plusw2	equ	0xFDB
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           intcon	equ	0xFF2
  5759                           postinc0	equ	0xFEE
  5760                           wreg	equ	0xFE8
  5761                           plusw1	equ	0xFE3
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           plusw2	equ	0xFDB
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769                           	psect	rparam
  5770  0000                     tblptru	equ	0xFF8
  5771                           tblptrh	equ	0xFF7
  5772                           tblptrl	equ	0xFF6
  5773                           tablat	equ	0xFF5
  5774                           prodh	equ	0xFF4
  5775                           prodl	equ	0xFF3
  5776                           intcon	equ	0xFF2
  5777                           postinc0	equ	0xFEE
  5778                           wreg	equ	0xFE8
  5779                           plusw1	equ	0xFE3
  5780                           postinc2	equ	0xFDE
  5781                           postdec2	equ	0xFDD
  5782                           plusw2	equ	0xFDB
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         65
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_carroGirar
    _main->_carroGirarEspecial
    _config_timer2->___awtoft
    _coinfig_ccpcon->___fttol
    ___lbtoft->___ftpack
    _carroGirarEspecial->_config_ccp1
    _carroGirarEspecial->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    _carroGirarEspecial->_config_ccp1
    _carroGirarEspecial->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _config_ccp2->_pow
    _config_ccp1->_pow
    _pow->_exp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  824803
                       _carroAvanzar
               _carroAvanzarEspecial
                         _carroGirar
                 _carroGirarEspecial
                     _coinfig_ccpcon
                        _configBoard
                      _config_timer2
 ---------------------------------------------------------------------------------
 (1) _config_timer2                                        6     2      4    3956
                                             12 COMRAM     6     2      4
                           ___awtoft
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coinfig_ccpcon                                       9     3      6   17867
                                             69 COMRAM     9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _carroGirarEspecial                                   1     1      0  200756
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroGirar                                           1     1      0  200800
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzarEspecial                                 0     0      0  200712
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzar                                         0     0      0  200712
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _config_ccp2                                         59    57      2  100356
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _config_ccp1                                         59    57      2  100356
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   79872
                                              6 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   26079
                                             66 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   42552
                                             87 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     400
                                             66 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   10249
                                             79 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1088
                                             54 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2797
                                             69 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11303
                                             54 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5441
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5110
                                             54 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4765
                                             42 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3749
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3738
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _carroAvanzar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroAvanzarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _coinfig_ccpcon
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lbtoft
       ___ftpack
   _configBoard
   _config_timer2
     ___awtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      92       5       91.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 20:02:11 2018

                 ___altoft@exp 004E                  ___altoft@sign 004F                             l50 11FC  
                           l60 1272                             l52 1214                             l70 12E6  
                           l62 128A                             l54 122C                             l47 11CE  
                           l72 12FE                             l64 12A0                             l56 1242  
                           l48 11E4                             l66 12B8                             l58 125A  
                           l91 205C                             l68 12D0                             l95 1FB2  
                           l97 1FC4                             l89 204C                             l99 1FD2  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003                    __CFG_BORV$3 000000  
 carroGirarEspecial@direccion2 005F                   ___ftadd@exp1 0036                   ___ftadd@exp2 0035  
                 ___ftadd@sign 0034                            l101 1FE2                            l200 0D1C  
                          l210 0988                            l300 1E20                            l212 0A4A  
                          l207 0962                            l208 091A                            l410 208A  
                          l501 1D1A                            l430 1BCA                            l510 16F4  
                          l502 1D4A                            l182 1EAE                            l511 1726  
                          l183 1E98                            l432 1C08                            l512 1736  
                          l184 1ED2                            l433 1BF2                            l185 1E9E  
                          l514 174E                            l186 1EA8                            l435 1C30  
                          l515 175E                            l531 1652                            l195 0C34  
                          l436 1C26                            l460 101E                            l508 16CC  
                          l540 1692                            l532 1642                            l196 0BEC  
                          l429 1BD4                            l525 2012                            l390 1DE6  
                          l382 1D8E                            l198 0C5A                            l391 1DF4  
                          l383 1D9E                            l519 210E                            l464 1048  
                          l385 1DBC                            l537 1676                            l529 15DC  
                          l386 1DB4                            l474 10A4                            l538 166A  
                          l810 0E30                            l483 10E2                            l475 109A  
                          l299 1E2C                            l811 0E68                            l651 1378  
                          l484 10D8                            l820 18AC                            l812 0E98  
                          l652 13FE                            l389 1DDC                            l493 17C0  
                          l469 10AE                            l813 0FBE                            l653 13DC  
                          l486 1106                            l822 18D4                            l814 0F94  
                          l654 1484                            l495 17E8                            l487 1122  
                          l823 194E                            l496 1826                            l488 1152  
                          l832 1A46                            l808 0DF8                            l648 1360  
                          l497 184C                            l649 1350                            l586 1F58  
                          l834 1A8C                            l850 14AE                            l587 1F4C  
                          l819 18BA                            l828 1C82                            l836 1ABC  
                          l852 14D0                            l837 1AB0                            l858 1A18  
                          l859 199C                            _PR2 000FCB                            _exp 0DE0  
                          _log 1492                            _pow 1316                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   ___ftdiv@cntr 0025                   ___ftdiv@sign 002A  
                 __CFG_WDT$OFF 000000                           l2601 0DCA                           l2453 0F94  
                         l2555 0BEC                           l2619 091A                           l2581 0D04  
                         l2565 0C4A                           l2645 0A32                           l2629 0978  
                         l2583 0D0C                           l2647 0A3A                           l2665 0AF8  
                         l1981 1D76                           ?_exp 0058                           ?_log 0043  
                         ?_pow 0066                           u2010 1010                           u2110 10B6  
                         u2040 103A                           u2201 16DC                           u2140 10EA  
                         u2070 1078                           u2330 167C                           u2181 16B4  
                         u2510 1A66                           u2271 15C0                           u2360 1CAA  
                         u2290 15FA                           u2610 0E70                           u2371 17A8  
                         u2620 0E72                           u2700 13C6                           u2470 18C6  
                         u2518 1A68                           u2391 17D0                           u2295 15F2  
                         u1920 1C3A                           u2368 1CAC                           u2810 0D04  
                         u2750 1DC0                           u2830 0DCA                           u1880 1BBC  
                         u2841 08E6                           u2905 1EE2                           u2850 0970  
                         u2906 1EE4                           u1971 0FDC                           u1981 0FF0  
                         u2781 0BB8                           u2790 0C42                           u2870 0A32  
                         u2890 0AF8                           _RCIF 007CF5                   config_ccp1@a 0077  
                 config_ccp2@a 0077                   config_ccp1@i 009A                   config_ccp1@j 00AC  
                 config_ccp2@i 009A                   config_ccp2@j 00AC                   config_ccp1@n 00AA  
                 config_ccp2@n 00AA                   config_ccp1@w 00A6                   config_ccp1@x 00A4  
                 config_ccp1@y 00A8                   config_ccp1@z 009C                   config_ccp2@w 00A6  
                 config_ccp2@x 00A4                   config_ccp2@y 00A8                   config_ccp2@z 009C  
                         _pr2g 00EA                           _main 1178                   ___ftpack@arg 0001  
                 ___ftpack@exp 0004                           fsr2h 000FDA                           fsr2l 000FD9  
                         exp@x 0058                           log@x 0043                           pow@x 0066  
                         pow@y 0069                           prodh 000FF4                           prodl 000FF3  
         __end_of_carroAvanzar 2160                           start 0000                  __CFG_MCLRE$ON 000000  
                 ___ftmul@cntr 001A                   ___param_bank 000000                   ___ftmul@sign 001B  
                 ___fttol@exp1 0045                          ??_exp 005B                          ??_log 0046  
                 ___fttol@lval 0041                          ??_pow 005B                  __CFG_PLLDIV$2 000000  
                        ?_main 0001                __end_of___awdiv 1DFE                __end_of___ftadd 1178  
              __end_of___ftdiv 187E                __end_of___ftneg 211C                __end_of___ftmul 1798  
              ___awdiv@divisor 0003                __end_of___ftsub 203C                __end_of___fttol 16A4  
              ___awdiv@counter 0005                          _TMR0L 000FD6                          _PORTA 000F80  
                        _TRISD 000F95                   ___lltoft@exp 0011                 __CFG_FCMEN$OFF 000000  
                ___awtoft@sign 000C                          _floor 187E                          _ldexp 1A2E  
                        _frexp 1C5A                          _errno 00ED                  ___ftpack@sign 0005  
                        tablat 000FF5                          pow@yi 0073                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8                ??_config_timer2 0011  
                  exp@exponent 0063                    ldexp@newexp 0046                __initialization 2160  
                  log@exponent 0046                   __end_of_main 1316                         ??_main 0060  
                ___fttol@sign1 0040                  __activetblptr 000002                         _ADCON0 000FC2  
                       ?_floor 0050                         ?_ldexp 0043                         ?_frexp 0001  
             __end_of___altoft 1E76                         _CCPR1L 000FBE                         _CCPR2L 000FBB  
                       _T08BIT 007EAE               ___awdiv@dividend 0001               __end_of___awtoft 20AE  
             __end_of___ftpack 1C5A               __end_of___lbtoft 20F8   __end_of_carroAvanzarEspecial 213E  
             __end_of___lltoft 1FA2               ??_coinfig_ccpcon 004C                         _TMR0IF 007F92  
                       _TMR0ON 007EAF           __size_of_configBoard 0060             config_timer2@onoff 000D  
           config_timer2@presc 000F                         ___ftge 1CEA           __size_of_config_ccp1 02D2  
         __size_of_config_ccp2 02D2                         ___wmul 20AE                      ??___awdiv 0005  
                    ??___ftadd 0031                      ??___ftdiv 0022                      ??___ftneg 0004  
                    ??___ftmul 0013                      ??___ftsub 003D                      ??___fttol 003B  
                       clear_0 2166               ___awdiv@quotient 0007                         _prescg 00EF  
                       floor@i 0053                         floor@x 0050          ___ftmul@f3_as_product 0017  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8          __size_of_carroAvanzar 0022               __end_ofexp@coeff 081F  
             __end_oflog@coeff 083A                     __accesstop 0060        __end_of__initialization 216C  
                   ___altoft@c 0046                     ___ftadd@f1 002B                     ___ftadd@f2 002E  
                   ___ftge@ff1 0001                     ___ftge@ff2 0004                   eval_poly@res 0040  
                ___rparam_used 000001                     ___ftdiv@f1 001C                     ___ftdiv@f2 001F  
                   ___ftdiv@f3 0026                     ___ftneg@f1 0001                     ___awtoft@c 0009  
                   ___lbtoft@c 000C                     ___ftmul@f1 000D                     ___ftmul@f2 0010  
                   ___ftsub@f1 0037                     ___ftsub@f2 003A                     ___fttol@f1 0037  
               __pcstackCOMRAM 0001                     ___lltoft@c 0009                  __end_of_floor 195C  
                __end_of_ldexp 1AF4                  __end_of_frexp 1CEA    __size_of_carroGirarEspecial 003A  
                 _carroAvanzar 213E                        ??_floor 0053                        ??_ldexp 0048  
                      ??_frexp 0006             coinfig_ccpcon@freq 0049             coinfig_ccpcon@fosc 0046  
             _config_ccp1$1554 0095               _config_ccp1$1555 009E               _config_ccp1$1556 00A1  
             _config_ccp2$1557 0095               _config_ccp2$1558 009E               _config_ccp2$1559 00A1  
                   __pbssBANK0 00AE             __size_of_eval_poly 00D2                     _carroGirar 1FA2  
                      ?___ftge 0001                        ?___wmul 0001                      ?___altoft 0046  
         _carroAvanzarEspecial 211C                      ?___awtoft 0009                      ?___ftpack 0001  
                    ?___lbtoft 0009                      ?___lltoft 0009                        __Hparam 0000  
                      __Lparam 0000                __size_of___ftge 0090                        ___awdiv 1D7A  
                      ___ftadd 0FCC                        ___ftdiv 1798                        ___ftneg 20F8  
              __size_of___wmul 0026                        ___ftmul 16A4                        ___ftsub 1FFC  
                      ___fttol 15B0                   __psmallconst 0800          ?_carroAvanzarEspecial 0001  
                   ??___altoft 004A                        __pcinit 2160                     ??___awtoft 000C  
                   ??___ftpack 0006                     ??___lbtoft 000C              __end_of_eval_poly 1A2E  
                      __ramtop 0800                     ??___lltoft 000D                        __ptext0 1178  
                      __ptext1 1E76                        __ptext2 1EE6                        __ptext3 1AF4  
                      __ptext4 20D4                        __ptext5 203C                        __ptext6 1FA2  
                      __ptext7 211C                        __ptext8 213E                        __ptext9 083C  
                    _T0CONbits 000FD5                      _T2CONbits 000FCA                   __size_of_exp 01EC  
                 __size_of_log 011E                   __size_of_pow 017C           end_of_initialization 216C  
                      exp@sign 0065                  __Lmediumconst 0000                    ?_carroGirar 0001  
        __end_of_config_timer2 1EE6                        pow@sign 0072                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTBbits 000F81  
                    _TRISAbits 000F92                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISEbits 000F96                    _CCP1CONbits 000FBD                    ___ftdiv@exp 0029  
                ??_configBoard 0001                    _CCP2CONbits 000FBA                  ??_config_ccp1 005D  
                ??_config_ccp2 005D                    ___ftmul@exp 0016         ??_carroAvanzarEspecial 005F  
               __end_of___ftge 1D7A                 __end_of___wmul 20D4                     floor@expon 0056  
          __size_of_carroGirar 005A            start_initialization 2160                     eval_poly@d 003A  
                   eval_poly@n 003C                     eval_poly@x 0037                     ldexp@value 0043  
                  __end_of_exp 0FCC                    __end_of_log 15B0                    __end_of_pow 1492  
                   frexp@value 0001                       ??___ftge 0007        __size_of_coinfig_ccpcon 00B8  
                     ??___wmul 0005            __end_of_configBoard 1F46            __end_of_config_ccp1 0DE0  
          __end_of_config_ccp2 0B0E     __end_of_carroGirarEspecial 2076              __size_of___altoft 0078  
            __size_of___awtoft 0038              __size_of___ftpack 00AE              __size_of___lbtoft 0024  
            __size_of___lltoft 005C                  __pcstackBANK0 0060            _coinfig_ccpcon$1553 004C  
            config_ccp1@valreg 0098                      __pnvBANK0 00EF              config_ccp2@valreg 0098  
                     ?___awdiv 0001                       ?___ftadd 002B                       ?___ftdiv 001C  
                     ?___ftneg 0001                       ?___ftmul 000D                       ?___ftsub 0037  
                     ?___fttol 0037                    __smallconst 0800                      _eval_poly 195C  
               __size_of_floor 00DE                 __size_of_ldexp 00C6                 __size_of_frexp 0090  
               ___wmul@product 0005                       _LATAbits 000F89                       _LATEbits 000F8D  
                 ??_carroGirar 005F                    _configBoard 1EE6                       _PIE1bits 000F9D  
                  _config_ccp1 0B0E                    _config_ccp2 083C                       _PIR1bits 000F9E  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0001                     ?_eval_poly 0037             __end_of_carroGirar 1FFC  
                    frexp@eptr 0004                       __Hrparam 0000                       __Lrparam 0000  
               _coinfig_ccpcon 1AF4               config_ccp1@F3967 00CC               config_ccp2@F3978 00AE  
          carroGirar@direccion 005F               __size_of___awdiv 0084               __size_of___ftadd 01AC  
             __size_of___ftdiv 00E6               __size_of___ftneg 0024                       ___altoft 1DFE  
             __size_of___ftmul 00F4               __size_of___ftsub 0040               __size_of___fttol 00F4  
                     ___awtoft 2076                       ___ftpack 1BAC                       ___lbtoft 20D4  
                     ___lltoft 1F46                       _exp$1562 0060               config_ccp1@duty1 005B  
                ?_carroAvanzar 0001               config_ccp2@duty2 005B         __size_of_config_timer2 0070  
                     __ptext10 0B0E                       __ptext11 1316                       __ptext20 195C  
                     __ptext12 1492                       __ptext21 20AE                       __ptext13 0DE0  
                     __ptext30 1D7A                       __ptext22 16A4                       __ptext14 1A2E  
                     __ptext23 1FFC                       __ptext15 187E                       __ptext24 0FCC  
                     __ptext16 1C5A                       __ptext25 20F8                       __ptext17 15B0  
                     __ptext26 1798                       __ptext18 1CEA                       __ptext27 2076  
                     __ptext19 1DFE                       __ptext28 1F46                       __ptext29 1BAC  
                     _pow$1560 006C                       _pow$1561 006F                  __size_of_main 019E  
       __end_of_coinfig_ccpcon 1BAC  __size_of_carroAvanzarEspecial 0022          __CFG_CPUDIV$OSC1_PLL2 000000  
                     exp@coeff 0801                 ??_carroAvanzar 005F                       log@coeff 081F  
                   _INTCONbits 000FF2                    ??_eval_poly 003E             _carroGirarEspecial 203C  
          ?_carroGirarEspecial 0001                ?_coinfig_ccpcon 0046                  _config_timer2 1E76  
         ??_carroGirarEspecial 005F             __CFG_FOSC$HSPLL_HS 000000                   ?_configBoard 0001  
               ?_config_timer2 000D                   ?_config_ccp1 005B                   ?_config_ccp2 005B  
