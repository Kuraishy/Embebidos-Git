

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 01 19:46:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	opt stack 0
    83  000800  00                 	db	0
    84  000801                     exp@coeff:
    85                           	opt stack 0
    86  000801  00                 	db	0
    87  000802  80                 	db	128
    88  000803  3F                 	db	63
    89  000804  72                 	db	114
    90  000805  31                 	db	49
    91  000806  3F                 	db	63
    92  000807  FE                 	db	254
    93  000808  75                 	db	117
    94  000809  3E                 	db	62
    95  00080A  58                 	db	88
    96  00080B  63                 	db	99
    97  00080C  3D                 	db	61
    98  00080D  95                 	db	149
    99  00080E  1D                 	db	29
   100  00080F  3C                 	db	60
   101  000810  C5                 	db	197
   102  000811  AE                 	db	174
   103  000812  3A                 	db	58
   104  000813  79                 	db	121
   105  000814  21                 	db	33
   106  000815  39                 	db	57
   107  000816  94                 	db	148
   108  000817  80                 	db	128
   109  000818  37                 	db	55
   110  000819  93                 	db	147
   111  00081A  A7                 	db	167
   112  00081B  35                 	db	53
   113  00081C  56                 	db	86
   114  00081D  15                 	db	21
   115  00081E  34                 	db	52
   116  00081F                     __end_ofexp@coeff:
   117                           	opt stack 0
   118  00081F                     log@coeff:
   119                           	opt stack 0
   120  00081F  00                 	db	0
   121  000820  00                 	db	0
   122  000821  00                 	db	0
   123  000822  00                 	db	0
   124  000823  80                 	db	128
   125  000824  3F                 	db	63
   126  000825  F0                 	db	240
   127  000826  FF                 	db	255
   128  000827  BE                 	db	190
   129  000828  E2                 	db	226
   130  000829  A9                 	db	169
   131  00082A  3E                 	db	62
   132  00082B  83                 	db	131
   133  00082C  76                 	db	118
   134  00082D  BE                 	db	190
   135  00082E  AE                 	db	174
   136  00082F  2B                 	db	43
   137  000830  3E                 	db	62
   138  000831  3C                 	db	60
   139  000832  C3                 	db	195
   140  000833  BD                 	db	189
   141  000834  D2                 	db	210
   142  000835  13                 	db	19
   143  000836  3D                 	db	61
   144  000837  78                 	db	120
   145  000838  D3                 	db	211
   146  000839  BB                 	db	187
   147  00083A                     __end_oflog@coeff:
   148                           	opt stack 0
   149  00083A  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           	psect	nvBANK0
   152  0000EF                     __pnvBANK0:
   153                           	opt stack 0
   154  0000EF                     _prescg:
   155                           	opt stack 0
   156  0000EF                     	ds	3
   157  0000                     _CCPR2L	set	4027
   158  0000                     _CCPR1L	set	4030
   159  0000                     _CCP2CONbits	set	4026
   160  0000                     _CCP1CONbits	set	4029
   161  0000                     _PR2	set	4043
   162  0000                     _PORTA	set	3968
   163  0000                     _TRISD	set	3989
   164  0000                     _PIR1bits	set	3998
   165  0000                     _PIE1bits	set	3997
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _ADCON0	set	4034
   169  0000                     _T0CONbits	set	4053
   170  0000                     _INTCONbits	set	4082
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATEbits	set	3981
   173  0000                     _PORTBbits	set	3969
   174  0000                     _T2CONbits	set	4042
   175  0000                     _TRISCbits	set	3988
   176  0000                     _TRISBbits	set	3987
   177  0000                     _TRISEbits	set	3990
   178  0000                     _TRISAbits	set	3986
   179  0000                     _ADCON1bits	set	4033
   180  0000                     _TMR0L	set	4054
   181  0000                     _TMR0IF	set	32658
   182  0000                     _TMR0ON	set	32431
   183  0000                     _RCIF	set	31989
   184  0000                     _T08BIT	set	32430
   185                           
   186                           ; #config settings
   187  0000                     
   188                           	psect	cinit
   189  002060                     __pcinit:
   190                           	opt stack 0
   191  002060                     start_initialization:
   192                           	opt stack 0
   193  002060                     __initialization:
   194                           	opt stack 0
   195                           
   196                           ; Clear objects allocated to BANK0 (65 bytes)
   197  002060  EE00  F0AE         	lfsr	0,__pbssBANK0
   198  002064  0E41               	movlw	65
   199  002066                     clear_0:
   200  002066  6AEE               	clrf	postinc0,c
   201  002068  06E8               	decf	wreg,f,c
   202  00206A  E1FD               	bnz	clear_0
   203  00206C                     end_of_initialization:
   204                           	opt stack 0
   205  00206C                     __end_of__initialization:
   206                           	opt stack 0
   207  00206C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  00206E  6EF8               	movwf	tblptru,c
   209  002070  0100               	movlb	0
   210  002072  EFAB  F00C         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssBANK0
   216  0000AE                     __pbssBANK0:
   217                           	opt stack 0
   218  0000AE                     config_ccp2@F3978:
   219                           	opt stack 0
   220  0000AE                     	ds	30
   221  0000CC                     config_ccp1@F3967:
   222                           	opt stack 0
   223  0000CC                     	ds	30
   224  0000EA                     _pr2g:
   225                           	opt stack 0
   226  0000EA                     	ds	3
   227  0000ED                     _errno:
   228                           	opt stack 0
   229  0000ED                     	ds	2
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK0
   235  000060                     __pcstackBANK0:
   236                           	opt stack 0
   237  000060                     _exp$1550:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x0
   241  000060                     	ds	3
   242  000063                     exp@exponent:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000063                     	ds	2
   247  000065                     exp@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x5
   251  000065                     	ds	1
   252  000066                     ?_pow:
   253                           	opt stack 0
   254  000066                     pow@x:
   255                           	opt stack 0
   256                           
   257                           ; 3 bytes @ 0x6
   258  000066                     	ds	3
   259  000069                     pow@y:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x9
   263  000069                     	ds	3
   264  00006C                     _pow$1548:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xC
   268  00006C                     	ds	3
   269  00006F                     _pow$1549:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0xF
   273  00006F                     	ds	3
   274  000072                     pow@sign:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x12
   278  000072                     	ds	1
   279  000073                     pow@yi:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x13
   283  000073                     	ds	4
   284  000077                     config_ccp1@a:
   285                           	opt stack 0
   286  000077                     config_ccp2@a:
   287                           	opt stack 0
   288                           
   289                           ; 30 bytes @ 0x17
   290  000077                     	ds	30
   291  000095                     _config_ccp1$1542:
   292                           	opt stack 0
   293  000095                     _config_ccp2$1545:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x35
   297  000095                     	ds	3
   298  000098                     config_ccp1@valreg:
   299                           	opt stack 0
   300  000098                     config_ccp2@valreg:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x38
   304  000098                     	ds	2
   305  00009A                     config_ccp1@i:
   306                           	opt stack 0
   307  00009A                     config_ccp2@i:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x3A
   311  00009A                     	ds	2
   312  00009C                     config_ccp1@z:
   313                           	opt stack 0
   314  00009C                     config_ccp2@z:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x3C
   318  00009C                     	ds	2
   319  00009E                     _config_ccp1$1543:
   320                           	opt stack 0
   321  00009E                     _config_ccp2$1546:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x3E
   325  00009E                     	ds	3
   326  0000A1                     _config_ccp1$1544:
   327                           	opt stack 0
   328  0000A1                     _config_ccp2$1547:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x41
   332  0000A1                     	ds	3
   333  0000A4                     config_ccp1@x:
   334                           	opt stack 0
   335  0000A4                     config_ccp2@x:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x44
   339  0000A4                     	ds	2
   340  0000A6                     config_ccp1@w:
   341                           	opt stack 0
   342  0000A6                     config_ccp2@w:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x46
   346  0000A6                     	ds	2
   347  0000A8                     config_ccp1@y:
   348                           	opt stack 0
   349  0000A8                     config_ccp2@y:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x48
   353  0000A8                     	ds	2
   354  0000AA                     config_ccp1@n:
   355                           	opt stack 0
   356  0000AA                     config_ccp2@n:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4A
   360  0000AA                     	ds	2
   361  0000AC                     config_ccp1@j:
   362                           	opt stack 0
   363  0000AC                     config_ccp2@j:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x4C
   367  0000AC                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	cstackCOMRAM
   373  000001                     __pcstackCOMRAM:
   374                           	opt stack 0
   375  000001                     ?___wmul:
   376                           	opt stack 0
   377  000001                     ?___awdiv:
   378                           	opt stack 0
   379  000001                     ?___ftpack:
   380                           	opt stack 0
   381  000001                     ?_frexp:
   382                           	opt stack 0
   383  000001                     ?___ftneg:
   384                           	opt stack 0
   385  000001                     ___wmul@multiplier:
   386                           	opt stack 0
   387  000001                     ___awdiv@dividend:
   388                           	opt stack 0
   389  000001                     ___ftpack@arg:
   390                           	opt stack 0
   391  000001                     ___ftge@ff1:
   392                           	opt stack 0
   393  000001                     ___ftneg@f1:
   394                           	opt stack 0
   395  000001                     frexp@value:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x0
   399  000001                     	ds	2
   400  000003                     ___wmul@multiplicand:
   401                           	opt stack 0
   402  000003                     ___awdiv@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406  000003                     	ds	1
   407  000004                     ___ftpack@exp:
   408                           	opt stack 0
   409  000004                     frexp@eptr:
   410                           	opt stack 0
   411  000004                     ___ftge@ff2:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x3
   415  000004                     	ds	1
   416  000005                     ___awdiv@counter:
   417                           	opt stack 0
   418  000005                     ___ftpack@sign:
   419                           	opt stack 0
   420  000005                     ___wmul@product:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     ??___ftpack:
   426  000006                     ??_frexp:
   427  000006                     ___awdiv@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ??___ftge:
   433  000007                     ___awdiv@quotient:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x6
   437  000007                     	ds	2
   438  000009                     ?___awtoft:
   439                           	opt stack 0
   440  000009                     ?___lbtoft:
   441                           	opt stack 0
   442  000009                     ?___lltoft:
   443                           	opt stack 0
   444  000009                     ___awtoft@c:
   445                           	opt stack 0
   446  000009                     ___lltoft@c:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0x8
   450  000009                     	ds	3
   451  00000C                     ___awtoft@sign:
   452                           	opt stack 0
   453  00000C                     ___lbtoft@c:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ??___lltoft:
   459  00000D                     ?___ftmul:
   460                           	opt stack 0
   461  00000D                     config_timer2@onoff:
   462                           	opt stack 0
   463  00000D                     ___ftmul@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xC
   467  00000D                     	ds	2
   468  00000F                     config_timer2@presc:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     ___ftmul@f2:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ??_config_timer2:
   479  000011                     ___lltoft@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     ??___ftmul:
   485                           
   486                           ; 1 bytes @ 0x12
   487  000013                     	ds	3
   488  000016                     ___ftmul@exp:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x15
   492  000016                     	ds	1
   493  000017                     ___ftmul@f3_as_product:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x16
   497  000017                     	ds	3
   498  00001A                     ___ftmul@cntr:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x19
   502  00001A                     	ds	1
   503  00001B                     ___ftmul@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1A
   507  00001B                     	ds	1
   508  00001C                     ?___ftdiv:
   509                           	opt stack 0
   510  00001C                     ___ftdiv@f1:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x1B
   514  00001C                     	ds	3
   515  00001F                     ___ftdiv@f2:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x1E
   519  00001F                     	ds	3
   520  000022                     ??___ftdiv:
   521                           
   522                           ; 1 bytes @ 0x21
   523  000022                     	ds	3
   524  000025                     ___ftdiv@cntr:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x24
   528  000025                     	ds	1
   529  000026                     ___ftdiv@f3:
   530                           	opt stack 0
   531                           
   532                           ; 3 bytes @ 0x25
   533  000026                     	ds	3
   534  000029                     ___ftdiv@exp:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x28
   538  000029                     	ds	1
   539  00002A                     ___ftdiv@sign:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x29
   543  00002A                     	ds	1
   544  00002B                     ?___ftadd:
   545                           	opt stack 0
   546  00002B                     ___ftadd@f1:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x2A
   550  00002B                     	ds	3
   551  00002E                     ___ftadd@f2:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x2D
   555  00002E                     	ds	3
   556  000031                     ??___ftadd:
   557                           
   558                           ; 1 bytes @ 0x30
   559  000031                     	ds	3
   560  000034                     ___ftadd@sign:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x33
   564  000034                     	ds	1
   565  000035                     ___ftadd@exp2:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x34
   569  000035                     	ds	1
   570  000036                     ___ftadd@exp1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x35
   574  000036                     	ds	1
   575  000037                     ?___ftsub:
   576                           	opt stack 0
   577  000037                     ?_eval_poly:
   578                           	opt stack 0
   579  000037                     ?___fttol:
   580                           	opt stack 0
   581  000037                     ___ftsub@f1:
   582                           	opt stack 0
   583  000037                     ___fttol@f1:
   584                           	opt stack 0
   585  000037                     eval_poly@x:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x36
   589  000037                     	ds	3
   590  00003A                     eval_poly@d:
   591                           	opt stack 0
   592  00003A                     ___ftsub@f2:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x39
   596  00003A                     	ds	1
   597  00003B                     ??___fttol:
   598                           
   599                           ; 1 bytes @ 0x3A
   600  00003B                     	ds	1
   601  00003C                     eval_poly@n:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x3B
   605  00003C                     	ds	1
   606  00003D                     
   607                           ; 1 bytes @ 0x3C
   608  00003D                     	ds	1
   609  00003E                     ??_eval_poly:
   610                           
   611                           ; 1 bytes @ 0x3D
   612  00003E                     	ds	2
   613  000040                     ___fttol@sign1:
   614                           	opt stack 0
   615  000040                     eval_poly@res:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x3F
   619  000040                     	ds	1
   620  000041                     ___fttol@lval:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x40
   624  000041                     	ds	2
   625  000043                     ?_log:
   626                           	opt stack 0
   627  000043                     ?_ldexp:
   628                           	opt stack 0
   629  000043                     ldexp@value:
   630                           	opt stack 0
   631  000043                     log@x:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x42
   635  000043                     	ds	2
   636  000045                     ___fttol@exp1:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x44
   640  000045                     	ds	1
   641  000046                     ?___altoft:
   642                           	opt stack 0
   643  000046                     ldexp@newexp:
   644                           	opt stack 0
   645  000046                     log@exponent:
   646                           	opt stack 0
   647  000046                     coinfig_ccpcon@fosc:
   648                           	opt stack 0
   649  000046                     ___altoft@c:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x45
   653  000046                     	ds	2
   654  000048                     ??_ldexp:
   655                           
   656                           ; 1 bytes @ 0x47
   657  000048                     	ds	1
   658  000049                     coinfig_ccpcon@freq:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x48
   662  000049                     	ds	1
   663  00004A                     ??___altoft:
   664                           
   665                           ; 1 bytes @ 0x49
   666  00004A                     	ds	2
   667  00004C                     _coinfig_ccpcon$1541:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x4B
   671  00004C                     	ds	2
   672  00004E                     ___altoft@exp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x4D
   676  00004E                     	ds	1
   677  00004F                     ___altoft@sign:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x4E
   681  00004F                     	ds	1
   682  000050                     ?_floor:
   683                           	opt stack 0
   684  000050                     floor@x:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x4F
   688  000050                     	ds	3
   689  000053                     floor@i:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x52
   693  000053                     	ds	3
   694  000056                     floor@expon:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x55
   698  000056                     	ds	2
   699  000058                     ?_exp:
   700                           	opt stack 0
   701  000058                     exp@x:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x57
   705  000058                     	ds	3
   706  00005B                     config_ccp1@duty1:
   707                           	opt stack 0
   708  00005B                     config_ccp2@duty2:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x5A
   712  00005B                     	ds	2
   713  00005D                     ??_config_ccp1:
   714  00005D                     ??_config_ccp2:
   715                           
   716                           ; 1 bytes @ 0x5C
   717  00005D                     	ds	2
   718  00005F                     carroGirar@direccion:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x5E
   722  00005F                     	ds	1
   723  000060                     tblptru	equ	0xFF8
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           
   727                           ; 1 bytes @ 0x5F
   728 ;;
   729 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   730 ;;
   731 ;; *************** function _main *****************
   732 ;; Defined at:
   733 ;;		line 47 in file "carroMain.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   747 ;;      Params:         0       0       0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels required when called:    7
   753 ;; This function calls:
   754 ;;		_carroAvanzar
   755 ;;		_carroAvanzarEspecial
   756 ;;		_carroGirar
   757 ;;		_carroMatar
   758 ;;		_coinfig_ccpcon
   759 ;;		_configBoard
   760 ;;		_config_timer2
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text0
   767  001956                     __ptext0:
   768                           	opt stack 0
   769  001956                     _main:
   770                           	opt stack 24
   771                           
   772                           ;carroMain.c: 49: configBoard();
   773                           
   774                           ;incstack = 0
   775  001956  EC06  F00F         	call	_configBoard	;wreg free
   776                           
   777                           ;carroMain.c: 50: ADCON1bits.PCFG = 0b1111;
   778  00195A  80C1               	bsf	4033,0,c	;volatile
   779  00195C  82C1               	bsf	4033,1,c	;volatile
   780  00195E  84C1               	bsf	4033,2,c	;volatile
   781  001960  86C1               	bsf	4033,3,c	;volatile
   782                           
   783                           ;carroMain.c: 52: TRISAbits.RA0=0;
   784  001962  9092               	bcf	3986,0,c	;volatile
   785                           
   786                           ;carroMain.c: 53: TRISAbits.RA1=0;
   787  001964  9292               	bcf	3986,1,c	;volatile
   788                           
   789                           ;carroMain.c: 54: TRISEbits.RE0=0;
   790  001966  9096               	bcf	3990,0,c	;volatile
   791                           
   792                           ;carroMain.c: 55: TRISEbits.RE1=0;
   793  001968  9296               	bcf	3990,1,c	;volatile
   794                           
   795                           ;carroMain.c: 57: TRISBbits.RB5=1;
   796  00196A  8A93               	bsf	3987,5,c	;volatile
   797                           
   798                           ;carroMain.c: 58: TRISBbits.RB4=1;
   799  00196C  8893               	bsf	3987,4,c	;volatile
   800                           
   801                           ;carroMain.c: 59: TRISBbits.RB3=1;
   802  00196E  8693               	bsf	3987,3,c	;volatile
   803                           
   804                           ;carroMain.c: 63: TRISCbits.RC2 = 0;
   805  001970  9494               	bcf	3988,2,c	;volatile
   806                           
   807                           ;carroMain.c: 64: TRISCbits.RC1 = 0;
   808  001972  9294               	bcf	3988,1,c	;volatile
   809                           
   810                           ;carroMain.c: 66: config_timer2(0,16);
   811  001974  0E00               	movlw	0
   812  001976  6E0E               	movwf	config_timer2@onoff+1,c
   813  001978  0E00               	movlw	0
   814  00197A  6E0D               	movwf	config_timer2@onoff,c
   815  00197C  0E00               	movlw	0
   816  00197E  6E10               	movwf	config_timer2@presc+1,c
   817  001980  0E10               	movlw	16
   818  001982  6E0F               	movwf	config_timer2@presc,c
   819  001984  ECCE  F00E         	call	_config_timer2	;wreg free
   820                           
   821                           ;carroMain.c: 67: coinfig_ccpcon(48000000,15000);
   822  001988  0E1B               	movlw	27
   823  00198A  6E46               	movwf	coinfig_ccpcon@fosc,c
   824  00198C  0E37               	movlw	55
   825  00198E  6E47               	movwf	coinfig_ccpcon@fosc+1,c
   826  001990  0E4C               	movlw	76
   827  001992  6E48               	movwf	coinfig_ccpcon@fosc+2,c
   828  001994  0E60               	movlw	96
   829  001996  6E49               	movwf	coinfig_ccpcon@freq,c
   830  001998  0E6A               	movlw	106
   831  00199A  6E4A               	movwf	coinfig_ccpcon@freq+1,c
   832  00199C  0E46               	movlw	70
   833  00199E  6E4B               	movwf	coinfig_ccpcon@freq+2,c
   834  0019A0  EC0D  F00D         	call	_coinfig_ccpcon	;wreg free
   835                           
   836                           ;carroMain.c: 71: T2CONbits.TMR2ON = 1;
   837  0019A4  84CA               	bsf	4042,2,c	;volatile
   838  0019A6                     
   839                           ;carroMain.c: 92: if(PORTBbits.RB3==0&&PORTBbits.RB4==0&&PORTBbits.RB5==0){
   840  0019A6  A681               	btfss	3969,3,c	;volatile
   841  0019A8  B881               	btfsc	3969,4,c	;volatile
   842  0019AA  D005               	goto	l46
   843  0019AC  BA81               	btfsc	3969,5,c	;volatile
   844  0019AE  D003               	goto	l46
   845                           
   846                           ;carroMain.c: 93: carroAvanzarEspecial();
   847  0019B0  EC0E  F010         	call	_carroAvanzarEspecial	;wreg free
   848                           
   849                           ;carroMain.c: 94: }
   850  0019B4  D7F8               	goto	l45
   851  0019B6                     l46:
   852                           
   853                           ;carroMain.c: 95: else if(PORTBbits.RB3==0&&PORTBbits.RB4==0&&PORTBbits.RB5==1){
   854  0019B6  A681               	btfss	3969,3,c	;volatile
   855  0019B8  B881               	btfsc	3969,4,c	;volatile
   856  0019BA  D006               	goto	l48
   857  0019BC  AA81               	btfss	3969,5,c	;volatile
   858  0019BE  D004               	goto	l48
   859                           
   860                           ;carroMain.c: 96: carroGirar(3);
   861  0019C0  0E03               	movlw	3
   862  0019C2  EC64  F00F         	call	_carroGirar
   863                           
   864                           ;carroMain.c: 97: }
   865  0019C6  D7EF               	goto	l45
   866  0019C8                     l48:
   867                           
   868                           ;carroMain.c: 98: else if(PORTBbits.RB3==0&&PORTBbits.RB4==1&&PORTBbits.RB5==0){
   869  0019C8  A681               	btfss	3969,3,c	;volatile
   870  0019CA  A881               	btfss	3969,4,c	;volatile
   871  0019CC  D005               	goto	l50
   872  0019CE  BA81               	btfsc	3969,5,c	;volatile
   873  0019D0  D003               	goto	l50
   874                           
   875                           ;carroMain.c: 99: carroAvanzar();
   876  0019D2  EC1F  F010         	call	_carroAvanzar	;wreg free
   877                           
   878                           ;carroMain.c: 100: }
   879  0019D6  D7E7               	goto	l45
   880  0019D8                     l50:
   881                           
   882                           ;carroMain.c: 101: else if(PORTBbits.RB3==0&&PORTBbits.RB4==1&&PORTBbits.RB5==1){
   883  0019D8  A681               	btfss	3969,3,c	;volatile
   884  0019DA  A881               	btfss	3969,4,c	;volatile
   885  0019DC  D005               	goto	l52
   886  0019DE  AA81               	btfss	3969,5,c	;volatile
   887  0019E0  D003               	goto	l52
   888                           
   889                           ;carroMain.c: 102: carroAvanzar();
   890  0019E2  EC1F  F010         	call	_carroAvanzar	;wreg free
   891                           
   892                           ;carroMain.c: 103: }
   893  0019E6  D7DF               	goto	l45
   894  0019E8                     l52:
   895                           
   896                           ;carroMain.c: 104: else if(PORTBbits.RB3==1&&PORTBbits.RB4==0&&PORTBbits.RB5==0){
   897  0019E8  B681               	btfsc	3969,3,c	;volatile
   898  0019EA  B881               	btfsc	3969,4,c	;volatile
   899  0019EC  D006               	goto	l54
   900  0019EE  BA81               	btfsc	3969,5,c	;volatile
   901  0019F0  D004               	goto	l54
   902                           
   903                           ;carroMain.c: 105: carroGirar(1);
   904  0019F2  0E01               	movlw	1
   905  0019F4  EC64  F00F         	call	_carroGirar
   906                           
   907                           ;carroMain.c: 106: }
   908  0019F8  D7D6               	goto	l45
   909  0019FA                     l54:
   910                           
   911                           ;carroMain.c: 107: else if(PORTBbits.RB3==1&&PORTBbits.RB4==1&&PORTBbits.RB5==0){
   912  0019FA  B681               	btfsc	3969,3,c	;volatile
   913  0019FC  A881               	btfss	3969,4,c	;volatile
   914  0019FE  D005               	goto	l56
   915  001A00  BA81               	btfsc	3969,5,c	;volatile
   916  001A02  D003               	goto	l56
   917                           
   918                           ;carroMain.c: 108: carroAvanzar();
   919  001A04  EC1F  F010         	call	_carroAvanzar	;wreg free
   920                           
   921                           ;carroMain.c: 109: }
   922  001A08  D7CE               	goto	l45
   923  001A0A                     l56:
   924                           
   925                           ;carroMain.c: 110: else if(PORTBbits.RB3==1&&PORTBbits.RB4==1&&PORTBbits.RB5==1){
   926  001A0A  B681               	btfsc	3969,3,c	;volatile
   927  001A0C  A881               	btfss	3969,4,c	;volatile
   928  001A0E  D7CB               	goto	l45
   929  001A10  AA81               	btfss	3969,5,c	;volatile
   930  001A12  D7C9               	goto	l45
   931                           
   932                           ;carroMain.c: 111: carroMatar();
   933  001A14  ECFD  F00F         	call	_carroMatar	;wreg free
   934  001A18  D7C6               	goto	l45
   935  001A1A                     __end_of_main:
   936                           	opt stack 0
   937                           tblptru	equ	0xFF8
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           
   941 ;; *************** function _config_timer2 *****************
   942 ;; Defined at:
   943 ;;		line 14 in file "Pwm.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  onoff           2   12[COMRAM] int 
   946 ;;  presc           2   14[COMRAM] int 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         4       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0
   961 ;;      Totals:         6       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        6 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		___awtoft
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text1
   973  001D9C                     __ptext1:
   974                           	opt stack 0
   975  001D9C                     _config_timer2:
   976                           	opt stack 28
   977                           
   978                           ;Pwm.c: 16: T2CONbits.TOUTPS = 0b0000;
   979                           
   980                           ;incstack = 0
   981  001D9C  96CA               	bcf	4042,3,c	;volatile
   982  001D9E  98CA               	bcf	4042,4,c	;volatile
   983  001DA0  9ACA               	bcf	4042,5,c	;volatile
   984  001DA2  9CCA               	bcf	4042,6,c	;volatile
   985                           
   986                           ;Pwm.c: 18: prescg = presc;
   987  001DA4  C00F  F009         	movff	config_timer2@presc,___awtoft@c
   988  001DA8  C010  F00A         	movff	config_timer2@presc+1,___awtoft@c+1
   989  001DAC  ECAA  F00F         	call	___awtoft	;wreg free
   990  001DB0  C009  F0EF         	movff	?___awtoft,_prescg
   991  001DB4  C00A  F0F0         	movff	?___awtoft+1,_prescg+1
   992  001DB8  C00B  F0F1         	movff	?___awtoft+2,_prescg+2
   993                           
   994                           ;Pwm.c: 20: switch(presc)
   995  001DBC  D00B               	goto	l155
   996  001DBE  0EFC               	movlw	-4
   997  001DC0  16CA               	andwf	4042,f,c	;volatile
   998  001DC2  D01A               	goto	l157
   999  001DC4  50CA               	movf	4042,w,c	;volatile
  1000  001DC6  0BFC               	andlw	-4
  1001  001DC8  0901               	iorlw	1
  1002  001DCA  6ECA               	movwf	4042,c	;volatile
  1003  001DCC  D015               	goto	l157
  1004  001DCE  0E03               	movlw	3
  1005  001DD0  12CA               	iorwf	4042,f,c	;volatile
  1006                           
  1007                           ;Pwm.c: 25: }
  1008  001DD2  D012               	goto	l157
  1009  001DD4                     l155:
  1010  001DD4  C00F  F011         	movff	config_timer2@presc,??_config_timer2
  1011  001DD8  C010  F012         	movff	config_timer2@presc+1,??_config_timer2+1
  1012                           
  1013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1014                           ; Switch size 1, requested type "space"
  1015                           ; Number of cases is 1, Range of values is 0 to 0
  1016                           ; switch strategies available:
  1017                           ; Name         Instructions Cycles
  1018                           ; simple_byte            4     3 (average)
  1019                           ;	Chosen strategy is simple_byte
  1020  001DDC  5012               	movf	??_config_timer2+1,w,c
  1021  001DDE  0A00               	xorlw	0	; case 0
  1022  001DE0  A4D8               	btfss	status,2,c
  1023  001DE2  D00A               	goto	l157
  1024                           
  1025                           ; Switch size 1, requested type "space"
  1026                           ; Number of cases is 3, Range of values is 1 to 16
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte           10     6 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  001DE4  5011               	movf	??_config_timer2,w,c
  1032  001DE6  0A01               	xorlw	1	; case 1
  1033  001DE8  B4D8               	btfsc	status,2,c
  1034  001DEA  D7E9               	goto	l156
  1035  001DEC  0A05               	xorlw	5	; case 4
  1036  001DEE  B4D8               	btfsc	status,2,c
  1037  001DF0  D7E9               	goto	l158
  1038  001DF2  0A14               	xorlw	20	; case 16
  1039  001DF4  B4D8               	btfsc	status,2,c
  1040  001DF6  D7EB               	goto	l159
  1041  001DF8                     l157:
  1042                           
  1043                           ;Pwm.c: 27: T2CONbits.TOUTPS = 0b0000;
  1044  001DF8  96CA               	bcf	4042,3,c	;volatile
  1045  001DFA  98CA               	bcf	4042,4,c	;volatile
  1046  001DFC  9ACA               	bcf	4042,5,c	;volatile
  1047  001DFE  9CCA               	bcf	4042,6,c	;volatile
  1048                           
  1049                           ;Pwm.c: 29: T2CONbits.TMR2ON = onoff;
  1050  001E00  B00D               	btfsc	config_timer2@onoff,0,c
  1051  001E02  D002               	bra	u2385
  1052  001E04  94CA               	bcf	4042,2,c	;volatile
  1053  001E06  D001               	bra	u2386
  1054  001E08                     u2385:
  1055  001E08  84CA               	bsf	4042,2,c	;volatile
  1056  001E0A                     u2386:
  1057  001E0A  0012               	return		;funcret
  1058  001E0C                     __end_of_config_timer2:
  1059                           	opt stack 0
  1060                           tblptru	equ	0xFF8
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _configBoard *****************
  1066 ;; Defined at:
  1067 ;;		line 11 in file "config.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         0       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        0 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text2
  1095  001E0C                     __ptext2:
  1096                           	opt stack 0
  1097  001E0C                     _configBoard:
  1098                           	opt stack 30
  1099                           
  1100                           ;config.c: 15: INTCONbits.GIE = 0;
  1101                           
  1102                           ;incstack = 0
  1103  001E0C  9EF2               	bcf	intcon,7,c	;volatile
  1104                           
  1105                           ;config.c: 16: INTCONbits.PEIE = 0;
  1106  001E0E  9CF2               	bcf	intcon,6,c	;volatile
  1107                           
  1108                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1109  001E10  8ED5               	bsf	4053,7,c	;volatile
  1110                           
  1111                           ;config.c: 26: T08BIT = 1;
  1112  001E12  8CD5               	bsf	4053,6,c	;volatile
  1113                           
  1114                           ;config.c: 27: T0CONbits.T0CS = 0;
  1115  001E14  9AD5               	bcf	4053,5,c	;volatile
  1116                           
  1117                           ;config.c: 29: T0CONbits.PSA = 0;
  1118  001E16  96D5               	bcf	4053,3,c	;volatile
  1119                           
  1120                           ;config.c: 30: T0CONbits.T0PS = 100;
  1121  001E18  50D5               	movf	4053,w,c	;volatile
  1122  001E1A  0BF8               	andlw	-8
  1123  001E1C  0904               	iorlw	4
  1124  001E1E  6ED5               	movwf	4053,c	;volatile
  1125                           
  1126                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1127  001E20  94F2               	bcf	intcon,2,c	;volatile
  1128                           
  1129                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1130  001E22  80C1               	bsf	4033,0,c	;volatile
  1131  001E24  82C1               	bsf	4033,1,c	;volatile
  1132  001E26  84C1               	bsf	4033,2,c	;volatile
  1133  001E28  86C1               	bsf	4033,3,c	;volatile
  1134                           
  1135                           ;config.c: 44: ADCON0 = 0b00000111;
  1136  001E2A  0E07               	movlw	7
  1137  001E2C  6EC2               	movwf	4034,c	;volatile
  1138                           
  1139                           ;config.c: 47: ADCON0bits.ADON = 0;
  1140  001E2E  90C2               	bcf	4034,0,c	;volatile
  1141                           
  1142                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1143  001E30  8EC0               	bsf	4032,7,c	;volatile
  1144                           
  1145                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1146  001E32  50C0               	movf	4032,w,c	;volatile
  1147  001E34  0BF8               	andlw	-8
  1148  001E36  0906               	iorlw	6
  1149  001E38  6EC0               	movwf	4032,c	;volatile
  1150                           
  1151                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1152  001E3A  50C0               	movf	4032,w,c	;volatile
  1153  001E3C  0BC7               	andlw	-57
  1154  001E3E  0928               	iorlw	40
  1155  001E40  6EC0               	movwf	4032,c	;volatile
  1156                           
  1157                           ;config.c: 55: TRISAbits.RA1=1;
  1158  001E42  8292               	bsf	3986,1,c	;volatile
  1159                           
  1160                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1161  001E44  50C0               	movf	4032,w,c	;volatile
  1162  001E46  0BF8               	andlw	-8
  1163  001E48  0906               	iorlw	6
  1164  001E4A  6EC0               	movwf	4032,c	;volatile
  1165                           
  1166                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1167  001E4C  9AC1               	bcf	4033,5,c	;volatile
  1168                           
  1169                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1170  001E4E  98C1               	bcf	4033,4,c	;volatile
  1171                           
  1172                           ;config.c: 60: ADCON2bits.ADFM=1;
  1173  001E50  8EC0               	bsf	4032,7,c	;volatile
  1174                           
  1175                           ;config.c: 64: ADCON0bits.ADON=0;
  1176  001E52  90C2               	bcf	4034,0,c	;volatile
  1177                           
  1178                           ;config.c: 66: PIE1bits.ADIE=0;
  1179  001E54  9C9D               	bcf	3997,6,c	;volatile
  1180                           
  1181                           ;config.c: 67: PIR1bits.ADIF=0;
  1182  001E56  9C9E               	bcf	3998,6,c	;volatile
  1183                           
  1184                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1185  001E58  86C0               	bsf	4032,3,c	;volatile
  1186  001E5A  88C0               	bsf	4032,4,c	;volatile
  1187  001E5C  8AC0               	bsf	4032,5,c	;volatile
  1188                           
  1189                           ;config.c: 70: ADCON0bits.GO=1;
  1190  001E5E  82C2               	bsf	4034,1,c	;volatile
  1191                           
  1192                           ;config.c: 72: RCIF=0;
  1193  001E60  9A9E               	bcf	3998,5,c	;volatile
  1194                           
  1195                           ;config.c: 75: TRISD=0;
  1196  001E62  0E00               	movlw	0
  1197  001E64  6E95               	movwf	3989,c	;volatile
  1198                           
  1199                           ;config.c: 76: PORTA=0;
  1200  001E66  0E00               	movlw	0
  1201  001E68  6E80               	movwf	3968,c	;volatile
  1202  001E6A  0012               	return		;funcret
  1203  001E6C                     __end_of_configBoard:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _coinfig_ccpcon *****************
  1212 ;; Defined at:
  1213 ;;		line 34 in file "Pwm.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  fosc            3   69[COMRAM] float 
  1216 ;;  freq            3   72[COMRAM] float 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         6       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        9 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    2
  1235 ;; This function calls:
  1236 ;;		___ftadd
  1237 ;;		___ftdiv
  1238 ;;		___ftmul
  1239 ;;		___fttol
  1240 ;;		___lbtoft
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text3
  1247  001A1A                     __ptext3:
  1248                           	opt stack 0
  1249  001A1A                     _coinfig_ccpcon:
  1250                           	opt stack 28
  1251                           
  1252                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1253                           
  1254                           ;incstack = 0
  1255  001A1A  C0EF  F010         	movff	_prescg,___ftmul@f2
  1256  001A1E  C0F0  F011         	movff	_prescg+1,___ftmul@f2+1
  1257  001A22  C0F1  F012         	movff	_prescg+2,___ftmul@f2+2
  1258  001A26  C049  F00D         	movff	coinfig_ccpcon@freq,___ftmul@f1
  1259  001A2A  C04A  F00E         	movff	coinfig_ccpcon@freq+1,___ftmul@f1+1
  1260  001A2E  C04B  F00F         	movff	coinfig_ccpcon@freq+2,___ftmul@f1+2
  1261  001A32  EC83  F00A         	call	___ftmul	;wreg free
  1262  001A36  C00D  F04C         	movff	?___ftmul,_coinfig_ccpcon$1541
  1263  001A3A  C00E  F04D         	movff	?___ftmul+1,_coinfig_ccpcon$1541+1
  1264  001A3E  C00F  F04E         	movff	?___ftmul+2,_coinfig_ccpcon$1541+2
  1265                           
  1266                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1267  001A42  0E00               	movlw	0
  1268  001A44  6E2E               	movwf	___ftadd@f2,c
  1269  001A46  0E80               	movlw	128
  1270  001A48  6E2F               	movwf	___ftadd@f2+1,c
  1271  001A4A  0EBF               	movlw	191
  1272  001A4C  6E30               	movwf	___ftadd@f2+2,c
  1273  001A4E  0E00               	movlw	0
  1274  001A50  6E10               	movwf	___ftmul@f2,c
  1275  001A52  0E80               	movlw	128
  1276  001A54  6E11               	movwf	___ftmul@f2+1,c
  1277  001A56  0E40               	movlw	64
  1278  001A58  6E12               	movwf	___ftmul@f2+2,c
  1279  001A5A  C04C  F00D         	movff	_coinfig_ccpcon$1541,___ftmul@f1
  1280  001A5E  C04D  F00E         	movff	_coinfig_ccpcon$1541+1,___ftmul@f1+1
  1281  001A62  C04E  F00F         	movff	_coinfig_ccpcon$1541+2,___ftmul@f1+2
  1282  001A66  EC83  F00A         	call	___ftmul	;wreg free
  1283  001A6A  C00D  F01F         	movff	?___ftmul,___ftdiv@f2
  1284  001A6E  C00E  F020         	movff	?___ftmul+1,___ftdiv@f2+1
  1285  001A72  C00F  F021         	movff	?___ftmul+2,___ftdiv@f2+2
  1286  001A76  C046  F01C         	movff	coinfig_ccpcon@fosc,___ftdiv@f1
  1287  001A7A  C047  F01D         	movff	coinfig_ccpcon@fosc+1,___ftdiv@f1+1
  1288  001A7E  C048  F01E         	movff	coinfig_ccpcon@fosc+2,___ftdiv@f1+2
  1289  001A82  ECFD  F00A         	call	___ftdiv	;wreg free
  1290  001A86  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  1291  001A8A  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  1292  001A8E  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  1293  001A92  ECE6  F007         	call	___ftadd	;wreg free
  1294  001A96  C02B  F037         	movff	?___ftadd,___fttol@f1
  1295  001A9A  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  1296  001A9E  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  1297  001AA2  EC09  F00A         	call	___fttol	;wreg free
  1298  001AA6  5037               	movf	?___fttol,w,c
  1299  001AA8  6ECB               	movwf	4043,c	;volatile
  1300                           
  1301                           ;Pwm.c: 37: pr2g = PR2;
  1302  001AAA  50CB               	movf	4043,w,c	;volatile
  1303  001AAC  ECD9  F00F         	call	___lbtoft
  1304  001AB0  C009  F0EA         	movff	?___lbtoft,_pr2g
  1305  001AB4  C00A  F0EB         	movff	?___lbtoft+1,_pr2g+1
  1306  001AB8  C00B  F0EC         	movff	?___lbtoft+2,_pr2g+2
  1307                           
  1308                           ;Pwm.c: 38: CCP1CONbits.P1M = 0b00;
  1309  001ABC  0E3F               	movlw	-193
  1310  001ABE  16BD               	andwf	4029,f,c	;volatile
  1311                           
  1312                           ;Pwm.c: 39: CCP2CONbits.CCP2M = 1100;
  1313  001AC0  50BA               	movf	4026,w,c	;volatile
  1314  001AC2  0BF0               	andlw	-16
  1315  001AC4  090C               	iorlw	12
  1316  001AC6  6EBA               	movwf	4026,c	;volatile
  1317                           
  1318                           ;Pwm.c: 40: CCP1CONbits.CCP1M = 1100;
  1319  001AC8  50BD               	movf	4029,w,c	;volatile
  1320  001ACA  0BF0               	andlw	-16
  1321  001ACC  090C               	iorlw	12
  1322  001ACE  6EBD               	movwf	4029,c	;volatile
  1323  001AD0  0012               	return		;funcret
  1324  001AD2                     __end_of_coinfig_ccpcon:
  1325                           	opt stack 0
  1326                           tblptru	equ	0xFF8
  1327                           intcon	equ	0xFF2
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function ___lbtoft *****************
  1333 ;; Defined at:
  1334 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  c               1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  c               1   11[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  3    8[COMRAM] float 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         3       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        4 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    1
  1355 ;; This function calls:
  1356 ;;		___ftpack
  1357 ;; This function is called by:
  1358 ;;		_coinfig_ccpcon
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text4
  1363  001FB2                     __ptext4:
  1364                           	opt stack 0
  1365  001FB2                     ___lbtoft:
  1366                           	opt stack 28
  1367                           
  1368                           ;incstack = 0
  1369                           ;___lbtoft@c stored from wreg
  1370  001FB2  6E0C               	movwf	___lbtoft@c,c
  1371  001FB4  500C               	movf	___lbtoft@c,w,c
  1372  001FB6  6E01               	movwf	___ftpack@arg,c
  1373  001FB8  6A02               	clrf	___ftpack@arg+1,c
  1374  001FBA  6A03               	clrf	___ftpack@arg+2,c
  1375  001FBC  0E8E               	movlw	142
  1376  001FBE  6E04               	movwf	___ftpack@exp,c
  1377  001FC0  0E00               	movlw	0
  1378  001FC2  6E05               	movwf	___ftpack@sign,c
  1379  001FC4  EC69  F00D         	call	___ftpack	;wreg free
  1380  001FC8  C001  F009         	movff	?___ftpack,?___lbtoft
  1381  001FCC  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1382  001FD0  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1383  001FD4  0012               	return	
  1384  001FD6                     __end_of___lbtoft:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _carroMatar *****************
  1393 ;; Defined at:
  1394 ;;		line 174 in file "carroMain.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    6
  1415 ;; This function calls:
  1416 ;;		_config_ccp1
  1417 ;;		_config_ccp2
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text5
  1424  001FFA                     __ptext5:
  1425                           	opt stack 0
  1426  001FFA                     _carroMatar:
  1427                           	opt stack 24
  1428                           
  1429                           ;carroMain.c: 175: LATAbits.LA0=0;
  1430                           
  1431                           ;incstack = 0
  1432  001FFA  9089               	bcf	3977,0,c	;volatile
  1433                           
  1434                           ;carroMain.c: 176: LATAbits.LA1=0;
  1435  001FFC  9289               	bcf	3977,1,c	;volatile
  1436                           
  1437                           ;carroMain.c: 177: LATEbits.LE1 =0;
  1438  001FFE  928D               	bcf	3981,1,c	;volatile
  1439                           
  1440                           ;carroMain.c: 178: LATEbits.LE0=0;
  1441  002000  908D               	bcf	3981,0,c	;volatile
  1442                           
  1443                           ;carroMain.c: 179: config_ccp1(0);
  1444  002002  0E00               	movlw	0
  1445  002004  6E5C               	movwf	config_ccp1@duty1+1,c
  1446  002006  0E00               	movlw	0
  1447  002008  6E5B               	movwf	config_ccp1@duty1,c
  1448  00200A  EC87  F005         	call	_config_ccp1	;wreg free
  1449                           
  1450                           ;carroMain.c: 180: config_ccp2(0);
  1451  00200E  0E00               	movlw	0
  1452  002010  6E5C               	movwf	config_ccp2@duty2+1,c
  1453  002012  0E00               	movlw	0
  1454  002014  6E5B               	movwf	config_ccp2@duty2,c
  1455  002016  EC1E  F004         	call	_config_ccp2	;wreg free
  1456  00201A  0012               	return		;funcret
  1457  00201C                     __end_of_carroMatar:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           intcon	equ	0xFF2
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           status	equ	0xFD8
  1464                           
  1465 ;; *************** function _carroGirar *****************
  1466 ;; Defined at:
  1467 ;;		line 150 in file "carroMain.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  direccion       1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  direccion       1   94[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         0       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1484 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    6
  1488 ;; This function calls:
  1489 ;;		_config_ccp1
  1490 ;;		_config_ccp2
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text6
  1497  001EC8                     __ptext6:
  1498                           	opt stack 0
  1499  001EC8                     _carroGirar:
  1500                           	opt stack 24
  1501                           
  1502                           ;incstack = 0
  1503                           ;carroGirar@direccion stored from wreg
  1504  001EC8  6E5F               	movwf	carroGirar@direccion,c
  1505                           
  1506                           ;carroMain.c: 152: if(direccion==1){
  1507  001ECA  045F               	decf	carroGirar@direccion,w,c
  1508  001ECC  A4D8               	btfss	status,2,c
  1509  001ECE  D004               	goto	l73
  1510                           
  1511                           ;carroMain.c: 153: LATAbits.LA0=1;
  1512  001ED0  8089               	bsf	3977,0,c	;volatile
  1513                           
  1514                           ;carroMain.c: 154: LATAbits.LA1=0;
  1515  001ED2  9289               	bcf	3977,1,c	;volatile
  1516                           
  1517                           ;carroMain.c: 155: LATEbits.LE1 =0;
  1518  001ED4  928D               	bcf	3981,1,c	;volatile
  1519  001ED6  D010               	goto	L1
  1520  001ED8                     l73:
  1521                           
  1522                           ;carroMain.c: 158: else if(direccion==2){
  1523  001ED8  0E02               	movlw	2
  1524  001EDA  185F               	xorwf	carroGirar@direccion,w,c
  1525  001EDC  A4D8               	btfss	status,2,c
  1526  001EDE  D005               	goto	l75
  1527                           
  1528                           ;carroMain.c: 159: LATAbits.LA0=1;
  1529  001EE0  8089               	bsf	3977,0,c	;volatile
  1530                           
  1531                           ;carroMain.c: 160: LATAbits.LA1=0;
  1532  001EE2  9289               	bcf	3977,1,c	;volatile
  1533                           
  1534                           ;carroMain.c: 161: LATEbits.LE1 =0;
  1535  001EE4  928D               	bcf	3981,1,c	;volatile
  1536                           
  1537                           ;carroMain.c: 162: LATEbits.LE0=1;
  1538  001EE6  808D               	bsf	3981,0,c	;volatile
  1539                           
  1540                           ;carroMain.c: 163: }
  1541  001EE8  D008               	goto	l77
  1542  001EEA                     l75:
  1543                           
  1544                           ;carroMain.c: 164: else if(direccion==3){
  1545  001EEA  0E03               	movlw	3
  1546  001EEC  185F               	xorwf	carroGirar@direccion,w,c
  1547  001EEE  A4D8               	btfss	status,2,c
  1548  001EF0  D004               	goto	l77
  1549                           
  1550                           ;carroMain.c: 165: LATAbits.LA0=0;
  1551  001EF2  9089               	bcf	3977,0,c	;volatile
  1552                           
  1553                           ;carroMain.c: 166: LATAbits.LA1=0;
  1554  001EF4  9289               	bcf	3977,1,c	;volatile
  1555                           
  1556                           ;carroMain.c: 167: LATEbits.LE1 =1;
  1557  001EF6  828D               	bsf	3981,1,c	;volatile
  1558  001EF8                     L1:
  1559                           
  1560                           ;carroMain.c: 168: LATEbits.LE0=0;
  1561  001EF8  908D               	bcf	3981,0,c	;volatile
  1562  001EFA                     l77:
  1563                           
  1564                           ;carroMain.c: 169: }
  1565                           ;carroMain.c: 170: config_ccp1(100);
  1566  001EFA  0E00               	movlw	0
  1567  001EFC  6E5C               	movwf	config_ccp1@duty1+1,c
  1568  001EFE  0E64               	movlw	100
  1569  001F00  6E5B               	movwf	config_ccp1@duty1,c
  1570  001F02  EC87  F005         	call	_config_ccp1	;wreg free
  1571                           
  1572                           ;carroMain.c: 171: config_ccp2(100);
  1573  001F06  0E00               	movlw	0
  1574  001F08  6E5C               	movwf	config_ccp2@duty2+1,c
  1575  001F0A  0E64               	movlw	100
  1576  001F0C  6E5B               	movwf	config_ccp2@duty2,c
  1577  001F0E  EC1E  F004         	call	_config_ccp2	;wreg free
  1578  001F12  0012               	return		;funcret
  1579  001F14                     __end_of_carroGirar:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           intcon	equ	0xFF2
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _carroAvanzarEspecial *****************
  1588 ;; Defined at:
  1589 ;;		line 129 in file "carroMain.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    6
  1610 ;; This function calls:
  1611 ;;		_config_ccp1
  1612 ;;		_config_ccp2
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text7
  1619  00201C                     __ptext7:
  1620                           	opt stack 0
  1621  00201C                     _carroAvanzarEspecial:
  1622                           	opt stack 24
  1623                           
  1624                           ;carroMain.c: 131: LATEbits.LE1=1;
  1625                           
  1626                           ;incstack = 0
  1627  00201C  828D               	bsf	3981,1,c	;volatile
  1628                           
  1629                           ;carroMain.c: 132: LATEbits.LE0=0;
  1630  00201E  908D               	bcf	3981,0,c	;volatile
  1631                           
  1632                           ;carroMain.c: 133: LATAbits.LA0=1;
  1633  002020  8089               	bsf	3977,0,c	;volatile
  1634                           
  1635                           ;carroMain.c: 134: LATAbits.LA1=0;
  1636  002022  9289               	bcf	3977,1,c	;volatile
  1637                           
  1638                           ;carroMain.c: 135: config_ccp1(80);
  1639  002024  0E00               	movlw	0
  1640  002026  6E5C               	movwf	config_ccp1@duty1+1,c
  1641  002028  0E50               	movlw	80
  1642  00202A  6E5B               	movwf	config_ccp1@duty1,c
  1643  00202C  EC87  F005         	call	_config_ccp1	;wreg free
  1644                           
  1645                           ;carroMain.c: 136: config_ccp2(80);
  1646  002030  0E00               	movlw	0
  1647  002032  6E5C               	movwf	config_ccp2@duty2+1,c
  1648  002034  0E50               	movlw	80
  1649  002036  6E5B               	movwf	config_ccp2@duty2,c
  1650  002038  EC1E  F004         	call	_config_ccp2	;wreg free
  1651  00203C  0012               	return		;funcret
  1652  00203E                     __end_of_carroAvanzarEspecial:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           intcon	equ	0xFF2
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _carroAvanzar *****************
  1661 ;; Defined at:
  1662 ;;		line 120 in file "carroMain.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1679 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1680 ;;Total ram usage:        0 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    6
  1683 ;; This function calls:
  1684 ;;		_config_ccp1
  1685 ;;		_config_ccp2
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text8
  1692  00203E                     __ptext8:
  1693                           	opt stack 0
  1694  00203E                     _carroAvanzar:
  1695                           	opt stack 24
  1696                           
  1697                           ;carroMain.c: 121: LATEbits.LE1=1;
  1698                           
  1699                           ;incstack = 0
  1700  00203E  828D               	bsf	3981,1,c	;volatile
  1701                           
  1702                           ;carroMain.c: 122: LATEbits.LE0=0;
  1703  002040  908D               	bcf	3981,0,c	;volatile
  1704                           
  1705                           ;carroMain.c: 123: LATAbits.LA0=1;
  1706  002042  8089               	bsf	3977,0,c	;volatile
  1707                           
  1708                           ;carroMain.c: 124: LATAbits.LA1=0;
  1709  002044  9289               	bcf	3977,1,c	;volatile
  1710                           
  1711                           ;carroMain.c: 125: config_ccp1(100);
  1712  002046  0E00               	movlw	0
  1713  002048  6E5C               	movwf	config_ccp1@duty1+1,c
  1714  00204A  0E64               	movlw	100
  1715  00204C  6E5B               	movwf	config_ccp1@duty1,c
  1716  00204E  EC87  F005         	call	_config_ccp1	;wreg free
  1717                           
  1718                           ;carroMain.c: 126: config_ccp2(100);
  1719  002052  0E00               	movlw	0
  1720  002054  6E5C               	movwf	config_ccp2@duty2+1,c
  1721  002056  0E64               	movlw	100
  1722  002058  6E5B               	movwf	config_ccp2@duty2,c
  1723  00205A  EC1E  F004         	call	_config_ccp2	;wreg free
  1724  00205E  0012               	return		;funcret
  1725  002060                     __end_of_carroAvanzar:
  1726                           	opt stack 0
  1727                           tblptru	equ	0xFF8
  1728                           intcon	equ	0xFF2
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _config_ccp2 *****************
  1734 ;; Defined at:
  1735 ;;		line 85 in file "Pwm.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  duty2           2   90[COMRAM] int 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  a              30   23[BANK0 ] int [15]
  1740 ;;  j               2   76[BANK0 ] int 
  1741 ;;  n               2   74[BANK0 ] int 
  1742 ;;  y               2   72[BANK0 ] unsigned int 
  1743 ;;  w               2   70[BANK0 ] unsigned int 
  1744 ;;  x               2   68[BANK0 ] int 
  1745 ;;  z               2   60[BANK0 ] int 
  1746 ;;  i               2   58[BANK0 ] int 
  1747 ;;  valreg          2   56[BANK0 ] int 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         2       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0      55       0       0       0       0       0       0       0
  1759 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         4      55       0       0       0       0       0       0       0
  1761 ;;Total ram usage:       59 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    5
  1764 ;; This function calls:
  1765 ;;		___awdiv
  1766 ;;		___awtoft
  1767 ;;		___ftadd
  1768 ;;		___ftdiv
  1769 ;;		___ftmul
  1770 ;;		___fttol
  1771 ;;		_pow
  1772 ;; This function is called by:
  1773 ;;		_carroAvanzar
  1774 ;;		_carroAvanzarEspecial
  1775 ;;		_carroGirar
  1776 ;;		_carroMatar
  1777 ;;		_carroAtras
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text9
  1782  00083C                     __ptext9:
  1783                           	opt stack 0
  1784  00083C                     _config_ccp2:
  1785                           	opt stack 24
  1786                           
  1787                           ;Pwm.c: 87: int valreg;
  1788                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1789                           
  1790                           ;incstack = 0
  1791  00083C  C05B  F009         	movff	config_ccp2@duty2,___awtoft@c
  1792  000840  C05C  F00A         	movff	config_ccp2@duty2+1,___awtoft@c+1
  1793  000844  ECAA  F00F         	call	___awtoft	;wreg free
  1794  000848  C009  F010         	movff	?___awtoft,___ftmul@f2
  1795  00084C  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  1796  000850  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  1797  000854  0E00               	movlw	0
  1798  000856  6E2E               	movwf	___ftadd@f2,c
  1799  000858  0E80               	movlw	128
  1800  00085A  6E2F               	movwf	___ftadd@f2+1,c
  1801  00085C  0E3F               	movlw	63
  1802  00085E  6E30               	movwf	___ftadd@f2+2,c
  1803  000860  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  1804  000864  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  1805  000868  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  1806  00086C  ECE6  F007         	call	___ftadd	;wreg free
  1807  000870  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  1808  000874  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  1809  000878  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  1810  00087C  EC83  F00A         	call	___ftmul	;wreg free
  1811  000880  C00D  F095         	movff	?___ftmul,_config_ccp2$1545
  1812  000884  C00E  F096         	movff	?___ftmul+1,_config_ccp2$1545+1
  1813  000888  C00F  F097         	movff	?___ftmul+2,_config_ccp2$1545+2
  1814                           
  1815                           ;Pwm.c: 87: int valreg;
  1816                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1817  00088C  0E00               	movlw	0
  1818  00088E  6E1F               	movwf	___ftdiv@f2,c
  1819  000890  0EC8               	movlw	200
  1820  000892  6E20               	movwf	___ftdiv@f2+1,c
  1821  000894  0E42               	movlw	66
  1822  000896  6E21               	movwf	___ftdiv@f2+2,c
  1823  000898  0E00               	movlw	0
  1824  00089A  6E10               	movwf	___ftmul@f2,c
  1825  00089C  0E80               	movlw	128
  1826  00089E  6E11               	movwf	___ftmul@f2+1,c
  1827  0008A0  0E40               	movlw	64
  1828  0008A2  6E12               	movwf	___ftmul@f2+2,c
  1829  0008A4  C095  F00D         	movff	_config_ccp2$1545,___ftmul@f1
  1830  0008A8  C096  F00E         	movff	_config_ccp2$1545+1,___ftmul@f1+1
  1831  0008AC  C097  F00F         	movff	_config_ccp2$1545+2,___ftmul@f1+2
  1832  0008B0  EC83  F00A         	call	___ftmul	;wreg free
  1833  0008B4  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  1834  0008B8  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  1835  0008BC  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  1836  0008C0  ECFD  F00A         	call	___ftdiv	;wreg free
  1837  0008C4  C01C  F037         	movff	?___ftdiv,___fttol@f1
  1838  0008C8  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  1839  0008CC  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  1840  0008D0  EC09  F00A         	call	___fttol	;wreg free
  1841  0008D4  C037  F098         	movff	?___fttol,config_ccp2@valreg
  1842  0008D8  C038  F099         	movff	?___fttol+1,config_ccp2@valreg+1
  1843                           
  1844                           ;Pwm.c: 92: int n,x,i,j,z;
  1845                           ;Pwm.c: 93: unsigned int w,y;
  1846                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  1847  0008DC  EE20  F0AE         	lfsr	2,config_ccp2@F3978
  1848  0008E0  EE10  F077         	lfsr	1,config_ccp2@a
  1849  0008E4  0E1D               	movlw	29
  1850  0008E6                     u2321:
  1851  0008E6  CFDB FFE3          	movff	plusw2,plusw1
  1852  0008EA  06E8               	decf	wreg,f,c
  1853  0008EC  E2FC               	bc	u2321
  1854                           
  1855                           ;Pwm.c: 96: n = valreg;
  1856  0008EE  C098  F0AA         	movff	config_ccp2@valreg,config_ccp2@n
  1857  0008F2  C099  F0AB         	movff	config_ccp2@valreg+1,config_ccp2@n+1
  1858                           
  1859                           ;Pwm.c: 97: i = 0;
  1860  0008F6  0E00               	movlw	0
  1861  0008F8  0100               	movlb	0	; () banked
  1862  0008FA  6F9B               	movwf	(config_ccp2@i+1)& (0+255),b
  1863  0008FC  0E00               	movlw	0
  1864  0008FE  6F9A               	movwf	config_ccp2@i& (0+255),b
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;Pwm.c: 98: z = 0;
  1868  000900  0E00               	movlw	0
  1869  000902  6F9D               	movwf	(config_ccp2@z+1)& (0+255),b
  1870  000904  0E00               	movlw	0
  1871  000906  6F9C               	movwf	config_ccp2@z& (0+255),b
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;Pwm.c: 99: y = 0;
  1875  000908  0E00               	movlw	0
  1876  00090A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  1877  00090C  0E00               	movlw	0
  1878  00090E  6FA8               	movwf	config_ccp2@y& (0+255),b
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;Pwm.c: 100: w = 0;
  1882  000910  0E00               	movlw	0
  1883  000912  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  1884  000914  0E00               	movlw	0
  1885  000916  6FA6               	movwf	config_ccp2@w& (0+255),b
  1886                           
  1887                           ;Pwm.c: 102: while(n > 0)
  1888  000918  D024               	goto	l180
  1889  00091A                     l2452:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;Pwm.c: 103: {
  1893                           ;Pwm.c: 104: a[i] = n % 2;
  1894  00091A  0E01               	movlw	1
  1895  00091C  15AA               	andwf	config_ccp2@n& (0+255),w,b
  1896  00091E  6E5D               	movwf	??_config_ccp2& (0+255),c
  1897  000920  0E00               	movlw	0
  1898  000922  15AB               	andwf	(config_ccp2@n+1)& (0+255),w,b
  1899  000924  6E5E               	movwf	(??_config_ccp2+1)& (0+255),c
  1900  000926  90D8               	bcf	status,0,c
  1901  000928  359A               	rlcf	config_ccp2@i& (0+255),w,b
  1902  00092A  6ED9               	movwf	fsr2l,c
  1903  00092C  359B               	rlcf	(config_ccp2@i+1)& (0+255),w,b
  1904  00092E  6EDA               	movwf	fsr2h,c
  1905  000930  0E77               	movlw	low config_ccp2@a
  1906  000932  26D9               	addwf	fsr2l,f,c
  1907  000934  0E00               	movlw	high config_ccp2@a
  1908  000936  22DA               	addwfc	fsr2h,f,c
  1909  000938  C05D  FFDE         	movff	??_config_ccp2,postinc2
  1910  00093C  C05E  FFDD         	movff	??_config_ccp2+1,postdec2
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;Pwm.c: 105: n = n / 2;
  1914  000940  C0AA  F001         	movff	config_ccp2@n,___awdiv@dividend
  1915  000944  C0AB  F002         	movff	config_ccp2@n+1,___awdiv@dividend+1
  1916  000948  0E00               	movlw	0
  1917  00094A  6E04               	movwf	___awdiv@divisor+1,c
  1918  00094C  0E02               	movlw	2
  1919  00094E  6E03               	movwf	___awdiv@divisor,c
  1920  000950  EC50  F00E         	call	___awdiv	;wreg free
  1921  000954  C001  F0AA         	movff	?___awdiv,config_ccp2@n
  1922  000958  C002  F0AB         	movff	?___awdiv+1,config_ccp2@n+1
  1923                           
  1924                           ;Pwm.c: 106: i++;
  1925  00095C  0100               	movlb	0	; () banked
  1926  00095E  4B9A               	infsnz	config_ccp2@i& (0+255),f,b
  1927  000960  2B9B               	incf	(config_ccp2@i+1)& (0+255),f,b
  1928  000962                     l180:
  1929                           
  1930                           ; BSR set to: 0
  1931                           
  1932                           ; BSR set to: 0
  1933  000962  BFAB               	btfsc	(config_ccp2@n+1)& (0+255),7,b
  1934  000964  D005               	goto	u2330
  1935  000966  51AB               	movf	(config_ccp2@n+1)& (0+255),w,b
  1936  000968  E1D8               	bnz	l2452
  1937  00096A  05AA               	decf	config_ccp2@n& (0+255),w,b
  1938  00096C  B0D8               	btfsc	status,0,c
  1939  00096E  D7D5               	goto	l181
  1940  000970                     u2330:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;Pwm.c: 107: }
  1944                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  1945                           
  1946                           ; BSR set to: 0
  1947  000970  0E00               	movlw	0
  1948  000972  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  1949  000974  0E00               	movlw	0
  1950  000976  6FAC               	movwf	config_ccp2@j& (0+255),b
  1951  000978                     l2462:
  1952                           
  1953                           ; BSR set to: 0
  1954  000978  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  1955  00097A  D006               	goto	l183
  1956  00097C  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  1957  00097E  E159               	bnz	l2478
  1958  000980  0E02               	movlw	2
  1959  000982  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  1960  000984  B0D8               	btfsc	status,0,c
  1961  000986  D055               	goto	u2350
  1962  000988                     l183:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;Pwm.c: 110: {
  1966                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  1967                           
  1968                           ; BSR set to: 0
  1969  000988  C0AC  F009         	movff	config_ccp2@j,___awtoft@c
  1970  00098C  C0AD  F00A         	movff	config_ccp2@j+1,___awtoft@c+1
  1971  000990  ECAA  F00F         	call	___awtoft	;wreg free
  1972  000994  C009  F09E         	movff	?___awtoft,_config_ccp2$1546
  1973  000998  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1546+1
  1974  00099C  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1546+2
  1975                           
  1976                           ;Pwm.c: 110: {
  1977                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  1978  0009A0  C09E  F069         	movff	_config_ccp2$1546,pow@y
  1979  0009A4  C09F  F06A         	movff	_config_ccp2$1546+1,pow@y+1
  1980  0009A8  C0A0  F06B         	movff	_config_ccp2$1546+2,pow@y+2
  1981  0009AC  0E00               	movlw	0
  1982  0009AE  0100               	movlb	0	; () banked
  1983  0009B0  6F66               	movwf	pow@x& (0+255),b
  1984  0009B2  0E00               	movlw	0
  1985  0009B4  6F67               	movwf	(pow@x+1)& (0+255),b
  1986  0009B6  0E40               	movlw	64
  1987  0009B8  6F68               	movwf	(pow@x+2)& (0+255),b
  1988  0009BA  ECBC  F008         	call	_pow	;wreg free
  1989  0009BE  C066  F0A1         	movff	?_pow,_config_ccp2$1547
  1990  0009C2  C067  F0A2         	movff	?_pow+1,_config_ccp2$1547+1
  1991  0009C6  C068  F0A3         	movff	?_pow+2,_config_ccp2$1547+2
  1992                           
  1993                           ;Pwm.c: 110: {
  1994                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  1995  0009CA  C0A1  F010         	movff	_config_ccp2$1547,___ftmul@f2
  1996  0009CE  C0A2  F011         	movff	_config_ccp2$1547+1,___ftmul@f2+1
  1997  0009D2  C0A3  F012         	movff	_config_ccp2$1547+2,___ftmul@f2+2
  1998  0009D6  90D8               	bcf	status,0,c
  1999  0009D8  0100               	movlb	0	; () banked
  2000  0009DA  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2001  0009DC  6ED9               	movwf	fsr2l,c
  2002  0009DE  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2003  0009E0  6EDA               	movwf	fsr2h,c
  2004  0009E2  0E77               	movlw	low config_ccp2@a
  2005  0009E4  26D9               	addwf	fsr2l,f,c
  2006  0009E6  0E00               	movlw	high config_ccp2@a
  2007  0009E8  22DA               	addwfc	fsr2h,f,c
  2008  0009EA  CFDE F009          	movff	postinc2,___awtoft@c
  2009  0009EE  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2010  0009F2  ECAA  F00F         	call	___awtoft	;wreg free
  2011  0009F6  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2012  0009FA  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2013  0009FE  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2014  000A02  EC83  F00A         	call	___ftmul	;wreg free
  2015  000A06  C00D  F037         	movff	?___ftmul,___fttol@f1
  2016  000A0A  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2017  000A0E  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2018  000A12  EC09  F00A         	call	___fttol	;wreg free
  2019  000A16  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2020  000A1A  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2021                           
  2022                           ;Pwm.c: 112: y = x + y;
  2023  000A1E  0100               	movlb	0	; () banked
  2024  000A20  51A8               	movf	config_ccp2@y& (0+255),w,b
  2025  000A22  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2026  000A24  6FA8               	movwf	config_ccp2@y& (0+255),b
  2027  000A26  51A9               	movf	(config_ccp2@y+1)& (0+255),w,b
  2028  000A28  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2029  000A2A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2030                           
  2031                           ; BSR set to: 0
  2032  000A2C  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2033  000A2E  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2034  000A30  D7A3               	goto	l2462
  2035  000A32                     u2350:
  2036  000A32                     l2478:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;Pwm.c: 113: }
  2040                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  2041  000A32  0E00               	movlw	0
  2042  000A34  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2043  000A36  0E02               	movlw	2
  2044  000A38  6FAC               	movwf	config_ccp2@j& (0+255),b
  2045  000A3A                     l2480:
  2046                           
  2047                           ; BSR set to: 0
  2048  000A3A  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2049  000A3C  D006               	goto	l185
  2050  000A3E  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2051  000A40  E15B               	bnz	l2498
  2052  000A42  0E0A               	movlw	10
  2053  000A44  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2054  000A46  B0D8               	btfsc	status,0,c
  2055  000A48  D057               	goto	u2370
  2056  000A4A                     l185:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;Pwm.c: 115: {
  2060                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2061                           
  2062                           ; BSR set to: 0
  2063  000A4A  C09C  F009         	movff	config_ccp2@z,___awtoft@c
  2064  000A4E  C09D  F00A         	movff	config_ccp2@z+1,___awtoft@c+1
  2065  000A52  ECAA  F00F         	call	___awtoft	;wreg free
  2066  000A56  C009  F09E         	movff	?___awtoft,_config_ccp2$1546
  2067  000A5A  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1546+1
  2068  000A5E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1546+2
  2069                           
  2070                           ;Pwm.c: 115: {
  2071                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2072  000A62  C09E  F069         	movff	_config_ccp2$1546,pow@y
  2073  000A66  C09F  F06A         	movff	_config_ccp2$1546+1,pow@y+1
  2074  000A6A  C0A0  F06B         	movff	_config_ccp2$1546+2,pow@y+2
  2075  000A6E  0E00               	movlw	0
  2076  000A70  0100               	movlb	0	; () banked
  2077  000A72  6F66               	movwf	pow@x& (0+255),b
  2078  000A74  0E00               	movlw	0
  2079  000A76  6F67               	movwf	(pow@x+1)& (0+255),b
  2080  000A78  0E40               	movlw	64
  2081  000A7A  6F68               	movwf	(pow@x+2)& (0+255),b
  2082  000A7C  ECBC  F008         	call	_pow	;wreg free
  2083  000A80  C066  F0A1         	movff	?_pow,_config_ccp2$1547
  2084  000A84  C067  F0A2         	movff	?_pow+1,_config_ccp2$1547+1
  2085  000A88  C068  F0A3         	movff	?_pow+2,_config_ccp2$1547+2
  2086                           
  2087                           ;Pwm.c: 115: {
  2088                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2089  000A8C  C0A1  F010         	movff	_config_ccp2$1547,___ftmul@f2
  2090  000A90  C0A2  F011         	movff	_config_ccp2$1547+1,___ftmul@f2+1
  2091  000A94  C0A3  F012         	movff	_config_ccp2$1547+2,___ftmul@f2+2
  2092  000A98  90D8               	bcf	status,0,c
  2093  000A9A  0100               	movlb	0	; () banked
  2094  000A9C  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2095  000A9E  6ED9               	movwf	fsr2l,c
  2096  000AA0  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2097  000AA2  6EDA               	movwf	fsr2h,c
  2098  000AA4  0E77               	movlw	low config_ccp2@a
  2099  000AA6  26D9               	addwf	fsr2l,f,c
  2100  000AA8  0E00               	movlw	high config_ccp2@a
  2101  000AAA  22DA               	addwfc	fsr2h,f,c
  2102  000AAC  CFDE F009          	movff	postinc2,___awtoft@c
  2103  000AB0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2104  000AB4  ECAA  F00F         	call	___awtoft	;wreg free
  2105  000AB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2106  000ABC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2107  000AC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2108  000AC4  EC83  F00A         	call	___ftmul	;wreg free
  2109  000AC8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2110  000ACC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2111  000AD0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2112  000AD4  EC09  F00A         	call	___fttol	;wreg free
  2113  000AD8  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2114  000ADC  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2115                           
  2116                           ;Pwm.c: 117: w = x + w;
  2117  000AE0  0100               	movlb	0	; () banked
  2118  000AE2  51A6               	movf	config_ccp2@w& (0+255),w,b
  2119  000AE4  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2120  000AE6  6FA6               	movwf	config_ccp2@w& (0+255),b
  2121  000AE8  51A7               	movf	(config_ccp2@w+1)& (0+255),w,b
  2122  000AEA  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2123  000AEC  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;Pwm.c: 118: z++;
  2127  000AEE  4B9C               	infsnz	config_ccp2@z& (0+255),f,b
  2128  000AF0  2B9D               	incf	(config_ccp2@z+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131  000AF2  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2132  000AF4  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2133  000AF6  D7A1               	goto	l2480
  2134  000AF8                     u2370:
  2135  000AF8                     l2498:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;Pwm.c: 119: }
  2139                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  2140  000AF8  C0A8  F05D         	movff	config_ccp2@y,??_config_ccp2
  2141  000AFC  3A5D               	swapf	??_config_ccp2,f,c
  2142  000AFE  50BA               	movf	4026,w,c	;volatile
  2143  000B00  185D               	xorwf	??_config_ccp2,w,c
  2144  000B02  0BCF               	andlw	-49
  2145  000B04  185D               	xorwf	??_config_ccp2,w,c
  2146  000B06  6EBA               	movwf	4026,c	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;Pwm.c: 122: CCPR2L = w;
  2150  000B08  C0A6  FFBB         	movff	config_ccp2@w,4027	;volatile
  2151                           
  2152                           ; BSR set to: 0
  2153  000B0C  0012               	return		;funcret
  2154  000B0E                     __end_of_config_ccp2:
  2155                           	opt stack 0
  2156                           tblptru	equ	0xFF8
  2157                           intcon	equ	0xFF2
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           plusw1	equ	0xFE3
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           plusw2	equ	0xFDB
  2164                           fsr2h	equ	0xFDA
  2165                           fsr2l	equ	0xFD9
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _config_ccp1 *****************
  2169 ;; Defined at:
  2170 ;;		line 43 in file "Pwm.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  duty1           2   90[COMRAM] int 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  a              30   23[BANK0 ] int [15]
  2175 ;;  j               2   76[BANK0 ] int 
  2176 ;;  n               2   74[BANK0 ] int 
  2177 ;;  y               2   72[BANK0 ] unsigned int 
  2178 ;;  w               2   70[BANK0 ] unsigned int 
  2179 ;;  x               2   68[BANK0 ] int 
  2180 ;;  z               2   60[BANK0 ] int 
  2181 ;;  i               2   58[BANK0 ] int 
  2182 ;;  valreg          2   56[BANK0 ] int 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         0      55       0       0       0       0       0       0       0
  2194 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2195 ;;      Totals:         4      55       0       0       0       0       0       0       0
  2196 ;;Total ram usage:       59 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    5
  2199 ;; This function calls:
  2200 ;;		___awdiv
  2201 ;;		___awtoft
  2202 ;;		___ftadd
  2203 ;;		___ftdiv
  2204 ;;		___ftmul
  2205 ;;		___fttol
  2206 ;;		_pow
  2207 ;; This function is called by:
  2208 ;;		_carroAvanzar
  2209 ;;		_carroAvanzarEspecial
  2210 ;;		_carroGirar
  2211 ;;		_carroMatar
  2212 ;;		_carroAtras
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text10
  2217  000B0E                     __ptext10:
  2218                           	opt stack 0
  2219  000B0E                     _config_ccp1:
  2220                           	opt stack 24
  2221                           
  2222                           ;Pwm.c: 45: int valreg;
  2223                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;incstack = 0
  2227  000B0E  C05B  F009         	movff	config_ccp1@duty1,___awtoft@c
  2228  000B12  C05C  F00A         	movff	config_ccp1@duty1+1,___awtoft@c+1
  2229  000B16  ECAA  F00F         	call	___awtoft	;wreg free
  2230  000B1A  C009  F010         	movff	?___awtoft,___ftmul@f2
  2231  000B1E  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  2232  000B22  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  2233  000B26  0E00               	movlw	0
  2234  000B28  6E2E               	movwf	___ftadd@f2,c
  2235  000B2A  0E80               	movlw	128
  2236  000B2C  6E2F               	movwf	___ftadd@f2+1,c
  2237  000B2E  0E3F               	movlw	63
  2238  000B30  6E30               	movwf	___ftadd@f2+2,c
  2239  000B32  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  2240  000B36  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  2241  000B3A  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  2242  000B3E  ECE6  F007         	call	___ftadd	;wreg free
  2243  000B42  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  2244  000B46  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  2245  000B4A  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  2246  000B4E  EC83  F00A         	call	___ftmul	;wreg free
  2247  000B52  C00D  F095         	movff	?___ftmul,_config_ccp1$1542
  2248  000B56  C00E  F096         	movff	?___ftmul+1,_config_ccp1$1542+1
  2249  000B5A  C00F  F097         	movff	?___ftmul+2,_config_ccp1$1542+2
  2250                           
  2251                           ;Pwm.c: 45: int valreg;
  2252                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2253  000B5E  0E00               	movlw	0
  2254  000B60  6E1F               	movwf	___ftdiv@f2,c
  2255  000B62  0EC8               	movlw	200
  2256  000B64  6E20               	movwf	___ftdiv@f2+1,c
  2257  000B66  0E42               	movlw	66
  2258  000B68  6E21               	movwf	___ftdiv@f2+2,c
  2259  000B6A  0E00               	movlw	0
  2260  000B6C  6E10               	movwf	___ftmul@f2,c
  2261  000B6E  0E80               	movlw	128
  2262  000B70  6E11               	movwf	___ftmul@f2+1,c
  2263  000B72  0E40               	movlw	64
  2264  000B74  6E12               	movwf	___ftmul@f2+2,c
  2265  000B76  C095  F00D         	movff	_config_ccp1$1542,___ftmul@f1
  2266  000B7A  C096  F00E         	movff	_config_ccp1$1542+1,___ftmul@f1+1
  2267  000B7E  C097  F00F         	movff	_config_ccp1$1542+2,___ftmul@f1+2
  2268  000B82  EC83  F00A         	call	___ftmul	;wreg free
  2269  000B86  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2270  000B8A  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2271  000B8E  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2272  000B92  ECFD  F00A         	call	___ftdiv	;wreg free
  2273  000B96  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2274  000B9A  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2275  000B9E  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2276  000BA2  EC09  F00A         	call	___fttol	;wreg free
  2277  000BA6  C037  F098         	movff	?___fttol,config_ccp1@valreg
  2278  000BAA  C038  F099         	movff	?___fttol+1,config_ccp1@valreg+1
  2279                           
  2280                           ;Pwm.c: 50: int n,x,i,j,z;
  2281                           ;Pwm.c: 51: unsigned int w,y;
  2282                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2283  000BAE  EE20  F0CC         	lfsr	2,config_ccp1@F3967
  2284  000BB2  EE10  F077         	lfsr	1,config_ccp1@a
  2285  000BB6  0E1D               	movlw	29
  2286  000BB8                     u2261:
  2287  000BB8  CFDB FFE3          	movff	plusw2,plusw1
  2288  000BBC  06E8               	decf	wreg,f,c
  2289  000BBE  E2FC               	bc	u2261
  2290                           
  2291                           ;Pwm.c: 54: n = valreg;
  2292  000BC0  C098  F0AA         	movff	config_ccp1@valreg,config_ccp1@n
  2293  000BC4  C099  F0AB         	movff	config_ccp1@valreg+1,config_ccp1@n+1
  2294                           
  2295                           ;Pwm.c: 55: i = 0;
  2296  000BC8  0E00               	movlw	0
  2297  000BCA  0100               	movlb	0	; () banked
  2298  000BCC  6F9B               	movwf	(config_ccp1@i+1)& (0+255),b
  2299  000BCE  0E00               	movlw	0
  2300  000BD0  6F9A               	movwf	config_ccp1@i& (0+255),b
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;Pwm.c: 56: z = 0;
  2304  000BD2  0E00               	movlw	0
  2305  000BD4  6F9D               	movwf	(config_ccp1@z+1)& (0+255),b
  2306  000BD6  0E00               	movlw	0
  2307  000BD8  6F9C               	movwf	config_ccp1@z& (0+255),b
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;Pwm.c: 57: y = 0;
  2311  000BDA  0E00               	movlw	0
  2312  000BDC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2313  000BDE  0E00               	movlw	0
  2314  000BE0  6FA8               	movwf	config_ccp1@y& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;Pwm.c: 58: w = 0;
  2318  000BE2  0E00               	movlw	0
  2319  000BE4  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2320  000BE6  0E00               	movlw	0
  2321  000BE8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2322                           
  2323                           ;Pwm.c: 60: while(n > 0)
  2324  000BEA  D024               	goto	l168
  2325  000BEC                     l2388:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;Pwm.c: 61: {
  2329                           ;Pwm.c: 62: a[i] = n % 2;
  2330  000BEC  0E01               	movlw	1
  2331  000BEE  15AA               	andwf	config_ccp1@n& (0+255),w,b
  2332  000BF0  6E5D               	movwf	??_config_ccp1& (0+255),c
  2333  000BF2  0E00               	movlw	0
  2334  000BF4  15AB               	andwf	(config_ccp1@n+1)& (0+255),w,b
  2335  000BF6  6E5E               	movwf	(??_config_ccp1+1)& (0+255),c
  2336  000BF8  90D8               	bcf	status,0,c
  2337  000BFA  359A               	rlcf	config_ccp1@i& (0+255),w,b
  2338  000BFC  6ED9               	movwf	fsr2l,c
  2339  000BFE  359B               	rlcf	(config_ccp1@i+1)& (0+255),w,b
  2340  000C00  6EDA               	movwf	fsr2h,c
  2341  000C02  0E77               	movlw	low config_ccp1@a
  2342  000C04  26D9               	addwf	fsr2l,f,c
  2343  000C06  0E00               	movlw	high config_ccp1@a
  2344  000C08  22DA               	addwfc	fsr2h,f,c
  2345  000C0A  C05D  FFDE         	movff	??_config_ccp1,postinc2
  2346  000C0E  C05E  FFDD         	movff	??_config_ccp1+1,postdec2
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;Pwm.c: 63: n = n / 2;
  2350  000C12  C0AA  F001         	movff	config_ccp1@n,___awdiv@dividend
  2351  000C16  C0AB  F002         	movff	config_ccp1@n+1,___awdiv@dividend+1
  2352  000C1A  0E00               	movlw	0
  2353  000C1C  6E04               	movwf	___awdiv@divisor+1,c
  2354  000C1E  0E02               	movlw	2
  2355  000C20  6E03               	movwf	___awdiv@divisor,c
  2356  000C22  EC50  F00E         	call	___awdiv	;wreg free
  2357  000C26  C001  F0AA         	movff	?___awdiv,config_ccp1@n
  2358  000C2A  C002  F0AB         	movff	?___awdiv+1,config_ccp1@n+1
  2359                           
  2360                           ;Pwm.c: 64: i++;
  2361  000C2E  0100               	movlb	0	; () banked
  2362  000C30  4B9A               	infsnz	config_ccp1@i& (0+255),f,b
  2363  000C32  2B9B               	incf	(config_ccp1@i+1)& (0+255),f,b
  2364  000C34                     l168:
  2365                           
  2366                           ; BSR set to: 0
  2367                           
  2368                           ; BSR set to: 0
  2369  000C34  BFAB               	btfsc	(config_ccp1@n+1)& (0+255),7,b
  2370  000C36  D005               	goto	u2270
  2371  000C38  51AB               	movf	(config_ccp1@n+1)& (0+255),w,b
  2372  000C3A  E1D8               	bnz	l2388
  2373  000C3C  05AA               	decf	config_ccp1@n& (0+255),w,b
  2374  000C3E  B0D8               	btfsc	status,0,c
  2375  000C40  D7D5               	goto	l169
  2376  000C42                     u2270:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;Pwm.c: 65: }
  2380                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  2381                           
  2382                           ; BSR set to: 0
  2383  000C42  0E00               	movlw	0
  2384  000C44  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2385  000C46  0E00               	movlw	0
  2386  000C48  6FAC               	movwf	config_ccp1@j& (0+255),b
  2387  000C4A                     l2398:
  2388                           
  2389                           ; BSR set to: 0
  2390  000C4A  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2391  000C4C  D006               	goto	l171
  2392  000C4E  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2393  000C50  E159               	bnz	l2414
  2394  000C52  0E02               	movlw	2
  2395  000C54  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2396  000C56  B0D8               	btfsc	status,0,c
  2397  000C58  D055               	goto	u2290
  2398  000C5A                     l171:
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;Pwm.c: 68: {
  2402                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2403                           
  2404                           ; BSR set to: 0
  2405  000C5A  C0AC  F009         	movff	config_ccp1@j,___awtoft@c
  2406  000C5E  C0AD  F00A         	movff	config_ccp1@j+1,___awtoft@c+1
  2407  000C62  ECAA  F00F         	call	___awtoft	;wreg free
  2408  000C66  C009  F09E         	movff	?___awtoft,_config_ccp1$1543
  2409  000C6A  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1543+1
  2410  000C6E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1543+2
  2411                           
  2412                           ;Pwm.c: 68: {
  2413                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2414  000C72  C09E  F069         	movff	_config_ccp1$1543,pow@y
  2415  000C76  C09F  F06A         	movff	_config_ccp1$1543+1,pow@y+1
  2416  000C7A  C0A0  F06B         	movff	_config_ccp1$1543+2,pow@y+2
  2417  000C7E  0E00               	movlw	0
  2418  000C80  0100               	movlb	0	; () banked
  2419  000C82  6F66               	movwf	pow@x& (0+255),b
  2420  000C84  0E00               	movlw	0
  2421  000C86  6F67               	movwf	(pow@x+1)& (0+255),b
  2422  000C88  0E40               	movlw	64
  2423  000C8A  6F68               	movwf	(pow@x+2)& (0+255),b
  2424  000C8C  ECBC  F008         	call	_pow	;wreg free
  2425  000C90  C066  F0A1         	movff	?_pow,_config_ccp1$1544
  2426  000C94  C067  F0A2         	movff	?_pow+1,_config_ccp1$1544+1
  2427  000C98  C068  F0A3         	movff	?_pow+2,_config_ccp1$1544+2
  2428                           
  2429                           ;Pwm.c: 68: {
  2430                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2431  000C9C  C0A1  F010         	movff	_config_ccp1$1544,___ftmul@f2
  2432  000CA0  C0A2  F011         	movff	_config_ccp1$1544+1,___ftmul@f2+1
  2433  000CA4  C0A3  F012         	movff	_config_ccp1$1544+2,___ftmul@f2+2
  2434  000CA8  90D8               	bcf	status,0,c
  2435  000CAA  0100               	movlb	0	; () banked
  2436  000CAC  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2437  000CAE  6ED9               	movwf	fsr2l,c
  2438  000CB0  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2439  000CB2  6EDA               	movwf	fsr2h,c
  2440  000CB4  0E77               	movlw	low config_ccp1@a
  2441  000CB6  26D9               	addwf	fsr2l,f,c
  2442  000CB8  0E00               	movlw	high config_ccp1@a
  2443  000CBA  22DA               	addwfc	fsr2h,f,c
  2444  000CBC  CFDE F009          	movff	postinc2,___awtoft@c
  2445  000CC0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2446  000CC4  ECAA  F00F         	call	___awtoft	;wreg free
  2447  000CC8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2448  000CCC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2449  000CD0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2450  000CD4  EC83  F00A         	call	___ftmul	;wreg free
  2451  000CD8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2452  000CDC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2453  000CE0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2454  000CE4  EC09  F00A         	call	___fttol	;wreg free
  2455  000CE8  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2456  000CEC  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2457                           
  2458                           ;Pwm.c: 70: y = x + y;
  2459  000CF0  0100               	movlb	0	; () banked
  2460  000CF2  51A8               	movf	config_ccp1@y& (0+255),w,b
  2461  000CF4  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2462  000CF6  6FA8               	movwf	config_ccp1@y& (0+255),b
  2463  000CF8  51A9               	movf	(config_ccp1@y+1)& (0+255),w,b
  2464  000CFA  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2465  000CFC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468  000CFE  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2469  000D00  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2470  000D02  D7A3               	goto	l2398
  2471  000D04                     u2290:
  2472  000D04                     l2414:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;Pwm.c: 71: }
  2476                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  2477  000D04  0E00               	movlw	0
  2478  000D06  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2479  000D08  0E02               	movlw	2
  2480  000D0A  6FAC               	movwf	config_ccp1@j& (0+255),b
  2481  000D0C                     l2416:
  2482                           
  2483                           ; BSR set to: 0
  2484  000D0C  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2485  000D0E  D006               	goto	l173
  2486  000D10  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2487  000D12  E15B               	bnz	l2434
  2488  000D14  0E0A               	movlw	10
  2489  000D16  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2490  000D18  B0D8               	btfsc	status,0,c
  2491  000D1A  D057               	goto	u2310
  2492  000D1C                     l173:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;Pwm.c: 73: {
  2496                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2497                           
  2498                           ; BSR set to: 0
  2499  000D1C  C09C  F009         	movff	config_ccp1@z,___awtoft@c
  2500  000D20  C09D  F00A         	movff	config_ccp1@z+1,___awtoft@c+1
  2501  000D24  ECAA  F00F         	call	___awtoft	;wreg free
  2502  000D28  C009  F09E         	movff	?___awtoft,_config_ccp1$1543
  2503  000D2C  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1543+1
  2504  000D30  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1543+2
  2505                           
  2506                           ;Pwm.c: 73: {
  2507                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2508  000D34  C09E  F069         	movff	_config_ccp1$1543,pow@y
  2509  000D38  C09F  F06A         	movff	_config_ccp1$1543+1,pow@y+1
  2510  000D3C  C0A0  F06B         	movff	_config_ccp1$1543+2,pow@y+2
  2511  000D40  0E00               	movlw	0
  2512  000D42  0100               	movlb	0	; () banked
  2513  000D44  6F66               	movwf	pow@x& (0+255),b
  2514  000D46  0E00               	movlw	0
  2515  000D48  6F67               	movwf	(pow@x+1)& (0+255),b
  2516  000D4A  0E40               	movlw	64
  2517  000D4C  6F68               	movwf	(pow@x+2)& (0+255),b
  2518  000D4E  ECBC  F008         	call	_pow	;wreg free
  2519  000D52  C066  F0A1         	movff	?_pow,_config_ccp1$1544
  2520  000D56  C067  F0A2         	movff	?_pow+1,_config_ccp1$1544+1
  2521  000D5A  C068  F0A3         	movff	?_pow+2,_config_ccp1$1544+2
  2522                           
  2523                           ;Pwm.c: 73: {
  2524                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2525  000D5E  C0A1  F010         	movff	_config_ccp1$1544,___ftmul@f2
  2526  000D62  C0A2  F011         	movff	_config_ccp1$1544+1,___ftmul@f2+1
  2527  000D66  C0A3  F012         	movff	_config_ccp1$1544+2,___ftmul@f2+2
  2528  000D6A  90D8               	bcf	status,0,c
  2529  000D6C  0100               	movlb	0	; () banked
  2530  000D6E  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2531  000D70  6ED9               	movwf	fsr2l,c
  2532  000D72  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2533  000D74  6EDA               	movwf	fsr2h,c
  2534  000D76  0E77               	movlw	low config_ccp1@a
  2535  000D78  26D9               	addwf	fsr2l,f,c
  2536  000D7A  0E00               	movlw	high config_ccp1@a
  2537  000D7C  22DA               	addwfc	fsr2h,f,c
  2538  000D7E  CFDE F009          	movff	postinc2,___awtoft@c
  2539  000D82  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2540  000D86  ECAA  F00F         	call	___awtoft	;wreg free
  2541  000D8A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2542  000D8E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2543  000D92  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2544  000D96  EC83  F00A         	call	___ftmul	;wreg free
  2545  000D9A  C00D  F037         	movff	?___ftmul,___fttol@f1
  2546  000D9E  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2547  000DA2  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2548  000DA6  EC09  F00A         	call	___fttol	;wreg free
  2549  000DAA  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2550  000DAE  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2551                           
  2552                           ;Pwm.c: 75: w = x + w;
  2553  000DB2  0100               	movlb	0	; () banked
  2554  000DB4  51A6               	movf	config_ccp1@w& (0+255),w,b
  2555  000DB6  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2556  000DB8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2557  000DBA  51A7               	movf	(config_ccp1@w+1)& (0+255),w,b
  2558  000DBC  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2559  000DBE  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;Pwm.c: 76: z++;
  2563  000DC0  4B9C               	infsnz	config_ccp1@z& (0+255),f,b
  2564  000DC2  2B9D               	incf	(config_ccp1@z+1)& (0+255),f,b
  2565                           
  2566                           ; BSR set to: 0
  2567  000DC4  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2568  000DC6  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2569  000DC8  D7A1               	goto	l2416
  2570  000DCA                     u2310:
  2571  000DCA                     l2434:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;Pwm.c: 77: }
  2575                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  2576  000DCA  C0A8  F05D         	movff	config_ccp1@y,??_config_ccp1
  2577  000DCE  3A5D               	swapf	??_config_ccp1,f,c
  2578  000DD0  50BD               	movf	4029,w,c	;volatile
  2579  000DD2  185D               	xorwf	??_config_ccp1,w,c
  2580  000DD4  0BCF               	andlw	-49
  2581  000DD6  185D               	xorwf	??_config_ccp1,w,c
  2582  000DD8  6EBD               	movwf	4029,c	;volatile
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;Pwm.c: 80: CCPR1L = w;
  2586  000DDA  C0A6  FFBE         	movff	config_ccp1@w,4030	;volatile
  2587                           
  2588                           ; BSR set to: 0
  2589  000DDE  0012               	return		;funcret
  2590  000DE0                     __end_of_config_ccp1:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           plusw1	equ	0xFE3
  2597                           postinc2	equ	0xFDE
  2598                           postdec2	equ	0xFDD
  2599                           plusw2	equ	0xFDB
  2600                           fsr2h	equ	0xFDA
  2601                           fsr2l	equ	0xFD9
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function _pow *****************
  2605 ;; Defined at:
  2606 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  x               3    6[BANK0 ] void 
  2609 ;;  y               3    9[BANK0 ] void 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  yi              4   19[BANK0 ] unsigned long 
  2612 ;;  sign            1   18[BANK0 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  3    6[BANK0 ] unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       6       0       0       0       0       0       0       0
  2623 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2626 ;;Total ram usage:       17 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    4
  2629 ;; This function calls:
  2630 ;;		___ftge
  2631 ;;		___ftmul
  2632 ;;		___ftneg
  2633 ;;		___fttol
  2634 ;;		___lltoft
  2635 ;;		_exp
  2636 ;;		_log
  2637 ;; This function is called by:
  2638 ;;		_config_ccp1
  2639 ;;		_config_ccp2
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text11
  2644  001178                     __ptext11:
  2645                           	opt stack 0
  2646  001178                     _pow:
  2647                           	opt stack 24
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;incstack = 0
  2651  001178  0E00               	movlw	0
  2652  00117A  0100               	movlb	0	; () banked
  2653  00117C  6F72               	movwf	pow@sign& (0+255),b
  2654                           
  2655                           ; BSR set to: 0
  2656  00117E  5166               	movf	pow@x& (0+255),w,b
  2657  001180  1167               	iorwf	(pow@x+1)& (0+255),w,b
  2658  001182  1168               	iorwf	(pow@x+2)& (0+255),w,b
  2659  001184  A4D8               	btfss	status,2,c
  2660  001186  D01D               	goto	l621
  2661                           
  2662                           ; BSR set to: 0
  2663  001188  0E00               	movlw	0
  2664  00118A  6E01               	movwf	___ftge@ff1,c
  2665  00118C  0E00               	movlw	0
  2666  00118E  6E02               	movwf	___ftge@ff1+1,c
  2667  001190  0E00               	movlw	0
  2668  001192  6E03               	movwf	___ftge@ff1+2,c
  2669  001194  C069  F004         	movff	pow@y,___ftge@ff2
  2670  001198  C06A  F005         	movff	pow@y+1,___ftge@ff2+1
  2671  00119C  C06B  F006         	movff	pow@y+2,___ftge@ff2+2
  2672  0011A0  EC08  F00E         	call	___ftge	;wreg free
  2673  0011A4  A0D8               	btfss	status,0,c
  2674  0011A6  D005               	goto	l622
  2675  0011A8  0E00               	movlw	0
  2676  0011AA  0100               	movlb	0	; () banked
  2677  0011AC  6FEE               	movwf	(_errno+1)& (0+255),b
  2678  0011AE  0E21               	movlw	33
  2679  0011B0  6FED               	movwf	_errno& (0+255),b
  2680  0011B2                     l622:
  2681  0011B2  0E00               	movlw	0
  2682  0011B4  0100               	movlb	0	; () banked
  2683  0011B6  6F66               	movwf	?_pow& (0+255),b
  2684  0011B8  0E00               	movlw	0
  2685  0011BA  6F67               	movwf	(?_pow+1)& (0+255),b
  2686  0011BC  0E00               	movlw	0
  2687  0011BE  6F68               	movwf	(?_pow+2)& (0+255),b
  2688                           
  2689                           ; BSR set to: 0
  2690  0011C0  0012               	return	
  2691  0011C2                     l621:
  2692                           
  2693                           ; BSR set to: 0
  2694                           
  2695                           ; BSR set to: 0
  2696  0011C2  5169               	movf	pow@y& (0+255),w,b
  2697  0011C4  116A               	iorwf	(pow@y+1)& (0+255),w,b
  2698  0011C6  116B               	iorwf	(pow@y+2)& (0+255),w,b
  2699  0011C8  A4D8               	btfss	status,2,c
  2700  0011CA  D007               	goto	l624
  2701                           
  2702                           ; BSR set to: 0
  2703  0011CC  0E00               	movlw	0
  2704  0011CE  6F66               	movwf	?_pow& (0+255),b
  2705  0011D0  0E80               	movlw	128
  2706  0011D2  6F67               	movwf	(?_pow+1)& (0+255),b
  2707  0011D4  0E3F               	movlw	63
  2708  0011D6  6F68               	movwf	(?_pow+2)& (0+255),b
  2709                           
  2710                           ; BSR set to: 0
  2711  0011D8  0012               	return	
  2712  0011DA                     l624:
  2713                           
  2714                           ; BSR set to: 0
  2715                           
  2716                           ; BSR set to: 0
  2717  0011DA  AF68               	btfss	(pow@x+2)& (0+255),7,b
  2718  0011DC  D041               	goto	l625
  2719                           
  2720                           ; BSR set to: 0
  2721  0011DE  C069  F037         	movff	pow@y,___fttol@f1
  2722  0011E2  C06A  F038         	movff	pow@y+1,___fttol@f1+1
  2723  0011E6  C06B  F039         	movff	pow@y+2,___fttol@f1+2
  2724  0011EA  EC09  F00A         	call	___fttol	;wreg free
  2725  0011EE  C037  F073         	movff	?___fttol,pow@yi
  2726  0011F2  C038  F074         	movff	?___fttol+1,pow@yi+1
  2727  0011F6  C039  F075         	movff	?___fttol+2,pow@yi+2
  2728  0011FA  C03A  F076         	movff	?___fttol+3,pow@yi+3
  2729  0011FE  C073  F009         	movff	pow@yi,___lltoft@c
  2730  001202  C074  F00A         	movff	pow@yi+1,___lltoft@c+1
  2731  001206  C075  F00B         	movff	pow@yi+2,___lltoft@c+2
  2732  00120A  C076  F00C         	movff	pow@yi+3,___lltoft@c+3
  2733  00120E  EC36  F00F         	call	___lltoft	;wreg free
  2734  001212  0100               	movlb	0	; () banked
  2735  001214  5169               	movf	pow@y& (0+255),w,b
  2736  001216  1809               	xorwf	?___lltoft,w,c
  2737  001218  E107               	bnz	u2180
  2738  00121A  516A               	movf	(pow@y+1)& (0+255),w,b
  2739  00121C  180A               	xorwf	?___lltoft+1,w,c
  2740  00121E  E104               	bnz	u2180
  2741  001220  516B               	movf	(pow@y+2)& (0+255),w,b
  2742  001222  180B               	xorwf	?___lltoft+2,w,c
  2743  001224  B4D8               	btfsc	status,2,c
  2744  001226  D00B               	goto	l626
  2745  001228                     u2180:
  2746                           
  2747                           ; BSR set to: 0
  2748  001228  0E00               	movlw	0
  2749  00122A  6FEE               	movwf	(_errno+1)& (0+255),b
  2750  00122C  0E21               	movlw	33
  2751  00122E  6FED               	movwf	_errno& (0+255),b
  2752  001230  0E00               	movlw	0
  2753  001232  6F66               	movwf	?_pow& (0+255),b
  2754  001234  0E00               	movlw	0
  2755  001236  6F67               	movwf	(?_pow+1)& (0+255),b
  2756  001238  0E00               	movlw	0
  2757  00123A  6F68               	movwf	(?_pow+2)& (0+255),b
  2758                           
  2759                           ; BSR set to: 0
  2760  00123C  0012               	return	
  2761  00123E                     l626:
  2762                           
  2763                           ; BSR set to: 0
  2764                           
  2765                           ; BSR set to: 0
  2766  00123E  5173               	movf	pow@yi& (0+255),w,b
  2767  001240  0B01               	andlw	1
  2768  001242  6F72               	movwf	pow@sign& (0+255),b
  2769                           
  2770                           ; BSR set to: 0
  2771  001244  C066  F001         	movff	pow@x,___ftneg@f1
  2772  001248  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2773  00124C  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2774  001250  ECEB  F00F         	call	___ftneg	;wreg free
  2775  001254  C001  F066         	movff	?___ftneg,pow@x
  2776  001258  C002  F067         	movff	?___ftneg+1,pow@x+1
  2777  00125C  C003  F068         	movff	?___ftneg+2,pow@x+2
  2778  001260                     l625:
  2779  001260  C066  F043         	movff	pow@x,log@x
  2780  001264  C067  F044         	movff	pow@x+1,log@x+1
  2781  001268  C068  F045         	movff	pow@x+2,log@x+2
  2782  00126C  EC7A  F009         	call	_log	;wreg free
  2783  001270  C043  F06C         	movff	?_log,_pow$1548
  2784  001274  C044  F06D         	movff	?_log+1,_pow$1548+1
  2785  001278  C045  F06E         	movff	?_log+2,_pow$1548+2
  2786  00127C  C06C  F00D         	movff	_pow$1548,___ftmul@f1
  2787  001280  C06D  F00E         	movff	_pow$1548+1,___ftmul@f1+1
  2788  001284  C06E  F00F         	movff	_pow$1548+2,___ftmul@f1+2
  2789  001288  C069  F010         	movff	pow@y,___ftmul@f2
  2790  00128C  C06A  F011         	movff	pow@y+1,___ftmul@f2+1
  2791  001290  C06B  F012         	movff	pow@y+2,___ftmul@f2+2
  2792  001294  EC83  F00A         	call	___ftmul	;wreg free
  2793  001298  C00D  F06F         	movff	?___ftmul,_pow$1549
  2794  00129C  C00E  F070         	movff	?___ftmul+1,_pow$1549+1
  2795  0012A0  C00F  F071         	movff	?___ftmul+2,_pow$1549+2
  2796  0012A4  C06F  F058         	movff	_pow$1549,exp@x
  2797  0012A8  C070  F059         	movff	_pow$1549+1,exp@x+1
  2798  0012AC  C071  F05A         	movff	_pow$1549+2,exp@x+2
  2799  0012B0  ECF0  F006         	call	_exp	;wreg free
  2800  0012B4  C058  F066         	movff	?_exp,pow@x
  2801  0012B8  C059  F067         	movff	?_exp+1,pow@x+1
  2802  0012BC  C05A  F068         	movff	?_exp+2,pow@x+2
  2803  0012C0  0100               	movlb	0	; () banked
  2804  0012C2  5172               	movf	pow@sign& (0+255),w,b
  2805  0012C4  B4D8               	btfsc	status,2,c
  2806  0012C6  D00F               	goto	l627
  2807                           
  2808                           ; BSR set to: 0
  2809  0012C8  C066  F001         	movff	pow@x,___ftneg@f1
  2810  0012CC  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2811  0012D0  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2812  0012D4  ECEB  F00F         	call	___ftneg	;wreg free
  2813  0012D8  C001  F066         	movff	?___ftneg,?_pow
  2814  0012DC  C002  F067         	movff	?___ftneg+1,?_pow+1
  2815  0012E0  C003  F068         	movff	?___ftneg+2,?_pow+2
  2816  0012E4  0012               	return	
  2817  0012E6                     l627:
  2818                           
  2819                           ; BSR set to: 0
  2820  0012E6  C066  F066         	movff	pow@x,?_pow
  2821  0012EA  C067  F067         	movff	pow@x+1,?_pow+1
  2822  0012EE  C068  F068         	movff	pow@x+2,?_pow+2
  2823  0012F2  0012               	return		;funcret
  2824  0012F4                     __end_of_pow:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           plusw1	equ	0xFE3
  2831                           postinc2	equ	0xFDE
  2832                           postdec2	equ	0xFDD
  2833                           plusw2	equ	0xFDB
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _log *****************
  2839 ;; Defined at:
  2840 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  x               3   66[COMRAM] unsigned char 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  exponent        2   69[COMRAM] int 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  3   66[COMRAM] int 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2854 ;;      Params:         3       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        5 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    3
  2861 ;; This function calls:
  2862 ;;		___awtoft
  2863 ;;		___ftadd
  2864 ;;		___ftmul
  2865 ;;		_eval_poly
  2866 ;;		_frexp
  2867 ;; This function is called by:
  2868 ;;		_pow
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text12
  2873  0012F4                     __ptext12:
  2874                           	opt stack 0
  2875  0012F4                     _log:
  2876                           	opt stack 24
  2877                           
  2878                           ;incstack = 0
  2879  0012F4  AE45               	btfss	log@x+2,7,c
  2880  0012F6  D00C               	goto	l823
  2881  0012F8  0E00               	movlw	0
  2882  0012FA  0100               	movlb	0	; () banked
  2883  0012FC  6FEE               	movwf	(_errno+1)& (0+255),b
  2884  0012FE  0E21               	movlw	33
  2885  001300  6FED               	movwf	_errno& (0+255),b
  2886  001302  0E00               	movlw	0
  2887  001304  6E43               	movwf	?_log,c
  2888  001306  0E00               	movlw	0
  2889  001308  6E44               	movwf	?_log+1,c
  2890  00130A  0E00               	movlw	0
  2891  00130C  6E45               	movwf	?_log+2,c
  2892                           
  2893                           ; BSR set to: 0
  2894  00130E  0012               	return	
  2895  001310                     l823:
  2896                           
  2897                           ; BSR set to: 0
  2898  001310  5043               	movf	log@x,w,c
  2899  001312  1044               	iorwf	log@x+1,w,c
  2900  001314  1045               	iorwf	log@x+2,w,c
  2901  001316  A4D8               	btfss	status,2,c
  2902  001318  D00C               	goto	l825
  2903  00131A  0E00               	movlw	0
  2904  00131C  0100               	movlb	0	; () banked
  2905  00131E  6FEE               	movwf	(_errno+1)& (0+255),b
  2906  001320  0E22               	movlw	34
  2907  001322  6FED               	movwf	_errno& (0+255),b
  2908  001324  0E00               	movlw	0
  2909  001326  6E43               	movwf	?_log,c
  2910  001328  0E00               	movlw	0
  2911  00132A  6E44               	movwf	?_log+1,c
  2912  00132C  0E00               	movlw	0
  2913  00132E  6E45               	movwf	?_log+2,c
  2914                           
  2915                           ; BSR set to: 0
  2916  001330  0012               	return	
  2917  001332                     l825:
  2918                           
  2919                           ; BSR set to: 0
  2920  001332  0E00               	movlw	0
  2921  001334  6E10               	movwf	___ftmul@f2,c
  2922  001336  0E00               	movlw	0
  2923  001338  6E11               	movwf	___ftmul@f2+1,c
  2924  00133A  0E40               	movlw	64
  2925  00133C  6E12               	movwf	___ftmul@f2+2,c
  2926  00133E  0E46               	movlw	low log@exponent
  2927  001340  6E04               	movwf	frexp@eptr,c
  2928  001342  0E00               	movlw	high log@exponent
  2929  001344  6E05               	movwf	frexp@eptr+1,c
  2930  001346  C043  F001         	movff	log@x,frexp@value
  2931  00134A  C044  F002         	movff	log@x+1,frexp@value+1
  2932  00134E  C045  F003         	movff	log@x+2,frexp@value+2
  2933  001352  ECC0  F00D         	call	_frexp	;wreg free
  2934  001356  C001  F00D         	movff	?_frexp,___ftmul@f1
  2935  00135A  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  2936  00135E  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  2937  001362  EC83  F00A         	call	___ftmul	;wreg free
  2938  001366  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2939  00136A  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2940  00136E  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2941  001372  0E00               	movlw	0
  2942  001374  6E2E               	movwf	___ftadd@f2,c
  2943  001376  0E80               	movlw	128
  2944  001378  6E2F               	movwf	___ftadd@f2+1,c
  2945  00137A  0EBF               	movlw	191
  2946  00137C  6E30               	movwf	___ftadd@f2+2,c
  2947  00137E  ECE6  F007         	call	___ftadd	;wreg free
  2948  001382  C02B  F043         	movff	?___ftadd,log@x
  2949  001386  C02C  F044         	movff	?___ftadd+1,log@x+1
  2950  00138A  C02D  F045         	movff	?___ftadd+2,log@x+2
  2951  00138E  0646               	decf	log@exponent,f,c
  2952  001390  A0D8               	btfss	status,0,c
  2953  001392  0647               	decf	log@exponent+1,f,c
  2954  001394  C043  F037         	movff	log@x,eval_poly@x
  2955  001398  C044  F038         	movff	log@x+1,eval_poly@x+1
  2956  00139C  C045  F039         	movff	log@x+2,eval_poly@x+2
  2957  0013A0  0E1F               	movlw	low log@coeff
  2958  0013A2  6E3A               	movwf	eval_poly@d,c
  2959  0013A4  0E08               	movlw	high log@coeff
  2960  0013A6  6E3B               	movwf	eval_poly@d+1,c
  2961  0013A8  0E00               	movlw	0
  2962  0013AA  6E3D               	movwf	eval_poly@n+1,c
  2963  0013AC  0E08               	movlw	8
  2964  0013AE  6E3C               	movwf	eval_poly@n,c
  2965  0013B0  ECDF  F00B         	call	_eval_poly	;wreg free
  2966  0013B4  C037  F043         	movff	?_eval_poly,log@x
  2967  0013B8  C038  F044         	movff	?_eval_poly+1,log@x+1
  2968  0013BC  C039  F045         	movff	?_eval_poly+2,log@x+2
  2969  0013C0  0E72               	movlw	114
  2970  0013C2  6E10               	movwf	___ftmul@f2,c
  2971  0013C4  0E31               	movlw	49
  2972  0013C6  6E11               	movwf	___ftmul@f2+1,c
  2973  0013C8  0E3F               	movlw	63
  2974  0013CA  6E12               	movwf	___ftmul@f2+2,c
  2975  0013CC  C046  F009         	movff	log@exponent,___awtoft@c
  2976  0013D0  C047  F00A         	movff	log@exponent+1,___awtoft@c+1
  2977  0013D4  ECAA  F00F         	call	___awtoft	;wreg free
  2978  0013D8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2979  0013DC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2980  0013E0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2981  0013E4  EC83  F00A         	call	___ftmul	;wreg free
  2982  0013E8  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  2983  0013EC  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  2984  0013F0  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  2985  0013F4  C043  F02E         	movff	log@x,___ftadd@f2
  2986  0013F8  C044  F02F         	movff	log@x+1,___ftadd@f2+1
  2987  0013FC  C045  F030         	movff	log@x+2,___ftadd@f2+2
  2988  001400  ECE6  F007         	call	___ftadd	;wreg free
  2989  001404  C02B  F043         	movff	?___ftadd,?_log
  2990  001408  C02C  F044         	movff	?___ftadd+1,?_log+1
  2991  00140C  C02D  F045         	movff	?___ftadd+2,?_log+2
  2992  001410  0012               	return	
  2993  001412                     __end_of_log:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           plusw1	equ	0xFE3
  3000                           postinc2	equ	0xFDE
  3001                           postdec2	equ	0xFDD
  3002                           plusw2	equ	0xFDB
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function _exp *****************
  3008 ;; Defined at:
  3009 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  x               3   87[COMRAM] int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  exponent        2    3[BANK0 ] int 
  3014 ;;  sign            1    5[BANK0 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  3   87[COMRAM] unsigned char 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3024 ;;      Params:         3       0       0       0       0       0       0       0       0
  3025 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3027 ;;      Totals:         3       6       0       0       0       0       0       0       0
  3028 ;;Total ram usage:        9 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		___awtoft
  3033 ;;		___ftdiv
  3034 ;;		___ftge
  3035 ;;		___ftmul
  3036 ;;		___ftneg
  3037 ;;		___ftsub
  3038 ;;		___fttol
  3039 ;;		_eval_poly
  3040 ;;		_floor
  3041 ;;		_ldexp
  3042 ;; This function is called by:
  3043 ;;		_pow
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text13
  3048  000DE0                     __ptext13:
  3049                           	opt stack 0
  3050  000DE0                     _exp:
  3051                           	opt stack 24
  3052                           
  3053                           ;incstack = 0
  3054  000DE0  5058               	movf	exp@x,w,c
  3055  000DE2  1059               	iorwf	exp@x+1,w,c
  3056  000DE4  105A               	iorwf	exp@x+2,w,c
  3057  000DE6  A4D8               	btfss	status,2,c
  3058  000DE8  D007               	goto	l781
  3059  000DEA  0E00               	movlw	0
  3060  000DEC  6E58               	movwf	?_exp,c
  3061  000DEE  0E80               	movlw	128
  3062  000DF0  6E59               	movwf	?_exp+1,c
  3063  000DF2  0E3F               	movlw	63
  3064  000DF4  6E5A               	movwf	?_exp+2,c
  3065  000DF6  0012               	return	
  3066  000DF8                     l781:
  3067  000DF8  0E72               	movlw	114
  3068  000DFA  6E01               	movwf	___ftge@ff1,c
  3069  000DFC  0E31               	movlw	49
  3070  000DFE  6E02               	movwf	___ftge@ff1+1,c
  3071  000E00  0E44               	movlw	68
  3072  000E02  6E03               	movwf	___ftge@ff1+2,c
  3073  000E04  C058  F004         	movff	exp@x,___ftge@ff2
  3074  000E08  C059  F005         	movff	exp@x+1,___ftge@ff2+1
  3075  000E0C  C05A  F006         	movff	exp@x+2,___ftge@ff2+2
  3076  000E10  EC08  F00E         	call	___ftge	;wreg free
  3077  000E14  B0D8               	btfsc	status,0,c
  3078  000E16  D00C               	goto	l783
  3079  000E18  0E00               	movlw	0
  3080  000E1A  0100               	movlb	0	; () banked
  3081  000E1C  6FEE               	movwf	(_errno+1)& (0+255),b
  3082  000E1E  0E22               	movlw	34
  3083  000E20  6FED               	movwf	_errno& (0+255),b
  3084  000E22  0EFF               	movlw	255
  3085  000E24  6E58               	movwf	?_exp,c
  3086  000E26  0E7F               	movlw	127
  3087  000E28  6E59               	movwf	?_exp+1,c
  3088  000E2A  0E7F               	movlw	127
  3089  000E2C  6E5A               	movwf	?_exp+2,c
  3090                           
  3091                           ; BSR set to: 0
  3092  000E2E  0012               	return	
  3093  000E30                     l783:
  3094                           
  3095                           ; BSR set to: 0
  3096  000E30  C058  F001         	movff	exp@x,___ftge@ff1
  3097  000E34  C059  F002         	movff	exp@x+1,___ftge@ff1+1
  3098  000E38  C05A  F003         	movff	exp@x+2,___ftge@ff1+2
  3099  000E3C  0E49               	movlw	73
  3100  000E3E  6E04               	movwf	___ftge@ff2,c
  3101  000E40  0E3A               	movlw	58
  3102  000E42  6E05               	movwf	___ftge@ff2+1,c
  3103  000E44  0EC4               	movlw	196
  3104  000E46  6E06               	movwf	___ftge@ff2+2,c
  3105  000E48  EC08  F00E         	call	___ftge	;wreg free
  3106  000E4C  B0D8               	btfsc	status,0,c
  3107  000E4E  D00C               	goto	l784
  3108  000E50  0E00               	movlw	0
  3109  000E52  0100               	movlb	0	; () banked
  3110  000E54  6FEE               	movwf	(_errno+1)& (0+255),b
  3111  000E56  0E22               	movlw	34
  3112  000E58  6FED               	movwf	_errno& (0+255),b
  3113  000E5A  0E00               	movlw	0
  3114  000E5C  6E58               	movwf	?_exp,c
  3115  000E5E  0E00               	movlw	0
  3116  000E60  6E59               	movwf	?_exp+1,c
  3117  000E62  0E00               	movlw	0
  3118  000E64  6E5A               	movwf	?_exp+2,c
  3119                           
  3120                           ; BSR set to: 0
  3121  000E66  0012               	return	
  3122  000E68                     l784:
  3123                           
  3124                           ; BSR set to: 0
  3125  000E68  AE5A               	btfss	exp@x+2,7,c
  3126  000E6A  D002               	goto	u2090
  3127  000E6C  0E01               	movlw	1
  3128  000E6E  D001               	goto	u2100
  3129  000E70                     u2090:
  3130  000E70  0E00               	movlw	0
  3131  000E72                     u2100:
  3132  000E72  0100               	movlb	0	; () banked
  3133  000E74  6F65               	movwf	exp@sign& (0+255),b
  3134                           
  3135                           ; BSR set to: 0
  3136  000E76  5165               	movf	exp@sign& (0+255),w,b
  3137  000E78  B4D8               	btfsc	status,2,c
  3138  000E7A  D00E               	goto	l785
  3139                           
  3140                           ; BSR set to: 0
  3141  000E7C  C058  F001         	movff	exp@x,___ftneg@f1
  3142  000E80  C059  F002         	movff	exp@x+1,___ftneg@f1+1
  3143  000E84  C05A  F003         	movff	exp@x+2,___ftneg@f1+2
  3144  000E88  ECEB  F00F         	call	___ftneg	;wreg free
  3145  000E8C  C001  F058         	movff	?___ftneg,exp@x
  3146  000E90  C002  F059         	movff	?___ftneg+1,exp@x+1
  3147  000E94  C003  F05A         	movff	?___ftneg+2,exp@x+2
  3148  000E98                     l785:
  3149  000E98  C058  F00D         	movff	exp@x,___ftmul@f1
  3150  000E9C  C059  F00E         	movff	exp@x+1,___ftmul@f1+1
  3151  000EA0  C05A  F00F         	movff	exp@x+2,___ftmul@f1+2
  3152  000EA4  0EAA               	movlw	170
  3153  000EA6  6E10               	movwf	___ftmul@f2,c
  3154  000EA8  0EB8               	movlw	184
  3155  000EAA  6E11               	movwf	___ftmul@f2+1,c
  3156  000EAC  0E3F               	movlw	63
  3157  000EAE  6E12               	movwf	___ftmul@f2+2,c
  3158  000EB0  EC83  F00A         	call	___ftmul	;wreg free
  3159  000EB4  C00D  F058         	movff	?___ftmul,exp@x
  3160  000EB8  C00E  F059         	movff	?___ftmul+1,exp@x+1
  3161  000EBC  C00F  F05A         	movff	?___ftmul+2,exp@x+2
  3162  000EC0  C058  F050         	movff	exp@x,floor@x
  3163  000EC4  C059  F051         	movff	exp@x+1,floor@x+1
  3164  000EC8  C05A  F052         	movff	exp@x+2,floor@x+2
  3165  000ECC  EC70  F00B         	call	_floor	;wreg free
  3166  000ED0  C050  F060         	movff	?_floor,_exp$1550
  3167  000ED4  C051  F061         	movff	?_floor+1,_exp$1550+1
  3168  000ED8  C052  F062         	movff	?_floor+2,_exp$1550+2
  3169  000EDC  C060  F037         	movff	_exp$1550,___fttol@f1
  3170  000EE0  C061  F038         	movff	_exp$1550+1,___fttol@f1+1
  3171  000EE4  C062  F039         	movff	_exp$1550+2,___fttol@f1+2
  3172  000EE8  EC09  F00A         	call	___fttol	;wreg free
  3173  000EEC  C037  F063         	movff	?___fttol,exp@exponent
  3174  000EF0  C038  F064         	movff	?___fttol+1,exp@exponent+1
  3175  000EF4  C058  F037         	movff	exp@x,___ftsub@f1
  3176  000EF8  C059  F038         	movff	exp@x+1,___ftsub@f1+1
  3177  000EFC  C05A  F039         	movff	exp@x+2,___ftsub@f1+2
  3178  000F00  C063  F009         	movff	exp@exponent,___awtoft@c
  3179  000F04  C064  F00A         	movff	exp@exponent+1,___awtoft@c+1
  3180  000F08  ECAA  F00F         	call	___awtoft	;wreg free
  3181  000F0C  C009  F03A         	movff	?___awtoft,___ftsub@f2
  3182  000F10  C00A  F03B         	movff	?___awtoft+1,___ftsub@f2+1
  3183  000F14  C00B  F03C         	movff	?___awtoft+2,___ftsub@f2+2
  3184  000F18  EC8A  F00F         	call	___ftsub	;wreg free
  3185  000F1C  C037  F058         	movff	?___ftsub,exp@x
  3186  000F20  C038  F059         	movff	?___ftsub+1,exp@x+1
  3187  000F24  C039  F05A         	movff	?___ftsub+2,exp@x+2
  3188  000F28  C058  F037         	movff	exp@x,eval_poly@x
  3189  000F2C  C059  F038         	movff	exp@x+1,eval_poly@x+1
  3190  000F30  C05A  F039         	movff	exp@x+2,eval_poly@x+2
  3191  000F34  0E01               	movlw	low exp@coeff
  3192  000F36  6E3A               	movwf	eval_poly@d,c
  3193  000F38  0E08               	movlw	high exp@coeff
  3194  000F3A  6E3B               	movwf	eval_poly@d+1,c
  3195  000F3C  0E00               	movlw	0
  3196  000F3E  6E3D               	movwf	eval_poly@n+1,c
  3197  000F40  0E09               	movlw	9
  3198  000F42  6E3C               	movwf	eval_poly@n,c
  3199  000F44  ECDF  F00B         	call	_eval_poly	;wreg free
  3200  000F48  C037  F043         	movff	?_eval_poly,ldexp@value
  3201  000F4C  C038  F044         	movff	?_eval_poly+1,ldexp@value+1
  3202  000F50  C039  F045         	movff	?_eval_poly+2,ldexp@value+2
  3203  000F54  C063  F046         	movff	exp@exponent,ldexp@newexp
  3204  000F58  C064  F047         	movff	exp@exponent+1,ldexp@newexp+1
  3205  000F5C  EC48  F00C         	call	_ldexp	;wreg free
  3206  000F60  C043  F058         	movff	?_ldexp,exp@x
  3207  000F64  C044  F059         	movff	?_ldexp+1,exp@x+1
  3208  000F68  C045  F05A         	movff	?_ldexp+2,exp@x+2
  3209  000F6C  0100               	movlb	0	; () banked
  3210  000F6E  5165               	movf	exp@sign& (0+255),w,b
  3211  000F70  B4D8               	btfsc	status,2,c
  3212  000F72  D025               	goto	l786
  3213                           
  3214                           ; BSR set to: 0
  3215  000F74  2858               	incf	exp@x,w,c
  3216  000F76  E10E               	bnz	l2286
  3217  000F78  0E7F               	movlw	127
  3218  000F7A  1859               	xorwf	exp@x+1,w,c
  3219  000F7C  E10B               	bnz	l2286
  3220  000F7E  0E7F               	movlw	127
  3221  000F80  185A               	xorwf	exp@x+2,w,c
  3222  000F82  A4D8               	btfss	status,2,c
  3223  000F84  D007               	goto	l787
  3224                           
  3225                           ; BSR set to: 0
  3226  000F86  0E00               	movlw	0
  3227  000F88  6E58               	movwf	?_exp,c
  3228  000F8A  0E00               	movlw	0
  3229  000F8C  6E59               	movwf	?_exp+1,c
  3230  000F8E  0E00               	movlw	0
  3231  000F90  6E5A               	movwf	?_exp+2,c
  3232                           
  3233                           ; BSR set to: 0
  3234  000F92  0012               	return	
  3235  000F94                     l787:
  3236  000F94                     l2286:
  3237                           
  3238                           ; BSR set to: 0
  3239  000F94  0E00               	movlw	0
  3240  000F96  6E1C               	movwf	___ftdiv@f1,c
  3241  000F98  0E80               	movlw	128
  3242  000F9A  6E1D               	movwf	___ftdiv@f1+1,c
  3243  000F9C  0E3F               	movlw	63
  3244  000F9E  6E1E               	movwf	___ftdiv@f1+2,c
  3245  000FA0  C058  F01F         	movff	exp@x,___ftdiv@f2
  3246  000FA4  C059  F020         	movff	exp@x+1,___ftdiv@f2+1
  3247  000FA8  C05A  F021         	movff	exp@x+2,___ftdiv@f2+2
  3248  000FAC  ECFD  F00A         	call	___ftdiv	;wreg free
  3249  000FB0  C01C  F058         	movff	?___ftdiv,?_exp
  3250  000FB4  C01D  F059         	movff	?___ftdiv+1,?_exp+1
  3251  000FB8  C01E  F05A         	movff	?___ftdiv+2,?_exp+2
  3252  000FBC  0012               	return	
  3253  000FBE                     l786:
  3254                           
  3255                           ; BSR set to: 0
  3256  000FBE  C058  F058         	movff	exp@x,?_exp
  3257  000FC2  C059  F059         	movff	exp@x+1,?_exp+1
  3258  000FC6  C05A  F05A         	movff	exp@x+2,?_exp+2
  3259  000FCA  0012               	return		;funcret
  3260  000FCC                     __end_of_exp:
  3261                           	opt stack 0
  3262                           tblptru	equ	0xFF8
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           plusw1	equ	0xFE3
  3267                           postinc2	equ	0xFDE
  3268                           postdec2	equ	0xFDD
  3269                           plusw2	equ	0xFDB
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _ldexp *****************
  3275 ;; Defined at:
  3276 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  value           3   66[COMRAM] unsigned char 
  3279 ;;  newexp          2   69[COMRAM] int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  3   66[COMRAM] int 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3291 ;;      Params:         5       0       0       0       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3294 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3295 ;;Total ram usage:        7 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_exp
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text14
  3305  001890                     __ptext14:
  3306                           	opt stack 0
  3307  001890                     _ldexp:
  3308                           	opt stack 26
  3309                           
  3310                           ;incstack = 0
  3311  001890  5043               	movf	ldexp@value,w,c
  3312  001892  1044               	iorwf	ldexp@value+1,w,c
  3313  001894  1045               	iorwf	ldexp@value+2,w,c
  3314  001896  A4D8               	btfss	status,2,c
  3315  001898  D007               	goto	l805
  3316  00189A  0E00               	movlw	0
  3317  00189C  6E43               	movwf	?_ldexp,c
  3318  00189E  0E00               	movlw	0
  3319  0018A0  6E44               	movwf	?_ldexp+1,c
  3320  0018A2  0E00               	movlw	0
  3321  0018A4  6E45               	movwf	?_ldexp+2,c
  3322  0018A6  0012               	return	
  3323  0018A8                     l805:
  3324  0018A8  5045               	movf	ldexp@value+2,w,c
  3325  0018AA  0B7F               	andlw	127
  3326  0018AC  6E48               	movwf	??_ldexp& (0+255),c
  3327  0018AE  6A49               	clrf	(??_ldexp+1)& (0+255),c
  3328  0018B0  90D8               	bcf	status,0,c
  3329  0018B2  3648               	rlcf	??_ldexp,f,c
  3330  0018B4  3649               	rlcf	??_ldexp+1,f,c
  3331  0018B6  5048               	movf	??_ldexp,w,c
  3332  0018B8  2646               	addwf	ldexp@newexp,f,c
  3333  0018BA  5049               	movf	??_ldexp+1,w,c
  3334  0018BC  2247               	addwfc	ldexp@newexp+1,f,c
  3335  0018BE  AE44               	btfss	ldexp@value+1,7,c
  3336  0018C0  D003               	goto	u1990
  3337  0018C2  6A48               	clrf	??_ldexp& (0+255),c
  3338  0018C4  2A48               	incf	??_ldexp& (0+255),f,c
  3339  0018C6  D001               	goto	u1998
  3340  0018C8                     u1990:
  3341  0018C8  6A48               	clrf	??_ldexp& (0+255),c
  3342  0018CA                     u1998:
  3343  0018CA  5048               	movf	??_ldexp,w,c
  3344  0018CC  2646               	addwf	ldexp@newexp,f,c
  3345  0018CE  0E00               	movlw	0
  3346  0018D0  2247               	addwfc	ldexp@newexp+1,f,c
  3347  0018D2  AE47               	btfss	ldexp@newexp+1,7,c
  3348  0018D4  D00C               	goto	l807
  3349  0018D6  0E00               	movlw	0
  3350  0018D8  0100               	movlb	0	; () banked
  3351  0018DA  6FEE               	movwf	(_errno+1)& (0+255),b
  3352  0018DC  0E22               	movlw	34
  3353  0018DE  6FED               	movwf	_errno& (0+255),b
  3354  0018E0  0E00               	movlw	0
  3355  0018E2  6E43               	movwf	?_ldexp,c
  3356  0018E4  0E00               	movlw	0
  3357  0018E6  6E44               	movwf	?_ldexp+1,c
  3358  0018E8  0E00               	movlw	0
  3359  0018EA                     L2:
  3360  0018EA  6E45               	movwf	?_ldexp+2,c
  3361                           
  3362                           ; BSR set to: 0
  3363  0018EC  0012               	return	
  3364  0018EE                     l807:
  3365                           
  3366                           ; BSR set to: 0
  3367  0018EE  BE47               	btfsc	ldexp@newexp+1,7,c
  3368  0018F0  D016               	goto	l809
  3369  0018F2  0447               	decf	ldexp@newexp+1,w,c
  3370  0018F4  A0D8               	btfss	status,0,c
  3371  0018F6  D013               	goto	l809
  3372  0018F8  0E00               	movlw	0
  3373  0018FA  0100               	movlb	0	; () banked
  3374  0018FC  6FEE               	movwf	(_errno+1)& (0+255),b
  3375  0018FE  0E22               	movlw	34
  3376  001900  6FED               	movwf	_errno& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379  001902  AE45               	btfss	ldexp@value+2,7,c
  3380  001904  D006               	goto	l810
  3381                           
  3382                           ; BSR set to: 0
  3383  001906  0EFF               	movlw	255
  3384  001908  6E43               	movwf	?_ldexp,c
  3385  00190A  0E7F               	movlw	127
  3386  00190C  6E44               	movwf	?_ldexp+1,c
  3387  00190E  0EFF               	movlw	255
  3388  001910  D7EC               	goto	L2
  3389  001912                     l810:
  3390                           
  3391                           ; BSR set to: 0
  3392                           
  3393                           ; BSR set to: 0
  3394  001912  0EFF               	movlw	255
  3395  001914  6E43               	movwf	?_ldexp,c
  3396  001916  0E7F               	movlw	127
  3397  001918  6E44               	movwf	?_ldexp+1,c
  3398  00191A  0E7F               	movlw	127
  3399  00191C  D7E6               	goto	L2
  3400  00191E                     l809:
  3401                           
  3402                           ; BSR set to: 0
  3403  00191E  3447               	rlcf	ldexp@newexp+1,w,c
  3404  001920  3047               	rrcf	ldexp@newexp+1,w,c
  3405  001922  6E49               	movwf	(??_ldexp+1)& (0+255),c
  3406  001924  3046               	rrcf	ldexp@newexp,w,c
  3407  001926  6E48               	movwf	??_ldexp& (0+255),c
  3408  001928  5045               	movf	ldexp@value+2,w,c
  3409  00192A  1848               	xorwf	??_ldexp,w,c
  3410  00192C  0B80               	andlw	-128
  3411  00192E  1848               	xorwf	??_ldexp,w,c
  3412  001930  6E45               	movwf	ldexp@value+2,c
  3413  001932  C046  F048         	movff	ldexp@newexp,??_ldexp
  3414  001936  0E01               	movlw	1
  3415  001938  1648               	andwf	??_ldexp,f,c
  3416  00193A  3248               	rrcf	??_ldexp,f,c
  3417  00193C  3248               	rrcf	??_ldexp,f,c
  3418  00193E  5044               	movf	ldexp@value+1,w,c
  3419  001940  1848               	xorwf	??_ldexp,w,c
  3420  001942  0B7F               	andlw	-129
  3421  001944  1848               	xorwf	??_ldexp,w,c
  3422  001946  6E44               	movwf	ldexp@value+1,c
  3423  001948  C043  F043         	movff	ldexp@value,?_ldexp
  3424  00194C  C044  F044         	movff	ldexp@value+1,?_ldexp+1
  3425  001950  C045  F045         	movff	ldexp@value+2,?_ldexp+2
  3426  001954  0012               	return	
  3427  001956                     __end_of_ldexp:
  3428                           	opt stack 0
  3429                           tblptru	equ	0xFF8
  3430                           intcon	equ	0xFF2
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           plusw1	equ	0xFE3
  3434                           postinc2	equ	0xFDE
  3435                           postdec2	equ	0xFDD
  3436                           plusw2	equ	0xFDB
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _floor *****************
  3442 ;; Defined at:
  3443 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  x               3   79[COMRAM] int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  i               3   82[COMRAM] int 
  3448 ;;  expon           2   85[COMRAM] int 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  3   79[COMRAM] int 
  3451 ;; Registers used:
  3452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3458 ;;      Params:         3       0       0       0       0       0       0       0       0
  3459 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3461 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3462 ;;Total ram usage:        8 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    2
  3465 ;; This function calls:
  3466 ;;		___altoft
  3467 ;;		___ftadd
  3468 ;;		___ftge
  3469 ;;		___fttol
  3470 ;;		_frexp
  3471 ;; This function is called by:
  3472 ;;		_exp
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text15
  3477  0016E0                     __ptext15:
  3478                           	opt stack 0
  3479  0016E0                     _floor:
  3480                           	opt stack 24
  3481                           
  3482                           ;incstack = 0
  3483  0016E0  C050  F001         	movff	floor@x,frexp@value
  3484  0016E4  C051  F002         	movff	floor@x+1,frexp@value+1
  3485  0016E8  C052  F003         	movff	floor@x+2,frexp@value+2
  3486  0016EC  0E56               	movlw	low floor@expon
  3487  0016EE  6E04               	movwf	frexp@eptr,c
  3488  0016F0  0E00               	movlw	high floor@expon
  3489  0016F2  6E05               	movwf	frexp@eptr+1,c
  3490  0016F4  ECC0  F00D         	call	_frexp	;wreg free
  3491  0016F8  AE57               	btfss	floor@expon+1,7,c
  3492  0016FA  D010               	goto	l792
  3493  0016FC  AE52               	btfss	floor@x+2,7,c
  3494  0016FE  D007               	goto	l793
  3495  001700  0E00               	movlw	0
  3496  001702  6E50               	movwf	?_floor,c
  3497  001704  0E80               	movlw	128
  3498  001706  6E51               	movwf	?_floor+1,c
  3499  001708  0EBF               	movlw	191
  3500  00170A  6E52               	movwf	?_floor+2,c
  3501  00170C  0012               	return	
  3502  00170E                     l793:
  3503  00170E  0E00               	movlw	0
  3504  001710  6E50               	movwf	?_floor,c
  3505  001712  0E00               	movlw	0
  3506  001714  6E51               	movwf	?_floor+1,c
  3507  001716  0E00               	movlw	0
  3508  001718  6E52               	movwf	?_floor+2,c
  3509  00171A  0012               	return	
  3510  00171C                     l792:
  3511  00171C  5057               	movf	floor@expon+1,w,c
  3512  00171E  E104               	bnz	u1950
  3513  001720  0E15               	movlw	21
  3514  001722  5C56               	subwf	floor@expon,w,c
  3515  001724  A0D8               	btfss	status,0,c
  3516  001726  D007               	goto	l795
  3517  001728                     u1950:
  3518  001728  C050  F050         	movff	floor@x,?_floor
  3519  00172C  C051  F051         	movff	floor@x+1,?_floor+1
  3520  001730  C052  F052         	movff	floor@x+2,?_floor+2
  3521  001734  0012               	return	
  3522  001736                     l795:
  3523  001736  C050  F037         	movff	floor@x,___fttol@f1
  3524  00173A  C051  F038         	movff	floor@x+1,___fttol@f1+1
  3525  00173E  C052  F039         	movff	floor@x+2,___fttol@f1+2
  3526  001742  EC09  F00A         	call	___fttol	;wreg free
  3527  001746  C037  F046         	movff	?___fttol,___altoft@c
  3528  00174A  C038  F047         	movff	?___fttol+1,___altoft@c+1
  3529  00174E  C039  F048         	movff	?___fttol+2,___altoft@c+2
  3530  001752  C03A  F049         	movff	?___fttol+3,___altoft@c+3
  3531  001756  EC92  F00E         	call	___altoft	;wreg free
  3532  00175A  C046  F053         	movff	?___altoft,floor@i
  3533  00175E  C047  F054         	movff	?___altoft+1,floor@i+1
  3534  001762  C048  F055         	movff	?___altoft+2,floor@i+2
  3535  001766  C050  F001         	movff	floor@x,___ftge@ff1
  3536  00176A  C051  F002         	movff	floor@x+1,___ftge@ff1+1
  3537  00176E  C052  F003         	movff	floor@x+2,___ftge@ff1+2
  3538  001772  C053  F004         	movff	floor@i,___ftge@ff2
  3539  001776  C054  F005         	movff	floor@i+1,___ftge@ff2+1
  3540  00177A  C055  F006         	movff	floor@i+2,___ftge@ff2+2
  3541  00177E  EC08  F00E         	call	___ftge	;wreg free
  3542  001782  B0D8               	btfsc	status,0,c
  3543  001784  D015               	goto	l796
  3544  001786  C053  F02B         	movff	floor@i,___ftadd@f1
  3545  00178A  C054  F02C         	movff	floor@i+1,___ftadd@f1+1
  3546  00178E  C055  F02D         	movff	floor@i+2,___ftadd@f1+2
  3547  001792  0E00               	movlw	0
  3548  001794  6E2E               	movwf	___ftadd@f2,c
  3549  001796  0E80               	movlw	128
  3550  001798  6E2F               	movwf	___ftadd@f2+1,c
  3551  00179A  0EBF               	movlw	191
  3552  00179C  6E30               	movwf	___ftadd@f2+2,c
  3553  00179E  ECE6  F007         	call	___ftadd	;wreg free
  3554  0017A2  C02B  F050         	movff	?___ftadd,?_floor
  3555  0017A6  C02C  F051         	movff	?___ftadd+1,?_floor+1
  3556  0017AA  C02D  F052         	movff	?___ftadd+2,?_floor+2
  3557  0017AE  0012               	return	
  3558  0017B0                     l796:
  3559  0017B0  C053  F050         	movff	floor@i,?_floor
  3560  0017B4  C054  F051         	movff	floor@i+1,?_floor+1
  3561  0017B8  C055  F052         	movff	floor@i+2,?_floor+2
  3562  0017BC  0012               	return		;funcret
  3563  0017BE                     __end_of_floor:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           intcon	equ	0xFF2
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           plusw1	equ	0xFE3
  3570                           postinc2	equ	0xFDE
  3571                           postdec2	equ	0xFDD
  3572                           plusw2	equ	0xFDB
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function _frexp *****************
  3578 ;; Defined at:
  3579 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  value           3    0[COMRAM] int 
  3582 ;;  eptr            2    3[COMRAM] PTR int 
  3583 ;;		 -> log@exponent(2), floor@expon(2), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  3    0[COMRAM] PTR int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3595 ;;      Params:         5       0       0       0       0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3597 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3598 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3599 ;;Total ram usage:        7 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_floor
  3605 ;;		_log
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text16
  3610  001B80                     __ptext16:
  3611                           	opt stack 0
  3612  001B80                     _frexp:
  3613                           	opt stack 26
  3614                           
  3615                           ;incstack = 0
  3616  001B80  5001               	movf	frexp@value,w,c
  3617  001B82  1002               	iorwf	frexp@value+1,w,c
  3618  001B84  1003               	iorwf	frexp@value+2,w,c
  3619  001B86  A4D8               	btfss	status,2,c
  3620  001B88  D00F               	goto	l801
  3621  001B8A  C004  FFD9         	movff	frexp@eptr,fsr2l
  3622  001B8E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3623  001B92  0E00               	movlw	0
  3624  001B94  6EDE               	movwf	postinc2,c
  3625  001B96  0E00               	movlw	0
  3626  001B98  6EDD               	movwf	postdec2,c
  3627  001B9A  0E00               	movlw	0
  3628  001B9C  6E01               	movwf	?_frexp,c
  3629  001B9E  0E00               	movlw	0
  3630  001BA0  6E02               	movwf	?_frexp+1,c
  3631  001BA2  0E00               	movlw	0
  3632  001BA4  6E03               	movwf	?_frexp+2,c
  3633  001BA6  0012               	return	
  3634  001BA8                     l801:
  3635  001BA8  5003               	movf	frexp@value+2,w,c
  3636  001BAA  0B7F               	andlw	127
  3637  001BAC  6E06               	movwf	??_frexp& (0+255),c
  3638  001BAE  6A07               	clrf	(??_frexp+1)& (0+255),c
  3639  001BB0  90D8               	bcf	status,0,c
  3640  001BB2  3606               	rlcf	??_frexp,f,c
  3641  001BB4  3607               	rlcf	??_frexp+1,f,c
  3642  001BB6  C004  FFD9         	movff	frexp@eptr,fsr2l
  3643  001BBA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3644  001BBE  C006  FFDE         	movff	??_frexp,postinc2
  3645  001BC2  C007  FFDD         	movff	??_frexp+1,postdec2
  3646  001BC6  AE02               	btfss	frexp@value+1,7,c
  3647  001BC8  D003               	goto	u1840
  3648  001BCA  6A06               	clrf	??_frexp& (0+255),c
  3649  001BCC  2A06               	incf	??_frexp& (0+255),f,c
  3650  001BCE  D001               	goto	u1848
  3651  001BD0                     u1840:
  3652  001BD0  6A06               	clrf	??_frexp& (0+255),c
  3653  001BD2                     u1848:
  3654  001BD2  5006               	movf	??_frexp,w,c
  3655  001BD4  C004  FFD9         	movff	frexp@eptr,fsr2l
  3656  001BD8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3657  001BDC  12DE               	iorwf	postinc2,f,c
  3658  001BDE  0E00               	movlw	0
  3659  001BE0  12DD               	iorwf	postdec2,f,c
  3660  001BE2  C004  FFD9         	movff	frexp@eptr,fsr2l
  3661  001BE6  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3662  001BEA  0E82               	movlw	130
  3663  001BEC  26DE               	addwf	postinc2,f,c
  3664  001BEE  0EFF               	movlw	255
  3665  001BF0  22DD               	addwfc	postdec2,f,c
  3666  001BF2  8003               	bsf	frexp@value+2,0,c
  3667  001BF4  8203               	bsf	frexp@value+2,1,c
  3668  001BF6  8403               	bsf	frexp@value+2,2,c
  3669  001BF8  8603               	bsf	frexp@value+2,3,c
  3670  001BFA  8803               	bsf	frexp@value+2,4,c
  3671  001BFC  8A03               	bsf	frexp@value+2,5,c
  3672  001BFE  9C03               	bcf	frexp@value+2,6,c
  3673  001C00  9E02               	bcf	frexp@value+1,7,c
  3674  001C02  C001  F001         	movff	frexp@value,?_frexp
  3675  001C06  C002  F002         	movff	frexp@value+1,?_frexp+1
  3676  001C0A  C003  F003         	movff	frexp@value+2,?_frexp+2
  3677  001C0E  0012               	return	
  3678  001C10                     __end_of_frexp:
  3679                           	opt stack 0
  3680                           tblptru	equ	0xFF8
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           plusw1	equ	0xFE3
  3685                           postinc2	equ	0xFDE
  3686                           postdec2	equ	0xFDD
  3687                           plusw2	equ	0xFDB
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function ___fttol *****************
  3693 ;; Defined at:
  3694 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  f1              3   54[COMRAM] float 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  lval            4   64[COMRAM] unsigned long 
  3699 ;;  exp1            1   68[COMRAM] unsigned char 
  3700 ;;  sign1           1   63[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  4   54[COMRAM] long 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         4       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3713 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:       15 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_coinfig_ccpcon
  3720 ;;		_config_ccp1
  3721 ;;		_config_ccp2
  3722 ;;		_pow
  3723 ;;		_exp
  3724 ;;		_floor
  3725 ;;		_wait_in_ms
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text17
  3730  001412                     __ptext17:
  3731                           	opt stack 0
  3732  001412                     ___fttol:
  3733                           	opt stack 29
  3734                           
  3735                           ;incstack = 0
  3736  001412  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3737  001416  6A3C               	clrf	(??___fttol+1)& (0+255),c
  3738  001418  6A3D               	clrf	(??___fttol+2)& (0+255),c
  3739  00141A  3438               	rlcf	___fttol@f1+1,w,c
  3740  00141C  363B               	rlcf	??___fttol& (0+255),f,c
  3741  00141E  E301               	bnc	u1751
  3742  001420  803C               	bsf	(??___fttol+1)& (0+255),0,c
  3743  001422                     u1751:
  3744  001422  503B               	movf	??___fttol,w,c
  3745  001424  6E45               	movwf	___fttol@exp1,c
  3746  001426  5045               	movf	___fttol@exp1,w,c
  3747  001428  A4D8               	btfss	status,2,c
  3748  00142A  D009               	goto	l502
  3749  00142C  0E00               	movlw	0
  3750  00142E  6E37               	movwf	?___fttol,c
  3751  001430  0E00               	movlw	0
  3752  001432  6E38               	movwf	?___fttol+1,c
  3753  001434  0E00               	movlw	0
  3754  001436  6E39               	movwf	?___fttol+2,c
  3755  001438  0E00               	movlw	0
  3756  00143A  6E3A               	movwf	?___fttol+3,c
  3757  00143C  0012               	return	
  3758  00143E                     l502:
  3759  00143E  0E17               	movlw	23
  3760  001440  6E3B               	movwf	??___fttol& (0+255),c
  3761  001442  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3762  001446  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3763  00144A  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3764  00144E  283B               	incf	??___fttol,w,c
  3765  001450  6E3F               	movwf	(??___fttol+4)& (0+255),c
  3766  001452  D004               	goto	u1770
  3767  001454                     u1775:
  3768  001454  90D8               	bcf	status,0,c
  3769  001456  323E               	rrcf	??___fttol+3,f,c
  3770  001458  323D               	rrcf	??___fttol+2,f,c
  3771  00145A  323C               	rrcf	??___fttol+1,f,c
  3772  00145C                     u1770:
  3773  00145C  2E3F               	decfsz	(??___fttol+4)& (0+255),f,c
  3774  00145E  D7FA               	goto	u1775
  3775  001460  503C               	movf	??___fttol+1,w,c
  3776  001462  6E40               	movwf	___fttol@sign1,c
  3777  001464  8E38               	bsf	___fttol@f1+1,7,c
  3778  001466  0EFF               	movlw	255
  3779  001468  1637               	andwf	___fttol@f1,f,c
  3780  00146A  0EFF               	movlw	255
  3781  00146C  1638               	andwf	___fttol@f1+1,f,c
  3782  00146E  0E00               	movlw	0
  3783  001470  1639               	andwf	___fttol@f1+2,f,c
  3784  001472  5037               	movf	___fttol@f1,w,c
  3785  001474  6E41               	movwf	___fttol@lval,c
  3786  001476  5038               	movf	___fttol@f1+1,w,c
  3787  001478  6E42               	movwf	___fttol@lval+1,c
  3788  00147A  5039               	movf	___fttol@f1+2,w,c
  3789  00147C  6E43               	movwf	___fttol@lval+2,c
  3790  00147E  6A44               	clrf	___fttol@lval+3,c
  3791  001480  0E8E               	movlw	142
  3792  001482  5E45               	subwf	___fttol@exp1,f,c
  3793  001484  AE45               	btfss	___fttol@exp1,7,c
  3794  001486  D016               	goto	l504
  3795  001488  5045               	movf	___fttol@exp1,w,c
  3796  00148A  0A80               	xorlw	128
  3797  00148C  0F8F               	addlw	143
  3798  00148E  B0D8               	btfsc	status,0,c
  3799  001490  D009               	goto	l505
  3800  001492  0E00               	movlw	0
  3801  001494  6E37               	movwf	?___fttol,c
  3802  001496  0E00               	movlw	0
  3803  001498  6E38               	movwf	?___fttol+1,c
  3804  00149A  0E00               	movlw	0
  3805  00149C  6E39               	movwf	?___fttol+2,c
  3806  00149E  0E00               	movlw	0
  3807  0014A0  6E3A               	movwf	?___fttol+3,c
  3808  0014A2  0012               	return	
  3809  0014A4                     l505:
  3810  0014A4  90D8               	bcf	status,0,c
  3811  0014A6  3244               	rrcf	___fttol@lval+3,f,c
  3812  0014A8  3243               	rrcf	___fttol@lval+2,f,c
  3813  0014AA  3242               	rrcf	___fttol@lval+1,f,c
  3814  0014AC  3241               	rrcf	___fttol@lval,f,c
  3815  0014AE  3E45               	incfsz	___fttol@exp1,f,c
  3816  0014B0  D7F9               	goto	l505
  3817  0014B2  D015               	goto	u1810
  3818  0014B4                     l504:
  3819  0014B4  0E17               	movlw	23
  3820  0014B6  6445               	cpfsgt	___fttol@exp1,c
  3821  0014B8  D00F               	goto	l510
  3822  0014BA  0E00               	movlw	0
  3823  0014BC  6E37               	movwf	?___fttol,c
  3824  0014BE  0E00               	movlw	0
  3825  0014C0  6E38               	movwf	?___fttol+1,c
  3826  0014C2  0E00               	movlw	0
  3827  0014C4  6E39               	movwf	?___fttol+2,c
  3828  0014C6  0E00               	movlw	0
  3829  0014C8  6E3A               	movwf	?___fttol+3,c
  3830  0014CA  0012               	return	
  3831  0014CC  90D8               	bcf	status,0,c
  3832  0014CE  3641               	rlcf	___fttol@lval,f,c
  3833  0014D0  3642               	rlcf	___fttol@lval+1,f,c
  3834  0014D2  3643               	rlcf	___fttol@lval+2,f,c
  3835  0014D4  3644               	rlcf	___fttol@lval+3,f,c
  3836  0014D6  0645               	decf	___fttol@exp1,f,c
  3837  0014D8                     l510:
  3838  0014D8  5045               	movf	___fttol@exp1,w,c
  3839  0014DA  A4D8               	btfss	status,2,c
  3840  0014DC  D7F7               	goto	l511
  3841  0014DE                     u1810:
  3842  0014DE  5040               	movf	___fttol@sign1,w,c
  3843  0014E0  B4D8               	btfsc	status,2,c
  3844  0014E2  D008               	goto	l513
  3845  0014E4  1E44               	comf	___fttol@lval+3,f,c
  3846  0014E6  1E43               	comf	___fttol@lval+2,f,c
  3847  0014E8  1E42               	comf	___fttol@lval+1,f,c
  3848  0014EA  6C41               	negf	___fttol@lval,c
  3849  0014EC  0E00               	movlw	0
  3850  0014EE  2242               	addwfc	___fttol@lval+1,f,c
  3851  0014F0  2243               	addwfc	___fttol@lval+2,f,c
  3852  0014F2  2244               	addwfc	___fttol@lval+3,f,c
  3853  0014F4                     l513:
  3854  0014F4  C041  F037         	movff	___fttol@lval,?___fttol
  3855  0014F8  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  3856  0014FC  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  3857  001500  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  3858  001504  0012               	return	
  3859  001506                     __end_of___fttol:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           plusw1	equ	0xFE3
  3866                           postinc2	equ	0xFDE
  3867                           postdec2	equ	0xFDD
  3868                           plusw2	equ	0xFDB
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function ___ftge *****************
  3874 ;; Defined at:
  3875 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  ff1             3    0[COMRAM] float 
  3878 ;;  ff2             3    3[COMRAM] float 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3890 ;;      Params:         6       0       0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3892 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3893 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3894 ;;Total ram usage:        9 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_pow
  3900 ;;		_exp
  3901 ;;		_floor
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text18
  3906  001C10                     __ptext18:
  3907                           	opt stack 0
  3908  001C10                     ___ftge:
  3909                           	opt stack 25
  3910                           
  3911                           ;incstack = 0
  3912  001C10  AE03               	btfss	___ftge@ff1+2,7,c
  3913  001C12  D016               	goto	l474
  3914  001C14  C001  F007         	movff	___ftge@ff1,??___ftge
  3915  001C18  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3916  001C1C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3917  001C20  1E07               	comf	??___ftge,f,c
  3918  001C22  1E08               	comf	??___ftge+1,f,c
  3919  001C24  1E09               	comf	??___ftge+2,f,c
  3920  001C26  2A07               	incf	??___ftge,f,c
  3921  001C28  0E00               	movlw	0
  3922  001C2A  2208               	addwfc	??___ftge+1,f,c
  3923  001C2C  2209               	addwfc	??___ftge+2,f,c
  3924  001C2E  0E00               	movlw	0
  3925  001C30  2407               	addwf	??___ftge,w,c
  3926  001C32  6E01               	movwf	___ftge@ff1,c
  3927  001C34  0E00               	movlw	0
  3928  001C36  2008               	addwfc	??___ftge+1,w,c
  3929  001C38  6E02               	movwf	___ftge@ff1+1,c
  3930  001C3A  0E80               	movlw	128
  3931  001C3C  2009               	addwfc	??___ftge+2,w,c
  3932  001C3E  6E03               	movwf	___ftge@ff1+2,c
  3933  001C40                     l474:
  3934  001C40  AE06               	btfss	___ftge@ff2+2,7,c
  3935  001C42  D016               	goto	l475
  3936  001C44  C004  F007         	movff	___ftge@ff2,??___ftge
  3937  001C48  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3938  001C4C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3939  001C50  1E07               	comf	??___ftge,f,c
  3940  001C52  1E08               	comf	??___ftge+1,f,c
  3941  001C54  1E09               	comf	??___ftge+2,f,c
  3942  001C56  2A07               	incf	??___ftge,f,c
  3943  001C58  0E00               	movlw	0
  3944  001C5A  2208               	addwfc	??___ftge+1,f,c
  3945  001C5C  2209               	addwfc	??___ftge+2,f,c
  3946  001C5E  0E00               	movlw	0
  3947  001C60  2407               	addwf	??___ftge,w,c
  3948  001C62  6E04               	movwf	___ftge@ff2,c
  3949  001C64  0E00               	movlw	0
  3950  001C66  2008               	addwfc	??___ftge+1,w,c
  3951  001C68  6E05               	movwf	___ftge@ff2+1,c
  3952  001C6A  0E80               	movlw	128
  3953  001C6C  2009               	addwfc	??___ftge+2,w,c
  3954  001C6E  6E06               	movwf	___ftge@ff2+2,c
  3955  001C70                     l475:
  3956  001C70  0E00               	movlw	0
  3957  001C72  1A01               	xorwf	___ftge@ff1,f,c
  3958  001C74  0E00               	movlw	0
  3959  001C76  1A02               	xorwf	___ftge@ff1+1,f,c
  3960  001C78  0E80               	movlw	128
  3961  001C7A  1A03               	xorwf	___ftge@ff1+2,f,c
  3962  001C7C  0E00               	movlw	0
  3963  001C7E  1A04               	xorwf	___ftge@ff2,f,c
  3964  001C80  0E00               	movlw	0
  3965  001C82  1A05               	xorwf	___ftge@ff2+1,f,c
  3966  001C84  0E80               	movlw	128
  3967  001C86  1A06               	xorwf	___ftge@ff2+2,f,c
  3968  001C88  5004               	movf	___ftge@ff2,w,c
  3969  001C8A  5C01               	subwf	___ftge@ff1,w,c
  3970  001C8C  5005               	movf	___ftge@ff2+1,w,c
  3971  001C8E  5802               	subwfb	___ftge@ff1+1,w,c
  3972  001C90  5006               	movf	___ftge@ff2+2,w,c
  3973  001C92  5803               	subwfb	___ftge@ff1+2,w,c
  3974  001C94  B0D8               	btfsc	status,0,c
  3975  001C96  D002               	goto	l1814
  3976  001C98  90D8               	bcf	status,0,c
  3977  001C9A  0012               	return	
  3978  001C9C                     l1814:
  3979  001C9C  80D8               	bsf	status,0,c
  3980  001C9E  0012               	return	
  3981  001CA0                     __end_of___ftge:
  3982                           	opt stack 0
  3983                           tblptru	equ	0xFF8
  3984                           intcon	equ	0xFF2
  3985                           postinc0	equ	0xFEE
  3986                           wreg	equ	0xFE8
  3987                           plusw1	equ	0xFE3
  3988                           postinc2	equ	0xFDE
  3989                           postdec2	equ	0xFDD
  3990                           plusw2	equ	0xFDB
  3991                           fsr2h	equ	0xFDA
  3992                           fsr2l	equ	0xFD9
  3993                           status	equ	0xFD8
  3994                           
  3995 ;; *************** function ___altoft *****************
  3996 ;; Defined at:
  3997 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  c               4   69[COMRAM] long 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  sign            1   78[COMRAM] unsigned char 
  4002 ;;  exp             1   77[COMRAM] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  3   69[COMRAM] float 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4012 ;;      Params:         4       0       0       0       0       0       0       0       0
  4013 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4014 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4015 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4016 ;;Total ram usage:       10 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    1
  4019 ;; This function calls:
  4020 ;;		___ftpack
  4021 ;; This function is called by:
  4022 ;;		_floor
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text19
  4027  001D24                     __ptext19:
  4028                           	opt stack 0
  4029  001D24                     ___altoft:
  4030                           	opt stack 24
  4031                           
  4032                           ;incstack = 0
  4033  001D24  0E00               	movlw	0
  4034  001D26  6E4F               	movwf	___altoft@sign,c
  4035  001D28  0E8E               	movlw	142
  4036  001D2A  6E4E               	movwf	___altoft@exp,c
  4037  001D2C  AE49               	btfss	___altoft@c+3,7,c
  4038  001D2E  D011               	goto	l272
  4039  001D30  1E49               	comf	___altoft@c+3,f,c
  4040  001D32  1E48               	comf	___altoft@c+2,f,c
  4041  001D34  1E47               	comf	___altoft@c+1,f,c
  4042  001D36  6C46               	negf	___altoft@c,c
  4043  001D38  0E00               	movlw	0
  4044  001D3A  2247               	addwfc	___altoft@c+1,f,c
  4045  001D3C  2248               	addwfc	___altoft@c+2,f,c
  4046  001D3E  2249               	addwfc	___altoft@c+3,f,c
  4047  001D40  0E01               	movlw	1
  4048  001D42  6E4F               	movwf	___altoft@sign,c
  4049  001D44  D006               	goto	l272
  4050  001D46  90D8               	bcf	status,0,c
  4051  001D48  3249               	rrcf	___altoft@c+3,f,c
  4052  001D4A  3248               	rrcf	___altoft@c+2,f,c
  4053  001D4C  3247               	rrcf	___altoft@c+1,f,c
  4054  001D4E  3246               	rrcf	___altoft@c,f,c
  4055  001D50  2A4E               	incf	___altoft@exp,f,c
  4056  001D52                     l272:
  4057  001D52  0E00               	movlw	0
  4058  001D54  1446               	andwf	___altoft@c,w,c
  4059  001D56  6E4A               	movwf	??___altoft& (0+255),c
  4060  001D58  0E00               	movlw	0
  4061  001D5A  1447               	andwf	___altoft@c+1,w,c
  4062  001D5C  6E4B               	movwf	(??___altoft+1)& (0+255),c
  4063  001D5E  0E00               	movlw	0
  4064  001D60  1448               	andwf	___altoft@c+2,w,c
  4065  001D62  6E4C               	movwf	(??___altoft+2)& (0+255),c
  4066  001D64  0EFF               	movlw	255
  4067  001D66  1449               	andwf	___altoft@c+3,w,c
  4068  001D68  6E4D               	movwf	(??___altoft+3)& (0+255),c
  4069  001D6A  504A               	movf	??___altoft,w,c
  4070  001D6C  104B               	iorwf	??___altoft+1,w,c
  4071  001D6E  104C               	iorwf	??___altoft+2,w,c
  4072  001D70  104D               	iorwf	??___altoft+3,w,c
  4073  001D72  A4D8               	btfss	status,2,c
  4074  001D74  D7E8               	goto	l273
  4075  001D76  C046  F001         	movff	___altoft@c,___ftpack@arg
  4076  001D7A  C047  F002         	movff	___altoft@c+1,___ftpack@arg+1
  4077  001D7E  C048  F003         	movff	___altoft@c+2,___ftpack@arg+2
  4078  001D82  C04E  F004         	movff	___altoft@exp,___ftpack@exp
  4079  001D86  C04F  F005         	movff	___altoft@sign,___ftpack@sign
  4080  001D8A  EC69  F00D         	call	___ftpack	;wreg free
  4081  001D8E  C001  F046         	movff	?___ftpack,?___altoft
  4082  001D92  C002  F047         	movff	?___ftpack+1,?___altoft+1
  4083  001D96  C003  F048         	movff	?___ftpack+2,?___altoft+2
  4084  001D9A  0012               	return	
  4085  001D9C                     __end_of___altoft:
  4086                           	opt stack 0
  4087                           tblptru	equ	0xFF8
  4088                           intcon	equ	0xFF2
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           plusw1	equ	0xFE3
  4092                           postinc2	equ	0xFDE
  4093                           postdec2	equ	0xFDD
  4094                           plusw2	equ	0xFDB
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _eval_poly *****************
  4100 ;; Defined at:
  4101 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  x               3   54[COMRAM] float 
  4104 ;;  d               2   57[COMRAM] PTR const 
  4105 ;;		 -> log@coeff(27), exp@coeff(30), 
  4106 ;;  n               2   59[COMRAM] int 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  res             3   63[COMRAM] int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  3   54[COMRAM] int 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         7       0       0       0       0       0       0       0       0
  4119 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4121 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4122 ;;Total ram usage:       12 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    2
  4125 ;; This function calls:
  4126 ;;		___ftadd
  4127 ;;		___ftmul
  4128 ;;		___wmul
  4129 ;; This function is called by:
  4130 ;;		_exp
  4131 ;;		_log
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text20
  4136  0017BE                     __ptext20:
  4137                           	opt stack 0
  4138  0017BE                     _eval_poly:
  4139                           	opt stack 24
  4140                           
  4141                           ;incstack = 0
  4142  0017BE  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4143  0017C2  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4144  0017C6  0E00               	movlw	0
  4145  0017C8  6E04               	movwf	___wmul@multiplicand+1,c
  4146  0017CA  0E03               	movlw	3
  4147  0017CC  6E03               	movwf	___wmul@multiplicand,c
  4148  0017CE  ECC6  F00F         	call	___wmul	;wreg free
  4149  0017D2  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4150  0017D6  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4151  0017DA  5001               	movf	?___wmul,w,c
  4152  0017DC  263E               	addwf	??_eval_poly,f,c
  4153  0017DE  5002               	movf	?___wmul+1,w,c
  4154  0017E0  223F               	addwfc	??_eval_poly+1,f,c
  4155  0017E2  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4156  0017E6  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4157  0017EA                     	if	0	;tblptru may be non-zero
  4158  0017EA                     	endif
  4159  0017EA                     	if	0	;tblptru may be non-zero
  4160  0017EA                     	endif
  4161  0017EA  0009               	tblrd		*+
  4162  0017EC  CFF5 F040          	movff	tablat,eval_poly@res
  4163  0017F0  0009               	tblrd		*+
  4164  0017F2  CFF5 F041          	movff	tablat,eval_poly@res+1
  4165  0017F6  000A               	tblrd		*-
  4166  0017F8  CFF5 F042          	movff	tablat,eval_poly@res+2
  4167  0017FC  D03E               	goto	l831
  4168  0017FE  C040  F010         	movff	eval_poly@res,___ftmul@f2
  4169  001802  C041  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  4170  001806  C042  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  4171  00180A  C037  F00D         	movff	eval_poly@x,___ftmul@f1
  4172  00180E  C038  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  4173  001812  C039  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  4174  001816  EC83  F00A         	call	___ftmul	;wreg free
  4175  00181A  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  4176  00181E  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  4177  001822  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  4178  001826  0E00               	movlw	0
  4179  001828  6E04               	movwf	___wmul@multiplicand+1,c
  4180  00182A  0E03               	movlw	3
  4181  00182C  6E03               	movwf	___wmul@multiplicand,c
  4182  00182E  063C               	decf	eval_poly@n,f,c
  4183  001830  A0D8               	btfss	status,0,c
  4184  001832  063D               	decf	eval_poly@n+1,f,c
  4185  001834  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4186  001838  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4187  00183C  ECC6  F00F         	call	___wmul	;wreg free
  4188  001840  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4189  001844  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4190  001848  5001               	movf	?___wmul,w,c
  4191  00184A  263E               	addwf	??_eval_poly,f,c
  4192  00184C  5002               	movf	?___wmul+1,w,c
  4193  00184E  223F               	addwfc	??_eval_poly+1,f,c
  4194  001850  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4195  001854  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4196  001858                     	if	0	;tblptru may be non-zero
  4197  001858                     	endif
  4198  001858                     	if	0	;tblptru may be non-zero
  4199  001858                     	endif
  4200  001858  0009               	tblrd		*+
  4201  00185A  CFF5 F02E          	movff	tablat,___ftadd@f2
  4202  00185E  0009               	tblrd		*+
  4203  001860  CFF5 F02F          	movff	tablat,___ftadd@f2+1
  4204  001864  000A               	tblrd		*-
  4205  001866  CFF5 F030          	movff	tablat,___ftadd@f2+2
  4206  00186A  ECE6  F007         	call	___ftadd	;wreg free
  4207  00186E  C02B  F040         	movff	?___ftadd,eval_poly@res
  4208  001872  C02C  F041         	movff	?___ftadd+1,eval_poly@res+1
  4209  001876  C02D  F042         	movff	?___ftadd+2,eval_poly@res+2
  4210  00187A                     l831:
  4211  00187A  503C               	movf	eval_poly@n,w,c
  4212  00187C  103D               	iorwf	eval_poly@n+1,w,c
  4213  00187E  A4D8               	btfss	status,2,c
  4214  001880  D7BE               	goto	l832
  4215  001882  C040  F037         	movff	eval_poly@res,?_eval_poly
  4216  001886  C041  F038         	movff	eval_poly@res+1,?_eval_poly+1
  4217  00188A  C042  F039         	movff	eval_poly@res+2,?_eval_poly+2
  4218  00188E  0012               	return		;funcret
  4219  001890                     __end_of_eval_poly:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           intcon	equ	0xFF2
  4226                           postinc0	equ	0xFEE
  4227                           wreg	equ	0xFE8
  4228                           plusw1	equ	0xFE3
  4229                           postinc2	equ	0xFDE
  4230                           postdec2	equ	0xFDD
  4231                           plusw2	equ	0xFDB
  4232                           fsr2h	equ	0xFDA
  4233                           fsr2l	equ	0xFD9
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function ___wmul *****************
  4237 ;; Defined at:
  4238 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  multiplier      2    0[COMRAM] unsigned int 
  4241 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  product         2    4[COMRAM] unsigned int 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  2    0[COMRAM] unsigned int 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0, prodl, prodh
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4253 ;;      Params:         4       0       0       0       0       0       0       0       0
  4254 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4256 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4257 ;;Total ram usage:        6 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_eval_poly
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text21
  4267  001F8C                     __ptext21:
  4268                           	opt stack 0
  4269  001F8C                     ___wmul:
  4270                           	opt stack 25
  4271                           
  4272                           ;incstack = 0
  4273  001F8C  5001               	movf	___wmul@multiplier,w,c
  4274  001F8E  0203               	mulwf	___wmul@multiplicand,c
  4275  001F90  CFF3 F005          	movff	prodl,___wmul@product
  4276  001F94  CFF4 F006          	movff	prodh,___wmul@product+1
  4277  001F98  5001               	movf	___wmul@multiplier,w,c
  4278  001F9A  0204               	mulwf	___wmul@multiplicand+1,c
  4279  001F9C  50F3               	movf	prodl,w,c
  4280  001F9E  2606               	addwf	___wmul@product+1,f,c
  4281  001FA0  5002               	movf	___wmul@multiplier+1,w,c
  4282  001FA2  0203               	mulwf	___wmul@multiplicand,c
  4283  001FA4  50F3               	movf	prodl,w,c
  4284  001FA6  2606               	addwf	___wmul@product+1,f,c
  4285  001FA8  C005  F001         	movff	___wmul@product,?___wmul
  4286  001FAC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4287  001FB0  0012               	return	
  4288  001FB2                     __end_of___wmul:
  4289                           	opt stack 0
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           prodh	equ	0xFF4
  4295                           prodl	equ	0xFF3
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           plusw1	equ	0xFE3
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           plusw2	equ	0xFDB
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8
  4306                           
  4307 ;; *************** function ___ftmul *****************
  4308 ;; Defined at:
  4309 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  f1              3   12[COMRAM] float 
  4312 ;;  f2              3   15[COMRAM] float 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4315 ;;  sign            1   26[COMRAM] unsigned char 
  4316 ;;  cntr            1   25[COMRAM] unsigned char 
  4317 ;;  exp             1   21[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  3   12[COMRAM] float 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         6       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4330 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:       15 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    1
  4334 ;; This function calls:
  4335 ;;		___ftpack
  4336 ;; This function is called by:
  4337 ;;		_coinfig_ccpcon
  4338 ;;		_config_ccp1
  4339 ;;		_config_ccp2
  4340 ;;		_pow
  4341 ;;		_exp
  4342 ;;		_log
  4343 ;;		_eval_poly
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text22
  4348  001506                     __ptext22:
  4349                           	opt stack 0
  4350  001506                     ___ftmul:
  4351                           	opt stack 28
  4352                           
  4353                           ;incstack = 0
  4354  001506  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4355  00150A  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4356  00150C  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4357  00150E  340E               	rlcf	___ftmul@f1+1,w,c
  4358  001510  3613               	rlcf	??___ftmul& (0+255),f,c
  4359  001512  E301               	bnc	u1661
  4360  001514  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4361  001516                     u1661:
  4362  001516  5013               	movf	??___ftmul,w,c
  4363  001518  6E16               	movwf	___ftmul@exp,c
  4364  00151A  5016               	movf	___ftmul@exp,w,c
  4365  00151C  A4D8               	btfss	status,2,c
  4366  00151E  D007               	goto	l481
  4367  001520  0E00               	movlw	0
  4368  001522  6E0D               	movwf	?___ftmul,c
  4369  001524  0E00               	movlw	0
  4370  001526  6E0E               	movwf	?___ftmul+1,c
  4371  001528  0E00               	movlw	0
  4372  00152A  6E0F               	movwf	?___ftmul+2,c
  4373  00152C  0012               	return	
  4374  00152E                     l481:
  4375  00152E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4376  001532  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4377  001534  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4378  001536  3411               	rlcf	___ftmul@f2+1,w,c
  4379  001538  3613               	rlcf	??___ftmul& (0+255),f,c
  4380  00153A  E301               	bnc	u1681
  4381  00153C  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4382  00153E                     u1681:
  4383  00153E  5013               	movf	??___ftmul,w,c
  4384  001540  6E1B               	movwf	___ftmul@sign,c
  4385  001542  501B               	movf	___ftmul@sign,w,c
  4386  001544  A4D8               	btfss	status,2,c
  4387  001546  D007               	goto	l483
  4388  001548  0E00               	movlw	0
  4389  00154A  6E0D               	movwf	?___ftmul,c
  4390  00154C  0E00               	movlw	0
  4391  00154E  6E0E               	movwf	?___ftmul+1,c
  4392  001550  0E00               	movlw	0
  4393  001552  6E0F               	movwf	?___ftmul+2,c
  4394  001554  0012               	return	
  4395  001556                     l483:
  4396  001556  501B               	movf	___ftmul@sign,w,c
  4397  001558  0F7B               	addlw	123
  4398  00155A  2616               	addwf	___ftmul@exp,f,c
  4399  00155C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4400  001560  5012               	movf	___ftmul@f2+2,w,c
  4401  001562  1A1B               	xorwf	___ftmul@sign,f,c
  4402  001564  0E80               	movlw	128
  4403  001566  161B               	andwf	___ftmul@sign,f,c
  4404  001568  8E0E               	bsf	___ftmul@f1+1,7,c
  4405  00156A  8E11               	bsf	___ftmul@f2+1,7,c
  4406  00156C  0EFF               	movlw	255
  4407  00156E  1610               	andwf	___ftmul@f2,f,c
  4408  001570  0EFF               	movlw	255
  4409  001572  1611               	andwf	___ftmul@f2+1,f,c
  4410  001574  0E00               	movlw	0
  4411  001576  1612               	andwf	___ftmul@f2+2,f,c
  4412  001578  0E00               	movlw	0
  4413  00157A  6E17               	movwf	___ftmul@f3_as_product,c
  4414  00157C  0E00               	movlw	0
  4415  00157E  6E18               	movwf	___ftmul@f3_as_product+1,c
  4416  001580  0E00               	movlw	0
  4417  001582  6E19               	movwf	___ftmul@f3_as_product+2,c
  4418  001584  0E07               	movlw	7
  4419  001586  6E1A               	movwf	___ftmul@cntr,c
  4420  001588  A00D               	btfss	___ftmul@f1,0,c
  4421  00158A  D006               	goto	l485
  4422  00158C  5010               	movf	___ftmul@f2,w,c
  4423  00158E  2617               	addwf	___ftmul@f3_as_product,f,c
  4424  001590  5011               	movf	___ftmul@f2+1,w,c
  4425  001592  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4426  001594  5012               	movf	___ftmul@f2+2,w,c
  4427  001596  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4428  001598                     l485:
  4429  001598  90D8               	bcf	status,0,c
  4430  00159A  320F               	rrcf	___ftmul@f1+2,f,c
  4431  00159C  320E               	rrcf	___ftmul@f1+1,f,c
  4432  00159E  320D               	rrcf	___ftmul@f1,f,c
  4433  0015A0  90D8               	bcf	status,0,c
  4434  0015A2  3610               	rlcf	___ftmul@f2,f,c
  4435  0015A4  3611               	rlcf	___ftmul@f2+1,f,c
  4436  0015A6  3612               	rlcf	___ftmul@f2+2,f,c
  4437  0015A8  2E1A               	decfsz	___ftmul@cntr,f,c
  4438  0015AA  D7EE               	goto	l484
  4439  0015AC  0E09               	movlw	9
  4440  0015AE  6E1A               	movwf	___ftmul@cntr,c
  4441  0015B0  A00D               	btfss	___ftmul@f1,0,c
  4442  0015B2  D006               	goto	l488
  4443  0015B4  5010               	movf	___ftmul@f2,w,c
  4444  0015B6  2617               	addwf	___ftmul@f3_as_product,f,c
  4445  0015B8  5011               	movf	___ftmul@f2+1,w,c
  4446  0015BA  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4447  0015BC  5012               	movf	___ftmul@f2+2,w,c
  4448  0015BE  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4449  0015C0                     l488:
  4450  0015C0  90D8               	bcf	status,0,c
  4451  0015C2  320F               	rrcf	___ftmul@f1+2,f,c
  4452  0015C4  320E               	rrcf	___ftmul@f1+1,f,c
  4453  0015C6  320D               	rrcf	___ftmul@f1,f,c
  4454  0015C8  90D8               	bcf	status,0,c
  4455  0015CA  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  4456  0015CC  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  4457  0015CE  3217               	rrcf	___ftmul@f3_as_product,f,c
  4458  0015D0  2E1A               	decfsz	___ftmul@cntr,f,c
  4459  0015D2  D7EE               	goto	l487
  4460  0015D4  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4461  0015D8  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4462  0015DC  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4463  0015E0  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4464  0015E4  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4465  0015E8  EC69  F00D         	call	___ftpack	;wreg free
  4466  0015EC  C001  F00D         	movff	?___ftpack,?___ftmul
  4467  0015F0  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4468  0015F4  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4469  0015F8  0012               	return	
  4470  0015FA                     __end_of___ftmul:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           prodh	equ	0xFF4
  4477                           prodl	equ	0xFF3
  4478                           intcon	equ	0xFF2
  4479                           postinc0	equ	0xFEE
  4480                           wreg	equ	0xFE8
  4481                           plusw1	equ	0xFE3
  4482                           postinc2	equ	0xFDE
  4483                           postdec2	equ	0xFDD
  4484                           plusw2	equ	0xFDB
  4485                           fsr2h	equ	0xFDA
  4486                           fsr2l	equ	0xFD9
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function ___ftsub *****************
  4490 ;; Defined at:
  4491 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  f1              3   54[COMRAM] float 
  4494 ;;  f2              3   57[COMRAM] float 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  3   54[COMRAM] float 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4506 ;;      Params:         6       0       0       0       0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4509 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4510 ;;Total ram usage:        6 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    2
  4513 ;; This function calls:
  4514 ;;		___ftadd
  4515 ;; This function is called by:
  4516 ;;		_exp
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text23
  4521  001F14                     __ptext23:
  4522                           	opt stack 0
  4523  001F14                     ___ftsub:
  4524                           	opt stack 24
  4525                           
  4526                           ;incstack = 0
  4527  001F14  503A               	movf	___ftsub@f2,w,c
  4528  001F16  103B               	iorwf	___ftsub@f2+1,w,c
  4529  001F18  103C               	iorwf	___ftsub@f2+2,w,c
  4530  001F1A  B4D8               	btfsc	status,2,c
  4531  001F1C  D006               	goto	l498
  4532  001F1E  0E00               	movlw	0
  4533  001F20  1A3A               	xorwf	___ftsub@f2,f,c
  4534  001F22  0E00               	movlw	0
  4535  001F24  1A3B               	xorwf	___ftsub@f2+1,f,c
  4536  001F26  0E80               	movlw	128
  4537  001F28  1A3C               	xorwf	___ftsub@f2+2,f,c
  4538  001F2A                     l498:
  4539  001F2A  C037  F02B         	movff	___ftsub@f1,___ftadd@f1
  4540  001F2E  C038  F02C         	movff	___ftsub@f1+1,___ftadd@f1+1
  4541  001F32  C039  F02D         	movff	___ftsub@f1+2,___ftadd@f1+2
  4542  001F36  C03A  F02E         	movff	___ftsub@f2,___ftadd@f2
  4543  001F3A  C03B  F02F         	movff	___ftsub@f2+1,___ftadd@f2+1
  4544  001F3E  C03C  F030         	movff	___ftsub@f2+2,___ftadd@f2+2
  4545  001F42  ECE6  F007         	call	___ftadd	;wreg free
  4546  001F46  C02B  F037         	movff	?___ftadd,?___ftsub
  4547  001F4A  C02C  F038         	movff	?___ftadd+1,?___ftsub+1
  4548  001F4E  C02D  F039         	movff	?___ftadd+2,?___ftsub+2
  4549  001F52  0012               	return	
  4550  001F54                     __end_of___ftsub:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           postinc0	equ	0xFEE
  4560                           wreg	equ	0xFE8
  4561                           plusw1	equ	0xFE3
  4562                           postinc2	equ	0xFDE
  4563                           postdec2	equ	0xFDD
  4564                           plusw2	equ	0xFDB
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function ___ftadd *****************
  4570 ;; Defined at:
  4571 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  f1              3   42[COMRAM] float 
  4574 ;;  f2              3   45[COMRAM] float 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  exp1            1   53[COMRAM] unsigned char 
  4577 ;;  exp2            1   52[COMRAM] unsigned char 
  4578 ;;  sign            1   51[COMRAM] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  3   42[COMRAM] float 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4588 ;;      Params:         6       0       0       0       0       0       0       0       0
  4589 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4590 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4591 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4592 ;;Total ram usage:       12 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    1
  4595 ;; This function calls:
  4596 ;;		___ftpack
  4597 ;; This function is called by:
  4598 ;;		_coinfig_ccpcon
  4599 ;;		_config_ccp1
  4600 ;;		_config_ccp2
  4601 ;;		___ftsub
  4602 ;;		_floor
  4603 ;;		_log
  4604 ;;		_eval_poly
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text24
  4609  000FCC                     __ptext24:
  4610                           	opt stack 0
  4611  000FCC                     ___ftadd:
  4612                           	opt stack 28
  4613                           
  4614                           ;incstack = 0
  4615  000FCC  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4616  000FD0  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4617  000FD2  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4618  000FD4  342C               	rlcf	___ftadd@f1+1,w,c
  4619  000FD6  3631               	rlcf	??___ftadd& (0+255),f,c
  4620  000FD8  E301               	bnc	u1451
  4621  000FDA  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4622  000FDC                     u1451:
  4623  000FDC  5031               	movf	??___ftadd,w,c
  4624  000FDE  6E36               	movwf	___ftadd@exp1,c
  4625  000FE0  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4626  000FE4  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4627  000FE6  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4628  000FE8  342F               	rlcf	___ftadd@f2+1,w,c
  4629  000FEA  3631               	rlcf	??___ftadd& (0+255),f,c
  4630  000FEC  E301               	bnc	u1461
  4631  000FEE  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4632  000FF0                     u1461:
  4633  000FF0  5031               	movf	??___ftadd,w,c
  4634  000FF2  6E35               	movwf	___ftadd@exp2,c
  4635  000FF4  5036               	movf	___ftadd@exp1,w,c
  4636  000FF6  B4D8               	btfsc	status,2,c
  4637  000FF8  D00B               	goto	u1490
  4638  000FFA  5035               	movf	___ftadd@exp2,w,c
  4639  000FFC  5C36               	subwf	___ftadd@exp1,w,c
  4640  000FFE  B0D8               	btfsc	status,0,c
  4641  001000  D00E               	goto	l433
  4642  001002  5036               	movf	___ftadd@exp1,w,c
  4643  001004  0800               	sublw	0
  4644  001006  2435               	addwf	___ftadd@exp2,w,c
  4645  001008  6E31               	movwf	??___ftadd& (0+255),c
  4646  00100A  0E18               	movlw	24
  4647  00100C  6431               	cpfsgt	??___ftadd,c
  4648  00100E  D007               	goto	l433
  4649  001010                     u1490:
  4650  001010  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4651  001014  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4652  001018  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4653  00101C  0012               	return	
  4654  00101E                     l433:
  4655  00101E  5035               	movf	___ftadd@exp2,w,c
  4656  001020  B4D8               	btfsc	status,2,c
  4657  001022  D00B               	goto	u1520
  4658  001024  5036               	movf	___ftadd@exp1,w,c
  4659  001026  5C35               	subwf	___ftadd@exp2,w,c
  4660  001028  B0D8               	btfsc	status,0,c
  4661  00102A  D00E               	goto	l437
  4662  00102C  5035               	movf	___ftadd@exp2,w,c
  4663  00102E  0800               	sublw	0
  4664  001030  2436               	addwf	___ftadd@exp1,w,c
  4665  001032  6E31               	movwf	??___ftadd& (0+255),c
  4666  001034  0E18               	movlw	24
  4667  001036  6431               	cpfsgt	??___ftadd,c
  4668  001038  D007               	goto	l437
  4669  00103A                     u1520:
  4670  00103A  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4671  00103E  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4672  001042  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4673  001046  0012               	return	
  4674  001048                     l437:
  4675  001048  0E06               	movlw	6
  4676  00104A  6E34               	movwf	___ftadd@sign,c
  4677  00104C  BE2D               	btfsc	___ftadd@f1+2,7,c
  4678  00104E  8E34               	bsf	___ftadd@sign,7,c
  4679  001050  BE30               	btfsc	___ftadd@f2+2,7,c
  4680  001052  8C34               	bsf	___ftadd@sign,6,c
  4681  001054  8E2C               	bsf	___ftadd@f1+1,7,c
  4682  001056  0EFF               	movlw	255
  4683  001058  162B               	andwf	___ftadd@f1,f,c
  4684  00105A  0EFF               	movlw	255
  4685  00105C  162C               	andwf	___ftadd@f1+1,f,c
  4686  00105E  0E00               	movlw	0
  4687  001060  162D               	andwf	___ftadd@f1+2,f,c
  4688  001062  8E2F               	bsf	___ftadd@f2+1,7,c
  4689  001064  0EFF               	movlw	255
  4690  001066  162E               	andwf	___ftadd@f2,f,c
  4691  001068  0EFF               	movlw	255
  4692  00106A  162F               	andwf	___ftadd@f2+1,f,c
  4693  00106C  0E00               	movlw	0
  4694  00106E  1630               	andwf	___ftadd@f2+2,f,c
  4695  001070  5035               	movf	___ftadd@exp2,w,c
  4696  001072  5C36               	subwf	___ftadd@exp1,w,c
  4697  001074  B0D8               	btfsc	status,0,c
  4698  001076  D01B               	goto	l442
  4699  001078                     u1550:
  4700  001078  90D8               	bcf	status,0,c
  4701  00107A  362E               	rlcf	___ftadd@f2,f,c
  4702  00107C  362F               	rlcf	___ftadd@f2+1,f,c
  4703  00107E  3630               	rlcf	___ftadd@f2+2,f,c
  4704  001080  0635               	decf	___ftadd@exp2,f,c
  4705  001082  5036               	movf	___ftadd@exp1,w,c
  4706  001084  1835               	xorwf	___ftadd@exp2,w,c
  4707  001086  B4D8               	btfsc	status,2,c
  4708  001088  D00D               	goto	l447
  4709  00108A  0634               	decf	___ftadd@sign,f,c
  4710  00108C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4711  001090  0E07               	movlw	7
  4712  001092  1631               	andwf	??___ftadd,f,c
  4713  001094  B4D8               	btfsc	status,2,c
  4714  001096  D006               	goto	l447
  4715  001098  D7EF               	goto	u1550
  4716  00109A  90D8               	bcf	status,0,c
  4717  00109C  322D               	rrcf	___ftadd@f1+2,f,c
  4718  00109E  322C               	rrcf	___ftadd@f1+1,f,c
  4719  0010A0  322B               	rrcf	___ftadd@f1,f,c
  4720  0010A2  2A36               	incf	___ftadd@exp1,f,c
  4721  0010A4                     l447:
  4722  0010A4  5035               	movf	___ftadd@exp2,w,c
  4723  0010A6  1836               	xorwf	___ftadd@exp1,w,c
  4724  0010A8  B4D8               	btfsc	status,2,c
  4725  0010AA  D01F               	goto	u1620
  4726  0010AC  D7F6               	goto	l448
  4727  0010AE                     l442:
  4728  0010AE  5036               	movf	___ftadd@exp1,w,c
  4729  0010B0  5C35               	subwf	___ftadd@exp2,w,c
  4730  0010B2  B0D8               	btfsc	status,0,c
  4731  0010B4  D01A               	goto	u1620
  4732  0010B6                     u1590:
  4733  0010B6  90D8               	bcf	status,0,c
  4734  0010B8  362B               	rlcf	___ftadd@f1,f,c
  4735  0010BA  362C               	rlcf	___ftadd@f1+1,f,c
  4736  0010BC  362D               	rlcf	___ftadd@f1+2,f,c
  4737  0010BE  0636               	decf	___ftadd@exp1,f,c
  4738  0010C0  5036               	movf	___ftadd@exp1,w,c
  4739  0010C2  1835               	xorwf	___ftadd@exp2,w,c
  4740  0010C4  B4D8               	btfsc	status,2,c
  4741  0010C6  D00D               	goto	l456
  4742  0010C8  0634               	decf	___ftadd@sign,f,c
  4743  0010CA  C034  F031         	movff	___ftadd@sign,??___ftadd
  4744  0010CE  0E07               	movlw	7
  4745  0010D0  1631               	andwf	??___ftadd,f,c
  4746  0010D2  B4D8               	btfsc	status,2,c
  4747  0010D4  D006               	goto	l456
  4748  0010D6  D7EF               	goto	u1590
  4749  0010D8  90D8               	bcf	status,0,c
  4750  0010DA  3230               	rrcf	___ftadd@f2+2,f,c
  4751  0010DC  322F               	rrcf	___ftadd@f2+1,f,c
  4752  0010DE  322E               	rrcf	___ftadd@f2,f,c
  4753  0010E0  2A35               	incf	___ftadd@exp2,f,c
  4754  0010E2                     l456:
  4755  0010E2  5035               	movf	___ftadd@exp2,w,c
  4756  0010E4  1836               	xorwf	___ftadd@exp1,w,c
  4757  0010E6  A4D8               	btfss	status,2,c
  4758  0010E8  D7F7               	goto	l457
  4759  0010EA                     u1620:
  4760  0010EA  AE34               	btfss	___ftadd@sign,7,c
  4761  0010EC  D00C               	goto	l459
  4762  0010EE  0EFF               	movlw	255
  4763  0010F0  1A2B               	xorwf	___ftadd@f1,f,c
  4764  0010F2  0EFF               	movlw	255
  4765  0010F4  1A2C               	xorwf	___ftadd@f1+1,f,c
  4766  0010F6  0EFF               	movlw	255
  4767  0010F8  1A2D               	xorwf	___ftadd@f1+2,f,c
  4768  0010FA  0E01               	movlw	1
  4769  0010FC  262B               	addwf	___ftadd@f1,f,c
  4770  0010FE  0E00               	movlw	0
  4771  001100  222C               	addwfc	___ftadd@f1+1,f,c
  4772  001102  0E00               	movlw	0
  4773  001104  222D               	addwfc	___ftadd@f1+2,f,c
  4774  001106                     l459:
  4775  001106  AC34               	btfss	___ftadd@sign,6,c
  4776  001108  D00C               	goto	l460
  4777  00110A  0EFF               	movlw	255
  4778  00110C  1A2E               	xorwf	___ftadd@f2,f,c
  4779  00110E  0EFF               	movlw	255
  4780  001110  1A2F               	xorwf	___ftadd@f2+1,f,c
  4781  001112  0EFF               	movlw	255
  4782  001114  1A30               	xorwf	___ftadd@f2+2,f,c
  4783  001116  0E01               	movlw	1
  4784  001118  262E               	addwf	___ftadd@f2,f,c
  4785  00111A  0E00               	movlw	0
  4786  00111C  222F               	addwfc	___ftadd@f2+1,f,c
  4787  00111E  0E00               	movlw	0
  4788  001120  2230               	addwfc	___ftadd@f2+2,f,c
  4789  001122                     l460:
  4790  001122  0E00               	movlw	0
  4791  001124  6E34               	movwf	___ftadd@sign,c
  4792  001126  502B               	movf	___ftadd@f1,w,c
  4793  001128  262E               	addwf	___ftadd@f2,f,c
  4794  00112A  502C               	movf	___ftadd@f1+1,w,c
  4795  00112C  222F               	addwfc	___ftadd@f2+1,f,c
  4796  00112E  502D               	movf	___ftadd@f1+2,w,c
  4797  001130  2230               	addwfc	___ftadd@f2+2,f,c
  4798  001132  AE30               	btfss	___ftadd@f2+2,7,c
  4799  001134  D00E               	goto	l461
  4800  001136  0EFF               	movlw	255
  4801  001138  1A2E               	xorwf	___ftadd@f2,f,c
  4802  00113A  0EFF               	movlw	255
  4803  00113C  1A2F               	xorwf	___ftadd@f2+1,f,c
  4804  00113E  0EFF               	movlw	255
  4805  001140  1A30               	xorwf	___ftadd@f2+2,f,c
  4806  001142  0E01               	movlw	1
  4807  001144  262E               	addwf	___ftadd@f2,f,c
  4808  001146  0E00               	movlw	0
  4809  001148  222F               	addwfc	___ftadd@f2+1,f,c
  4810  00114A  0E00               	movlw	0
  4811  00114C  2230               	addwfc	___ftadd@f2+2,f,c
  4812  00114E  0E01               	movlw	1
  4813  001150  6E34               	movwf	___ftadd@sign,c
  4814  001152                     l461:
  4815  001152  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  4816  001156  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4817  00115A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4818  00115E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  4819  001162  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  4820  001166  EC69  F00D         	call	___ftpack	;wreg free
  4821  00116A  C001  F02B         	movff	?___ftpack,?___ftadd
  4822  00116E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  4823  001172  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  4824  001176  0012               	return	
  4825  001178                     __end_of___ftadd:
  4826                           	opt stack 0
  4827                           tblptru	equ	0xFF8
  4828                           tblptrh	equ	0xFF7
  4829                           tblptrl	equ	0xFF6
  4830                           tablat	equ	0xFF5
  4831                           prodh	equ	0xFF4
  4832                           prodl	equ	0xFF3
  4833                           intcon	equ	0xFF2
  4834                           postinc0	equ	0xFEE
  4835                           wreg	equ	0xFE8
  4836                           plusw1	equ	0xFE3
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           plusw2	equ	0xFDB
  4840                           fsr2h	equ	0xFDA
  4841                           fsr2l	equ	0xFD9
  4842                           status	equ	0xFD8
  4843                           
  4844 ;; *************** function ___ftneg *****************
  4845 ;; Defined at:
  4846 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  f1              3    0[COMRAM] float 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  3    0[COMRAM] float 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4860 ;;      Params:         3       0       0       0       0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4863 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4864 ;;Total ram usage:        3 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_pow
  4870 ;;		_exp
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text25
  4875  001FD6                     __ptext25:
  4876                           	opt stack 0
  4877  001FD6                     ___ftneg:
  4878                           	opt stack 26
  4879                           
  4880                           ;incstack = 0
  4881  001FD6  5001               	movf	___ftneg@f1,w,c
  4882  001FD8  1002               	iorwf	___ftneg@f1+1,w,c
  4883  001FDA  1003               	iorwf	___ftneg@f1+2,w,c
  4884  001FDC  B4D8               	btfsc	status,2,c
  4885  001FDE  D006               	goto	l492
  4886  001FE0  0E00               	movlw	0
  4887  001FE2  1A01               	xorwf	___ftneg@f1,f,c
  4888  001FE4  0E00               	movlw	0
  4889  001FE6  1A02               	xorwf	___ftneg@f1+1,f,c
  4890  001FE8  0E80               	movlw	128
  4891  001FEA  1A03               	xorwf	___ftneg@f1+2,f,c
  4892  001FEC                     l492:
  4893  001FEC  C001  F001         	movff	___ftneg@f1,?___ftneg
  4894  001FF0  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4895  001FF4  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4896  001FF8  0012               	return		;funcret
  4897  001FFA                     __end_of___ftneg:
  4898                           	opt stack 0
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           postinc0	equ	0xFEE
  4907                           wreg	equ	0xFE8
  4908                           plusw1	equ	0xFE3
  4909                           postinc2	equ	0xFDE
  4910                           postdec2	equ	0xFDD
  4911                           plusw2	equ	0xFDB
  4912                           fsr2h	equ	0xFDA
  4913                           fsr2l	equ	0xFD9
  4914                           status	equ	0xFD8
  4915                           
  4916 ;; *************** function ___ftdiv *****************
  4917 ;; Defined at:
  4918 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  f1              3   27[COMRAM] float 
  4921 ;;  f2              3   30[COMRAM] float 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  f3              3   37[COMRAM] float 
  4924 ;;  sign            1   41[COMRAM] unsigned char 
  4925 ;;  exp             1   40[COMRAM] unsigned char 
  4926 ;;  cntr            1   36[COMRAM] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  3   27[COMRAM] float 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4936 ;;      Params:         6       0       0       0       0       0       0       0       0
  4937 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4938 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4939 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4940 ;;Total ram usage:       15 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    1
  4943 ;; This function calls:
  4944 ;;		___ftpack
  4945 ;; This function is called by:
  4946 ;;		_coinfig_ccpcon
  4947 ;;		_config_ccp1
  4948 ;;		_config_ccp2
  4949 ;;		_exp
  4950 ;;		_wait_in_ms
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text26
  4955  0015FA                     __ptext26:
  4956                           	opt stack 0
  4957  0015FA                     ___ftdiv:
  4958                           	opt stack 28
  4959                           
  4960                           ;incstack = 0
  4961  0015FA  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  4962  0015FE  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  4963  001600  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  4964  001602  341D               	rlcf	___ftdiv@f1+1,w,c
  4965  001604  3622               	rlcf	??___ftdiv& (0+255),f,c
  4966  001606  E301               	bnc	u1851
  4967  001608  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  4968  00160A                     u1851:
  4969  00160A  5022               	movf	??___ftdiv,w,c
  4970  00160C  6E29               	movwf	___ftdiv@exp,c
  4971  00160E  5029               	movf	___ftdiv@exp,w,c
  4972  001610  A4D8               	btfss	status,2,c
  4973  001612  D007               	goto	l466
  4974  001614  0E00               	movlw	0
  4975  001616  6E1C               	movwf	?___ftdiv,c
  4976  001618  0E00               	movlw	0
  4977  00161A  6E1D               	movwf	?___ftdiv+1,c
  4978  00161C  0E00               	movlw	0
  4979  00161E  6E1E               	movwf	?___ftdiv+2,c
  4980  001620  0012               	return	
  4981  001622                     l466:
  4982  001622  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  4983  001626  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  4984  001628  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  4985  00162A  3420               	rlcf	___ftdiv@f2+1,w,c
  4986  00162C  3622               	rlcf	??___ftdiv& (0+255),f,c
  4987  00162E  E301               	bnc	u1871
  4988  001630  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  4989  001632                     u1871:
  4990  001632  5022               	movf	??___ftdiv,w,c
  4991  001634  6E2A               	movwf	___ftdiv@sign,c
  4992  001636  502A               	movf	___ftdiv@sign,w,c
  4993  001638  A4D8               	btfss	status,2,c
  4994  00163A  D007               	goto	l468
  4995  00163C  0E00               	movlw	0
  4996  00163E  6E1C               	movwf	?___ftdiv,c
  4997  001640  0E00               	movlw	0
  4998  001642  6E1D               	movwf	?___ftdiv+1,c
  4999  001644  0E00               	movlw	0
  5000  001646  6E1E               	movwf	?___ftdiv+2,c
  5001  001648  0012               	return	
  5002  00164A                     l468:
  5003  00164A  0E00               	movlw	0
  5004  00164C  6E26               	movwf	___ftdiv@f3,c
  5005  00164E  0E00               	movlw	0
  5006  001650  6E27               	movwf	___ftdiv@f3+1,c
  5007  001652  0E00               	movlw	0
  5008  001654  6E28               	movwf	___ftdiv@f3+2,c
  5009  001656  502A               	movf	___ftdiv@sign,w,c
  5010  001658  0F89               	addlw	137
  5011  00165A  5E29               	subwf	___ftdiv@exp,f,c
  5012  00165C  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5013  001660  5021               	movf	___ftdiv@f2+2,w,c
  5014  001662  1A2A               	xorwf	___ftdiv@sign,f,c
  5015  001664  0E80               	movlw	128
  5016  001666  162A               	andwf	___ftdiv@sign,f,c
  5017  001668  8E1D               	bsf	___ftdiv@f1+1,7,c
  5018  00166A  0EFF               	movlw	255
  5019  00166C  161C               	andwf	___ftdiv@f1,f,c
  5020  00166E  0EFF               	movlw	255
  5021  001670  161D               	andwf	___ftdiv@f1+1,f,c
  5022  001672  0E00               	movlw	0
  5023  001674  161E               	andwf	___ftdiv@f1+2,f,c
  5024  001676  8E20               	bsf	___ftdiv@f2+1,7,c
  5025  001678  0EFF               	movlw	255
  5026  00167A  161F               	andwf	___ftdiv@f2,f,c
  5027  00167C  0EFF               	movlw	255
  5028  00167E  1620               	andwf	___ftdiv@f2+1,f,c
  5029  001680  0E00               	movlw	0
  5030  001682  1621               	andwf	___ftdiv@f2+2,f,c
  5031  001684  0E18               	movlw	24
  5032  001686  6E25               	movwf	___ftdiv@cntr,c
  5033  001688  90D8               	bcf	status,0,c
  5034  00168A  3626               	rlcf	___ftdiv@f3,f,c
  5035  00168C  3627               	rlcf	___ftdiv@f3+1,f,c
  5036  00168E  3628               	rlcf	___ftdiv@f3+2,f,c
  5037  001690  501F               	movf	___ftdiv@f2,w,c
  5038  001692  5C1C               	subwf	___ftdiv@f1,w,c
  5039  001694  5020               	movf	___ftdiv@f2+1,w,c
  5040  001696  581D               	subwfb	___ftdiv@f1+1,w,c
  5041  001698  5021               	movf	___ftdiv@f2+2,w,c
  5042  00169A  581E               	subwfb	___ftdiv@f1+2,w,c
  5043  00169C  A0D8               	btfss	status,0,c
  5044  00169E  D007               	goto	l470
  5045  0016A0  501F               	movf	___ftdiv@f2,w,c
  5046  0016A2  5E1C               	subwf	___ftdiv@f1,f,c
  5047  0016A4  5020               	movf	___ftdiv@f2+1,w,c
  5048  0016A6  5A1D               	subwfb	___ftdiv@f1+1,f,c
  5049  0016A8  5021               	movf	___ftdiv@f2+2,w,c
  5050  0016AA  5A1E               	subwfb	___ftdiv@f1+2,f,c
  5051  0016AC  8026               	bsf	___ftdiv@f3,0,c
  5052  0016AE                     l470:
  5053  0016AE  90D8               	bcf	status,0,c
  5054  0016B0  361C               	rlcf	___ftdiv@f1,f,c
  5055  0016B2  361D               	rlcf	___ftdiv@f1+1,f,c
  5056  0016B4  361E               	rlcf	___ftdiv@f1+2,f,c
  5057  0016B6  2E25               	decfsz	___ftdiv@cntr,f,c
  5058  0016B8  D7E7               	goto	l469
  5059  0016BA  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  5060  0016BE  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5061  0016C2  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5062  0016C6  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  5063  0016CA  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5064  0016CE  EC69  F00D         	call	___ftpack	;wreg free
  5065  0016D2  C001  F01C         	movff	?___ftpack,?___ftdiv
  5066  0016D6  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  5067  0016DA  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  5068  0016DE  0012               	return	
  5069  0016E0                     __end_of___ftdiv:
  5070                           	opt stack 0
  5071                           tblptru	equ	0xFF8
  5072                           tblptrh	equ	0xFF7
  5073                           tblptrl	equ	0xFF6
  5074                           tablat	equ	0xFF5
  5075                           prodh	equ	0xFF4
  5076                           prodl	equ	0xFF3
  5077                           intcon	equ	0xFF2
  5078                           postinc0	equ	0xFEE
  5079                           wreg	equ	0xFE8
  5080                           plusw1	equ	0xFE3
  5081                           postinc2	equ	0xFDE
  5082                           postdec2	equ	0xFDD
  5083                           plusw2	equ	0xFDB
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function ___awtoft *****************
  5089 ;; Defined at:
  5090 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  c               2    8[COMRAM] int 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  sign            1   11[COMRAM] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  3    8[COMRAM] float 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5104 ;;      Params:         3       0       0       0       0       0       0       0       0
  5105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5107 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5108 ;;Total ram usage:        4 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    1
  5111 ;; This function calls:
  5112 ;;		___ftpack
  5113 ;; This function is called by:
  5114 ;;		_config_timer2
  5115 ;;		_config_ccp1
  5116 ;;		_config_ccp2
  5117 ;;		_exp
  5118 ;;		_log
  5119 ;;		_wait_in_ms
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text27
  5124  001F54                     __ptext27:
  5125                           	opt stack 0
  5126  001F54                     ___awtoft:
  5127                           	opt stack 28
  5128                           
  5129                           ;incstack = 0
  5130  001F54  0E00               	movlw	0
  5131  001F56  6E0C               	movwf	___awtoft@sign,c
  5132  001F58  AE0A               	btfss	___awtoft@c+1,7,c
  5133  001F5A  D006               	goto	l383
  5134  001F5C  6C09               	negf	___awtoft@c,c
  5135  001F5E  1E0A               	comf	___awtoft@c+1,f,c
  5136  001F60  B0D8               	btfsc	status,0,c
  5137  001F62  2A0A               	incf	___awtoft@c+1,f,c
  5138  001F64  0E01               	movlw	1
  5139  001F66  6E0C               	movwf	___awtoft@sign,c
  5140  001F68                     l383:
  5141  001F68  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5142  001F6C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5143  001F70  6A03               	clrf	___ftpack@arg+2,c
  5144  001F72  0E8E               	movlw	142
  5145  001F74  6E04               	movwf	___ftpack@exp,c
  5146  001F76  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5147  001F7A  EC69  F00D         	call	___ftpack	;wreg free
  5148  001F7E  C001  F009         	movff	?___ftpack,?___awtoft
  5149  001F82  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5150  001F86  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5151  001F8A  0012               	return	
  5152  001F8C                     __end_of___awtoft:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           wreg	equ	0xFE8
  5163                           plusw1	equ	0xFE3
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           plusw2	equ	0xFDB
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function ___lltoft *****************
  5172 ;; Defined at:
  5173 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  c               4    8[COMRAM] unsigned long 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  exp             1   16[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  3    8[COMRAM] float 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5187 ;;      Params:         4       0       0       0       0       0       0       0       0
  5188 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5189 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5190 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5191 ;;Total ram usage:        9 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    1
  5194 ;; This function calls:
  5195 ;;		___ftpack
  5196 ;; This function is called by:
  5197 ;;		_pow
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text28
  5202  001E6C                     __ptext28:
  5203                           	opt stack 0
  5204  001E6C                     ___lltoft:
  5205                           	opt stack 26
  5206                           
  5207                           ;incstack = 0
  5208  001E6C  0E8E               	movlw	142
  5209  001E6E  6E11               	movwf	___lltoft@exp,c
  5210  001E70  D006               	goto	l559
  5211  001E72  90D8               	bcf	status,0,c
  5212  001E74  320C               	rrcf	___lltoft@c+3,f,c
  5213  001E76  320B               	rrcf	___lltoft@c+2,f,c
  5214  001E78  320A               	rrcf	___lltoft@c+1,f,c
  5215  001E7A  3209               	rrcf	___lltoft@c,f,c
  5216  001E7C  2A11               	incf	___lltoft@exp,f,c
  5217  001E7E                     l559:
  5218  001E7E  0E00               	movlw	0
  5219  001E80  1409               	andwf	___lltoft@c,w,c
  5220  001E82  6E0D               	movwf	??___lltoft& (0+255),c
  5221  001E84  0E00               	movlw	0
  5222  001E86  140A               	andwf	___lltoft@c+1,w,c
  5223  001E88  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5224  001E8A  0E00               	movlw	0
  5225  001E8C  140B               	andwf	___lltoft@c+2,w,c
  5226  001E8E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5227  001E90  0EFF               	movlw	255
  5228  001E92  140C               	andwf	___lltoft@c+3,w,c
  5229  001E94  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5230  001E96  500D               	movf	??___lltoft,w,c
  5231  001E98  100E               	iorwf	??___lltoft+1,w,c
  5232  001E9A  100F               	iorwf	??___lltoft+2,w,c
  5233  001E9C  1010               	iorwf	??___lltoft+3,w,c
  5234  001E9E  A4D8               	btfss	status,2,c
  5235  001EA0  D7E8               	goto	l560
  5236  001EA2  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5237  001EA6  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5238  001EAA  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5239  001EAE  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5240  001EB2  0E00               	movlw	0
  5241  001EB4  6E05               	movwf	___ftpack@sign,c
  5242  001EB6  EC69  F00D         	call	___ftpack	;wreg free
  5243  001EBA  C001  F009         	movff	?___ftpack,?___lltoft
  5244  001EBE  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5245  001EC2  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5246  001EC6  0012               	return	
  5247  001EC8                     __end_of___lltoft:
  5248                           	opt stack 0
  5249                           tblptru	equ	0xFF8
  5250                           tblptrh	equ	0xFF7
  5251                           tblptrl	equ	0xFF6
  5252                           tablat	equ	0xFF5
  5253                           prodh	equ	0xFF4
  5254                           prodl	equ	0xFF3
  5255                           intcon	equ	0xFF2
  5256                           postinc0	equ	0xFEE
  5257                           wreg	equ	0xFE8
  5258                           plusw1	equ	0xFE3
  5259                           postinc2	equ	0xFDE
  5260                           postdec2	equ	0xFDD
  5261                           plusw2	equ	0xFDB
  5262                           fsr2h	equ	0xFDA
  5263                           fsr2l	equ	0xFD9
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function ___ftpack *****************
  5267 ;; Defined at:
  5268 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  arg             3    0[COMRAM] unsigned um
  5271 ;;  exp             1    3[COMRAM] unsigned char 
  5272 ;;  sign            1    4[COMRAM] unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  3    0[COMRAM] float 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5284 ;;      Params:         5       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5287 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        8 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		___altoft
  5294 ;;		___awtoft
  5295 ;;		___ftadd
  5296 ;;		___ftdiv
  5297 ;;		___ftmul
  5298 ;;		___lbtoft
  5299 ;;		___lltoft
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text29
  5304  001AD2                     __ptext29:
  5305                           	opt stack 0
  5306  001AD2                     ___ftpack:
  5307                           	opt stack 28
  5308                           
  5309                           ;incstack = 0
  5310  001AD2  5004               	movf	___ftpack@exp,w,c
  5311  001AD4  B4D8               	btfsc	status,2,c
  5312  001AD6  D005               	goto	u1360
  5313  001AD8  5001               	movf	___ftpack@arg,w,c
  5314  001ADA  1002               	iorwf	___ftpack@arg+1,w,c
  5315  001ADC  1003               	iorwf	___ftpack@arg+2,w,c
  5316  001ADE  A4D8               	btfss	status,2,c
  5317  001AE0  D00C               	goto	l402
  5318  001AE2                     u1360:
  5319  001AE2  0E00               	movlw	0
  5320  001AE4  6E01               	movwf	?___ftpack,c
  5321  001AE6  0E00               	movlw	0
  5322  001AE8  6E02               	movwf	?___ftpack+1,c
  5323  001AEA  0E00               	movlw	0
  5324  001AEC  6E03               	movwf	?___ftpack+2,c
  5325  001AEE  0012               	return	
  5326  001AF0  2A04               	incf	___ftpack@exp,f,c
  5327  001AF2  90D8               	bcf	status,0,c
  5328  001AF4  3203               	rrcf	___ftpack@arg+2,f,c
  5329  001AF6  3202               	rrcf	___ftpack@arg+1,f,c
  5330  001AF8  3201               	rrcf	___ftpack@arg,f,c
  5331  001AFA                     l402:
  5332  001AFA  0E00               	movlw	0
  5333  001AFC  1401               	andwf	___ftpack@arg,w,c
  5334  001AFE  6E06               	movwf	??___ftpack& (0+255),c
  5335  001B00  0E00               	movlw	0
  5336  001B02  1402               	andwf	___ftpack@arg+1,w,c
  5337  001B04  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5338  001B06  0EFE               	movlw	254
  5339  001B08  1403               	andwf	___ftpack@arg+2,w,c
  5340  001B0A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5341  001B0C  5006               	movf	??___ftpack,w,c
  5342  001B0E  1007               	iorwf	??___ftpack+1,w,c
  5343  001B10  1008               	iorwf	??___ftpack+2,w,c
  5344  001B12  B4D8               	btfsc	status,2,c
  5345  001B14  D00C               	goto	l405
  5346  001B16  D7EC               	goto	l403
  5347  001B18  2A04               	incf	___ftpack@exp,f,c
  5348  001B1A  0E01               	movlw	1
  5349  001B1C  2601               	addwf	___ftpack@arg,f,c
  5350  001B1E  0E00               	movlw	0
  5351  001B20  2202               	addwfc	___ftpack@arg+1,f,c
  5352  001B22  0E00               	movlw	0
  5353  001B24  2203               	addwfc	___ftpack@arg+2,f,c
  5354  001B26  90D8               	bcf	status,0,c
  5355  001B28  3203               	rrcf	___ftpack@arg+2,f,c
  5356  001B2A  3202               	rrcf	___ftpack@arg+1,f,c
  5357  001B2C  3201               	rrcf	___ftpack@arg,f,c
  5358  001B2E                     l405:
  5359  001B2E  0E00               	movlw	0
  5360  001B30  1401               	andwf	___ftpack@arg,w,c
  5361  001B32  6E06               	movwf	??___ftpack& (0+255),c
  5362  001B34  0E00               	movlw	0
  5363  001B36  1402               	andwf	___ftpack@arg+1,w,c
  5364  001B38  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5365  001B3A  0EFF               	movlw	255
  5366  001B3C  1403               	andwf	___ftpack@arg+2,w,c
  5367  001B3E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5368  001B40  5006               	movf	??___ftpack,w,c
  5369  001B42  1007               	iorwf	??___ftpack+1,w,c
  5370  001B44  1008               	iorwf	??___ftpack+2,w,c
  5371  001B46  B4D8               	btfsc	status,2,c
  5372  001B48  D006               	goto	l408
  5373  001B4A  D7E6               	goto	l406
  5374  001B4C  0604               	decf	___ftpack@exp,f,c
  5375  001B4E  90D8               	bcf	status,0,c
  5376  001B50  3601               	rlcf	___ftpack@arg,f,c
  5377  001B52  3602               	rlcf	___ftpack@arg+1,f,c
  5378  001B54  3603               	rlcf	___ftpack@arg+2,f,c
  5379  001B56                     l408:
  5380  001B56  BE02               	btfsc	___ftpack@arg+1,7,c
  5381  001B58  D003               	goto	u1400
  5382  001B5A  0E02               	movlw	2
  5383  001B5C  6004               	cpfslt	___ftpack@exp,c
  5384  001B5E  D7F6               	goto	l409
  5385  001B60                     u1400:
  5386  001B60  A004               	btfss	___ftpack@exp,0,c
  5387  001B62  9E02               	bcf	___ftpack@arg+1,7,c
  5388  001B64  90D8               	bcf	status,0,c
  5389  001B66  3204               	rrcf	___ftpack@exp,f,c
  5390  001B68  5004               	movf	___ftpack@exp,w,c
  5391  001B6A  1203               	iorwf	___ftpack@arg+2,f,c
  5392  001B6C  5005               	movf	___ftpack@sign,w,c
  5393  001B6E  A4D8               	btfss	status,2,c
  5394  001B70  8E03               	bsf	___ftpack@arg+2,7,c
  5395  001B72  C001  F001         	movff	___ftpack@arg,?___ftpack
  5396  001B76  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5397  001B7A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5398  001B7E  0012               	return	
  5399  001B80                     __end_of___ftpack:
  5400                           	opt stack 0
  5401                           tblptru	equ	0xFF8
  5402                           tblptrh	equ	0xFF7
  5403                           tblptrl	equ	0xFF6
  5404                           tablat	equ	0xFF5
  5405                           prodh	equ	0xFF4
  5406                           prodl	equ	0xFF3
  5407                           intcon	equ	0xFF2
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           plusw1	equ	0xFE3
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           plusw2	equ	0xFDB
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function ___awdiv *****************
  5419 ;; Defined at:
  5420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  dividend        2    0[COMRAM] int 
  5423 ;;  divisor         2    2[COMRAM] int 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  quotient        2    6[COMRAM] int 
  5426 ;;  sign            1    5[COMRAM] unsigned char 
  5427 ;;  counter         1    4[COMRAM] unsigned char 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2    0[COMRAM] int 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5437 ;;      Params:         4       0       0       0       0       0       0       0       0
  5438 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5440 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5441 ;;Total ram usage:        8 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		_config_ccp1
  5447 ;;		_config_ccp2
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text30
  5452  001CA0                     __ptext30:
  5453                           	opt stack 0
  5454  001CA0                     ___awdiv:
  5455                           	opt stack 28
  5456                           
  5457                           ;incstack = 0
  5458  001CA0  0E00               	movlw	0
  5459  001CA2  6E06               	movwf	___awdiv@sign,c
  5460  001CA4  AE04               	btfss	___awdiv@divisor+1,7,c
  5461  001CA6  D006               	goto	l355
  5462  001CA8  6C03               	negf	___awdiv@divisor,c
  5463  001CAA  1E04               	comf	___awdiv@divisor+1,f,c
  5464  001CAC  B0D8               	btfsc	status,0,c
  5465  001CAE  2A04               	incf	___awdiv@divisor+1,f,c
  5466  001CB0  0E01               	movlw	1
  5467  001CB2  6E06               	movwf	___awdiv@sign,c
  5468  001CB4                     l355:
  5469  001CB4  AE02               	btfss	___awdiv@dividend+1,7,c
  5470  001CB6  D006               	goto	l356
  5471  001CB8  6C01               	negf	___awdiv@dividend,c
  5472  001CBA  1E02               	comf	___awdiv@dividend+1,f,c
  5473  001CBC  B0D8               	btfsc	status,0,c
  5474  001CBE  2A02               	incf	___awdiv@dividend+1,f,c
  5475  001CC0  0E01               	movlw	1
  5476  001CC2  1A06               	xorwf	___awdiv@sign,f,c
  5477  001CC4                     l356:
  5478  001CC4  0E00               	movlw	0
  5479  001CC6  6E08               	movwf	___awdiv@quotient+1,c
  5480  001CC8  0E00               	movlw	0
  5481  001CCA  6E07               	movwf	___awdiv@quotient,c
  5482  001CCC  5003               	movf	___awdiv@divisor,w,c
  5483  001CCE  1004               	iorwf	___awdiv@divisor+1,w,c
  5484  001CD0  B4D8               	btfsc	status,2,c
  5485  001CD2  D01C               	goto	l363
  5486  001CD4  0E01               	movlw	1
  5487  001CD6  6E05               	movwf	___awdiv@counter,c
  5488  001CD8  D004               	goto	l358
  5489  001CDA  90D8               	bcf	status,0,c
  5490  001CDC  3603               	rlcf	___awdiv@divisor,f,c
  5491  001CDE  3604               	rlcf	___awdiv@divisor+1,f,c
  5492  001CE0  2A05               	incf	___awdiv@counter,f,c
  5493  001CE2                     l358:
  5494  001CE2  AE04               	btfss	___awdiv@divisor+1,7,c
  5495  001CE4  D7FA               	goto	l359
  5496  001CE6                     u2230:
  5497  001CE6  90D8               	bcf	status,0,c
  5498  001CE8  3607               	rlcf	___awdiv@quotient,f,c
  5499  001CEA  3608               	rlcf	___awdiv@quotient+1,f,c
  5500  001CEC  5003               	movf	___awdiv@divisor,w,c
  5501  001CEE  5C01               	subwf	___awdiv@dividend,w,c
  5502  001CF0  5004               	movf	___awdiv@divisor+1,w,c
  5503  001CF2  5802               	subwfb	___awdiv@dividend+1,w,c
  5504  001CF4  A0D8               	btfss	status,0,c
  5505  001CF6  D005               	goto	l362
  5506  001CF8  5003               	movf	___awdiv@divisor,w,c
  5507  001CFA  5E01               	subwf	___awdiv@dividend,f,c
  5508  001CFC  5004               	movf	___awdiv@divisor+1,w,c
  5509  001CFE  5A02               	subwfb	___awdiv@dividend+1,f,c
  5510  001D00  8007               	bsf	___awdiv@quotient,0,c
  5511  001D02                     l362:
  5512  001D02  90D8               	bcf	status,0,c
  5513  001D04  3204               	rrcf	___awdiv@divisor+1,f,c
  5514  001D06  3203               	rrcf	___awdiv@divisor,f,c
  5515  001D08  2E05               	decfsz	___awdiv@counter,f,c
  5516  001D0A  D7ED               	goto	u2230
  5517  001D0C                     l363:
  5518  001D0C  5006               	movf	___awdiv@sign,w,c
  5519  001D0E  B4D8               	btfsc	status,2,c
  5520  001D10  D004               	goto	l364
  5521  001D12  6C07               	negf	___awdiv@quotient,c
  5522  001D14  1E08               	comf	___awdiv@quotient+1,f,c
  5523  001D16  B0D8               	btfsc	status,0,c
  5524  001D18  2A08               	incf	___awdiv@quotient+1,f,c
  5525  001D1A                     l364:
  5526  001D1A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5527  001D1E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5528  001D22  0012               	return	
  5529  001D24                     __end_of___awdiv:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           prodh	equ	0xFF4
  5536                           prodl	equ	0xFF3
  5537                           intcon	equ	0xFF2
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           plusw1	equ	0xFE3
  5541                           postinc2	equ	0xFDE
  5542                           postdec2	equ	0xFDD
  5543                           plusw2	equ	0xFDB
  5544                           fsr2h	equ	0xFDA
  5545                           fsr2l	equ	0xFD9
  5546                           status	equ	0xFD8
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           prodh	equ	0xFF4
  5552                           prodl	equ	0xFF3
  5553                           intcon	equ	0xFF2
  5554                           postinc0	equ	0xFEE
  5555                           wreg	equ	0xFE8
  5556                           plusw1	equ	0xFE3
  5557                           postinc2	equ	0xFDE
  5558                           postdec2	equ	0xFDD
  5559                           plusw2	equ	0xFDB
  5560                           fsr2h	equ	0xFDA
  5561                           fsr2l	equ	0xFD9
  5562                           status	equ	0xFD8
  5563                           
  5564                           	psect	rparam
  5565  0000                     tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           postinc0	equ	0xFEE
  5573                           wreg	equ	0xFE8
  5574                           plusw1	equ	0xFE3
  5575                           postinc2	equ	0xFDE
  5576                           postdec2	equ	0xFDD
  5577                           plusw2	equ	0xFDB
  5578                           fsr2h	equ	0xFDA
  5579                           fsr2l	equ	0xFD9
  5580                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         65
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_carroGirar
    _config_timer2->___awtoft
    _coinfig_ccpcon->___fttol
    ___lbtoft->___ftpack
    _carroMatar->_config_ccp1
    _carroMatar->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    _carroMatar->_config_ccp1
    _carroMatar->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _config_ccp2->_pow
    _config_ccp1->_pow
    _pow->_exp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  824129
                       _carroAvanzar
               _carroAvanzarEspecial
                         _carroGirar
                         _carroMatar
                     _coinfig_ccpcon
                        _configBoard
                      _config_timer2
 ---------------------------------------------------------------------------------
 (1) _config_timer2                                        6     2      4    3956
                                             12 COMRAM     6     2      4
                           ___awtoft
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coinfig_ccpcon                                       9     3      6   17867
                                             69 COMRAM     9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _carroMatar                                           0     0      0  200560
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroGirar                                           1     1      0  200626
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzarEspecial                                 0     0      0  200560
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzar                                         0     0      0  200560
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _config_ccp2                                         59    57      2  100280
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _config_ccp1                                         59    57      2  100280
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   79872
                                              6 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   26079
                                             66 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   42552
                                             87 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     400
                                             66 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   10249
                                             79 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1088
                                             54 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2797
                                             69 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11303
                                             54 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5441
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5110
                                             54 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4765
                                             42 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3749
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3738
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _carroAvanzar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroAvanzarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroMatar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _coinfig_ccpcon
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lbtoft
       ___ftpack
   _configBoard
   _config_timer2
     ___awtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      92       5       91.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 01 19:46:15 2018

                 ___altoft@exp 004E                  ___altoft@sign 004F                             l50 19D8  
                           l52 19E8                             l45 19A6                             l54 19FA  
                           l46 19B6                             l56 1A0A                             l48 19C8  
                           l73 1ED8                             l75 1EEA                             l77 1EFA  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003                    __CFG_BORV$3 000000  
                 ___ftadd@exp1 0036                   ___ftadd@exp2 0035                   ___ftadd@sign 0034  
                          l402 1AFA                            l403 1AF0                            l171 0C5A  
                          l155 1DD4                            l180 0962                            l156 1DBE  
                          l405 1B2E                            l173 0D1C                            l181 091A  
                          l157 1DF8                            l406 1B18                            l510 14D8  
                          l502 143E                            l158 1DC4                            l511 14CC  
                          l183 0988                            l159 1DCE                            l408 1B56  
                          l272 1D52                            l504 14B4                            l168 0C34  
                          l409 1B4C                            l433 101E                            l273 1D46  
                          l513 14F4                            l505 14A4                            l169 0BEC  
                          l185 0A4A                            l362 1D02                            l442 10AE  
                          l363 1D0C                            l355 1CB4                            l364 1D1A  
                          l356 1CC4                            l460 1122                            l461 1152  
                          l437 1048                            l621 11C2                            l358 1CE2  
                          l470 16AE                            l622 11B2                            l359 1CDA  
                          l383 1F68                            l447 10A4                            l560 1E72  
                          l456 10E2                            l448 109A                            l624 11DA  
                          l457 10D8                            l481 152E                            l801 1BA8  
                          l625 1260                            l466 1622                            l474 1C40  
                          l810 1912                            l626 123E                            l459 1106  
                          l483 1556                            l475 1C70                            l627 12E6  
                          l468 164A                            l492 1FEC                            l484 1588  
                          l469 1688                            l485 1598                            l805 18A8  
                          l559 1E7E                            l487 15B0                            l831 187A  
                          l807 18EE                            l823 1310                            l488 15C0  
                          l832 17FE                            l809 191E                            l825 1332  
                          l498 1F2A                            l781 0DF8                            l783 0E30  
                          l792 171C                            l784 0E68                            l793 170E  
                          l785 0E98                            l786 0FBE                            l795 1736  
                          l787 0F94                            l796 17B0                            _PR2 000FCB  
                          _exp 0DE0                            _log 12F4                            _pow 1178  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                   ___ftdiv@cntr 0025  
                 ___ftdiv@sign 002A                   __CFG_WDT$OFF 000000                           l2414 0D04  
                         l2416 0D0C                           l2434 0DCA                           l2452 091A  
                         l1814 1C9C                           l2286 0F94                           l2462 0978  
                         l2480 0A3A                           l2388 0BEC                           l2398 0C4A  
                         l2478 0A32                           l2498 0AF8                           ?_exp 0058  
                         ?_log 0043                           ?_pow 0066                           u2100 0E72  
                         u1400 1B60                           u2230 1CE6                           u2310 0DCA  
                         u1360 1AE2                           u1520 103A                           u2321 08E6  
                         u2090 0E70                           u2330 0970                           u1451 0FDC  
                         u1620 10EA                           u2180 1228                           u1461 0FF0  
                         u2261 0BB8                           u1550 1078                           u2270 0C42  
                         u2350 0A32                           u1490 1010                           u1810 14DE  
                         u2290 0D04                           u2370 0AF8                           u1661 1516  
                         u1590 10B6                           u1751 1422                           u1840 1BD0  
                         u1681 153E                           u2385 1E08                           u1770 145C  
                         u2386 1E0A                           u1851 160A                           u1950 1728  
                         u1871 1632                           u1775 1454                           u1848 1BD2  
                         u1990 18C8                           _RCIF 007CF5                           u1998 18CA  
                 config_ccp1@a 0077                   config_ccp2@a 0077                   config_ccp1@i 009A  
                 config_ccp1@j 00AC                   config_ccp2@i 009A                   config_ccp2@j 00AC  
                 config_ccp1@n 00AA                   config_ccp2@n 00AA                   config_ccp1@w 00A6  
                 config_ccp1@x 00A4                   config_ccp1@y 00A8                   config_ccp1@z 009C  
                 config_ccp2@w 00A6                   config_ccp2@x 00A4                   config_ccp2@y 00A8  
                 config_ccp2@z 009C                           _pr2g 00EA                           _main 1956  
                 ___ftpack@arg 0001                   ___ftpack@exp 0004                           fsr2h 000FDA  
                         fsr2l 000FD9                           exp@x 0058                           log@x 0043  
                         pow@x 0066                           pow@y 0069                           prodh 000FF4  
                         prodl 000FF3           __end_of_carroAvanzar 2060                           start 0000  
                __CFG_MCLRE$ON 000000                   ___ftmul@cntr 001A                   ___param_bank 000000  
                 ___ftmul@sign 001B                   ___fttol@exp1 0045                          ??_exp 005B  
                        ??_log 0046                   ___fttol@lval 0041                          ??_pow 005B  
                __CFG_PLLDIV$2 000000                          ?_main 0001                __end_of___awdiv 1D24  
              __end_of___ftadd 1178                __end_of___ftdiv 16E0                __end_of___ftneg 1FFA  
              __end_of___ftmul 15FA                ___awdiv@divisor 0003                __end_of___ftsub 1F54  
              __end_of___fttol 1506                ___awdiv@counter 0005                          _TMR0L 000FD6  
                        _PORTA 000F80                          _TRISD 000F95                   ___lltoft@exp 0011  
               __CFG_FCMEN$OFF 000000                  ___awtoft@sign 000C                          _floor 16E0  
                        _ldexp 1890                          _frexp 1B80                          _errno 00ED  
                ___ftpack@sign 0005                          tablat 000FF5                          pow@yi 0073  
                        plusw1 000FE3                          plusw2 000FDB                          status 000FD8  
              ??_config_timer2 0011                    exp@exponent 0063                    ldexp@newexp 0046  
              __initialization 2060                    log@exponent 0046                   __end_of_main 1A1A  
                       ??_main 0060                  ___fttol@sign1 0040                  __activetblptr 000002  
                       _ADCON0 000FC2                         ?_floor 0050                         ?_ldexp 0043  
                       ?_frexp 0001               __end_of___altoft 1D9C                         _CCPR1L 000FBE  
                       _CCPR2L 000FBB                         _T08BIT 007EAE               ___awdiv@dividend 0001  
             __end_of___awtoft 1F8C               __end_of___ftpack 1B80               __end_of___lbtoft 1FD6  
 __end_of_carroAvanzarEspecial 203E               __end_of___lltoft 1EC8               ??_coinfig_ccpcon 004C  
                       _TMR0IF 007F92                         _TMR0ON 007EAF           __size_of_configBoard 0060  
           config_timer2@onoff 000D             config_timer2@presc 000F                         ___ftge 1C10  
         __size_of_config_ccp1 02D2           __size_of_config_ccp2 02D2                         ___wmul 1F8C  
                    ??___awdiv 0005                      ??___ftadd 0031                      ??___ftdiv 0022  
                    ??___ftneg 0004                      ??___ftmul 0013                      ??___ftsub 003D  
                    ??___fttol 003B                         clear_0 2066               ___awdiv@quotient 0007  
                       _prescg 00EF                         floor@i 0053                         floor@x 0050  
        ___ftmul@f3_as_product 0017                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8          __size_of_carroAvanzar 0022  
             __end_ofexp@coeff 081F               __end_oflog@coeff 083A                     __accesstop 0060  
      __end_of__initialization 206C                     ___altoft@c 0046                     ___ftadd@f1 002B  
                   ___ftadd@f2 002E                     ___ftge@ff1 0001                     ___ftge@ff2 0004  
                 eval_poly@res 0040                  ___rparam_used 000001                     ___ftdiv@f1 001C  
                   ___ftdiv@f2 001F                     ___ftdiv@f3 0026                     ___ftneg@f1 0001  
                   ___awtoft@c 0009                     ___lbtoft@c 000C                     ___ftmul@f1 000D  
                   ___ftmul@f2 0010                     ___ftsub@f1 0037                     ___ftsub@f2 003A  
                   ___fttol@f1 0037                 __pcstackCOMRAM 0001                     ___lltoft@c 0009  
                __end_of_floor 17BE                  __end_of_ldexp 1956                  __end_of_frexp 1C10  
                 _carroAvanzar 203E                        ??_floor 0053                        ??_ldexp 0048  
                      ??_frexp 0006             coinfig_ccpcon@freq 0049             coinfig_ccpcon@fosc 0046  
             _config_ccp1$1542 0095               _config_ccp1$1543 009E               _config_ccp1$1544 00A1  
             _config_ccp2$1545 0095               _config_ccp2$1546 009E               _config_ccp2$1547 00A1  
                   __pbssBANK0 00AE             __size_of_eval_poly 00D2                     _carroGirar 1EC8  
                   _carroMatar 1FFA                        ?___ftge 0001                        ?___wmul 0001  
                    ?___altoft 0046           _carroAvanzarEspecial 201C                      ?___awtoft 0009  
                    ?___ftpack 0001                      ?___lbtoft 0009                      ?___lltoft 0009  
                      __Hparam 0000                        __Lparam 0000                __size_of___ftge 0090  
                      ___awdiv 1CA0                        ___ftadd 0FCC                        ___ftdiv 15FA  
                      ___ftneg 1FD6                __size_of___wmul 0026                        ___ftmul 1506  
                      ___ftsub 1F14                        ___fttol 1412                   __psmallconst 0800  
        ?_carroAvanzarEspecial 0001                     ??___altoft 004A                        __pcinit 2060  
                   ??___awtoft 000C                     ??___ftpack 0006                     ??___lbtoft 000C  
            __end_of_eval_poly 1890                        __ramtop 0800                     ??___lltoft 000D  
                      __ptext0 1956                        __ptext1 1D9C                        __ptext2 1E0C  
                      __ptext3 1A1A                        __ptext4 1FB2                        __ptext5 1FFA  
                      __ptext6 1EC8                        __ptext7 201C                        __ptext8 203E  
                      __ptext9 083C                      _T0CONbits 000FD5                      _T2CONbits 000FCA  
                 __size_of_exp 01EC                   __size_of_log 011E                   __size_of_pow 017C  
         end_of_initialization 206C                        exp@sign 0065                  __Lmediumconst 0000  
                  ?_carroGirar 0001                    ?_carroMatar 0001          __end_of_config_timer2 1E0C  
                      pow@sign 0072                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTBbits 000F81                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISEbits 000F96  
                  _CCP1CONbits 000FBD                    ___ftdiv@exp 0029                  ??_configBoard 0001  
                  _CCP2CONbits 000FBA                  ??_config_ccp1 005D                  ??_config_ccp2 005D  
                  ___ftmul@exp 0016         ??_carroAvanzarEspecial 005F                 __end_of___ftge 1CA0  
               __end_of___wmul 1FB2                     floor@expon 0056            __size_of_carroGirar 004C  
          __size_of_carroMatar 0022            start_initialization 2060                     eval_poly@d 003A  
                   eval_poly@n 003C                     eval_poly@x 0037                     ldexp@value 0043  
                  __end_of_exp 0FCC                    __end_of_log 1412                    __end_of_pow 12F4  
                   frexp@value 0001                       ??___ftge 0007        __size_of_coinfig_ccpcon 00B8  
                     ??___wmul 0005            __end_of_configBoard 1E6C            __end_of_config_ccp1 0DE0  
          __end_of_config_ccp2 0B0E              __size_of___altoft 0078              __size_of___awtoft 0038  
            __size_of___ftpack 00AE              __size_of___lbtoft 0024              __size_of___lltoft 005C  
                __pcstackBANK0 0060            _coinfig_ccpcon$1541 004C              config_ccp1@valreg 0098  
                    __pnvBANK0 00EF              config_ccp2@valreg 0098                       ?___awdiv 0001  
                     ?___ftadd 002B                       ?___ftdiv 001C                       ?___ftneg 0001  
                     ?___ftmul 000D                       ?___ftsub 0037                       ?___fttol 0037  
                  __smallconst 0800                      _eval_poly 17BE                 __size_of_floor 00DE  
               __size_of_ldexp 00C6                 __size_of_frexp 0090                 ___wmul@product 0005  
                     _LATAbits 000F89                       _LATEbits 000F8D                   ??_carroGirar 005F  
                 ??_carroMatar 005F                    _configBoard 1E0C                       _PIE1bits 000F9D  
                  _config_ccp1 0B0E                    _config_ccp2 083C                       _PIR1bits 000F9E  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0001                     ?_eval_poly 0037             __end_of_carroGirar 1F14  
           __end_of_carroMatar 201C                      frexp@eptr 0004                       __Hrparam 0000  
                     __Lrparam 0000                 _coinfig_ccpcon 1A1A               config_ccp1@F3967 00CC  
             config_ccp2@F3978 00AE            carroGirar@direccion 005F               __size_of___awdiv 0084  
             __size_of___ftadd 01AC               __size_of___ftdiv 00E6               __size_of___ftneg 0024  
                     ___altoft 1D24               __size_of___ftmul 00F4               __size_of___ftsub 0040  
             __size_of___fttol 00F4                       ___awtoft 1F54                       ___ftpack 1AD2  
                     ___lbtoft 1FB2                       ___lltoft 1E6C                       _exp$1550 0060  
             config_ccp1@duty1 005B                  ?_carroAvanzar 0001               config_ccp2@duty2 005B  
       __size_of_config_timer2 0070                       __ptext10 0B0E                       __ptext11 1178  
                     __ptext20 17BE                       __ptext12 12F4                       __ptext21 1F8C  
                     __ptext13 0DE0                       __ptext30 1CA0                       __ptext22 1506  
                     __ptext14 1890                       __ptext23 1F14                       __ptext15 16E0  
                     __ptext24 0FCC                       __ptext16 1B80                       __ptext25 1FD6  
                     __ptext17 1412                       __ptext26 15FA                       __ptext18 1C10  
                     __ptext27 1F54                       __ptext19 1D24                       __ptext28 1E6C  
                     __ptext29 1AD2                       _pow$1548 006C                       _pow$1549 006F  
                __size_of_main 00C4         __end_of_coinfig_ccpcon 1AD2  __size_of_carroAvanzarEspecial 0022  
        __CFG_CPUDIV$OSC1_PLL2 000000                       exp@coeff 0801                 ??_carroAvanzar 005F  
                     log@coeff 081F                     _INTCONbits 000FF2                    ??_eval_poly 003E  
              ?_coinfig_ccpcon 0046                  _config_timer2 1D9C             __CFG_FOSC$HSPLL_HS 000000  
                 ?_configBoard 0001                 ?_config_timer2 000D                   ?_config_ccp1 005B  
                 ?_config_ccp2 005B  
