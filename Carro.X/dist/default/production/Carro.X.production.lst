

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 11 17:35:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	opt stack 0
    83  000800  00                 	db	0
    84  000801                     exp@coeff:
    85                           	opt stack 0
    86  000801  00                 	db	0
    87  000802  80                 	db	128
    88  000803  3F                 	db	63
    89  000804  72                 	db	114
    90  000805  31                 	db	49
    91  000806  3F                 	db	63
    92  000807  FE                 	db	254
    93  000808  75                 	db	117
    94  000809  3E                 	db	62
    95  00080A  58                 	db	88
    96  00080B  63                 	db	99
    97  00080C  3D                 	db	61
    98  00080D  95                 	db	149
    99  00080E  1D                 	db	29
   100  00080F  3C                 	db	60
   101  000810  C5                 	db	197
   102  000811  AE                 	db	174
   103  000812  3A                 	db	58
   104  000813  79                 	db	121
   105  000814  21                 	db	33
   106  000815  39                 	db	57
   107  000816  94                 	db	148
   108  000817  80                 	db	128
   109  000818  37                 	db	55
   110  000819  93                 	db	147
   111  00081A  A7                 	db	167
   112  00081B  35                 	db	53
   113  00081C  56                 	db	86
   114  00081D  15                 	db	21
   115  00081E  34                 	db	52
   116  00081F                     __end_ofexp@coeff:
   117                           	opt stack 0
   118  00081F                     log@coeff:
   119                           	opt stack 0
   120  00081F  00                 	db	0
   121  000820  00                 	db	0
   122  000821  00                 	db	0
   123  000822  00                 	db	0
   124  000823  80                 	db	128
   125  000824  3F                 	db	63
   126  000825  F0                 	db	240
   127  000826  FF                 	db	255
   128  000827  BE                 	db	190
   129  000828  E2                 	db	226
   130  000829  A9                 	db	169
   131  00082A  3E                 	db	62
   132  00082B  83                 	db	131
   133  00082C  76                 	db	118
   134  00082D  BE                 	db	190
   135  00082E  AE                 	db	174
   136  00082F  2B                 	db	43
   137  000830  3E                 	db	62
   138  000831  3C                 	db	60
   139  000832  C3                 	db	195
   140  000833  BD                 	db	189
   141  000834  D2                 	db	210
   142  000835  13                 	db	19
   143  000836  3D                 	db	61
   144  000837  78                 	db	120
   145  000838  D3                 	db	211
   146  000839  BB                 	db	187
   147  00083A                     __end_oflog@coeff:
   148                           	opt stack 0
   149  00083A  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           	psect	nvBANK0
   152  0000EF                     __pnvBANK0:
   153                           	opt stack 0
   154  0000EF                     _prescg:
   155                           	opt stack 0
   156  0000EF                     	ds	3
   157  0000                     _CCPR2L	set	4027
   158  0000                     _CCPR1L	set	4030
   159  0000                     _CCP2CONbits	set	4026
   160  0000                     _CCP1CONbits	set	4029
   161  0000                     _PR2	set	4043
   162  0000                     _PORTA	set	3968
   163  0000                     _TRISD	set	3989
   164  0000                     _PIR1bits	set	3998
   165  0000                     _PIE1bits	set	3997
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _ADCON0	set	4034
   169  0000                     _T0CONbits	set	4053
   170  0000                     _INTCONbits	set	4082
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATEbits	set	3981
   173  0000                     _PORTBbits	set	3969
   174  0000                     _T2CONbits	set	4042
   175  0000                     _TRISCbits	set	3988
   176  0000                     _TRISBbits	set	3987
   177  0000                     _TRISEbits	set	3990
   178  0000                     _TRISAbits	set	3986
   179  0000                     _ADCON1bits	set	4033
   180  0000                     _TMR0L	set	4054
   181  0000                     _TMR0IF	set	32658
   182  0000                     _TMR0ON	set	32431
   183  0000                     _RCIF	set	31989
   184  0000                     _T08BIT	set	32430
   185                           
   186                           ; #config settings
   187  0000                     
   188                           	psect	cinit
   189  002150                     __pcinit:
   190                           	opt stack 0
   191  002150                     start_initialization:
   192                           	opt stack 0
   193  002150                     __initialization:
   194                           	opt stack 0
   195                           
   196                           ; Clear objects allocated to BANK0 (65 bytes)
   197  002150  EE00  F0AE         	lfsr	0,__pbssBANK0
   198  002154  0E41               	movlw	65
   199  002156                     clear_0:
   200  002156  6AEE               	clrf	postinc0,c
   201  002158  06E8               	decf	wreg,f,c
   202  00215A  E1FD               	bnz	clear_0
   203  00215C                     end_of_initialization:
   204                           	opt stack 0
   205  00215C                     __end_of__initialization:
   206                           	opt stack 0
   207  00215C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  00215E  6EF8               	movwf	tblptru,c
   209  002160  0100               	movlb	0
   210  002162  EFBC  F008         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssBANK0
   216  0000AE                     __pbssBANK0:
   217                           	opt stack 0
   218  0000AE                     config_ccp2@F3978:
   219                           	opt stack 0
   220  0000AE                     	ds	30
   221  0000CC                     config_ccp1@F3967:
   222                           	opt stack 0
   223  0000CC                     	ds	30
   224  0000EA                     _pr2g:
   225                           	opt stack 0
   226  0000EA                     	ds	3
   227  0000ED                     _errno:
   228                           	opt stack 0
   229  0000ED                     	ds	2
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK0
   235  000060                     __pcstackBANK0:
   236                           	opt stack 0
   237  000060                     _exp$1556:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x0
   241  000060                     	ds	3
   242  000063                     exp@exponent:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x3
   246  000063                     	ds	2
   247  000065                     exp@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x5
   251  000065                     	ds	1
   252  000066                     ?_pow:
   253                           	opt stack 0
   254  000066                     pow@x:
   255                           	opt stack 0
   256                           
   257                           ; 3 bytes @ 0x6
   258  000066                     	ds	3
   259  000069                     pow@y:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x9
   263  000069                     	ds	3
   264  00006C                     _pow$1554:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xC
   268  00006C                     	ds	3
   269  00006F                     _pow$1555:
   270                           	opt stack 0
   271                           
   272                           ; 3 bytes @ 0xF
   273  00006F                     	ds	3
   274  000072                     pow@sign:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x12
   278  000072                     	ds	1
   279  000073                     pow@yi:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x13
   283  000073                     	ds	4
   284  000077                     config_ccp1@a:
   285                           	opt stack 0
   286  000077                     config_ccp2@a:
   287                           	opt stack 0
   288                           
   289                           ; 30 bytes @ 0x17
   290  000077                     	ds	30
   291  000095                     _config_ccp1$1548:
   292                           	opt stack 0
   293  000095                     _config_ccp2$1551:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x35
   297  000095                     	ds	3
   298  000098                     config_ccp1@valreg:
   299                           	opt stack 0
   300  000098                     config_ccp2@valreg:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x38
   304  000098                     	ds	2
   305  00009A                     config_ccp1@i:
   306                           	opt stack 0
   307  00009A                     config_ccp2@i:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x3A
   311  00009A                     	ds	2
   312  00009C                     config_ccp1@z:
   313                           	opt stack 0
   314  00009C                     config_ccp2@z:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x3C
   318  00009C                     	ds	2
   319  00009E                     _config_ccp1$1549:
   320                           	opt stack 0
   321  00009E                     _config_ccp2$1552:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x3E
   325  00009E                     	ds	3
   326  0000A1                     _config_ccp1$1550:
   327                           	opt stack 0
   328  0000A1                     _config_ccp2$1553:
   329                           	opt stack 0
   330                           
   331                           ; 3 bytes @ 0x41
   332  0000A1                     	ds	3
   333  0000A4                     config_ccp1@x:
   334                           	opt stack 0
   335  0000A4                     config_ccp2@x:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x44
   339  0000A4                     	ds	2
   340  0000A6                     config_ccp1@w:
   341                           	opt stack 0
   342  0000A6                     config_ccp2@w:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x46
   346  0000A6                     	ds	2
   347  0000A8                     config_ccp1@y:
   348                           	opt stack 0
   349  0000A8                     config_ccp2@y:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x48
   353  0000A8                     	ds	2
   354  0000AA                     config_ccp1@n:
   355                           	opt stack 0
   356  0000AA                     config_ccp2@n:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4A
   360  0000AA                     	ds	2
   361  0000AC                     config_ccp1@j:
   362                           	opt stack 0
   363  0000AC                     config_ccp2@j:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x4C
   367  0000AC                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	cstackCOMRAM
   373  000001                     __pcstackCOMRAM:
   374                           	opt stack 0
   375  000001                     ?___wmul:
   376                           	opt stack 0
   377  000001                     ?___awdiv:
   378                           	opt stack 0
   379  000001                     ?___ftpack:
   380                           	opt stack 0
   381  000001                     ?_frexp:
   382                           	opt stack 0
   383  000001                     ?___ftneg:
   384                           	opt stack 0
   385  000001                     ___wmul@multiplier:
   386                           	opt stack 0
   387  000001                     ___awdiv@dividend:
   388                           	opt stack 0
   389  000001                     ___ftpack@arg:
   390                           	opt stack 0
   391  000001                     ___ftge@ff1:
   392                           	opt stack 0
   393  000001                     ___ftneg@f1:
   394                           	opt stack 0
   395  000001                     frexp@value:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x0
   399  000001                     	ds	2
   400  000003                     ___wmul@multiplicand:
   401                           	opt stack 0
   402  000003                     ___awdiv@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406  000003                     	ds	1
   407  000004                     ___ftpack@exp:
   408                           	opt stack 0
   409  000004                     frexp@eptr:
   410                           	opt stack 0
   411  000004                     ___ftge@ff2:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x3
   415  000004                     	ds	1
   416  000005                     ___awdiv@counter:
   417                           	opt stack 0
   418  000005                     ___ftpack@sign:
   419                           	opt stack 0
   420  000005                     ___wmul@product:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     ??___ftpack:
   426  000006                     ??_frexp:
   427  000006                     ___awdiv@sign:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ??___ftge:
   433  000007                     ___awdiv@quotient:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x6
   437  000007                     	ds	2
   438  000009                     ?___awtoft:
   439                           	opt stack 0
   440  000009                     ?___lbtoft:
   441                           	opt stack 0
   442  000009                     ?___lltoft:
   443                           	opt stack 0
   444  000009                     ___awtoft@c:
   445                           	opt stack 0
   446  000009                     ___lltoft@c:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0x8
   450  000009                     	ds	3
   451  00000C                     ___awtoft@sign:
   452                           	opt stack 0
   453  00000C                     ___lbtoft@c:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xB
   457  00000C                     	ds	1
   458  00000D                     ??___lltoft:
   459  00000D                     ?___ftmul:
   460                           	opt stack 0
   461  00000D                     config_timer2@onoff:
   462                           	opt stack 0
   463  00000D                     ___ftmul@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0xC
   467  00000D                     	ds	2
   468  00000F                     config_timer2@presc:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0xE
   472  00000F                     	ds	1
   473  000010                     ___ftmul@f2:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     ??_config_timer2:
   479  000011                     ___lltoft@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     ??___ftmul:
   485                           
   486                           ; 1 bytes @ 0x12
   487  000013                     	ds	3
   488  000016                     ___ftmul@exp:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x15
   492  000016                     	ds	1
   493  000017                     ___ftmul@f3_as_product:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x16
   497  000017                     	ds	3
   498  00001A                     ___ftmul@cntr:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x19
   502  00001A                     	ds	1
   503  00001B                     ___ftmul@sign:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x1A
   507  00001B                     	ds	1
   508  00001C                     ?___ftdiv:
   509                           	opt stack 0
   510  00001C                     ___ftdiv@f1:
   511                           	opt stack 0
   512                           
   513                           ; 3 bytes @ 0x1B
   514  00001C                     	ds	3
   515  00001F                     ___ftdiv@f2:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x1E
   519  00001F                     	ds	3
   520  000022                     ??___ftdiv:
   521                           
   522                           ; 1 bytes @ 0x21
   523  000022                     	ds	3
   524  000025                     ___ftdiv@cntr:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x24
   528  000025                     	ds	1
   529  000026                     ___ftdiv@f3:
   530                           	opt stack 0
   531                           
   532                           ; 3 bytes @ 0x25
   533  000026                     	ds	3
   534  000029                     ___ftdiv@exp:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x28
   538  000029                     	ds	1
   539  00002A                     ___ftdiv@sign:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x29
   543  00002A                     	ds	1
   544  00002B                     ?___ftadd:
   545                           	opt stack 0
   546  00002B                     ___ftadd@f1:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x2A
   550  00002B                     	ds	3
   551  00002E                     ___ftadd@f2:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x2D
   555  00002E                     	ds	3
   556  000031                     ??___ftadd:
   557                           
   558                           ; 1 bytes @ 0x30
   559  000031                     	ds	3
   560  000034                     ___ftadd@sign:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x33
   564  000034                     	ds	1
   565  000035                     ___ftadd@exp2:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x34
   569  000035                     	ds	1
   570  000036                     ___ftadd@exp1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x35
   574  000036                     	ds	1
   575  000037                     ?___ftsub:
   576                           	opt stack 0
   577  000037                     ?_eval_poly:
   578                           	opt stack 0
   579  000037                     ?___fttol:
   580                           	opt stack 0
   581  000037                     ___ftsub@f1:
   582                           	opt stack 0
   583  000037                     ___fttol@f1:
   584                           	opt stack 0
   585  000037                     eval_poly@x:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x36
   589  000037                     	ds	3
   590  00003A                     eval_poly@d:
   591                           	opt stack 0
   592  00003A                     ___ftsub@f2:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x39
   596  00003A                     	ds	1
   597  00003B                     ??___fttol:
   598                           
   599                           ; 1 bytes @ 0x3A
   600  00003B                     	ds	1
   601  00003C                     eval_poly@n:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x3B
   605  00003C                     	ds	1
   606  00003D                     
   607                           ; 1 bytes @ 0x3C
   608  00003D                     	ds	1
   609  00003E                     ??_eval_poly:
   610                           
   611                           ; 1 bytes @ 0x3D
   612  00003E                     	ds	2
   613  000040                     ___fttol@sign1:
   614                           	opt stack 0
   615  000040                     eval_poly@res:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x3F
   619  000040                     	ds	1
   620  000041                     ___fttol@lval:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x40
   624  000041                     	ds	2
   625  000043                     ?_log:
   626                           	opt stack 0
   627  000043                     ?_ldexp:
   628                           	opt stack 0
   629  000043                     ldexp@value:
   630                           	opt stack 0
   631  000043                     log@x:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x42
   635  000043                     	ds	2
   636  000045                     ___fttol@exp1:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x44
   640  000045                     	ds	1
   641  000046                     ?___altoft:
   642                           	opt stack 0
   643  000046                     ldexp@newexp:
   644                           	opt stack 0
   645  000046                     log@exponent:
   646                           	opt stack 0
   647  000046                     coinfig_ccpcon@fosc:
   648                           	opt stack 0
   649  000046                     ___altoft@c:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x45
   653  000046                     	ds	2
   654  000048                     ??_ldexp:
   655                           
   656                           ; 1 bytes @ 0x47
   657  000048                     	ds	1
   658  000049                     coinfig_ccpcon@freq:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x48
   662  000049                     	ds	1
   663  00004A                     ??___altoft:
   664                           
   665                           ; 1 bytes @ 0x49
   666  00004A                     	ds	2
   667  00004C                     _coinfig_ccpcon$1547:
   668                           	opt stack 0
   669                           
   670                           ; 3 bytes @ 0x4B
   671  00004C                     	ds	2
   672  00004E                     ___altoft@exp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x4D
   676  00004E                     	ds	1
   677  00004F                     ___altoft@sign:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x4E
   681  00004F                     	ds	1
   682  000050                     ?_floor:
   683                           	opt stack 0
   684  000050                     floor@x:
   685                           	opt stack 0
   686                           
   687                           ; 3 bytes @ 0x4F
   688  000050                     	ds	3
   689  000053                     floor@i:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x52
   693  000053                     	ds	3
   694  000056                     floor@expon:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x55
   698  000056                     	ds	2
   699  000058                     ?_exp:
   700                           	opt stack 0
   701  000058                     exp@x:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x57
   705  000058                     	ds	3
   706  00005B                     config_ccp1@duty1:
   707                           	opt stack 0
   708  00005B                     config_ccp2@duty2:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x5A
   712  00005B                     	ds	2
   713  00005D                     ??_config_ccp1:
   714  00005D                     ??_config_ccp2:
   715                           
   716                           ; 1 bytes @ 0x5C
   717  00005D                     	ds	2
   718  00005F                     carroGirarEspecial@direccion2:
   719                           	opt stack 0
   720  00005F                     carroGirar@direccion:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x5E
   724  00005F                     	ds	1
   725  000060                     tblptru	equ	0xFF8
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           
   729                           ; 1 bytes @ 0x5F
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 247 in file "carroMain.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels required when called:    7
   755 ;; This function calls:
   756 ;;		_carroAvanzar
   757 ;;		_carroAvanzarEspecial
   758 ;;		_carroGirar
   759 ;;		_carroGirarEspecial
   760 ;;		_coinfig_ccpcon
   761 ;;		_configBoard
   762 ;;		_config_timer2
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text0
   769  001178                     __ptext0:
   770                           	opt stack 0
   771  001178                     _main:
   772                           	opt stack 24
   773                           
   774                           ;carroMain.c: 249: configBoard();
   775                           
   776                           ;incstack = 0
   777  001178  EC72  F00F         	call	_configBoard	;wreg free
   778                           
   779                           ;carroMain.c: 250: ADCON1bits.PCFG = 0b1111;
   780  00117C  80C1               	bsf	4033,0,c	;volatile
   781  00117E  82C1               	bsf	4033,1,c	;volatile
   782  001180  84C1               	bsf	4033,2,c	;volatile
   783  001182  86C1               	bsf	4033,3,c	;volatile
   784                           
   785                           ;carroMain.c: 252: TRISAbits.RA0=0;
   786  001184  9092               	bcf	3986,0,c	;volatile
   787                           
   788                           ;carroMain.c: 253: TRISAbits.RA1=0;
   789  001186  9292               	bcf	3986,1,c	;volatile
   790                           
   791                           ;carroMain.c: 254: TRISEbits.RE0=0;
   792  001188  9096               	bcf	3990,0,c	;volatile
   793                           
   794                           ;carroMain.c: 255: TRISEbits.RE1=0;
   795  00118A  9296               	bcf	3990,1,c	;volatile
   796                           
   797                           ;carroMain.c: 257: TRISBbits.RB5=1;
   798  00118C  8A93               	bsf	3987,5,c	;volatile
   799                           
   800                           ;carroMain.c: 258: TRISBbits.RB4=1;
   801  00118E  8893               	bsf	3987,4,c	;volatile
   802                           
   803                           ;carroMain.c: 259: TRISBbits.RB3=1;
   804  001190  8693               	bsf	3987,3,c	;volatile
   805                           
   806                           ;carroMain.c: 260: TRISBbits.RB2=1;
   807  001192  8493               	bsf	3987,2,c	;volatile
   808                           
   809                           ;carroMain.c: 261: TRISBbits.RB1=1;
   810  001194  8293               	bsf	3987,1,c	;volatile
   811                           
   812                           ;carroMain.c: 265: TRISCbits.RC2 = 0;
   813  001196  9494               	bcf	3988,2,c	;volatile
   814                           
   815                           ;carroMain.c: 266: TRISCbits.RC1 = 0;
   816  001198  9294               	bcf	3988,1,c	;volatile
   817                           
   818                           ;carroMain.c: 268: config_timer2(0,16);
   819  00119A  0E00               	movlw	0
   820  00119C  6E0E               	movwf	config_timer2@onoff+1,c
   821  00119E  0E00               	movlw	0
   822  0011A0  6E0D               	movwf	config_timer2@onoff,c
   823  0011A2  0E00               	movlw	0
   824  0011A4  6E10               	movwf	config_timer2@presc+1,c
   825  0011A6  0E10               	movlw	16
   826  0011A8  6E0F               	movwf	config_timer2@presc,c
   827  0011AA  EC3A  F00F         	call	_config_timer2	;wreg free
   828                           
   829                           ;carroMain.c: 269: coinfig_ccpcon(48000000,15000);
   830  0011AE  0E1B               	movlw	27
   831  0011B0  6E46               	movwf	coinfig_ccpcon@fosc,c
   832  0011B2  0E37               	movlw	55
   833  0011B4  6E47               	movwf	coinfig_ccpcon@fosc+1,c
   834  0011B6  0E4C               	movlw	76
   835  0011B8  6E48               	movwf	coinfig_ccpcon@fosc+2,c
   836  0011BA  0E60               	movlw	96
   837  0011BC  6E49               	movwf	coinfig_ccpcon@freq,c
   838  0011BE  0E6A               	movlw	106
   839  0011C0  6E4A               	movwf	coinfig_ccpcon@freq+1,c
   840  0011C2  0E46               	movlw	70
   841  0011C4  6E4B               	movwf	coinfig_ccpcon@freq+2,c
   842  0011C6  EC79  F00D         	call	_coinfig_ccpcon	;wreg free
   843                           
   844                           ;carroMain.c: 273: T2CONbits.TMR2ON = 1;
   845  0011CA  84CA               	bsf	4042,2,c	;volatile
   846  0011CC                     
   847                           ;carroMain.c: 279: if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbits.RB
      +                          3==0&&PORTBbits.RB1==0){
   848  0011CC  A481               	btfss	3969,2,c	;volatile
   849  0011CE  BA81               	btfsc	3969,5,c	;volatile
   850  0011D0  D008               	goto	l46
   851  0011D2  A881               	btfss	3969,4,c	;volatile
   852  0011D4  B681               	btfsc	3969,3,c	;volatile
   853  0011D6  D005               	goto	l46
   854  0011D8  B281               	btfsc	3969,1,c	;volatile
   855  0011DA  D003               	goto	l46
   856                           
   857                           ;carroMain.c: 280: carroAvanzarEspecial();
   858  0011DC  EC86  F010         	call	_carroAvanzarEspecial	;wreg free
   859                           
   860                           ;carroMain.c: 281: }
   861  0011E0  D7F5               	goto	l45
   862  0011E2                     l46:
   863                           
   864                           ;carroMain.c: 282: else if (PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBb
      +                          its.RB3==0&&PORTBbits.RB1==1){
   865  0011E2  A481               	btfss	3969,2,c	;volatile
   866  0011E4  BA81               	btfsc	3969,5,c	;volatile
   867  0011E6  D009               	goto	l48
   868  0011E8  A881               	btfss	3969,4,c	;volatile
   869  0011EA  B681               	btfsc	3969,3,c	;volatile
   870  0011EC  D006               	goto	l48
   871  0011EE  A281               	btfss	3969,1,c	;volatile
   872  0011F0  D004               	goto	l48
   873                           
   874                           ;carroMain.c: 283: carroGirar(1);
   875  0011F2  0E01               	movlw	1
   876  0011F4  ECD0  F00F         	call	_carroGirar
   877                           
   878                           ;carroMain.c: 284: }
   879  0011F8  D7E9               	goto	l45
   880  0011FA                     l48:
   881                           
   882                           ;carroMain.c: 285: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   883  0011FA  A481               	btfss	3969,2,c	;volatile
   884  0011FC  BA81               	btfsc	3969,5,c	;volatile
   885  0011FE  D009               	goto	l50
   886  001200  A881               	btfss	3969,4,c	;volatile
   887  001202  A681               	btfss	3969,3,c	;volatile
   888  001204  D006               	goto	l50
   889  001206  B281               	btfsc	3969,1,c	;volatile
   890  001208  D004               	goto	l50
   891                           
   892                           ;carroMain.c: 286: carroGirar(1);
   893  00120A  0E01               	movlw	1
   894  00120C  ECD0  F00F         	call	_carroGirar
   895                           
   896                           ;carroMain.c: 287: }
   897  001210  D7DD               	goto	l45
   898  001212                     l50:
   899                           
   900                           ;carroMain.c: 288: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==1){
   901  001212  A481               	btfss	3969,2,c	;volatile
   902  001214  BA81               	btfsc	3969,5,c	;volatile
   903  001216  D009               	goto	l52
   904  001218  A881               	btfss	3969,4,c	;volatile
   905  00121A  A681               	btfss	3969,3,c	;volatile
   906  00121C  D006               	goto	l52
   907  00121E  A281               	btfss	3969,1,c	;volatile
   908  001220  D004               	goto	l52
   909                           
   910                           ;carroMain.c: 289: carroGirar(1);
   911  001222  0E01               	movlw	1
   912  001224  ECD0  F00F         	call	_carroGirar
   913                           
   914                           ;carroMain.c: 290: }
   915  001228  D7D1               	goto	l45
   916  00122A                     l52:
   917                           
   918                           ;carroMain.c: 291: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   919  00122A  A481               	btfss	3969,2,c	;volatile
   920  00122C  BA81               	btfsc	3969,5,c	;volatile
   921  00122E  D008               	goto	l54
   922  001230  B881               	btfsc	3969,4,c	;volatile
   923  001232  B681               	btfsc	3969,3,c	;volatile
   924  001234  D005               	goto	l54
   925  001236  B281               	btfsc	3969,1,c	;volatile
   926  001238  D003               	goto	l54
   927                           
   928                           ;carroMain.c: 292: carroAvanzar();
   929  00123A  EC97  F010         	call	_carroAvanzar	;wreg free
   930                           
   931                           ;carroMain.c: 293: }
   932  00123E  D7C6               	goto	l45
   933  001240                     l54:
   934                           
   935                           ;carroMain.c: 294: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   936  001240  A481               	btfss	3969,2,c	;volatile
   937  001242  BA81               	btfsc	3969,5,c	;volatile
   938  001244  D009               	goto	l56
   939  001246  B881               	btfsc	3969,4,c	;volatile
   940  001248  A681               	btfss	3969,3,c	;volatile
   941  00124A  D006               	goto	l56
   942  00124C  B281               	btfsc	3969,1,c	;volatile
   943  00124E  D004               	goto	l56
   944                           
   945                           ;carroMain.c: 295: carroGirar(1);
   946  001250  0E01               	movlw	1
   947  001252  ECD0  F00F         	call	_carroGirar
   948                           
   949                           ;carroMain.c: 296: }
   950  001256  D7BA               	goto	l45
   951  001258                     l56:
   952                           
   953                           ;carroMain.c: 297: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   954  001258  A481               	btfss	3969,2,c	;volatile
   955  00125A  AA81               	btfss	3969,5,c	;volatile
   956  00125C  D009               	goto	l58
   957  00125E  A881               	btfss	3969,4,c	;volatile
   958  001260  B681               	btfsc	3969,3,c	;volatile
   959  001262  D006               	goto	l58
   960  001264  B281               	btfsc	3969,1,c	;volatile
   961  001266  D004               	goto	l58
   962                           
   963                           ;carroMain.c: 298: carroGirar(3);
   964  001268  0E03               	movlw	3
   965  00126A  ECD0  F00F         	call	_carroGirar
   966                           
   967                           ;carroMain.c: 299: }
   968  00126E  D7AE               	goto	l45
   969  001270                     l58:
   970                           
   971                           ;carroMain.c: 300: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
   972  001270  A481               	btfss	3969,2,c	;volatile
   973  001272  AA81               	btfss	3969,5,c	;volatile
   974  001274  D009               	goto	l60
   975  001276  B881               	btfsc	3969,4,c	;volatile
   976  001278  B681               	btfsc	3969,3,c	;volatile
   977  00127A  D006               	goto	l60
   978  00127C  B281               	btfsc	3969,1,c	;volatile
   979  00127E  D004               	goto	l60
   980                           
   981                           ;carroMain.c: 301: carroGirar(3);
   982  001280  0E03               	movlw	3
   983  001282  ECD0  F00F         	call	_carroGirar
   984                           
   985                           ;carroMain.c: 302: }
   986  001286  D7A2               	goto	l45
   987  001288                     l60:
   988                           
   989                           ;carroMain.c: 303: else if(PORTBbits.RB2==0&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==0){
   990  001288  A481               	btfss	3969,2,c	;volatile
   991  00128A  AA81               	btfss	3969,5,c	;volatile
   992  00128C  D008               	goto	l62
   993  00128E  B881               	btfsc	3969,4,c	;volatile
   994  001290  A681               	btfss	3969,3,c	;volatile
   995  001292  D005               	goto	l62
   996  001294  B281               	btfsc	3969,1,c	;volatile
   997  001296  D003               	goto	l62
   998                           
   999                           ;carroMain.c: 304: carroAvanzarEspecial();
  1000  001298  EC86  F010         	call	_carroAvanzarEspecial	;wreg free
  1001                           
  1002                           ;carroMain.c: 305: }
  1003  00129C  D797               	goto	l45
  1004  00129E                     l62:
  1005                           
  1006                           ;carroMain.c: 306: else if(PORTBbits.RB2==1&&PORTBbits.RB5==0&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1007  00129E  B481               	btfsc	3969,2,c	;volatile
  1008  0012A0  BA81               	btfsc	3969,5,c	;volatile
  1009  0012A2  D009               	goto	l64
  1010  0012A4  A881               	btfss	3969,4,c	;volatile
  1011  0012A6  B681               	btfsc	3969,3,c	;volatile
  1012  0012A8  D006               	goto	l64
  1013  0012AA  B281               	btfsc	3969,1,c	;volatile
  1014  0012AC  D004               	goto	l64
  1015                           
  1016                           ;carroMain.c: 307: carroGirar(3);
  1017  0012AE  0E03               	movlw	3
  1018  0012B0  ECD0  F00F         	call	_carroGirar
  1019                           
  1020                           ;carroMain.c: 308: }
  1021  0012B4  D78B               	goto	l45
  1022  0012B6                     l64:
  1023                           
  1024                           ;carroMain.c: 309: else if(PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==0&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1025  0012B6  B481               	btfsc	3969,2,c	;volatile
  1026  0012B8  AA81               	btfss	3969,5,c	;volatile
  1027  0012BA  D009               	goto	l66
  1028  0012BC  A881               	btfss	3969,4,c	;volatile
  1029  0012BE  B681               	btfsc	3969,3,c	;volatile
  1030  0012C0  D006               	goto	l66
  1031  0012C2  B281               	btfsc	3969,1,c	;volatile
  1032  0012C4  D004               	goto	l66
  1033                           
  1034                           ;carroMain.c: 310: carroGirar(3);
  1035  0012C6  0E03               	movlw	3
  1036  0012C8  ECD0  F00F         	call	_carroGirar
  1037                           
  1038                           ;carroMain.c: 311: }
  1039  0012CC  D77F               	goto	l45
  1040  0012CE                     l66:
  1041                           
  1042                           ;carroMain.c: 312: else if (PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBb
      +                          its.RB3==1&&PORTBbits.RB1==1){
  1043  0012CE  B481               	btfsc	3969,2,c	;volatile
  1044  0012D0  AA81               	btfss	3969,5,c	;volatile
  1045  0012D2  D008               	goto	l68
  1046  0012D4  B881               	btfsc	3969,4,c	;volatile
  1047  0012D6  A681               	btfss	3969,3,c	;volatile
  1048  0012D8  D005               	goto	l68
  1049  0012DA  A281               	btfss	3969,1,c	;volatile
  1050  0012DC  D003               	goto	l68
  1051                           
  1052                           ;carroMain.c: 313: carroAvanzarEspecial();
  1053  0012DE  EC86  F010         	call	_carroAvanzarEspecial	;wreg free
  1054                           
  1055                           ;carroMain.c: 314: }
  1056  0012E2  D774               	goto	l45
  1057  0012E4                     l68:
  1058                           
  1059                           ;carroMain.c: 315: else if(PORTBbits.RB2==0&&PORTBbits.RB5==0&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==1&&PORTBbits.RB1==1){
  1060  0012E4  A481               	btfss	3969,2,c	;volatile
  1061  0012E6  BA81               	btfsc	3969,5,c	;volatile
  1062  0012E8  D009               	goto	l70
  1063  0012EA  B881               	btfsc	3969,4,c	;volatile
  1064  0012EC  A681               	btfss	3969,3,c	;volatile
  1065  0012EE  D006               	goto	l70
  1066  0012F0  A281               	btfss	3969,1,c	;volatile
  1067  0012F2  D004               	goto	l70
  1068                           
  1069                           ;carroMain.c: 316: carroGirarEspecial(1);
  1070  0012F4  0E01               	movlw	1
  1071  0012F6  EC16  F010         	call	_carroGirarEspecial
  1072                           
  1073                           ;carroMain.c: 317: }
  1074  0012FA  D768               	goto	l45
  1075  0012FC                     l70:
  1076                           
  1077                           ;carroMain.c: 318: else if(PORTBbits.RB2==1&&PORTBbits.RB5==1&&PORTBbits.RB4==1&&PORTBbi
      +                          ts.RB3==0&&PORTBbits.RB1==0){
  1078  0012FC  B481               	btfsc	3969,2,c	;volatile
  1079  0012FE  AA81               	btfss	3969,5,c	;volatile
  1080  001300  D765               	goto	l45
  1081  001302  B881               	btfsc	3969,4,c	;volatile
  1082  001304  B681               	btfsc	3969,3,c	;volatile
  1083  001306  D762               	goto	l45
  1084  001308  B281               	btfsc	3969,1,c	;volatile
  1085  00130A  D760               	goto	l45
  1086                           
  1087                           ;carroMain.c: 319: carroGirarEspecial(2);
  1088  00130C  0E02               	movlw	2
  1089  00130E  EC16  F010         	call	_carroGirarEspecial
  1090  001312  D75C               	goto	l45
  1091  001314                     __end_of_main:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           
  1097 ;; *************** function _config_timer2 *****************
  1098 ;; Defined at:
  1099 ;;		line 14 in file "Pwm.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  onoff           2   12[COMRAM] int 
  1102 ;;  presc           2   14[COMRAM] int 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         4       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        6 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    2
  1121 ;; This function calls:
  1122 ;;		___awtoft
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text1
  1129  001E74                     __ptext1:
  1130                           	opt stack 0
  1131  001E74                     _config_timer2:
  1132                           	opt stack 28
  1133                           
  1134                           ;Pwm.c: 16: T2CONbits.TOUTPS = 0b0000;
  1135                           
  1136                           ;incstack = 0
  1137  001E74  96CA               	bcf	4042,3,c	;volatile
  1138  001E76  98CA               	bcf	4042,4,c	;volatile
  1139  001E78  9ACA               	bcf	4042,5,c	;volatile
  1140  001E7A  9CCA               	bcf	4042,6,c	;volatile
  1141                           
  1142                           ;Pwm.c: 18: prescg = presc;
  1143  001E7C  C00F  F009         	movff	config_timer2@presc,___awtoft@c
  1144  001E80  C010  F00A         	movff	config_timer2@presc+1,___awtoft@c+1
  1145  001E84  EC33  F010         	call	___awtoft	;wreg free
  1146  001E88  C009  F0EF         	movff	?___awtoft,_prescg
  1147  001E8C  C00A  F0F0         	movff	?___awtoft+1,_prescg+1
  1148  001E90  C00B  F0F1         	movff	?___awtoft+2,_prescg+2
  1149                           
  1150                           ;Pwm.c: 20: switch(presc)
  1151  001E94  D00B               	goto	l175
  1152  001E96  0EFC               	movlw	-4
  1153  001E98  16CA               	andwf	4042,f,c	;volatile
  1154  001E9A  D01A               	goto	l177
  1155  001E9C  50CA               	movf	4042,w,c	;volatile
  1156  001E9E  0BFC               	andlw	-4
  1157  001EA0  0901               	iorlw	1
  1158  001EA2  6ECA               	movwf	4042,c	;volatile
  1159  001EA4  D015               	goto	l177
  1160  001EA6  0E03               	movlw	3
  1161  001EA8  12CA               	iorwf	4042,f,c	;volatile
  1162                           
  1163                           ;Pwm.c: 25: }
  1164  001EAA  D012               	goto	l177
  1165  001EAC                     l175:
  1166  001EAC  C00F  F011         	movff	config_timer2@presc,??_config_timer2
  1167  001EB0  C010  F012         	movff	config_timer2@presc+1,??_config_timer2+1
  1168                           
  1169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1170                           ; Switch size 1, requested type "space"
  1171                           ; Number of cases is 1, Range of values is 0 to 0
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte            4     3 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176  001EB4  5012               	movf	??_config_timer2+1,w,c
  1177  001EB6  0A00               	xorlw	0	; case 0
  1178  001EB8  A4D8               	btfss	status,2,c
  1179  001EBA  D00A               	goto	l177
  1180                           
  1181                           ; Switch size 1, requested type "space"
  1182                           ; Number of cases is 3, Range of values is 1 to 16
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte           10     6 (average)
  1186                           ;	Chosen strategy is simple_byte
  1187  001EBC  5011               	movf	??_config_timer2,w,c
  1188  001EBE  0A01               	xorlw	1	; case 1
  1189  001EC0  B4D8               	btfsc	status,2,c
  1190  001EC2  D7E9               	goto	l176
  1191  001EC4  0A05               	xorlw	5	; case 4
  1192  001EC6  B4D8               	btfsc	status,2,c
  1193  001EC8  D7E9               	goto	l178
  1194  001ECA  0A14               	xorlw	20	; case 16
  1195  001ECC  B4D8               	btfsc	status,2,c
  1196  001ECE  D7EB               	goto	l179
  1197  001ED0                     l177:
  1198                           
  1199                           ;Pwm.c: 27: T2CONbits.TOUTPS = 0b0000;
  1200  001ED0  96CA               	bcf	4042,3,c	;volatile
  1201  001ED2  98CA               	bcf	4042,4,c	;volatile
  1202  001ED4  9ACA               	bcf	4042,5,c	;volatile
  1203  001ED6  9CCA               	bcf	4042,6,c	;volatile
  1204                           
  1205                           ;Pwm.c: 29: T2CONbits.TMR2ON = onoff;
  1206  001ED8  B00D               	btfsc	config_timer2@onoff,0,c
  1207  001EDA  D002               	bra	u2895
  1208  001EDC  94CA               	bcf	4042,2,c	;volatile
  1209  001EDE  D001               	bra	u2896
  1210  001EE0                     u2895:
  1211  001EE0  84CA               	bsf	4042,2,c	;volatile
  1212  001EE2                     u2896:
  1213  001EE2  0012               	return		;funcret
  1214  001EE4                     __end_of_config_timer2:
  1215                           	opt stack 0
  1216                           tblptru	equ	0xFF8
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           status	equ	0xFD8
  1220                           
  1221 ;; *************** function _configBoard *****************
  1222 ;; Defined at:
  1223 ;;		line 11 in file "config.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_main
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text2
  1251  001EE4                     __ptext2:
  1252                           	opt stack 0
  1253  001EE4                     _configBoard:
  1254                           	opt stack 30
  1255                           
  1256                           ;config.c: 15: INTCONbits.GIE = 0;
  1257                           
  1258                           ;incstack = 0
  1259  001EE4  9EF2               	bcf	intcon,7,c	;volatile
  1260                           
  1261                           ;config.c: 16: INTCONbits.PEIE = 0;
  1262  001EE6  9CF2               	bcf	intcon,6,c	;volatile
  1263                           
  1264                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1265  001EE8  8ED5               	bsf	4053,7,c	;volatile
  1266                           
  1267                           ;config.c: 26: T08BIT = 1;
  1268  001EEA  8CD5               	bsf	4053,6,c	;volatile
  1269                           
  1270                           ;config.c: 27: T0CONbits.T0CS = 0;
  1271  001EEC  9AD5               	bcf	4053,5,c	;volatile
  1272                           
  1273                           ;config.c: 29: T0CONbits.PSA = 0;
  1274  001EEE  96D5               	bcf	4053,3,c	;volatile
  1275                           
  1276                           ;config.c: 30: T0CONbits.T0PS = 100;
  1277  001EF0  50D5               	movf	4053,w,c	;volatile
  1278  001EF2  0BF8               	andlw	-8
  1279  001EF4  0904               	iorlw	4
  1280  001EF6  6ED5               	movwf	4053,c	;volatile
  1281                           
  1282                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1283  001EF8  94F2               	bcf	intcon,2,c	;volatile
  1284                           
  1285                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1286  001EFA  80C1               	bsf	4033,0,c	;volatile
  1287  001EFC  82C1               	bsf	4033,1,c	;volatile
  1288  001EFE  84C1               	bsf	4033,2,c	;volatile
  1289  001F00  86C1               	bsf	4033,3,c	;volatile
  1290                           
  1291                           ;config.c: 44: ADCON0 = 0b00000111;
  1292  001F02  0E07               	movlw	7
  1293  001F04  6EC2               	movwf	4034,c	;volatile
  1294                           
  1295                           ;config.c: 47: ADCON0bits.ADON = 0;
  1296  001F06  90C2               	bcf	4034,0,c	;volatile
  1297                           
  1298                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1299  001F08  8EC0               	bsf	4032,7,c	;volatile
  1300                           
  1301                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1302  001F0A  50C0               	movf	4032,w,c	;volatile
  1303  001F0C  0BF8               	andlw	-8
  1304  001F0E  0906               	iorlw	6
  1305  001F10  6EC0               	movwf	4032,c	;volatile
  1306                           
  1307                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1308  001F12  50C0               	movf	4032,w,c	;volatile
  1309  001F14  0BC7               	andlw	-57
  1310  001F16  0928               	iorlw	40
  1311  001F18  6EC0               	movwf	4032,c	;volatile
  1312                           
  1313                           ;config.c: 55: TRISAbits.RA1=1;
  1314  001F1A  8292               	bsf	3986,1,c	;volatile
  1315                           
  1316                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1317  001F1C  50C0               	movf	4032,w,c	;volatile
  1318  001F1E  0BF8               	andlw	-8
  1319  001F20  0906               	iorlw	6
  1320  001F22  6EC0               	movwf	4032,c	;volatile
  1321                           
  1322                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1323  001F24  9AC1               	bcf	4033,5,c	;volatile
  1324                           
  1325                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1326  001F26  98C1               	bcf	4033,4,c	;volatile
  1327                           
  1328                           ;config.c: 60: ADCON2bits.ADFM=1;
  1329  001F28  8EC0               	bsf	4032,7,c	;volatile
  1330                           
  1331                           ;config.c: 64: ADCON0bits.ADON=0;
  1332  001F2A  90C2               	bcf	4034,0,c	;volatile
  1333                           
  1334                           ;config.c: 66: PIE1bits.ADIE=0;
  1335  001F2C  9C9D               	bcf	3997,6,c	;volatile
  1336                           
  1337                           ;config.c: 67: PIR1bits.ADIF=0;
  1338  001F2E  9C9E               	bcf	3998,6,c	;volatile
  1339                           
  1340                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1341  001F30  86C0               	bsf	4032,3,c	;volatile
  1342  001F32  88C0               	bsf	4032,4,c	;volatile
  1343  001F34  8AC0               	bsf	4032,5,c	;volatile
  1344                           
  1345                           ;config.c: 70: ADCON0bits.GO=1;
  1346  001F36  82C2               	bsf	4034,1,c	;volatile
  1347                           
  1348                           ;config.c: 72: RCIF=0;
  1349  001F38  9A9E               	bcf	3998,5,c	;volatile
  1350                           
  1351                           ;config.c: 75: TRISD=0;
  1352  001F3A  0E00               	movlw	0
  1353  001F3C  6E95               	movwf	3989,c	;volatile
  1354                           
  1355                           ;config.c: 76: PORTA=0;
  1356  001F3E  0E00               	movlw	0
  1357  001F40  6E80               	movwf	3968,c	;volatile
  1358  001F42  0012               	return		;funcret
  1359  001F44                     __end_of_configBoard:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           intcon	equ	0xFF2
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           status	equ	0xFD8
  1366                           
  1367 ;; *************** function _coinfig_ccpcon *****************
  1368 ;; Defined at:
  1369 ;;		line 34 in file "Pwm.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  fosc            3   69[COMRAM] float 
  1372 ;;  freq            3   72[COMRAM] float 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1384 ;;      Params:         6       0       0       0       0       0       0       0       0
  1385 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1387 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1388 ;;Total ram usage:        9 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    2
  1391 ;; This function calls:
  1392 ;;		___ftadd
  1393 ;;		___ftdiv
  1394 ;;		___ftmul
  1395 ;;		___fttol
  1396 ;;		___lbtoft
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text3
  1403  001AF2                     __ptext3:
  1404                           	opt stack 0
  1405  001AF2                     _coinfig_ccpcon:
  1406                           	opt stack 28
  1407                           
  1408                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1409                           
  1410                           ;incstack = 0
  1411  001AF2  C0EF  F010         	movff	_prescg,___ftmul@f2
  1412  001AF6  C0F0  F011         	movff	_prescg+1,___ftmul@f2+1
  1413  001AFA  C0F1  F012         	movff	_prescg+2,___ftmul@f2+2
  1414  001AFE  C049  F00D         	movff	coinfig_ccpcon@freq,___ftmul@f1
  1415  001B02  C04A  F00E         	movff	coinfig_ccpcon@freq+1,___ftmul@f1+1
  1416  001B06  C04B  F00F         	movff	coinfig_ccpcon@freq+2,___ftmul@f1+2
  1417  001B0A  EC51  F00B         	call	___ftmul	;wreg free
  1418  001B0E  C00D  F04C         	movff	?___ftmul,_coinfig_ccpcon$1547
  1419  001B12  C00E  F04D         	movff	?___ftmul+1,_coinfig_ccpcon$1547+1
  1420  001B16  C00F  F04E         	movff	?___ftmul+2,_coinfig_ccpcon$1547+2
  1421                           
  1422                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1423  001B1A  0E00               	movlw	0
  1424  001B1C  6E2E               	movwf	___ftadd@f2,c
  1425  001B1E  0E80               	movlw	128
  1426  001B20  6E2F               	movwf	___ftadd@f2+1,c
  1427  001B22  0EBF               	movlw	191
  1428  001B24  6E30               	movwf	___ftadd@f2+2,c
  1429  001B26  0E00               	movlw	0
  1430  001B28  6E10               	movwf	___ftmul@f2,c
  1431  001B2A  0E80               	movlw	128
  1432  001B2C  6E11               	movwf	___ftmul@f2+1,c
  1433  001B2E  0E40               	movlw	64
  1434  001B30  6E12               	movwf	___ftmul@f2+2,c
  1435  001B32  C04C  F00D         	movff	_coinfig_ccpcon$1547,___ftmul@f1
  1436  001B36  C04D  F00E         	movff	_coinfig_ccpcon$1547+1,___ftmul@f1+1
  1437  001B3A  C04E  F00F         	movff	_coinfig_ccpcon$1547+2,___ftmul@f1+2
  1438  001B3E  EC51  F00B         	call	___ftmul	;wreg free
  1439  001B42  C00D  F01F         	movff	?___ftmul,___ftdiv@f2
  1440  001B46  C00E  F020         	movff	?___ftmul+1,___ftdiv@f2+1
  1441  001B4A  C00F  F021         	movff	?___ftmul+2,___ftdiv@f2+2
  1442  001B4E  C046  F01C         	movff	coinfig_ccpcon@fosc,___ftdiv@f1
  1443  001B52  C047  F01D         	movff	coinfig_ccpcon@fosc+1,___ftdiv@f1+1
  1444  001B56  C048  F01E         	movff	coinfig_ccpcon@fosc+2,___ftdiv@f1+2
  1445  001B5A  ECCB  F00B         	call	___ftdiv	;wreg free
  1446  001B5E  C01C  F02B         	movff	?___ftdiv,___ftadd@f1
  1447  001B62  C01D  F02C         	movff	?___ftdiv+1,___ftadd@f1+1
  1448  001B66  C01E  F02D         	movff	?___ftdiv+2,___ftadd@f1+2
  1449  001B6A  ECE6  F007         	call	___ftadd	;wreg free
  1450  001B6E  C02B  F037         	movff	?___ftadd,___fttol@f1
  1451  001B72  C02C  F038         	movff	?___ftadd+1,___fttol@f1+1
  1452  001B76  C02D  F039         	movff	?___ftadd+2,___fttol@f1+2
  1453  001B7A  ECD7  F00A         	call	___fttol	;wreg free
  1454  001B7E  5037               	movf	?___fttol,w,c
  1455  001B80  6ECB               	movwf	4043,c	;volatile
  1456                           
  1457                           ;Pwm.c: 37: pr2g = PR2;
  1458  001B82  50CB               	movf	4043,w,c	;volatile
  1459  001B84  EC62  F010         	call	___lbtoft
  1460  001B88  C009  F0EA         	movff	?___lbtoft,_pr2g
  1461  001B8C  C00A  F0EB         	movff	?___lbtoft+1,_pr2g+1
  1462  001B90  C00B  F0EC         	movff	?___lbtoft+2,_pr2g+2
  1463                           
  1464                           ;Pwm.c: 38: CCP1CONbits.P1M = 0b00;
  1465  001B94  0E3F               	movlw	-193
  1466  001B96  16BD               	andwf	4029,f,c	;volatile
  1467                           
  1468                           ;Pwm.c: 39: CCP2CONbits.CCP2M = 1100;
  1469  001B98  50BA               	movf	4026,w,c	;volatile
  1470  001B9A  0BF0               	andlw	-16
  1471  001B9C  090C               	iorlw	12
  1472  001B9E  6EBA               	movwf	4026,c	;volatile
  1473                           
  1474                           ;Pwm.c: 40: CCP1CONbits.CCP1M = 1100;
  1475  001BA0  50BD               	movf	4029,w,c	;volatile
  1476  001BA2  0BF0               	andlw	-16
  1477  001BA4  090C               	iorlw	12
  1478  001BA6  6EBD               	movwf	4029,c	;volatile
  1479  001BA8  0012               	return		;funcret
  1480  001BAA                     __end_of_coinfig_ccpcon:
  1481                           	opt stack 0
  1482                           tblptru	equ	0xFF8
  1483                           intcon	equ	0xFF2
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function ___lbtoft *****************
  1489 ;; Defined at:
  1490 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  c               1    wreg     unsigned char 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  c               1   11[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  3    8[COMRAM] float 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1504 ;;      Params:         3       0       0       0       0       0       0       0       0
  1505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1507 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1508 ;;Total ram usage:        4 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    1
  1511 ;; This function calls:
  1512 ;;		___ftpack
  1513 ;; This function is called by:
  1514 ;;		_coinfig_ccpcon
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text4
  1519  0020C4                     __ptext4:
  1520                           	opt stack 0
  1521  0020C4                     ___lbtoft:
  1522                           	opt stack 28
  1523                           
  1524                           ;incstack = 0
  1525                           ;___lbtoft@c stored from wreg
  1526  0020C4  6E0C               	movwf	___lbtoft@c,c
  1527  0020C6  500C               	movf	___lbtoft@c,w,c
  1528  0020C8  6E01               	movwf	___ftpack@arg,c
  1529  0020CA  6A02               	clrf	___ftpack@arg+1,c
  1530  0020CC  6A03               	clrf	___ftpack@arg+2,c
  1531  0020CE  0E8E               	movlw	142
  1532  0020D0  6E04               	movwf	___ftpack@exp,c
  1533  0020D2  0E00               	movlw	0
  1534  0020D4  6E05               	movwf	___ftpack@sign,c
  1535  0020D6  ECD5  F00D         	call	___ftpack	;wreg free
  1536  0020DA  C001  F009         	movff	?___ftpack,?___lbtoft
  1537  0020DE  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  1538  0020E2  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  1539  0020E6  0012               	return	
  1540  0020E8                     __end_of___lbtoft:
  1541                           	opt stack 0
  1542                           tblptru	equ	0xFF8
  1543                           intcon	equ	0xFF2
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _carroGirarEspecial *****************
  1549 ;; Defined at:
  1550 ;;		line 358 in file "carroMain.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  direccion2      1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  direccion2      1   94[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1567 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1568 ;;Total ram usage:        1 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    6
  1571 ;; This function calls:
  1572 ;;		_config_ccp1
  1573 ;;		_config_ccp2
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text5
  1580  00202C                     __ptext5:
  1581                           	opt stack 0
  1582  00202C                     _carroGirarEspecial:
  1583                           	opt stack 24
  1584                           
  1585                           ;incstack = 0
  1586                           ;carroGirarEspecial@direccion2 stored from wreg
  1587  00202C  6E5F               	movwf	carroGirarEspecial@direccion2,c
  1588                           
  1589                           ;carroMain.c: 359: if(direccion2==1){
  1590  00202E  045F               	decf	carroGirarEspecial@direccion2,w,c
  1591  002030  A4D8               	btfss	status,2,c
  1592  002032  D004               	goto	l87
  1593                           
  1594                           ;carroMain.c: 360: LATAbits.LA0=1;
  1595  002034  8089               	bsf	3977,0,c	;volatile
  1596                           
  1597                           ;carroMain.c: 361: LATAbits.LA1=0;
  1598  002036  9289               	bcf	3977,1,c	;volatile
  1599                           
  1600                           ;carroMain.c: 362: LATEbits.LE1=0;
  1601  002038  928D               	bcf	3981,1,c	;volatile
  1602  00203A  D007               	goto	L1
  1603  00203C                     l87:
  1604                           
  1605                           ;carroMain.c: 366: else if(direccion2==2){
  1606  00203C  0E02               	movlw	2
  1607  00203E  185F               	xorwf	carroGirarEspecial@direccion2,w,c
  1608  002040  A4D8               	btfss	status,2,c
  1609  002042  D004               	goto	l89
  1610                           
  1611                           ;carroMain.c: 367: LATAbits.LA0=0;
  1612  002044  9089               	bcf	3977,0,c	;volatile
  1613                           
  1614                           ;carroMain.c: 368: LATAbits.LA1=0;
  1615  002046  9289               	bcf	3977,1,c	;volatile
  1616                           
  1617                           ;carroMain.c: 369: LATEbits.LE1=1;
  1618  002048  828D               	bsf	3981,1,c	;volatile
  1619  00204A                     L1:
  1620                           
  1621                           ;carroMain.c: 370: LATEbits.LE0=0;
  1622  00204A  908D               	bcf	3981,0,c	;volatile
  1623  00204C                     l89:
  1624                           
  1625                           ;carroMain.c: 371: }
  1626                           ;carroMain.c: 372: config_ccp1(40);
  1627  00204C  0E00               	movlw	0
  1628  00204E  6E5C               	movwf	config_ccp1@duty1+1,c
  1629  002050  0E28               	movlw	40
  1630  002052  6E5B               	movwf	config_ccp1@duty1,c
  1631  002054  EC87  F005         	call	_config_ccp1	;wreg free
  1632                           
  1633                           ;carroMain.c: 373: config_ccp2(40);
  1634  002058  0E00               	movlw	0
  1635  00205A  6E5C               	movwf	config_ccp2@duty2+1,c
  1636  00205C  0E28               	movlw	40
  1637  00205E  6E5B               	movwf	config_ccp2@duty2,c
  1638  002060  EC1E  F004         	call	_config_ccp2	;wreg free
  1639  002064  0012               	return		;funcret
  1640  002066                     __end_of_carroGirarEspecial:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           intcon	equ	0xFF2
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           status	equ	0xFD8
  1647                           
  1648 ;; *************** function _carroGirar *****************
  1649 ;; Defined at:
  1650 ;;		line 375 in file "carroMain.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  direccion       1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  direccion       1   94[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    6
  1671 ;; This function calls:
  1672 ;;		_config_ccp1
  1673 ;;		_config_ccp2
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text6
  1680  001FA0                     __ptext6:
  1681                           	opt stack 0
  1682  001FA0                     _carroGirar:
  1683                           	opt stack 24
  1684                           
  1685                           ;incstack = 0
  1686                           ;carroGirar@direccion stored from wreg
  1687  001FA0  6E5F               	movwf	carroGirar@direccion,c
  1688                           
  1689                           ;carroMain.c: 377: if(direccion==1){
  1690  001FA2  045F               	decf	carroGirar@direccion,w,c
  1691  001FA4  A4D8               	btfss	status,2,c
  1692  001FA6  D004               	goto	l93
  1693                           
  1694                           ;carroMain.c: 378: LATAbits.LA0=1;
  1695  001FA8  8089               	bsf	3977,0,c	;volatile
  1696                           
  1697                           ;carroMain.c: 379: LATAbits.LA1=0;
  1698  001FAA  9289               	bcf	3977,1,c	;volatile
  1699                           
  1700                           ;carroMain.c: 380: LATEbits.LE1 =0;
  1701  001FAC  928D               	bcf	3981,1,c	;volatile
  1702  001FAE  D010               	goto	L2
  1703  001FB0                     l93:
  1704                           
  1705                           ;carroMain.c: 383: else if(direccion==2){
  1706  001FB0  0E02               	movlw	2
  1707  001FB2  185F               	xorwf	carroGirar@direccion,w,c
  1708  001FB4  A4D8               	btfss	status,2,c
  1709  001FB6  D005               	goto	l95
  1710                           
  1711                           ;carroMain.c: 384: LATAbits.LA0=1;
  1712  001FB8  8089               	bsf	3977,0,c	;volatile
  1713                           
  1714                           ;carroMain.c: 385: LATAbits.LA1=0;
  1715  001FBA  9289               	bcf	3977,1,c	;volatile
  1716                           
  1717                           ;carroMain.c: 386: LATEbits.LE1 =0;
  1718  001FBC  928D               	bcf	3981,1,c	;volatile
  1719                           
  1720                           ;carroMain.c: 387: LATEbits.LE0=1;
  1721  001FBE  808D               	bsf	3981,0,c	;volatile
  1722                           
  1723                           ;carroMain.c: 388: }
  1724  001FC0  D008               	goto	l97
  1725  001FC2                     l95:
  1726                           
  1727                           ;carroMain.c: 389: else if(direccion==3){
  1728  001FC2  0E03               	movlw	3
  1729  001FC4  185F               	xorwf	carroGirar@direccion,w,c
  1730  001FC6  A4D8               	btfss	status,2,c
  1731  001FC8  D004               	goto	l97
  1732                           
  1733                           ;carroMain.c: 390: LATAbits.LA0=0;
  1734  001FCA  9089               	bcf	3977,0,c	;volatile
  1735                           
  1736                           ;carroMain.c: 391: LATAbits.LA1=0;
  1737  001FCC  9289               	bcf	3977,1,c	;volatile
  1738                           
  1739                           ;carroMain.c: 392: LATEbits.LE1 =1;
  1740  001FCE  828D               	bsf	3981,1,c	;volatile
  1741  001FD0                     L2:
  1742                           
  1743                           ;carroMain.c: 393: LATEbits.LE0=0;
  1744  001FD0  908D               	bcf	3981,0,c	;volatile
  1745  001FD2                     l97:
  1746                           
  1747                           ;carroMain.c: 394: }
  1748                           ;carroMain.c: 395: config_ccp1(100);
  1749  001FD2  0E00               	movlw	0
  1750  001FD4  6E5C               	movwf	config_ccp1@duty1+1,c
  1751  001FD6  0E64               	movlw	100
  1752  001FD8  6E5B               	movwf	config_ccp1@duty1,c
  1753  001FDA  EC87  F005         	call	_config_ccp1	;wreg free
  1754                           
  1755                           ;carroMain.c: 396: config_ccp2(100);
  1756  001FDE  0E00               	movlw	0
  1757  001FE0  6E5C               	movwf	config_ccp2@duty2+1,c
  1758  001FE2  0E64               	movlw	100
  1759  001FE4  6E5B               	movwf	config_ccp2@duty2,c
  1760  001FE6  EC1E  F004         	call	_config_ccp2	;wreg free
  1761  001FEA  0012               	return		;funcret
  1762  001FEC                     __end_of_carroGirar:
  1763                           	opt stack 0
  1764                           tblptru	equ	0xFF8
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           wreg	equ	0xFE8
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _carroAvanzarEspecial *****************
  1771 ;; Defined at:
  1772 ;;		line 338 in file "carroMain.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    6
  1793 ;; This function calls:
  1794 ;;		_config_ccp1
  1795 ;;		_config_ccp2
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802  00210C                     __ptext7:
  1803                           	opt stack 0
  1804  00210C                     _carroAvanzarEspecial:
  1805                           	opt stack 24
  1806                           
  1807                           ;carroMain.c: 340: LATEbits.LE1=1;
  1808                           
  1809                           ;incstack = 0
  1810  00210C  828D               	bsf	3981,1,c	;volatile
  1811                           
  1812                           ;carroMain.c: 341: LATEbits.LE0=0;
  1813  00210E  908D               	bcf	3981,0,c	;volatile
  1814                           
  1815                           ;carroMain.c: 342: LATAbits.LA0=1;
  1816  002110  8089               	bsf	3977,0,c	;volatile
  1817                           
  1818                           ;carroMain.c: 343: LATAbits.LA1=0;
  1819  002112  9289               	bcf	3977,1,c	;volatile
  1820                           
  1821                           ;carroMain.c: 344: config_ccp1(80);
  1822  002114  0E00               	movlw	0
  1823  002116  6E5C               	movwf	config_ccp1@duty1+1,c
  1824  002118  0E50               	movlw	80
  1825  00211A  6E5B               	movwf	config_ccp1@duty1,c
  1826  00211C  EC87  F005         	call	_config_ccp1	;wreg free
  1827                           
  1828                           ;carroMain.c: 345: config_ccp2(80);
  1829  002120  0E00               	movlw	0
  1830  002122  6E5C               	movwf	config_ccp2@duty2+1,c
  1831  002124  0E50               	movlw	80
  1832  002126  6E5B               	movwf	config_ccp2@duty2,c
  1833  002128  EC1E  F004         	call	_config_ccp2	;wreg free
  1834  00212C  0012               	return		;funcret
  1835  00212E                     __end_of_carroAvanzarEspecial:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           intcon	equ	0xFF2
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           status	equ	0xFD8
  1842                           
  1843 ;; *************** function _carroAvanzar *****************
  1844 ;; Defined at:
  1845 ;;		line 329 in file "carroMain.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    6
  1866 ;; This function calls:
  1867 ;;		_config_ccp1
  1868 ;;		_config_ccp2
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text8
  1875  00212E                     __ptext8:
  1876                           	opt stack 0
  1877  00212E                     _carroAvanzar:
  1878                           	opt stack 24
  1879                           
  1880                           ;carroMain.c: 330: LATEbits.LE1=1;
  1881                           
  1882                           ;incstack = 0
  1883  00212E  828D               	bsf	3981,1,c	;volatile
  1884                           
  1885                           ;carroMain.c: 331: LATEbits.LE0=0;
  1886  002130  908D               	bcf	3981,0,c	;volatile
  1887                           
  1888                           ;carroMain.c: 332: LATAbits.LA0=1;
  1889  002132  8089               	bsf	3977,0,c	;volatile
  1890                           
  1891                           ;carroMain.c: 333: LATAbits.LA1=0;
  1892  002134  9289               	bcf	3977,1,c	;volatile
  1893                           
  1894                           ;carroMain.c: 334: config_ccp1(100);
  1895  002136  0E00               	movlw	0
  1896  002138  6E5C               	movwf	config_ccp1@duty1+1,c
  1897  00213A  0E64               	movlw	100
  1898  00213C  6E5B               	movwf	config_ccp1@duty1,c
  1899  00213E  EC87  F005         	call	_config_ccp1	;wreg free
  1900                           
  1901                           ;carroMain.c: 335: config_ccp2(100);
  1902  002142  0E00               	movlw	0
  1903  002144  6E5C               	movwf	config_ccp2@duty2+1,c
  1904  002146  0E64               	movlw	100
  1905  002148  6E5B               	movwf	config_ccp2@duty2,c
  1906  00214A  EC1E  F004         	call	_config_ccp2	;wreg free
  1907  00214E  0012               	return		;funcret
  1908  002150                     __end_of_carroAvanzar:
  1909                           	opt stack 0
  1910                           tblptru	equ	0xFF8
  1911                           intcon	equ	0xFF2
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _config_ccp2 *****************
  1917 ;; Defined at:
  1918 ;;		line 85 in file "Pwm.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  duty2           2   90[COMRAM] int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  a              30   23[BANK0 ] int [15]
  1923 ;;  j               2   76[BANK0 ] int 
  1924 ;;  n               2   74[BANK0 ] int 
  1925 ;;  y               2   72[BANK0 ] unsigned int 
  1926 ;;  w               2   70[BANK0 ] unsigned int 
  1927 ;;  x               2   68[BANK0 ] int 
  1928 ;;  z               2   60[BANK0 ] int 
  1929 ;;  i               2   58[BANK0 ] int 
  1930 ;;  valreg          2   56[BANK0 ] int 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         2       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         0      55       0       0       0       0       0       0       0
  1942 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         4      55       0       0       0       0       0       0       0
  1944 ;;Total ram usage:       59 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    5
  1947 ;; This function calls:
  1948 ;;		___awdiv
  1949 ;;		___awtoft
  1950 ;;		___ftadd
  1951 ;;		___ftdiv
  1952 ;;		___ftmul
  1953 ;;		___fttol
  1954 ;;		_pow
  1955 ;; This function is called by:
  1956 ;;		_carroAvanzar
  1957 ;;		_carroAvanzarEspecial
  1958 ;;		_carroGirarEspecial
  1959 ;;		_carroGirar
  1960 ;;		_carroAtras
  1961 ;;		_carroMatar
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text9
  1966  00083C                     __ptext9:
  1967                           	opt stack 0
  1968  00083C                     _config_ccp2:
  1969                           	opt stack 24
  1970                           
  1971                           ;Pwm.c: 87: int valreg;
  1972                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  1973                           
  1974                           ;incstack = 0
  1975  00083C  C05B  F009         	movff	config_ccp2@duty2,___awtoft@c
  1976  000840  C05C  F00A         	movff	config_ccp2@duty2+1,___awtoft@c+1
  1977  000844  EC33  F010         	call	___awtoft	;wreg free
  1978  000848  C009  F010         	movff	?___awtoft,___ftmul@f2
  1979  00084C  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  1980  000850  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  1981  000854  0E00               	movlw	0
  1982  000856  6E2E               	movwf	___ftadd@f2,c
  1983  000858  0E80               	movlw	128
  1984  00085A  6E2F               	movwf	___ftadd@f2+1,c
  1985  00085C  0E3F               	movlw	63
  1986  00085E  6E30               	movwf	___ftadd@f2+2,c
  1987  000860  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  1988  000864  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  1989  000868  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  1990  00086C  ECE6  F007         	call	___ftadd	;wreg free
  1991  000870  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  1992  000874  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  1993  000878  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  1994  00087C  EC51  F00B         	call	___ftmul	;wreg free
  1995  000880  C00D  F095         	movff	?___ftmul,_config_ccp2$1551
  1996  000884  C00E  F096         	movff	?___ftmul+1,_config_ccp2$1551+1
  1997  000888  C00F  F097         	movff	?___ftmul+2,_config_ccp2$1551+2
  1998                           
  1999                           ;Pwm.c: 87: int valreg;
  2000                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  2001  00088C  0E00               	movlw	0
  2002  00088E  6E1F               	movwf	___ftdiv@f2,c
  2003  000890  0EC8               	movlw	200
  2004  000892  6E20               	movwf	___ftdiv@f2+1,c
  2005  000894  0E42               	movlw	66
  2006  000896  6E21               	movwf	___ftdiv@f2+2,c
  2007  000898  0E00               	movlw	0
  2008  00089A  6E10               	movwf	___ftmul@f2,c
  2009  00089C  0E80               	movlw	128
  2010  00089E  6E11               	movwf	___ftmul@f2+1,c
  2011  0008A0  0E40               	movlw	64
  2012  0008A2  6E12               	movwf	___ftmul@f2+2,c
  2013  0008A4  C095  F00D         	movff	_config_ccp2$1551,___ftmul@f1
  2014  0008A8  C096  F00E         	movff	_config_ccp2$1551+1,___ftmul@f1+1
  2015  0008AC  C097  F00F         	movff	_config_ccp2$1551+2,___ftmul@f1+2
  2016  0008B0  EC51  F00B         	call	___ftmul	;wreg free
  2017  0008B4  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2018  0008B8  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2019  0008BC  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2020  0008C0  ECCB  F00B         	call	___ftdiv	;wreg free
  2021  0008C4  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2022  0008C8  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2023  0008CC  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2024  0008D0  ECD7  F00A         	call	___fttol	;wreg free
  2025  0008D4  C037  F098         	movff	?___fttol,config_ccp2@valreg
  2026  0008D8  C038  F099         	movff	?___fttol+1,config_ccp2@valreg+1
  2027                           
  2028                           ;Pwm.c: 92: int n,x,i,j,z;
  2029                           ;Pwm.c: 93: unsigned int w,y;
  2030                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2031  0008DC  EE20  F0AE         	lfsr	2,config_ccp2@F3978
  2032  0008E0  EE10  F077         	lfsr	1,config_ccp2@a
  2033  0008E4  0E1D               	movlw	29
  2034  0008E6                     u2831:
  2035  0008E6  CFDB FFE3          	movff	plusw2,plusw1
  2036  0008EA  06E8               	decf	wreg,f,c
  2037  0008EC  E2FC               	bc	u2831
  2038                           
  2039                           ;Pwm.c: 96: n = valreg;
  2040  0008EE  C098  F0AA         	movff	config_ccp2@valreg,config_ccp2@n
  2041  0008F2  C099  F0AB         	movff	config_ccp2@valreg+1,config_ccp2@n+1
  2042                           
  2043                           ;Pwm.c: 97: i = 0;
  2044  0008F6  0E00               	movlw	0
  2045  0008F8  0100               	movlb	0	; () banked
  2046  0008FA  6F9B               	movwf	(config_ccp2@i+1)& (0+255),b
  2047  0008FC  0E00               	movlw	0
  2048  0008FE  6F9A               	movwf	config_ccp2@i& (0+255),b
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;Pwm.c: 98: z = 0;
  2052  000900  0E00               	movlw	0
  2053  000902  6F9D               	movwf	(config_ccp2@z+1)& (0+255),b
  2054  000904  0E00               	movlw	0
  2055  000906  6F9C               	movwf	config_ccp2@z& (0+255),b
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;Pwm.c: 99: y = 0;
  2059  000908  0E00               	movlw	0
  2060  00090A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2061  00090C  0E00               	movlw	0
  2062  00090E  6FA8               	movwf	config_ccp2@y& (0+255),b
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;Pwm.c: 100: w = 0;
  2066  000910  0E00               	movlw	0
  2067  000912  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2068  000914  0E00               	movlw	0
  2069  000916  6FA6               	movwf	config_ccp2@w& (0+255),b
  2070                           
  2071                           ;Pwm.c: 102: while(n > 0)
  2072  000918  D024               	goto	l200
  2073  00091A                     l2584:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;Pwm.c: 103: {
  2077                           ;Pwm.c: 104: a[i] = n % 2;
  2078  00091A  0E01               	movlw	1
  2079  00091C  15AA               	andwf	config_ccp2@n& (0+255),w,b
  2080  00091E  6E5D               	movwf	??_config_ccp2& (0+255),c
  2081  000920  0E00               	movlw	0
  2082  000922  15AB               	andwf	(config_ccp2@n+1)& (0+255),w,b
  2083  000924  6E5E               	movwf	(??_config_ccp2+1)& (0+255),c
  2084  000926  90D8               	bcf	status,0,c
  2085  000928  359A               	rlcf	config_ccp2@i& (0+255),w,b
  2086  00092A  6ED9               	movwf	fsr2l,c
  2087  00092C  359B               	rlcf	(config_ccp2@i+1)& (0+255),w,b
  2088  00092E  6EDA               	movwf	fsr2h,c
  2089  000930  0E77               	movlw	low config_ccp2@a
  2090  000932  26D9               	addwf	fsr2l,f,c
  2091  000934  0E00               	movlw	high config_ccp2@a
  2092  000936  22DA               	addwfc	fsr2h,f,c
  2093  000938  C05D  FFDE         	movff	??_config_ccp2,postinc2
  2094  00093C  C05E  FFDD         	movff	??_config_ccp2+1,postdec2
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;Pwm.c: 105: n = n / 2;
  2098  000940  C0AA  F001         	movff	config_ccp2@n,___awdiv@dividend
  2099  000944  C0AB  F002         	movff	config_ccp2@n+1,___awdiv@dividend+1
  2100  000948  0E00               	movlw	0
  2101  00094A  6E04               	movwf	___awdiv@divisor+1,c
  2102  00094C  0E02               	movlw	2
  2103  00094E  6E03               	movwf	___awdiv@divisor,c
  2104  000950  ECBC  F00E         	call	___awdiv	;wreg free
  2105  000954  C001  F0AA         	movff	?___awdiv,config_ccp2@n
  2106  000958  C002  F0AB         	movff	?___awdiv+1,config_ccp2@n+1
  2107                           
  2108                           ;Pwm.c: 106: i++;
  2109  00095C  0100               	movlb	0	; () banked
  2110  00095E  4B9A               	infsnz	config_ccp2@i& (0+255),f,b
  2111  000960  2B9B               	incf	(config_ccp2@i+1)& (0+255),f,b
  2112  000962                     l200:
  2113                           
  2114                           ; BSR set to: 0
  2115                           
  2116                           ; BSR set to: 0
  2117  000962  BFAB               	btfsc	(config_ccp2@n+1)& (0+255),7,b
  2118  000964  D005               	goto	u2840
  2119  000966  51AB               	movf	(config_ccp2@n+1)& (0+255),w,b
  2120  000968  E1D8               	bnz	l2584
  2121  00096A  05AA               	decf	config_ccp2@n& (0+255),w,b
  2122  00096C  B0D8               	btfsc	status,0,c
  2123  00096E  D7D5               	goto	l201
  2124  000970                     u2840:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;Pwm.c: 107: }
  2128                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  2129                           
  2130                           ; BSR set to: 0
  2131  000970  0E00               	movlw	0
  2132  000972  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2133  000974  0E00               	movlw	0
  2134  000976  6FAC               	movwf	config_ccp2@j& (0+255),b
  2135  000978                     l2594:
  2136                           
  2137                           ; BSR set to: 0
  2138  000978  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2139  00097A  D006               	goto	l203
  2140  00097C  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2141  00097E  E159               	bnz	l2610
  2142  000980  0E02               	movlw	2
  2143  000982  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2144  000984  B0D8               	btfsc	status,0,c
  2145  000986  D055               	goto	u2860
  2146  000988                     l203:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;Pwm.c: 110: {
  2150                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2151                           
  2152                           ; BSR set to: 0
  2153  000988  C0AC  F009         	movff	config_ccp2@j,___awtoft@c
  2154  00098C  C0AD  F00A         	movff	config_ccp2@j+1,___awtoft@c+1
  2155  000990  EC33  F010         	call	___awtoft	;wreg free
  2156  000994  C009  F09E         	movff	?___awtoft,_config_ccp2$1552
  2157  000998  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1552+1
  2158  00099C  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1552+2
  2159                           
  2160                           ;Pwm.c: 110: {
  2161                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2162  0009A0  C09E  F069         	movff	_config_ccp2$1552,pow@y
  2163  0009A4  C09F  F06A         	movff	_config_ccp2$1552+1,pow@y+1
  2164  0009A8  C0A0  F06B         	movff	_config_ccp2$1552+2,pow@y+2
  2165  0009AC  0E00               	movlw	0
  2166  0009AE  0100               	movlb	0	; () banked
  2167  0009B0  6F66               	movwf	pow@x& (0+255),b
  2168  0009B2  0E00               	movlw	0
  2169  0009B4  6F67               	movwf	(pow@x+1)& (0+255),b
  2170  0009B6  0E40               	movlw	64
  2171  0009B8  6F68               	movwf	(pow@x+2)& (0+255),b
  2172  0009BA  EC8A  F009         	call	_pow	;wreg free
  2173  0009BE  C066  F0A1         	movff	?_pow,_config_ccp2$1553
  2174  0009C2  C067  F0A2         	movff	?_pow+1,_config_ccp2$1553+1
  2175  0009C6  C068  F0A3         	movff	?_pow+2,_config_ccp2$1553+2
  2176                           
  2177                           ;Pwm.c: 110: {
  2178                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2179  0009CA  C0A1  F010         	movff	_config_ccp2$1553,___ftmul@f2
  2180  0009CE  C0A2  F011         	movff	_config_ccp2$1553+1,___ftmul@f2+1
  2181  0009D2  C0A3  F012         	movff	_config_ccp2$1553+2,___ftmul@f2+2
  2182  0009D6  90D8               	bcf	status,0,c
  2183  0009D8  0100               	movlb	0	; () banked
  2184  0009DA  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2185  0009DC  6ED9               	movwf	fsr2l,c
  2186  0009DE  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2187  0009E0  6EDA               	movwf	fsr2h,c
  2188  0009E2  0E77               	movlw	low config_ccp2@a
  2189  0009E4  26D9               	addwf	fsr2l,f,c
  2190  0009E6  0E00               	movlw	high config_ccp2@a
  2191  0009E8  22DA               	addwfc	fsr2h,f,c
  2192  0009EA  CFDE F009          	movff	postinc2,___awtoft@c
  2193  0009EE  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2194  0009F2  EC33  F010         	call	___awtoft	;wreg free
  2195  0009F6  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2196  0009FA  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2197  0009FE  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2198  000A02  EC51  F00B         	call	___ftmul	;wreg free
  2199  000A06  C00D  F037         	movff	?___ftmul,___fttol@f1
  2200  000A0A  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2201  000A0E  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2202  000A12  ECD7  F00A         	call	___fttol	;wreg free
  2203  000A16  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2204  000A1A  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2205                           
  2206                           ;Pwm.c: 112: y = x + y;
  2207  000A1E  0100               	movlb	0	; () banked
  2208  000A20  51A8               	movf	config_ccp2@y& (0+255),w,b
  2209  000A22  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2210  000A24  6FA8               	movwf	config_ccp2@y& (0+255),b
  2211  000A26  51A9               	movf	(config_ccp2@y+1)& (0+255),w,b
  2212  000A28  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2213  000A2A  6FA9               	movwf	(config_ccp2@y+1)& (0+255),b
  2214                           
  2215                           ; BSR set to: 0
  2216  000A2C  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2217  000A2E  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2218  000A30  D7A3               	goto	l2594
  2219  000A32                     u2860:
  2220  000A32                     l2610:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;Pwm.c: 113: }
  2224                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  2225  000A32  0E00               	movlw	0
  2226  000A34  6FAD               	movwf	(config_ccp2@j+1)& (0+255),b
  2227  000A36  0E02               	movlw	2
  2228  000A38  6FAC               	movwf	config_ccp2@j& (0+255),b
  2229  000A3A                     l2612:
  2230                           
  2231                           ; BSR set to: 0
  2232  000A3A  BFAD               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2233  000A3C  D006               	goto	l205
  2234  000A3E  51AD               	movf	(config_ccp2@j+1)& (0+255),w,b
  2235  000A40  E15B               	bnz	l2630
  2236  000A42  0E0A               	movlw	10
  2237  000A44  5DAC               	subwf	config_ccp2@j& (0+255),w,b
  2238  000A46  B0D8               	btfsc	status,0,c
  2239  000A48  D057               	goto	u2880
  2240  000A4A                     l205:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;Pwm.c: 115: {
  2244                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2245                           
  2246                           ; BSR set to: 0
  2247  000A4A  C09C  F009         	movff	config_ccp2@z,___awtoft@c
  2248  000A4E  C09D  F00A         	movff	config_ccp2@z+1,___awtoft@c+1
  2249  000A52  EC33  F010         	call	___awtoft	;wreg free
  2250  000A56  C009  F09E         	movff	?___awtoft,_config_ccp2$1552
  2251  000A5A  C00A  F09F         	movff	?___awtoft+1,_config_ccp2$1552+1
  2252  000A5E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp2$1552+2
  2253                           
  2254                           ;Pwm.c: 115: {
  2255                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2256  000A62  C09E  F069         	movff	_config_ccp2$1552,pow@y
  2257  000A66  C09F  F06A         	movff	_config_ccp2$1552+1,pow@y+1
  2258  000A6A  C0A0  F06B         	movff	_config_ccp2$1552+2,pow@y+2
  2259  000A6E  0E00               	movlw	0
  2260  000A70  0100               	movlb	0	; () banked
  2261  000A72  6F66               	movwf	pow@x& (0+255),b
  2262  000A74  0E00               	movlw	0
  2263  000A76  6F67               	movwf	(pow@x+1)& (0+255),b
  2264  000A78  0E40               	movlw	64
  2265  000A7A  6F68               	movwf	(pow@x+2)& (0+255),b
  2266  000A7C  EC8A  F009         	call	_pow	;wreg free
  2267  000A80  C066  F0A1         	movff	?_pow,_config_ccp2$1553
  2268  000A84  C067  F0A2         	movff	?_pow+1,_config_ccp2$1553+1
  2269  000A88  C068  F0A3         	movff	?_pow+2,_config_ccp2$1553+2
  2270                           
  2271                           ;Pwm.c: 115: {
  2272                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2273  000A8C  C0A1  F010         	movff	_config_ccp2$1553,___ftmul@f2
  2274  000A90  C0A2  F011         	movff	_config_ccp2$1553+1,___ftmul@f2+1
  2275  000A94  C0A3  F012         	movff	_config_ccp2$1553+2,___ftmul@f2+2
  2276  000A98  90D8               	bcf	status,0,c
  2277  000A9A  0100               	movlb	0	; () banked
  2278  000A9C  35AC               	rlcf	config_ccp2@j& (0+255),w,b
  2279  000A9E  6ED9               	movwf	fsr2l,c
  2280  000AA0  35AD               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2281  000AA2  6EDA               	movwf	fsr2h,c
  2282  000AA4  0E77               	movlw	low config_ccp2@a
  2283  000AA6  26D9               	addwf	fsr2l,f,c
  2284  000AA8  0E00               	movlw	high config_ccp2@a
  2285  000AAA  22DA               	addwfc	fsr2h,f,c
  2286  000AAC  CFDE F009          	movff	postinc2,___awtoft@c
  2287  000AB0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2288  000AB4  EC33  F010         	call	___awtoft	;wreg free
  2289  000AB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2290  000ABC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2291  000AC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2292  000AC4  EC51  F00B         	call	___ftmul	;wreg free
  2293  000AC8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2294  000ACC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2295  000AD0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2296  000AD4  ECD7  F00A         	call	___fttol	;wreg free
  2297  000AD8  C037  F0A4         	movff	?___fttol,config_ccp2@x
  2298  000ADC  C038  F0A5         	movff	?___fttol+1,config_ccp2@x+1
  2299                           
  2300                           ;Pwm.c: 117: w = x + w;
  2301  000AE0  0100               	movlb	0	; () banked
  2302  000AE2  51A6               	movf	config_ccp2@w& (0+255),w,b
  2303  000AE4  25A4               	addwf	config_ccp2@x& (0+255),w,b
  2304  000AE6  6FA6               	movwf	config_ccp2@w& (0+255),b
  2305  000AE8  51A7               	movf	(config_ccp2@w+1)& (0+255),w,b
  2306  000AEA  21A5               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2307  000AEC  6FA7               	movwf	(config_ccp2@w+1)& (0+255),b
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;Pwm.c: 118: z++;
  2311  000AEE  4B9C               	infsnz	config_ccp2@z& (0+255),f,b
  2312  000AF0  2B9D               	incf	(config_ccp2@z+1)& (0+255),f,b
  2313                           
  2314                           ; BSR set to: 0
  2315  000AF2  4BAC               	infsnz	config_ccp2@j& (0+255),f,b
  2316  000AF4  2BAD               	incf	(config_ccp2@j+1)& (0+255),f,b
  2317  000AF6  D7A1               	goto	l2612
  2318  000AF8                     u2880:
  2319  000AF8                     l2630:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;Pwm.c: 119: }
  2323                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  2324  000AF8  C0A8  F05D         	movff	config_ccp2@y,??_config_ccp2
  2325  000AFC  3A5D               	swapf	??_config_ccp2,f,c
  2326  000AFE  50BA               	movf	4026,w,c	;volatile
  2327  000B00  185D               	xorwf	??_config_ccp2,w,c
  2328  000B02  0BCF               	andlw	-49
  2329  000B04  185D               	xorwf	??_config_ccp2,w,c
  2330  000B06  6EBA               	movwf	4026,c	;volatile
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;Pwm.c: 122: CCPR2L = w;
  2334  000B08  C0A6  FFBB         	movff	config_ccp2@w,4027	;volatile
  2335                           
  2336                           ; BSR set to: 0
  2337  000B0C  0012               	return		;funcret
  2338  000B0E                     __end_of_config_ccp2:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           intcon	equ	0xFF2
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           plusw1	equ	0xFE3
  2345                           postinc2	equ	0xFDE
  2346                           postdec2	equ	0xFDD
  2347                           plusw2	equ	0xFDB
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8
  2351                           
  2352 ;; *************** function _config_ccp1 *****************
  2353 ;; Defined at:
  2354 ;;		line 43 in file "Pwm.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  duty1           2   90[COMRAM] int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  a              30   23[BANK0 ] int [15]
  2359 ;;  j               2   76[BANK0 ] int 
  2360 ;;  n               2   74[BANK0 ] int 
  2361 ;;  y               2   72[BANK0 ] unsigned int 
  2362 ;;  w               2   70[BANK0 ] unsigned int 
  2363 ;;  x               2   68[BANK0 ] int 
  2364 ;;  z               2   60[BANK0 ] int 
  2365 ;;  i               2   58[BANK0 ] int 
  2366 ;;  valreg          2   56[BANK0 ] int 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2376 ;;      Params:         2       0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0      55       0       0       0       0       0       0       0
  2378 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2379 ;;      Totals:         4      55       0       0       0       0       0       0       0
  2380 ;;Total ram usage:       59 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    5
  2383 ;; This function calls:
  2384 ;;		___awdiv
  2385 ;;		___awtoft
  2386 ;;		___ftadd
  2387 ;;		___ftdiv
  2388 ;;		___ftmul
  2389 ;;		___fttol
  2390 ;;		_pow
  2391 ;; This function is called by:
  2392 ;;		_carroAvanzar
  2393 ;;		_carroAvanzarEspecial
  2394 ;;		_carroGirarEspecial
  2395 ;;		_carroGirar
  2396 ;;		_carroAtras
  2397 ;;		_carroMatar
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text10
  2402  000B0E                     __ptext10:
  2403                           	opt stack 0
  2404  000B0E                     _config_ccp1:
  2405                           	opt stack 24
  2406                           
  2407                           ;Pwm.c: 45: int valreg;
  2408                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;incstack = 0
  2412  000B0E  C05B  F009         	movff	config_ccp1@duty1,___awtoft@c
  2413  000B12  C05C  F00A         	movff	config_ccp1@duty1+1,___awtoft@c+1
  2414  000B16  EC33  F010         	call	___awtoft	;wreg free
  2415  000B1A  C009  F010         	movff	?___awtoft,___ftmul@f2
  2416  000B1E  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  2417  000B22  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  2418  000B26  0E00               	movlw	0
  2419  000B28  6E2E               	movwf	___ftadd@f2,c
  2420  000B2A  0E80               	movlw	128
  2421  000B2C  6E2F               	movwf	___ftadd@f2+1,c
  2422  000B2E  0E3F               	movlw	63
  2423  000B30  6E30               	movwf	___ftadd@f2+2,c
  2424  000B32  C0EA  F02B         	movff	_pr2g,___ftadd@f1
  2425  000B36  C0EB  F02C         	movff	_pr2g+1,___ftadd@f1+1
  2426  000B3A  C0EC  F02D         	movff	_pr2g+2,___ftadd@f1+2
  2427  000B3E  ECE6  F007         	call	___ftadd	;wreg free
  2428  000B42  C02B  F00D         	movff	?___ftadd,___ftmul@f1
  2429  000B46  C02C  F00E         	movff	?___ftadd+1,___ftmul@f1+1
  2430  000B4A  C02D  F00F         	movff	?___ftadd+2,___ftmul@f1+2
  2431  000B4E  EC51  F00B         	call	___ftmul	;wreg free
  2432  000B52  C00D  F095         	movff	?___ftmul,_config_ccp1$1548
  2433  000B56  C00E  F096         	movff	?___ftmul+1,_config_ccp1$1548+1
  2434  000B5A  C00F  F097         	movff	?___ftmul+2,_config_ccp1$1548+2
  2435                           
  2436                           ;Pwm.c: 45: int valreg;
  2437                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  2438  000B5E  0E00               	movlw	0
  2439  000B60  6E1F               	movwf	___ftdiv@f2,c
  2440  000B62  0EC8               	movlw	200
  2441  000B64  6E20               	movwf	___ftdiv@f2+1,c
  2442  000B66  0E42               	movlw	66
  2443  000B68  6E21               	movwf	___ftdiv@f2+2,c
  2444  000B6A  0E00               	movlw	0
  2445  000B6C  6E10               	movwf	___ftmul@f2,c
  2446  000B6E  0E80               	movlw	128
  2447  000B70  6E11               	movwf	___ftmul@f2+1,c
  2448  000B72  0E40               	movlw	64
  2449  000B74  6E12               	movwf	___ftmul@f2+2,c
  2450  000B76  C095  F00D         	movff	_config_ccp1$1548,___ftmul@f1
  2451  000B7A  C096  F00E         	movff	_config_ccp1$1548+1,___ftmul@f1+1
  2452  000B7E  C097  F00F         	movff	_config_ccp1$1548+2,___ftmul@f1+2
  2453  000B82  EC51  F00B         	call	___ftmul	;wreg free
  2454  000B86  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2455  000B8A  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2456  000B8E  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2457  000B92  ECCB  F00B         	call	___ftdiv	;wreg free
  2458  000B96  C01C  F037         	movff	?___ftdiv,___fttol@f1
  2459  000B9A  C01D  F038         	movff	?___ftdiv+1,___fttol@f1+1
  2460  000B9E  C01E  F039         	movff	?___ftdiv+2,___fttol@f1+2
  2461  000BA2  ECD7  F00A         	call	___fttol	;wreg free
  2462  000BA6  C037  F098         	movff	?___fttol,config_ccp1@valreg
  2463  000BAA  C038  F099         	movff	?___fttol+1,config_ccp1@valreg+1
  2464                           
  2465                           ;Pwm.c: 50: int n,x,i,j,z;
  2466                           ;Pwm.c: 51: unsigned int w,y;
  2467                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2468  000BAE  EE20  F0CC         	lfsr	2,config_ccp1@F3967
  2469  000BB2  EE10  F077         	lfsr	1,config_ccp1@a
  2470  000BB6  0E1D               	movlw	29
  2471  000BB8                     u2771:
  2472  000BB8  CFDB FFE3          	movff	plusw2,plusw1
  2473  000BBC  06E8               	decf	wreg,f,c
  2474  000BBE  E2FC               	bc	u2771
  2475                           
  2476                           ;Pwm.c: 54: n = valreg;
  2477  000BC0  C098  F0AA         	movff	config_ccp1@valreg,config_ccp1@n
  2478  000BC4  C099  F0AB         	movff	config_ccp1@valreg+1,config_ccp1@n+1
  2479                           
  2480                           ;Pwm.c: 55: i = 0;
  2481  000BC8  0E00               	movlw	0
  2482  000BCA  0100               	movlb	0	; () banked
  2483  000BCC  6F9B               	movwf	(config_ccp1@i+1)& (0+255),b
  2484  000BCE  0E00               	movlw	0
  2485  000BD0  6F9A               	movwf	config_ccp1@i& (0+255),b
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;Pwm.c: 56: z = 0;
  2489  000BD2  0E00               	movlw	0
  2490  000BD4  6F9D               	movwf	(config_ccp1@z+1)& (0+255),b
  2491  000BD6  0E00               	movlw	0
  2492  000BD8  6F9C               	movwf	config_ccp1@z& (0+255),b
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;Pwm.c: 57: y = 0;
  2496  000BDA  0E00               	movlw	0
  2497  000BDC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2498  000BDE  0E00               	movlw	0
  2499  000BE0  6FA8               	movwf	config_ccp1@y& (0+255),b
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;Pwm.c: 58: w = 0;
  2503  000BE2  0E00               	movlw	0
  2504  000BE4  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2505  000BE6  0E00               	movlw	0
  2506  000BE8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2507                           
  2508                           ;Pwm.c: 60: while(n > 0)
  2509  000BEA  D024               	goto	l188
  2510  000BEC                     l2520:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;Pwm.c: 61: {
  2514                           ;Pwm.c: 62: a[i] = n % 2;
  2515  000BEC  0E01               	movlw	1
  2516  000BEE  15AA               	andwf	config_ccp1@n& (0+255),w,b
  2517  000BF0  6E5D               	movwf	??_config_ccp1& (0+255),c
  2518  000BF2  0E00               	movlw	0
  2519  000BF4  15AB               	andwf	(config_ccp1@n+1)& (0+255),w,b
  2520  000BF6  6E5E               	movwf	(??_config_ccp1+1)& (0+255),c
  2521  000BF8  90D8               	bcf	status,0,c
  2522  000BFA  359A               	rlcf	config_ccp1@i& (0+255),w,b
  2523  000BFC  6ED9               	movwf	fsr2l,c
  2524  000BFE  359B               	rlcf	(config_ccp1@i+1)& (0+255),w,b
  2525  000C00  6EDA               	movwf	fsr2h,c
  2526  000C02  0E77               	movlw	low config_ccp1@a
  2527  000C04  26D9               	addwf	fsr2l,f,c
  2528  000C06  0E00               	movlw	high config_ccp1@a
  2529  000C08  22DA               	addwfc	fsr2h,f,c
  2530  000C0A  C05D  FFDE         	movff	??_config_ccp1,postinc2
  2531  000C0E  C05E  FFDD         	movff	??_config_ccp1+1,postdec2
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;Pwm.c: 63: n = n / 2;
  2535  000C12  C0AA  F001         	movff	config_ccp1@n,___awdiv@dividend
  2536  000C16  C0AB  F002         	movff	config_ccp1@n+1,___awdiv@dividend+1
  2537  000C1A  0E00               	movlw	0
  2538  000C1C  6E04               	movwf	___awdiv@divisor+1,c
  2539  000C1E  0E02               	movlw	2
  2540  000C20  6E03               	movwf	___awdiv@divisor,c
  2541  000C22  ECBC  F00E         	call	___awdiv	;wreg free
  2542  000C26  C001  F0AA         	movff	?___awdiv,config_ccp1@n
  2543  000C2A  C002  F0AB         	movff	?___awdiv+1,config_ccp1@n+1
  2544                           
  2545                           ;Pwm.c: 64: i++;
  2546  000C2E  0100               	movlb	0	; () banked
  2547  000C30  4B9A               	infsnz	config_ccp1@i& (0+255),f,b
  2548  000C32  2B9B               	incf	(config_ccp1@i+1)& (0+255),f,b
  2549  000C34                     l188:
  2550                           
  2551                           ; BSR set to: 0
  2552                           
  2553                           ; BSR set to: 0
  2554  000C34  BFAB               	btfsc	(config_ccp1@n+1)& (0+255),7,b
  2555  000C36  D005               	goto	u2780
  2556  000C38  51AB               	movf	(config_ccp1@n+1)& (0+255),w,b
  2557  000C3A  E1D8               	bnz	l2520
  2558  000C3C  05AA               	decf	config_ccp1@n& (0+255),w,b
  2559  000C3E  B0D8               	btfsc	status,0,c
  2560  000C40  D7D5               	goto	l189
  2561  000C42                     u2780:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;Pwm.c: 65: }
  2565                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  2566                           
  2567                           ; BSR set to: 0
  2568  000C42  0E00               	movlw	0
  2569  000C44  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2570  000C46  0E00               	movlw	0
  2571  000C48  6FAC               	movwf	config_ccp1@j& (0+255),b
  2572  000C4A                     l2530:
  2573                           
  2574                           ; BSR set to: 0
  2575  000C4A  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2576  000C4C  D006               	goto	l191
  2577  000C4E  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2578  000C50  E159               	bnz	l2546
  2579  000C52  0E02               	movlw	2
  2580  000C54  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2581  000C56  B0D8               	btfsc	status,0,c
  2582  000C58  D055               	goto	u2800
  2583  000C5A                     l191:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;Pwm.c: 68: {
  2587                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2588                           
  2589                           ; BSR set to: 0
  2590  000C5A  C0AC  F009         	movff	config_ccp1@j,___awtoft@c
  2591  000C5E  C0AD  F00A         	movff	config_ccp1@j+1,___awtoft@c+1
  2592  000C62  EC33  F010         	call	___awtoft	;wreg free
  2593  000C66  C009  F09E         	movff	?___awtoft,_config_ccp1$1549
  2594  000C6A  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1549+1
  2595  000C6E  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1549+2
  2596                           
  2597                           ;Pwm.c: 68: {
  2598                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2599  000C72  C09E  F069         	movff	_config_ccp1$1549,pow@y
  2600  000C76  C09F  F06A         	movff	_config_ccp1$1549+1,pow@y+1
  2601  000C7A  C0A0  F06B         	movff	_config_ccp1$1549+2,pow@y+2
  2602  000C7E  0E00               	movlw	0
  2603  000C80  0100               	movlb	0	; () banked
  2604  000C82  6F66               	movwf	pow@x& (0+255),b
  2605  000C84  0E00               	movlw	0
  2606  000C86  6F67               	movwf	(pow@x+1)& (0+255),b
  2607  000C88  0E40               	movlw	64
  2608  000C8A  6F68               	movwf	(pow@x+2)& (0+255),b
  2609  000C8C  EC8A  F009         	call	_pow	;wreg free
  2610  000C90  C066  F0A1         	movff	?_pow,_config_ccp1$1550
  2611  000C94  C067  F0A2         	movff	?_pow+1,_config_ccp1$1550+1
  2612  000C98  C068  F0A3         	movff	?_pow+2,_config_ccp1$1550+2
  2613                           
  2614                           ;Pwm.c: 68: {
  2615                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  2616  000C9C  C0A1  F010         	movff	_config_ccp1$1550,___ftmul@f2
  2617  000CA0  C0A2  F011         	movff	_config_ccp1$1550+1,___ftmul@f2+1
  2618  000CA4  C0A3  F012         	movff	_config_ccp1$1550+2,___ftmul@f2+2
  2619  000CA8  90D8               	bcf	status,0,c
  2620  000CAA  0100               	movlb	0	; () banked
  2621  000CAC  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2622  000CAE  6ED9               	movwf	fsr2l,c
  2623  000CB0  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2624  000CB2  6EDA               	movwf	fsr2h,c
  2625  000CB4  0E77               	movlw	low config_ccp1@a
  2626  000CB6  26D9               	addwf	fsr2l,f,c
  2627  000CB8  0E00               	movlw	high config_ccp1@a
  2628  000CBA  22DA               	addwfc	fsr2h,f,c
  2629  000CBC  CFDE F009          	movff	postinc2,___awtoft@c
  2630  000CC0  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2631  000CC4  EC33  F010         	call	___awtoft	;wreg free
  2632  000CC8  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2633  000CCC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2634  000CD0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2635  000CD4  EC51  F00B         	call	___ftmul	;wreg free
  2636  000CD8  C00D  F037         	movff	?___ftmul,___fttol@f1
  2637  000CDC  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2638  000CE0  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2639  000CE4  ECD7  F00A         	call	___fttol	;wreg free
  2640  000CE8  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2641  000CEC  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2642                           
  2643                           ;Pwm.c: 70: y = x + y;
  2644  000CF0  0100               	movlb	0	; () banked
  2645  000CF2  51A8               	movf	config_ccp1@y& (0+255),w,b
  2646  000CF4  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2647  000CF6  6FA8               	movwf	config_ccp1@y& (0+255),b
  2648  000CF8  51A9               	movf	(config_ccp1@y+1)& (0+255),w,b
  2649  000CFA  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2650  000CFC  6FA9               	movwf	(config_ccp1@y+1)& (0+255),b
  2651                           
  2652                           ; BSR set to: 0
  2653  000CFE  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2654  000D00  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2655  000D02  D7A3               	goto	l2530
  2656  000D04                     u2800:
  2657  000D04                     l2546:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;Pwm.c: 71: }
  2661                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  2662  000D04  0E00               	movlw	0
  2663  000D06  6FAD               	movwf	(config_ccp1@j+1)& (0+255),b
  2664  000D08  0E02               	movlw	2
  2665  000D0A  6FAC               	movwf	config_ccp1@j& (0+255),b
  2666  000D0C                     l2548:
  2667                           
  2668                           ; BSR set to: 0
  2669  000D0C  BFAD               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  2670  000D0E  D006               	goto	l193
  2671  000D10  51AD               	movf	(config_ccp1@j+1)& (0+255),w,b
  2672  000D12  E15B               	bnz	l2566
  2673  000D14  0E0A               	movlw	10
  2674  000D16  5DAC               	subwf	config_ccp1@j& (0+255),w,b
  2675  000D18  B0D8               	btfsc	status,0,c
  2676  000D1A  D057               	goto	u2820
  2677  000D1C                     l193:
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;Pwm.c: 73: {
  2681                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2682                           
  2683                           ; BSR set to: 0
  2684  000D1C  C09C  F009         	movff	config_ccp1@z,___awtoft@c
  2685  000D20  C09D  F00A         	movff	config_ccp1@z+1,___awtoft@c+1
  2686  000D24  EC33  F010         	call	___awtoft	;wreg free
  2687  000D28  C009  F09E         	movff	?___awtoft,_config_ccp1$1549
  2688  000D2C  C00A  F09F         	movff	?___awtoft+1,_config_ccp1$1549+1
  2689  000D30  C00B  F0A0         	movff	?___awtoft+2,_config_ccp1$1549+2
  2690                           
  2691                           ;Pwm.c: 73: {
  2692                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2693  000D34  C09E  F069         	movff	_config_ccp1$1549,pow@y
  2694  000D38  C09F  F06A         	movff	_config_ccp1$1549+1,pow@y+1
  2695  000D3C  C0A0  F06B         	movff	_config_ccp1$1549+2,pow@y+2
  2696  000D40  0E00               	movlw	0
  2697  000D42  0100               	movlb	0	; () banked
  2698  000D44  6F66               	movwf	pow@x& (0+255),b
  2699  000D46  0E00               	movlw	0
  2700  000D48  6F67               	movwf	(pow@x+1)& (0+255),b
  2701  000D4A  0E40               	movlw	64
  2702  000D4C  6F68               	movwf	(pow@x+2)& (0+255),b
  2703  000D4E  EC8A  F009         	call	_pow	;wreg free
  2704  000D52  C066  F0A1         	movff	?_pow,_config_ccp1$1550
  2705  000D56  C067  F0A2         	movff	?_pow+1,_config_ccp1$1550+1
  2706  000D5A  C068  F0A3         	movff	?_pow+2,_config_ccp1$1550+2
  2707                           
  2708                           ;Pwm.c: 73: {
  2709                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  2710  000D5E  C0A1  F010         	movff	_config_ccp1$1550,___ftmul@f2
  2711  000D62  C0A2  F011         	movff	_config_ccp1$1550+1,___ftmul@f2+1
  2712  000D66  C0A3  F012         	movff	_config_ccp1$1550+2,___ftmul@f2+2
  2713  000D6A  90D8               	bcf	status,0,c
  2714  000D6C  0100               	movlb	0	; () banked
  2715  000D6E  35AC               	rlcf	config_ccp1@j& (0+255),w,b
  2716  000D70  6ED9               	movwf	fsr2l,c
  2717  000D72  35AD               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  2718  000D74  6EDA               	movwf	fsr2h,c
  2719  000D76  0E77               	movlw	low config_ccp1@a
  2720  000D78  26D9               	addwf	fsr2l,f,c
  2721  000D7A  0E00               	movlw	high config_ccp1@a
  2722  000D7C  22DA               	addwfc	fsr2h,f,c
  2723  000D7E  CFDE F009          	movff	postinc2,___awtoft@c
  2724  000D82  CFDD F00A          	movff	postdec2,___awtoft@c+1
  2725  000D86  EC33  F010         	call	___awtoft	;wreg free
  2726  000D8A  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2727  000D8E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2728  000D92  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2729  000D96  EC51  F00B         	call	___ftmul	;wreg free
  2730  000D9A  C00D  F037         	movff	?___ftmul,___fttol@f1
  2731  000D9E  C00E  F038         	movff	?___ftmul+1,___fttol@f1+1
  2732  000DA2  C00F  F039         	movff	?___ftmul+2,___fttol@f1+2
  2733  000DA6  ECD7  F00A         	call	___fttol	;wreg free
  2734  000DAA  C037  F0A4         	movff	?___fttol,config_ccp1@x
  2735  000DAE  C038  F0A5         	movff	?___fttol+1,config_ccp1@x+1
  2736                           
  2737                           ;Pwm.c: 75: w = x + w;
  2738  000DB2  0100               	movlb	0	; () banked
  2739  000DB4  51A6               	movf	config_ccp1@w& (0+255),w,b
  2740  000DB6  25A4               	addwf	config_ccp1@x& (0+255),w,b
  2741  000DB8  6FA6               	movwf	config_ccp1@w& (0+255),b
  2742  000DBA  51A7               	movf	(config_ccp1@w+1)& (0+255),w,b
  2743  000DBC  21A5               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  2744  000DBE  6FA7               	movwf	(config_ccp1@w+1)& (0+255),b
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;Pwm.c: 76: z++;
  2748  000DC0  4B9C               	infsnz	config_ccp1@z& (0+255),f,b
  2749  000DC2  2B9D               	incf	(config_ccp1@z+1)& (0+255),f,b
  2750                           
  2751                           ; BSR set to: 0
  2752  000DC4  4BAC               	infsnz	config_ccp1@j& (0+255),f,b
  2753  000DC6  2BAD               	incf	(config_ccp1@j+1)& (0+255),f,b
  2754  000DC8  D7A1               	goto	l2548
  2755  000DCA                     u2820:
  2756  000DCA                     l2566:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;Pwm.c: 77: }
  2760                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  2761  000DCA  C0A8  F05D         	movff	config_ccp1@y,??_config_ccp1
  2762  000DCE  3A5D               	swapf	??_config_ccp1,f,c
  2763  000DD0  50BD               	movf	4029,w,c	;volatile
  2764  000DD2  185D               	xorwf	??_config_ccp1,w,c
  2765  000DD4  0BCF               	andlw	-49
  2766  000DD6  185D               	xorwf	??_config_ccp1,w,c
  2767  000DD8  6EBD               	movwf	4029,c	;volatile
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;Pwm.c: 80: CCPR1L = w;
  2771  000DDA  C0A6  FFBE         	movff	config_ccp1@w,4030	;volatile
  2772                           
  2773                           ; BSR set to: 0
  2774  000DDE  0012               	return		;funcret
  2775  000DE0                     __end_of_config_ccp1:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           intcon	equ	0xFF2
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           plusw1	equ	0xFE3
  2782                           postinc2	equ	0xFDE
  2783                           postdec2	equ	0xFDD
  2784                           plusw2	equ	0xFDB
  2785                           fsr2h	equ	0xFDA
  2786                           fsr2l	equ	0xFD9
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function _pow *****************
  2790 ;; Defined at:
  2791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  x               3    6[BANK0 ] void 
  2794 ;;  y               3    9[BANK0 ] void 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  yi              4   19[BANK0 ] unsigned long 
  2797 ;;  sign            1   18[BANK0 ] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  3    6[BANK0 ] unsigned char 
  2800 ;; Registers used:
  2801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         0       6       0       0       0       0       0       0       0
  2808 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2811 ;;Total ram usage:       17 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    4
  2814 ;; This function calls:
  2815 ;;		___ftge
  2816 ;;		___ftmul
  2817 ;;		___ftneg
  2818 ;;		___fttol
  2819 ;;		___lltoft
  2820 ;;		_exp
  2821 ;;		_log
  2822 ;; This function is called by:
  2823 ;;		_config_ccp1
  2824 ;;		_config_ccp2
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text11
  2829  001314                     __ptext11:
  2830                           	opt stack 0
  2831  001314                     _pow:
  2832                           	opt stack 24
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;incstack = 0
  2836  001314  0E00               	movlw	0
  2837  001316  0100               	movlb	0	; () banked
  2838  001318  6F72               	movwf	pow@sign& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841  00131A  5166               	movf	pow@x& (0+255),w,b
  2842  00131C  1167               	iorwf	(pow@x+1)& (0+255),w,b
  2843  00131E  1168               	iorwf	(pow@x+2)& (0+255),w,b
  2844  001320  A4D8               	btfss	status,2,c
  2845  001322  D01D               	goto	l641
  2846                           
  2847                           ; BSR set to: 0
  2848  001324  0E00               	movlw	0
  2849  001326  6E01               	movwf	___ftge@ff1,c
  2850  001328  0E00               	movlw	0
  2851  00132A  6E02               	movwf	___ftge@ff1+1,c
  2852  00132C  0E00               	movlw	0
  2853  00132E  6E03               	movwf	___ftge@ff1+2,c
  2854  001330  C069  F004         	movff	pow@y,___ftge@ff2
  2855  001334  C06A  F005         	movff	pow@y+1,___ftge@ff2+1
  2856  001338  C06B  F006         	movff	pow@y+2,___ftge@ff2+2
  2857  00133C  EC74  F00E         	call	___ftge	;wreg free
  2858  001340  A0D8               	btfss	status,0,c
  2859  001342  D005               	goto	l642
  2860  001344  0E00               	movlw	0
  2861  001346  0100               	movlb	0	; () banked
  2862  001348  6FEE               	movwf	(_errno+1)& (0+255),b
  2863  00134A  0E21               	movlw	33
  2864  00134C  6FED               	movwf	_errno& (0+255),b
  2865  00134E                     l642:
  2866  00134E  0E00               	movlw	0
  2867  001350  0100               	movlb	0	; () banked
  2868  001352  6F66               	movwf	?_pow& (0+255),b
  2869  001354  0E00               	movlw	0
  2870  001356  6F67               	movwf	(?_pow+1)& (0+255),b
  2871  001358  0E00               	movlw	0
  2872  00135A  6F68               	movwf	(?_pow+2)& (0+255),b
  2873                           
  2874                           ; BSR set to: 0
  2875  00135C  0012               	return	
  2876  00135E                     l641:
  2877                           
  2878                           ; BSR set to: 0
  2879                           
  2880                           ; BSR set to: 0
  2881  00135E  5169               	movf	pow@y& (0+255),w,b
  2882  001360  116A               	iorwf	(pow@y+1)& (0+255),w,b
  2883  001362  116B               	iorwf	(pow@y+2)& (0+255),w,b
  2884  001364  A4D8               	btfss	status,2,c
  2885  001366  D007               	goto	l644
  2886                           
  2887                           ; BSR set to: 0
  2888  001368  0E00               	movlw	0
  2889  00136A  6F66               	movwf	?_pow& (0+255),b
  2890  00136C  0E80               	movlw	128
  2891  00136E  6F67               	movwf	(?_pow+1)& (0+255),b
  2892  001370  0E3F               	movlw	63
  2893  001372  6F68               	movwf	(?_pow+2)& (0+255),b
  2894                           
  2895                           ; BSR set to: 0
  2896  001374  0012               	return	
  2897  001376                     l644:
  2898                           
  2899                           ; BSR set to: 0
  2900                           
  2901                           ; BSR set to: 0
  2902  001376  AF68               	btfss	(pow@x+2)& (0+255),7,b
  2903  001378  D041               	goto	l645
  2904                           
  2905                           ; BSR set to: 0
  2906  00137A  C069  F037         	movff	pow@y,___fttol@f1
  2907  00137E  C06A  F038         	movff	pow@y+1,___fttol@f1+1
  2908  001382  C06B  F039         	movff	pow@y+2,___fttol@f1+2
  2909  001386  ECD7  F00A         	call	___fttol	;wreg free
  2910  00138A  C037  F073         	movff	?___fttol,pow@yi
  2911  00138E  C038  F074         	movff	?___fttol+1,pow@yi+1
  2912  001392  C039  F075         	movff	?___fttol+2,pow@yi+2
  2913  001396  C03A  F076         	movff	?___fttol+3,pow@yi+3
  2914  00139A  C073  F009         	movff	pow@yi,___lltoft@c
  2915  00139E  C074  F00A         	movff	pow@yi+1,___lltoft@c+1
  2916  0013A2  C075  F00B         	movff	pow@yi+2,___lltoft@c+2
  2917  0013A6  C076  F00C         	movff	pow@yi+3,___lltoft@c+3
  2918  0013AA  ECA2  F00F         	call	___lltoft	;wreg free
  2919  0013AE  0100               	movlb	0	; () banked
  2920  0013B0  5169               	movf	pow@y& (0+255),w,b
  2921  0013B2  1809               	xorwf	?___lltoft,w,c
  2922  0013B4  E107               	bnz	u2690
  2923  0013B6  516A               	movf	(pow@y+1)& (0+255),w,b
  2924  0013B8  180A               	xorwf	?___lltoft+1,w,c
  2925  0013BA  E104               	bnz	u2690
  2926  0013BC  516B               	movf	(pow@y+2)& (0+255),w,b
  2927  0013BE  180B               	xorwf	?___lltoft+2,w,c
  2928  0013C0  B4D8               	btfsc	status,2,c
  2929  0013C2  D00B               	goto	l646
  2930  0013C4                     u2690:
  2931                           
  2932                           ; BSR set to: 0
  2933  0013C4  0E00               	movlw	0
  2934  0013C6  6FEE               	movwf	(_errno+1)& (0+255),b
  2935  0013C8  0E21               	movlw	33
  2936  0013CA  6FED               	movwf	_errno& (0+255),b
  2937  0013CC  0E00               	movlw	0
  2938  0013CE  6F66               	movwf	?_pow& (0+255),b
  2939  0013D0  0E00               	movlw	0
  2940  0013D2  6F67               	movwf	(?_pow+1)& (0+255),b
  2941  0013D4  0E00               	movlw	0
  2942  0013D6  6F68               	movwf	(?_pow+2)& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945  0013D8  0012               	return	
  2946  0013DA                     l646:
  2947                           
  2948                           ; BSR set to: 0
  2949                           
  2950                           ; BSR set to: 0
  2951  0013DA  5173               	movf	pow@yi& (0+255),w,b
  2952  0013DC  0B01               	andlw	1
  2953  0013DE  6F72               	movwf	pow@sign& (0+255),b
  2954                           
  2955                           ; BSR set to: 0
  2956  0013E0  C066  F001         	movff	pow@x,___ftneg@f1
  2957  0013E4  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2958  0013E8  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2959  0013EC  EC74  F010         	call	___ftneg	;wreg free
  2960  0013F0  C001  F066         	movff	?___ftneg,pow@x
  2961  0013F4  C002  F067         	movff	?___ftneg+1,pow@x+1
  2962  0013F8  C003  F068         	movff	?___ftneg+2,pow@x+2
  2963  0013FC                     l645:
  2964  0013FC  C066  F043         	movff	pow@x,log@x
  2965  001400  C067  F044         	movff	pow@x+1,log@x+1
  2966  001404  C068  F045         	movff	pow@x+2,log@x+2
  2967  001408  EC48  F00A         	call	_log	;wreg free
  2968  00140C  C043  F06C         	movff	?_log,_pow$1554
  2969  001410  C044  F06D         	movff	?_log+1,_pow$1554+1
  2970  001414  C045  F06E         	movff	?_log+2,_pow$1554+2
  2971  001418  C06C  F00D         	movff	_pow$1554,___ftmul@f1
  2972  00141C  C06D  F00E         	movff	_pow$1554+1,___ftmul@f1+1
  2973  001420  C06E  F00F         	movff	_pow$1554+2,___ftmul@f1+2
  2974  001424  C069  F010         	movff	pow@y,___ftmul@f2
  2975  001428  C06A  F011         	movff	pow@y+1,___ftmul@f2+1
  2976  00142C  C06B  F012         	movff	pow@y+2,___ftmul@f2+2
  2977  001430  EC51  F00B         	call	___ftmul	;wreg free
  2978  001434  C00D  F06F         	movff	?___ftmul,_pow$1555
  2979  001438  C00E  F070         	movff	?___ftmul+1,_pow$1555+1
  2980  00143C  C00F  F071         	movff	?___ftmul+2,_pow$1555+2
  2981  001440  C06F  F058         	movff	_pow$1555,exp@x
  2982  001444  C070  F059         	movff	_pow$1555+1,exp@x+1
  2983  001448  C071  F05A         	movff	_pow$1555+2,exp@x+2
  2984  00144C  ECF0  F006         	call	_exp	;wreg free
  2985  001450  C058  F066         	movff	?_exp,pow@x
  2986  001454  C059  F067         	movff	?_exp+1,pow@x+1
  2987  001458  C05A  F068         	movff	?_exp+2,pow@x+2
  2988  00145C  0100               	movlb	0	; () banked
  2989  00145E  5172               	movf	pow@sign& (0+255),w,b
  2990  001460  B4D8               	btfsc	status,2,c
  2991  001462  D00F               	goto	l647
  2992                           
  2993                           ; BSR set to: 0
  2994  001464  C066  F001         	movff	pow@x,___ftneg@f1
  2995  001468  C067  F002         	movff	pow@x+1,___ftneg@f1+1
  2996  00146C  C068  F003         	movff	pow@x+2,___ftneg@f1+2
  2997  001470  EC74  F010         	call	___ftneg	;wreg free
  2998  001474  C001  F066         	movff	?___ftneg,?_pow
  2999  001478  C002  F067         	movff	?___ftneg+1,?_pow+1
  3000  00147C  C003  F068         	movff	?___ftneg+2,?_pow+2
  3001  001480  0012               	return	
  3002  001482                     l647:
  3003                           
  3004                           ; BSR set to: 0
  3005  001482  C066  F066         	movff	pow@x,?_pow
  3006  001486  C067  F067         	movff	pow@x+1,?_pow+1
  3007  00148A  C068  F068         	movff	pow@x+2,?_pow+2
  3008  00148E  0012               	return		;funcret
  3009  001490                     __end_of_pow:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           plusw1	equ	0xFE3
  3016                           postinc2	equ	0xFDE
  3017                           postdec2	equ	0xFDD
  3018                           plusw2	equ	0xFDB
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _log *****************
  3024 ;; Defined at:
  3025 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  x               3   66[COMRAM] unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  exponent        2   69[COMRAM] int 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  3   66[COMRAM] int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3039 ;;      Params:         3       0       0       0       0       0       0       0       0
  3040 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3042 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3043 ;;Total ram usage:        5 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		___awtoft
  3048 ;;		___ftadd
  3049 ;;		___ftmul
  3050 ;;		_eval_poly
  3051 ;;		_frexp
  3052 ;; This function is called by:
  3053 ;;		_pow
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text12
  3058  001490                     __ptext12:
  3059                           	opt stack 0
  3060  001490                     _log:
  3061                           	opt stack 24
  3062                           
  3063                           ;incstack = 0
  3064  001490  AE45               	btfss	log@x+2,7,c
  3065  001492  D00C               	goto	l843
  3066  001494  0E00               	movlw	0
  3067  001496  0100               	movlb	0	; () banked
  3068  001498  6FEE               	movwf	(_errno+1)& (0+255),b
  3069  00149A  0E21               	movlw	33
  3070  00149C  6FED               	movwf	_errno& (0+255),b
  3071  00149E  0E00               	movlw	0
  3072  0014A0  6E43               	movwf	?_log,c
  3073  0014A2  0E00               	movlw	0
  3074  0014A4  6E44               	movwf	?_log+1,c
  3075  0014A6  0E00               	movlw	0
  3076  0014A8  6E45               	movwf	?_log+2,c
  3077                           
  3078                           ; BSR set to: 0
  3079  0014AA  0012               	return	
  3080  0014AC                     l843:
  3081                           
  3082                           ; BSR set to: 0
  3083  0014AC  5043               	movf	log@x,w,c
  3084  0014AE  1044               	iorwf	log@x+1,w,c
  3085  0014B0  1045               	iorwf	log@x+2,w,c
  3086  0014B2  A4D8               	btfss	status,2,c
  3087  0014B4  D00C               	goto	l845
  3088  0014B6  0E00               	movlw	0
  3089  0014B8  0100               	movlb	0	; () banked
  3090  0014BA  6FEE               	movwf	(_errno+1)& (0+255),b
  3091  0014BC  0E22               	movlw	34
  3092  0014BE  6FED               	movwf	_errno& (0+255),b
  3093  0014C0  0E00               	movlw	0
  3094  0014C2  6E43               	movwf	?_log,c
  3095  0014C4  0E00               	movlw	0
  3096  0014C6  6E44               	movwf	?_log+1,c
  3097  0014C8  0E00               	movlw	0
  3098  0014CA  6E45               	movwf	?_log+2,c
  3099                           
  3100                           ; BSR set to: 0
  3101  0014CC  0012               	return	
  3102  0014CE                     l845:
  3103                           
  3104                           ; BSR set to: 0
  3105  0014CE  0E00               	movlw	0
  3106  0014D0  6E10               	movwf	___ftmul@f2,c
  3107  0014D2  0E00               	movlw	0
  3108  0014D4  6E11               	movwf	___ftmul@f2+1,c
  3109  0014D6  0E40               	movlw	64
  3110  0014D8  6E12               	movwf	___ftmul@f2+2,c
  3111  0014DA  0E46               	movlw	low log@exponent
  3112  0014DC  6E04               	movwf	frexp@eptr,c
  3113  0014DE  0E00               	movlw	high log@exponent
  3114  0014E0  6E05               	movwf	frexp@eptr+1,c
  3115  0014E2  C043  F001         	movff	log@x,frexp@value
  3116  0014E6  C044  F002         	movff	log@x+1,frexp@value+1
  3117  0014EA  C045  F003         	movff	log@x+2,frexp@value+2
  3118  0014EE  EC2C  F00E         	call	_frexp	;wreg free
  3119  0014F2  C001  F00D         	movff	?_frexp,___ftmul@f1
  3120  0014F6  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  3121  0014FA  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  3122  0014FE  EC51  F00B         	call	___ftmul	;wreg free
  3123  001502  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3124  001506  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3125  00150A  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3126  00150E  0E00               	movlw	0
  3127  001510  6E2E               	movwf	___ftadd@f2,c
  3128  001512  0E80               	movlw	128
  3129  001514  6E2F               	movwf	___ftadd@f2+1,c
  3130  001516  0EBF               	movlw	191
  3131  001518  6E30               	movwf	___ftadd@f2+2,c
  3132  00151A  ECE6  F007         	call	___ftadd	;wreg free
  3133  00151E  C02B  F043         	movff	?___ftadd,log@x
  3134  001522  C02C  F044         	movff	?___ftadd+1,log@x+1
  3135  001526  C02D  F045         	movff	?___ftadd+2,log@x+2
  3136  00152A  0646               	decf	log@exponent,f,c
  3137  00152C  A0D8               	btfss	status,0,c
  3138  00152E  0647               	decf	log@exponent+1,f,c
  3139  001530  C043  F037         	movff	log@x,eval_poly@x
  3140  001534  C044  F038         	movff	log@x+1,eval_poly@x+1
  3141  001538  C045  F039         	movff	log@x+2,eval_poly@x+2
  3142  00153C  0E1F               	movlw	low log@coeff
  3143  00153E  6E3A               	movwf	eval_poly@d,c
  3144  001540  0E08               	movlw	high log@coeff
  3145  001542  6E3B               	movwf	eval_poly@d+1,c
  3146  001544  0E00               	movlw	0
  3147  001546  6E3D               	movwf	eval_poly@n+1,c
  3148  001548  0E08               	movlw	8
  3149  00154A  6E3C               	movwf	eval_poly@n,c
  3150  00154C  ECAD  F00C         	call	_eval_poly	;wreg free
  3151  001550  C037  F043         	movff	?_eval_poly,log@x
  3152  001554  C038  F044         	movff	?_eval_poly+1,log@x+1
  3153  001558  C039  F045         	movff	?_eval_poly+2,log@x+2
  3154  00155C  0E72               	movlw	114
  3155  00155E  6E10               	movwf	___ftmul@f2,c
  3156  001560  0E31               	movlw	49
  3157  001562  6E11               	movwf	___ftmul@f2+1,c
  3158  001564  0E3F               	movlw	63
  3159  001566  6E12               	movwf	___ftmul@f2+2,c
  3160  001568  C046  F009         	movff	log@exponent,___awtoft@c
  3161  00156C  C047  F00A         	movff	log@exponent+1,___awtoft@c+1
  3162  001570  EC33  F010         	call	___awtoft	;wreg free
  3163  001574  C009  F00D         	movff	?___awtoft,___ftmul@f1
  3164  001578  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  3165  00157C  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  3166  001580  EC51  F00B         	call	___ftmul	;wreg free
  3167  001584  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  3168  001588  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  3169  00158C  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  3170  001590  C043  F02E         	movff	log@x,___ftadd@f2
  3171  001594  C044  F02F         	movff	log@x+1,___ftadd@f2+1
  3172  001598  C045  F030         	movff	log@x+2,___ftadd@f2+2
  3173  00159C  ECE6  F007         	call	___ftadd	;wreg free
  3174  0015A0  C02B  F043         	movff	?___ftadd,?_log
  3175  0015A4  C02C  F044         	movff	?___ftadd+1,?_log+1
  3176  0015A8  C02D  F045         	movff	?___ftadd+2,?_log+2
  3177  0015AC  0012               	return	
  3178  0015AE                     __end_of_log:
  3179                           	opt stack 0
  3180                           tblptru	equ	0xFF8
  3181                           intcon	equ	0xFF2
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           plusw1	equ	0xFE3
  3185                           postinc2	equ	0xFDE
  3186                           postdec2	equ	0xFDD
  3187                           plusw2	equ	0xFDB
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _exp *****************
  3193 ;; Defined at:
  3194 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  x               3   87[COMRAM] int 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  exponent        2    3[BANK0 ] int 
  3199 ;;  sign            1    5[BANK0 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  3   87[COMRAM] unsigned char 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         3       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         3       6       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        9 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    3
  3216 ;; This function calls:
  3217 ;;		___awtoft
  3218 ;;		___ftdiv
  3219 ;;		___ftge
  3220 ;;		___ftmul
  3221 ;;		___ftneg
  3222 ;;		___ftsub
  3223 ;;		___fttol
  3224 ;;		_eval_poly
  3225 ;;		_floor
  3226 ;;		_ldexp
  3227 ;; This function is called by:
  3228 ;;		_pow
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text13
  3233  000DE0                     __ptext13:
  3234                           	opt stack 0
  3235  000DE0                     _exp:
  3236                           	opt stack 24
  3237                           
  3238                           ;incstack = 0
  3239  000DE0  5058               	movf	exp@x,w,c
  3240  000DE2  1059               	iorwf	exp@x+1,w,c
  3241  000DE4  105A               	iorwf	exp@x+2,w,c
  3242  000DE6  A4D8               	btfss	status,2,c
  3243  000DE8  D007               	goto	l801
  3244  000DEA  0E00               	movlw	0
  3245  000DEC  6E58               	movwf	?_exp,c
  3246  000DEE  0E80               	movlw	128
  3247  000DF0  6E59               	movwf	?_exp+1,c
  3248  000DF2  0E3F               	movlw	63
  3249  000DF4  6E5A               	movwf	?_exp+2,c
  3250  000DF6  0012               	return	
  3251  000DF8                     l801:
  3252  000DF8  0E72               	movlw	114
  3253  000DFA  6E01               	movwf	___ftge@ff1,c
  3254  000DFC  0E31               	movlw	49
  3255  000DFE  6E02               	movwf	___ftge@ff1+1,c
  3256  000E00  0E44               	movlw	68
  3257  000E02  6E03               	movwf	___ftge@ff1+2,c
  3258  000E04  C058  F004         	movff	exp@x,___ftge@ff2
  3259  000E08  C059  F005         	movff	exp@x+1,___ftge@ff2+1
  3260  000E0C  C05A  F006         	movff	exp@x+2,___ftge@ff2+2
  3261  000E10  EC74  F00E         	call	___ftge	;wreg free
  3262  000E14  B0D8               	btfsc	status,0,c
  3263  000E16  D00C               	goto	l803
  3264  000E18  0E00               	movlw	0
  3265  000E1A  0100               	movlb	0	; () banked
  3266  000E1C  6FEE               	movwf	(_errno+1)& (0+255),b
  3267  000E1E  0E22               	movlw	34
  3268  000E20  6FED               	movwf	_errno& (0+255),b
  3269  000E22  0EFF               	movlw	255
  3270  000E24  6E58               	movwf	?_exp,c
  3271  000E26  0E7F               	movlw	127
  3272  000E28  6E59               	movwf	?_exp+1,c
  3273  000E2A  0E7F               	movlw	127
  3274  000E2C  6E5A               	movwf	?_exp+2,c
  3275                           
  3276                           ; BSR set to: 0
  3277  000E2E  0012               	return	
  3278  000E30                     l803:
  3279                           
  3280                           ; BSR set to: 0
  3281  000E30  C058  F001         	movff	exp@x,___ftge@ff1
  3282  000E34  C059  F002         	movff	exp@x+1,___ftge@ff1+1
  3283  000E38  C05A  F003         	movff	exp@x+2,___ftge@ff1+2
  3284  000E3C  0E49               	movlw	73
  3285  000E3E  6E04               	movwf	___ftge@ff2,c
  3286  000E40  0E3A               	movlw	58
  3287  000E42  6E05               	movwf	___ftge@ff2+1,c
  3288  000E44  0EC4               	movlw	196
  3289  000E46  6E06               	movwf	___ftge@ff2+2,c
  3290  000E48  EC74  F00E         	call	___ftge	;wreg free
  3291  000E4C  B0D8               	btfsc	status,0,c
  3292  000E4E  D00C               	goto	l804
  3293  000E50  0E00               	movlw	0
  3294  000E52  0100               	movlb	0	; () banked
  3295  000E54  6FEE               	movwf	(_errno+1)& (0+255),b
  3296  000E56  0E22               	movlw	34
  3297  000E58  6FED               	movwf	_errno& (0+255),b
  3298  000E5A  0E00               	movlw	0
  3299  000E5C  6E58               	movwf	?_exp,c
  3300  000E5E  0E00               	movlw	0
  3301  000E60  6E59               	movwf	?_exp+1,c
  3302  000E62  0E00               	movlw	0
  3303  000E64  6E5A               	movwf	?_exp+2,c
  3304                           
  3305                           ; BSR set to: 0
  3306  000E66  0012               	return	
  3307  000E68                     l804:
  3308                           
  3309                           ; BSR set to: 0
  3310  000E68  AE5A               	btfss	exp@x+2,7,c
  3311  000E6A  D002               	goto	u2600
  3312  000E6C  0E01               	movlw	1
  3313  000E6E  D001               	goto	u2610
  3314  000E70                     u2600:
  3315  000E70  0E00               	movlw	0
  3316  000E72                     u2610:
  3317  000E72  0100               	movlb	0	; () banked
  3318  000E74  6F65               	movwf	exp@sign& (0+255),b
  3319                           
  3320                           ; BSR set to: 0
  3321  000E76  5165               	movf	exp@sign& (0+255),w,b
  3322  000E78  B4D8               	btfsc	status,2,c
  3323  000E7A  D00E               	goto	l805
  3324                           
  3325                           ; BSR set to: 0
  3326  000E7C  C058  F001         	movff	exp@x,___ftneg@f1
  3327  000E80  C059  F002         	movff	exp@x+1,___ftneg@f1+1
  3328  000E84  C05A  F003         	movff	exp@x+2,___ftneg@f1+2
  3329  000E88  EC74  F010         	call	___ftneg	;wreg free
  3330  000E8C  C001  F058         	movff	?___ftneg,exp@x
  3331  000E90  C002  F059         	movff	?___ftneg+1,exp@x+1
  3332  000E94  C003  F05A         	movff	?___ftneg+2,exp@x+2
  3333  000E98                     l805:
  3334  000E98  C058  F00D         	movff	exp@x,___ftmul@f1
  3335  000E9C  C059  F00E         	movff	exp@x+1,___ftmul@f1+1
  3336  000EA0  C05A  F00F         	movff	exp@x+2,___ftmul@f1+2
  3337  000EA4  0EAA               	movlw	170
  3338  000EA6  6E10               	movwf	___ftmul@f2,c
  3339  000EA8  0EB8               	movlw	184
  3340  000EAA  6E11               	movwf	___ftmul@f2+1,c
  3341  000EAC  0E3F               	movlw	63
  3342  000EAE  6E12               	movwf	___ftmul@f2+2,c
  3343  000EB0  EC51  F00B         	call	___ftmul	;wreg free
  3344  000EB4  C00D  F058         	movff	?___ftmul,exp@x
  3345  000EB8  C00E  F059         	movff	?___ftmul+1,exp@x+1
  3346  000EBC  C00F  F05A         	movff	?___ftmul+2,exp@x+2
  3347  000EC0  C058  F050         	movff	exp@x,floor@x
  3348  000EC4  C059  F051         	movff	exp@x+1,floor@x+1
  3349  000EC8  C05A  F052         	movff	exp@x+2,floor@x+2
  3350  000ECC  EC3E  F00C         	call	_floor	;wreg free
  3351  000ED0  C050  F060         	movff	?_floor,_exp$1556
  3352  000ED4  C051  F061         	movff	?_floor+1,_exp$1556+1
  3353  000ED8  C052  F062         	movff	?_floor+2,_exp$1556+2
  3354  000EDC  C060  F037         	movff	_exp$1556,___fttol@f1
  3355  000EE0  C061  F038         	movff	_exp$1556+1,___fttol@f1+1
  3356  000EE4  C062  F039         	movff	_exp$1556+2,___fttol@f1+2
  3357  000EE8  ECD7  F00A         	call	___fttol	;wreg free
  3358  000EEC  C037  F063         	movff	?___fttol,exp@exponent
  3359  000EF0  C038  F064         	movff	?___fttol+1,exp@exponent+1
  3360  000EF4  C058  F037         	movff	exp@x,___ftsub@f1
  3361  000EF8  C059  F038         	movff	exp@x+1,___ftsub@f1+1
  3362  000EFC  C05A  F039         	movff	exp@x+2,___ftsub@f1+2
  3363  000F00  C063  F009         	movff	exp@exponent,___awtoft@c
  3364  000F04  C064  F00A         	movff	exp@exponent+1,___awtoft@c+1
  3365  000F08  EC33  F010         	call	___awtoft	;wreg free
  3366  000F0C  C009  F03A         	movff	?___awtoft,___ftsub@f2
  3367  000F10  C00A  F03B         	movff	?___awtoft+1,___ftsub@f2+1
  3368  000F14  C00B  F03C         	movff	?___awtoft+2,___ftsub@f2+2
  3369  000F18  ECF6  F00F         	call	___ftsub	;wreg free
  3370  000F1C  C037  F058         	movff	?___ftsub,exp@x
  3371  000F20  C038  F059         	movff	?___ftsub+1,exp@x+1
  3372  000F24  C039  F05A         	movff	?___ftsub+2,exp@x+2
  3373  000F28  C058  F037         	movff	exp@x,eval_poly@x
  3374  000F2C  C059  F038         	movff	exp@x+1,eval_poly@x+1
  3375  000F30  C05A  F039         	movff	exp@x+2,eval_poly@x+2
  3376  000F34  0E01               	movlw	low exp@coeff
  3377  000F36  6E3A               	movwf	eval_poly@d,c
  3378  000F38  0E08               	movlw	high exp@coeff
  3379  000F3A  6E3B               	movwf	eval_poly@d+1,c
  3380  000F3C  0E00               	movlw	0
  3381  000F3E  6E3D               	movwf	eval_poly@n+1,c
  3382  000F40  0E09               	movlw	9
  3383  000F42  6E3C               	movwf	eval_poly@n,c
  3384  000F44  ECAD  F00C         	call	_eval_poly	;wreg free
  3385  000F48  C037  F043         	movff	?_eval_poly,ldexp@value
  3386  000F4C  C038  F044         	movff	?_eval_poly+1,ldexp@value+1
  3387  000F50  C039  F045         	movff	?_eval_poly+2,ldexp@value+2
  3388  000F54  C063  F046         	movff	exp@exponent,ldexp@newexp
  3389  000F58  C064  F047         	movff	exp@exponent+1,ldexp@newexp+1
  3390  000F5C  EC16  F00D         	call	_ldexp	;wreg free
  3391  000F60  C043  F058         	movff	?_ldexp,exp@x
  3392  000F64  C044  F059         	movff	?_ldexp+1,exp@x+1
  3393  000F68  C045  F05A         	movff	?_ldexp+2,exp@x+2
  3394  000F6C  0100               	movlb	0	; () banked
  3395  000F6E  5165               	movf	exp@sign& (0+255),w,b
  3396  000F70  B4D8               	btfsc	status,2,c
  3397  000F72  D025               	goto	l806
  3398                           
  3399                           ; BSR set to: 0
  3400  000F74  2858               	incf	exp@x,w,c
  3401  000F76  E10E               	bnz	l2418
  3402  000F78  0E7F               	movlw	127
  3403  000F7A  1859               	xorwf	exp@x+1,w,c
  3404  000F7C  E10B               	bnz	l2418
  3405  000F7E  0E7F               	movlw	127
  3406  000F80  185A               	xorwf	exp@x+2,w,c
  3407  000F82  A4D8               	btfss	status,2,c
  3408  000F84  D007               	goto	l807
  3409                           
  3410                           ; BSR set to: 0
  3411  000F86  0E00               	movlw	0
  3412  000F88  6E58               	movwf	?_exp,c
  3413  000F8A  0E00               	movlw	0
  3414  000F8C  6E59               	movwf	?_exp+1,c
  3415  000F8E  0E00               	movlw	0
  3416  000F90  6E5A               	movwf	?_exp+2,c
  3417                           
  3418                           ; BSR set to: 0
  3419  000F92  0012               	return	
  3420  000F94                     l807:
  3421  000F94                     l2418:
  3422                           
  3423                           ; BSR set to: 0
  3424  000F94  0E00               	movlw	0
  3425  000F96  6E1C               	movwf	___ftdiv@f1,c
  3426  000F98  0E80               	movlw	128
  3427  000F9A  6E1D               	movwf	___ftdiv@f1+1,c
  3428  000F9C  0E3F               	movlw	63
  3429  000F9E  6E1E               	movwf	___ftdiv@f1+2,c
  3430  000FA0  C058  F01F         	movff	exp@x,___ftdiv@f2
  3431  000FA4  C059  F020         	movff	exp@x+1,___ftdiv@f2+1
  3432  000FA8  C05A  F021         	movff	exp@x+2,___ftdiv@f2+2
  3433  000FAC  ECCB  F00B         	call	___ftdiv	;wreg free
  3434  000FB0  C01C  F058         	movff	?___ftdiv,?_exp
  3435  000FB4  C01D  F059         	movff	?___ftdiv+1,?_exp+1
  3436  000FB8  C01E  F05A         	movff	?___ftdiv+2,?_exp+2
  3437  000FBC  0012               	return	
  3438  000FBE                     l806:
  3439                           
  3440                           ; BSR set to: 0
  3441  000FBE  C058  F058         	movff	exp@x,?_exp
  3442  000FC2  C059  F059         	movff	exp@x+1,?_exp+1
  3443  000FC6  C05A  F05A         	movff	exp@x+2,?_exp+2
  3444  000FCA  0012               	return		;funcret
  3445  000FCC                     __end_of_exp:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           intcon	equ	0xFF2
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           plusw1	equ	0xFE3
  3452                           postinc2	equ	0xFDE
  3453                           postdec2	equ	0xFDD
  3454                           plusw2	equ	0xFDB
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function _ldexp *****************
  3460 ;; Defined at:
  3461 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  value           3   66[COMRAM] unsigned char 
  3464 ;;  newexp          2   69[COMRAM] int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  3   66[COMRAM] int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         5       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        7 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_exp
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text14
  3490  001A2C                     __ptext14:
  3491                           	opt stack 0
  3492  001A2C                     _ldexp:
  3493                           	opt stack 26
  3494                           
  3495                           ;incstack = 0
  3496  001A2C  5043               	movf	ldexp@value,w,c
  3497  001A2E  1044               	iorwf	ldexp@value+1,w,c
  3498  001A30  1045               	iorwf	ldexp@value+2,w,c
  3499  001A32  A4D8               	btfss	status,2,c
  3500  001A34  D007               	goto	l825
  3501  001A36  0E00               	movlw	0
  3502  001A38  6E43               	movwf	?_ldexp,c
  3503  001A3A  0E00               	movlw	0
  3504  001A3C  6E44               	movwf	?_ldexp+1,c
  3505  001A3E  0E00               	movlw	0
  3506  001A40  6E45               	movwf	?_ldexp+2,c
  3507  001A42  0012               	return	
  3508  001A44                     l825:
  3509  001A44  5045               	movf	ldexp@value+2,w,c
  3510  001A46  0B7F               	andlw	127
  3511  001A48  6E48               	movwf	??_ldexp& (0+255),c
  3512  001A4A  6A49               	clrf	(??_ldexp+1)& (0+255),c
  3513  001A4C  90D8               	bcf	status,0,c
  3514  001A4E  3648               	rlcf	??_ldexp,f,c
  3515  001A50  3649               	rlcf	??_ldexp+1,f,c
  3516  001A52  5048               	movf	??_ldexp,w,c
  3517  001A54  2646               	addwf	ldexp@newexp,f,c
  3518  001A56  5049               	movf	??_ldexp+1,w,c
  3519  001A58  2247               	addwfc	ldexp@newexp+1,f,c
  3520  001A5A  AE44               	btfss	ldexp@value+1,7,c
  3521  001A5C  D003               	goto	u2500
  3522  001A5E  6A48               	clrf	??_ldexp& (0+255),c
  3523  001A60  2A48               	incf	??_ldexp& (0+255),f,c
  3524  001A62  D001               	goto	u2508
  3525  001A64                     u2500:
  3526  001A64  6A48               	clrf	??_ldexp& (0+255),c
  3527  001A66                     u2508:
  3528  001A66  5048               	movf	??_ldexp,w,c
  3529  001A68  2646               	addwf	ldexp@newexp,f,c
  3530  001A6A  0E00               	movlw	0
  3531  001A6C  2247               	addwfc	ldexp@newexp+1,f,c
  3532  001A6E  AE47               	btfss	ldexp@newexp+1,7,c
  3533  001A70  D00C               	goto	l827
  3534  001A72  0E00               	movlw	0
  3535  001A74  0100               	movlb	0	; () banked
  3536  001A76  6FEE               	movwf	(_errno+1)& (0+255),b
  3537  001A78  0E22               	movlw	34
  3538  001A7A  6FED               	movwf	_errno& (0+255),b
  3539  001A7C  0E00               	movlw	0
  3540  001A7E  6E43               	movwf	?_ldexp,c
  3541  001A80  0E00               	movlw	0
  3542  001A82  6E44               	movwf	?_ldexp+1,c
  3543  001A84  0E00               	movlw	0
  3544  001A86                     L3:
  3545  001A86  6E45               	movwf	?_ldexp+2,c
  3546                           
  3547                           ; BSR set to: 0
  3548  001A88  0012               	return	
  3549  001A8A                     l827:
  3550                           
  3551                           ; BSR set to: 0
  3552  001A8A  BE47               	btfsc	ldexp@newexp+1,7,c
  3553  001A8C  D016               	goto	l829
  3554  001A8E  0447               	decf	ldexp@newexp+1,w,c
  3555  001A90  A0D8               	btfss	status,0,c
  3556  001A92  D013               	goto	l829
  3557  001A94  0E00               	movlw	0
  3558  001A96  0100               	movlb	0	; () banked
  3559  001A98  6FEE               	movwf	(_errno+1)& (0+255),b
  3560  001A9A  0E22               	movlw	34
  3561  001A9C  6FED               	movwf	_errno& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564  001A9E  AE45               	btfss	ldexp@value+2,7,c
  3565  001AA0  D006               	goto	l830
  3566                           
  3567                           ; BSR set to: 0
  3568  001AA2  0EFF               	movlw	255
  3569  001AA4  6E43               	movwf	?_ldexp,c
  3570  001AA6  0E7F               	movlw	127
  3571  001AA8  6E44               	movwf	?_ldexp+1,c
  3572  001AAA  0EFF               	movlw	255
  3573  001AAC  D7EC               	goto	L3
  3574  001AAE                     l830:
  3575                           
  3576                           ; BSR set to: 0
  3577                           
  3578                           ; BSR set to: 0
  3579  001AAE  0EFF               	movlw	255
  3580  001AB0  6E43               	movwf	?_ldexp,c
  3581  001AB2  0E7F               	movlw	127
  3582  001AB4  6E44               	movwf	?_ldexp+1,c
  3583  001AB6  0E7F               	movlw	127
  3584  001AB8  D7E6               	goto	L3
  3585  001ABA                     l829:
  3586                           
  3587                           ; BSR set to: 0
  3588  001ABA  3447               	rlcf	ldexp@newexp+1,w,c
  3589  001ABC  3047               	rrcf	ldexp@newexp+1,w,c
  3590  001ABE  6E49               	movwf	(??_ldexp+1)& (0+255),c
  3591  001AC0  3046               	rrcf	ldexp@newexp,w,c
  3592  001AC2  6E48               	movwf	??_ldexp& (0+255),c
  3593  001AC4  5045               	movf	ldexp@value+2,w,c
  3594  001AC6  1848               	xorwf	??_ldexp,w,c
  3595  001AC8  0B80               	andlw	-128
  3596  001ACA  1848               	xorwf	??_ldexp,w,c
  3597  001ACC  6E45               	movwf	ldexp@value+2,c
  3598  001ACE  C046  F048         	movff	ldexp@newexp,??_ldexp
  3599  001AD2  0E01               	movlw	1
  3600  001AD4  1648               	andwf	??_ldexp,f,c
  3601  001AD6  3248               	rrcf	??_ldexp,f,c
  3602  001AD8  3248               	rrcf	??_ldexp,f,c
  3603  001ADA  5044               	movf	ldexp@value+1,w,c
  3604  001ADC  1848               	xorwf	??_ldexp,w,c
  3605  001ADE  0B7F               	andlw	-129
  3606  001AE0  1848               	xorwf	??_ldexp,w,c
  3607  001AE2  6E44               	movwf	ldexp@value+1,c
  3608  001AE4  C043  F043         	movff	ldexp@value,?_ldexp
  3609  001AE8  C044  F044         	movff	ldexp@value+1,?_ldexp+1
  3610  001AEC  C045  F045         	movff	ldexp@value+2,?_ldexp+2
  3611  001AF0  0012               	return	
  3612  001AF2                     __end_of_ldexp:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           intcon	equ	0xFF2
  3616                           postinc0	equ	0xFEE
  3617                           wreg	equ	0xFE8
  3618                           plusw1	equ	0xFE3
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           plusw2	equ	0xFDB
  3622                           fsr2h	equ	0xFDA
  3623                           fsr2l	equ	0xFD9
  3624                           status	equ	0xFD8
  3625                           
  3626 ;; *************** function _floor *****************
  3627 ;; Defined at:
  3628 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  x               3   79[COMRAM] int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  i               3   82[COMRAM] int 
  3633 ;;  expon           2   85[COMRAM] int 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  3   79[COMRAM] int 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3643 ;;      Params:         3       0       0       0       0       0       0       0       0
  3644 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3646 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3647 ;;Total ram usage:        8 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    2
  3650 ;; This function calls:
  3651 ;;		___altoft
  3652 ;;		___ftadd
  3653 ;;		___ftge
  3654 ;;		___fttol
  3655 ;;		_frexp
  3656 ;; This function is called by:
  3657 ;;		_exp
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text15
  3662  00187C                     __ptext15:
  3663                           	opt stack 0
  3664  00187C                     _floor:
  3665                           	opt stack 24
  3666                           
  3667                           ;incstack = 0
  3668  00187C  C050  F001         	movff	floor@x,frexp@value
  3669  001880  C051  F002         	movff	floor@x+1,frexp@value+1
  3670  001884  C052  F003         	movff	floor@x+2,frexp@value+2
  3671  001888  0E56               	movlw	low floor@expon
  3672  00188A  6E04               	movwf	frexp@eptr,c
  3673  00188C  0E00               	movlw	high floor@expon
  3674  00188E  6E05               	movwf	frexp@eptr+1,c
  3675  001890  EC2C  F00E         	call	_frexp	;wreg free
  3676  001894  AE57               	btfss	floor@expon+1,7,c
  3677  001896  D010               	goto	l812
  3678  001898  AE52               	btfss	floor@x+2,7,c
  3679  00189A  D007               	goto	l813
  3680  00189C  0E00               	movlw	0
  3681  00189E  6E50               	movwf	?_floor,c
  3682  0018A0  0E80               	movlw	128
  3683  0018A2  6E51               	movwf	?_floor+1,c
  3684  0018A4  0EBF               	movlw	191
  3685  0018A6  6E52               	movwf	?_floor+2,c
  3686  0018A8  0012               	return	
  3687  0018AA                     l813:
  3688  0018AA  0E00               	movlw	0
  3689  0018AC  6E50               	movwf	?_floor,c
  3690  0018AE  0E00               	movlw	0
  3691  0018B0  6E51               	movwf	?_floor+1,c
  3692  0018B2  0E00               	movlw	0
  3693  0018B4  6E52               	movwf	?_floor+2,c
  3694  0018B6  0012               	return	
  3695  0018B8                     l812:
  3696  0018B8  5057               	movf	floor@expon+1,w,c
  3697  0018BA  E104               	bnz	u2460
  3698  0018BC  0E15               	movlw	21
  3699  0018BE  5C56               	subwf	floor@expon,w,c
  3700  0018C0  A0D8               	btfss	status,0,c
  3701  0018C2  D007               	goto	l815
  3702  0018C4                     u2460:
  3703  0018C4  C050  F050         	movff	floor@x,?_floor
  3704  0018C8  C051  F051         	movff	floor@x+1,?_floor+1
  3705  0018CC  C052  F052         	movff	floor@x+2,?_floor+2
  3706  0018D0  0012               	return	
  3707  0018D2                     l815:
  3708  0018D2  C050  F037         	movff	floor@x,___fttol@f1
  3709  0018D6  C051  F038         	movff	floor@x+1,___fttol@f1+1
  3710  0018DA  C052  F039         	movff	floor@x+2,___fttol@f1+2
  3711  0018DE  ECD7  F00A         	call	___fttol	;wreg free
  3712  0018E2  C037  F046         	movff	?___fttol,___altoft@c
  3713  0018E6  C038  F047         	movff	?___fttol+1,___altoft@c+1
  3714  0018EA  C039  F048         	movff	?___fttol+2,___altoft@c+2
  3715  0018EE  C03A  F049         	movff	?___fttol+3,___altoft@c+3
  3716  0018F2  ECFE  F00E         	call	___altoft	;wreg free
  3717  0018F6  C046  F053         	movff	?___altoft,floor@i
  3718  0018FA  C047  F054         	movff	?___altoft+1,floor@i+1
  3719  0018FE  C048  F055         	movff	?___altoft+2,floor@i+2
  3720  001902  C050  F001         	movff	floor@x,___ftge@ff1
  3721  001906  C051  F002         	movff	floor@x+1,___ftge@ff1+1
  3722  00190A  C052  F003         	movff	floor@x+2,___ftge@ff1+2
  3723  00190E  C053  F004         	movff	floor@i,___ftge@ff2
  3724  001912  C054  F005         	movff	floor@i+1,___ftge@ff2+1
  3725  001916  C055  F006         	movff	floor@i+2,___ftge@ff2+2
  3726  00191A  EC74  F00E         	call	___ftge	;wreg free
  3727  00191E  B0D8               	btfsc	status,0,c
  3728  001920  D015               	goto	l816
  3729  001922  C053  F02B         	movff	floor@i,___ftadd@f1
  3730  001926  C054  F02C         	movff	floor@i+1,___ftadd@f1+1
  3731  00192A  C055  F02D         	movff	floor@i+2,___ftadd@f1+2
  3732  00192E  0E00               	movlw	0
  3733  001930  6E2E               	movwf	___ftadd@f2,c
  3734  001932  0E80               	movlw	128
  3735  001934  6E2F               	movwf	___ftadd@f2+1,c
  3736  001936  0EBF               	movlw	191
  3737  001938  6E30               	movwf	___ftadd@f2+2,c
  3738  00193A  ECE6  F007         	call	___ftadd	;wreg free
  3739  00193E  C02B  F050         	movff	?___ftadd,?_floor
  3740  001942  C02C  F051         	movff	?___ftadd+1,?_floor+1
  3741  001946  C02D  F052         	movff	?___ftadd+2,?_floor+2
  3742  00194A  0012               	return	
  3743  00194C                     l816:
  3744  00194C  C053  F050         	movff	floor@i,?_floor
  3745  001950  C054  F051         	movff	floor@i+1,?_floor+1
  3746  001954  C055  F052         	movff	floor@i+2,?_floor+2
  3747  001958  0012               	return		;funcret
  3748  00195A                     __end_of_floor:
  3749                           	opt stack 0
  3750                           tblptru	equ	0xFF8
  3751                           intcon	equ	0xFF2
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           plusw1	equ	0xFE3
  3755                           postinc2	equ	0xFDE
  3756                           postdec2	equ	0xFDD
  3757                           plusw2	equ	0xFDB
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _frexp *****************
  3763 ;; Defined at:
  3764 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  value           3    0[COMRAM] int 
  3767 ;;  eptr            2    3[COMRAM] PTR int 
  3768 ;;		 -> log@exponent(2), floor@expon(2), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  3    0[COMRAM] PTR int 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3780 ;;      Params:         5       0       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3782 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3783 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:        7 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_floor
  3790 ;;		_log
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text16
  3795  001C58                     __ptext16:
  3796                           	opt stack 0
  3797  001C58                     _frexp:
  3798                           	opt stack 26
  3799                           
  3800                           ;incstack = 0
  3801  001C58  5001               	movf	frexp@value,w,c
  3802  001C5A  1002               	iorwf	frexp@value+1,w,c
  3803  001C5C  1003               	iorwf	frexp@value+2,w,c
  3804  001C5E  A4D8               	btfss	status,2,c
  3805  001C60  D00F               	goto	l821
  3806  001C62  C004  FFD9         	movff	frexp@eptr,fsr2l
  3807  001C66  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3808  001C6A  0E00               	movlw	0
  3809  001C6C  6EDE               	movwf	postinc2,c
  3810  001C6E  0E00               	movlw	0
  3811  001C70  6EDD               	movwf	postdec2,c
  3812  001C72  0E00               	movlw	0
  3813  001C74  6E01               	movwf	?_frexp,c
  3814  001C76  0E00               	movlw	0
  3815  001C78  6E02               	movwf	?_frexp+1,c
  3816  001C7A  0E00               	movlw	0
  3817  001C7C  6E03               	movwf	?_frexp+2,c
  3818  001C7E  0012               	return	
  3819  001C80                     l821:
  3820  001C80  5003               	movf	frexp@value+2,w,c
  3821  001C82  0B7F               	andlw	127
  3822  001C84  6E06               	movwf	??_frexp& (0+255),c
  3823  001C86  6A07               	clrf	(??_frexp+1)& (0+255),c
  3824  001C88  90D8               	bcf	status,0,c
  3825  001C8A  3606               	rlcf	??_frexp,f,c
  3826  001C8C  3607               	rlcf	??_frexp+1,f,c
  3827  001C8E  C004  FFD9         	movff	frexp@eptr,fsr2l
  3828  001C92  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3829  001C96  C006  FFDE         	movff	??_frexp,postinc2
  3830  001C9A  C007  FFDD         	movff	??_frexp+1,postdec2
  3831  001C9E  AE02               	btfss	frexp@value+1,7,c
  3832  001CA0  D003               	goto	u2350
  3833  001CA2  6A06               	clrf	??_frexp& (0+255),c
  3834  001CA4  2A06               	incf	??_frexp& (0+255),f,c
  3835  001CA6  D001               	goto	u2358
  3836  001CA8                     u2350:
  3837  001CA8  6A06               	clrf	??_frexp& (0+255),c
  3838  001CAA                     u2358:
  3839  001CAA  5006               	movf	??_frexp,w,c
  3840  001CAC  C004  FFD9         	movff	frexp@eptr,fsr2l
  3841  001CB0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3842  001CB4  12DE               	iorwf	postinc2,f,c
  3843  001CB6  0E00               	movlw	0
  3844  001CB8  12DD               	iorwf	postdec2,f,c
  3845  001CBA  C004  FFD9         	movff	frexp@eptr,fsr2l
  3846  001CBE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3847  001CC2  0E82               	movlw	130
  3848  001CC4  26DE               	addwf	postinc2,f,c
  3849  001CC6  0EFF               	movlw	255
  3850  001CC8  22DD               	addwfc	postdec2,f,c
  3851  001CCA  8003               	bsf	frexp@value+2,0,c
  3852  001CCC  8203               	bsf	frexp@value+2,1,c
  3853  001CCE  8403               	bsf	frexp@value+2,2,c
  3854  001CD0  8603               	bsf	frexp@value+2,3,c
  3855  001CD2  8803               	bsf	frexp@value+2,4,c
  3856  001CD4  8A03               	bsf	frexp@value+2,5,c
  3857  001CD6  9C03               	bcf	frexp@value+2,6,c
  3858  001CD8  9E02               	bcf	frexp@value+1,7,c
  3859  001CDA  C001  F001         	movff	frexp@value,?_frexp
  3860  001CDE  C002  F002         	movff	frexp@value+1,?_frexp+1
  3861  001CE2  C003  F003         	movff	frexp@value+2,?_frexp+2
  3862  001CE6  0012               	return	
  3863  001CE8                     __end_of_frexp:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           intcon	equ	0xFF2
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           plusw1	equ	0xFE3
  3870                           postinc2	equ	0xFDE
  3871                           postdec2	equ	0xFDD
  3872                           plusw2	equ	0xFDB
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function ___fttol *****************
  3878 ;; Defined at:
  3879 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  f1              3   54[COMRAM] float 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  lval            4   64[COMRAM] unsigned long 
  3884 ;;  exp1            1   68[COMRAM] unsigned char 
  3885 ;;  sign1           1   63[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  4   54[COMRAM] long 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3895 ;;      Params:         4       0       0       0       0       0       0       0       0
  3896 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3897 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3898 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3899 ;;Total ram usage:       15 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_coinfig_ccpcon
  3905 ;;		_config_ccp1
  3906 ;;		_config_ccp2
  3907 ;;		_pow
  3908 ;;		_exp
  3909 ;;		_floor
  3910 ;;		_wait_in_ms
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text17
  3915  0015AE                     __ptext17:
  3916                           	opt stack 0
  3917  0015AE                     ___fttol:
  3918                           	opt stack 29
  3919                           
  3920                           ;incstack = 0
  3921  0015AE  C039  F03B         	movff	___fttol@f1+2,??___fttol
  3922  0015B2  6A3C               	clrf	(??___fttol+1)& (0+255),c
  3923  0015B4  6A3D               	clrf	(??___fttol+2)& (0+255),c
  3924  0015B6  3438               	rlcf	___fttol@f1+1,w,c
  3925  0015B8  363B               	rlcf	??___fttol& (0+255),f,c
  3926  0015BA  E301               	bnc	u2261
  3927  0015BC  803C               	bsf	(??___fttol+1)& (0+255),0,c
  3928  0015BE                     u2261:
  3929  0015BE  503B               	movf	??___fttol,w,c
  3930  0015C0  6E45               	movwf	___fttol@exp1,c
  3931  0015C2  5045               	movf	___fttol@exp1,w,c
  3932  0015C4  A4D8               	btfss	status,2,c
  3933  0015C6  D009               	goto	l522
  3934  0015C8  0E00               	movlw	0
  3935  0015CA  6E37               	movwf	?___fttol,c
  3936  0015CC  0E00               	movlw	0
  3937  0015CE  6E38               	movwf	?___fttol+1,c
  3938  0015D0  0E00               	movlw	0
  3939  0015D2  6E39               	movwf	?___fttol+2,c
  3940  0015D4  0E00               	movlw	0
  3941  0015D6  6E3A               	movwf	?___fttol+3,c
  3942  0015D8  0012               	return	
  3943  0015DA                     l522:
  3944  0015DA  0E17               	movlw	23
  3945  0015DC  6E3B               	movwf	??___fttol& (0+255),c
  3946  0015DE  C037  F03C         	movff	___fttol@f1,??___fttol+1
  3947  0015E2  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  3948  0015E6  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  3949  0015EA  283B               	incf	??___fttol,w,c
  3950  0015EC  6E3F               	movwf	(??___fttol+4)& (0+255),c
  3951  0015EE  D004               	goto	u2280
  3952  0015F0                     u2285:
  3953  0015F0  90D8               	bcf	status,0,c
  3954  0015F2  323E               	rrcf	??___fttol+3,f,c
  3955  0015F4  323D               	rrcf	??___fttol+2,f,c
  3956  0015F6  323C               	rrcf	??___fttol+1,f,c
  3957  0015F8                     u2280:
  3958  0015F8  2E3F               	decfsz	(??___fttol+4)& (0+255),f,c
  3959  0015FA  D7FA               	goto	u2285
  3960  0015FC  503C               	movf	??___fttol+1,w,c
  3961  0015FE  6E40               	movwf	___fttol@sign1,c
  3962  001600  8E38               	bsf	___fttol@f1+1,7,c
  3963  001602  0EFF               	movlw	255
  3964  001604  1637               	andwf	___fttol@f1,f,c
  3965  001606  0EFF               	movlw	255
  3966  001608  1638               	andwf	___fttol@f1+1,f,c
  3967  00160A  0E00               	movlw	0
  3968  00160C  1639               	andwf	___fttol@f1+2,f,c
  3969  00160E  5037               	movf	___fttol@f1,w,c
  3970  001610  6E41               	movwf	___fttol@lval,c
  3971  001612  5038               	movf	___fttol@f1+1,w,c
  3972  001614  6E42               	movwf	___fttol@lval+1,c
  3973  001616  5039               	movf	___fttol@f1+2,w,c
  3974  001618  6E43               	movwf	___fttol@lval+2,c
  3975  00161A  6A44               	clrf	___fttol@lval+3,c
  3976  00161C  0E8E               	movlw	142
  3977  00161E  5E45               	subwf	___fttol@exp1,f,c
  3978  001620  AE45               	btfss	___fttol@exp1,7,c
  3979  001622  D016               	goto	l524
  3980  001624  5045               	movf	___fttol@exp1,w,c
  3981  001626  0A80               	xorlw	128
  3982  001628  0F8F               	addlw	143
  3983  00162A  B0D8               	btfsc	status,0,c
  3984  00162C  D009               	goto	l525
  3985  00162E  0E00               	movlw	0
  3986  001630  6E37               	movwf	?___fttol,c
  3987  001632  0E00               	movlw	0
  3988  001634  6E38               	movwf	?___fttol+1,c
  3989  001636  0E00               	movlw	0
  3990  001638  6E39               	movwf	?___fttol+2,c
  3991  00163A  0E00               	movlw	0
  3992  00163C  6E3A               	movwf	?___fttol+3,c
  3993  00163E  0012               	return	
  3994  001640                     l525:
  3995  001640  90D8               	bcf	status,0,c
  3996  001642  3244               	rrcf	___fttol@lval+3,f,c
  3997  001644  3243               	rrcf	___fttol@lval+2,f,c
  3998  001646  3242               	rrcf	___fttol@lval+1,f,c
  3999  001648  3241               	rrcf	___fttol@lval,f,c
  4000  00164A  3E45               	incfsz	___fttol@exp1,f,c
  4001  00164C  D7F9               	goto	l525
  4002  00164E  D015               	goto	u2320
  4003  001650                     l524:
  4004  001650  0E17               	movlw	23
  4005  001652  6445               	cpfsgt	___fttol@exp1,c
  4006  001654  D00F               	goto	l530
  4007  001656  0E00               	movlw	0
  4008  001658  6E37               	movwf	?___fttol,c
  4009  00165A  0E00               	movlw	0
  4010  00165C  6E38               	movwf	?___fttol+1,c
  4011  00165E  0E00               	movlw	0
  4012  001660  6E39               	movwf	?___fttol+2,c
  4013  001662  0E00               	movlw	0
  4014  001664  6E3A               	movwf	?___fttol+3,c
  4015  001666  0012               	return	
  4016  001668  90D8               	bcf	status,0,c
  4017  00166A  3641               	rlcf	___fttol@lval,f,c
  4018  00166C  3642               	rlcf	___fttol@lval+1,f,c
  4019  00166E  3643               	rlcf	___fttol@lval+2,f,c
  4020  001670  3644               	rlcf	___fttol@lval+3,f,c
  4021  001672  0645               	decf	___fttol@exp1,f,c
  4022  001674                     l530:
  4023  001674  5045               	movf	___fttol@exp1,w,c
  4024  001676  A4D8               	btfss	status,2,c
  4025  001678  D7F7               	goto	l531
  4026  00167A                     u2320:
  4027  00167A  5040               	movf	___fttol@sign1,w,c
  4028  00167C  B4D8               	btfsc	status,2,c
  4029  00167E  D008               	goto	l533
  4030  001680  1E44               	comf	___fttol@lval+3,f,c
  4031  001682  1E43               	comf	___fttol@lval+2,f,c
  4032  001684  1E42               	comf	___fttol@lval+1,f,c
  4033  001686  6C41               	negf	___fttol@lval,c
  4034  001688  0E00               	movlw	0
  4035  00168A  2242               	addwfc	___fttol@lval+1,f,c
  4036  00168C  2243               	addwfc	___fttol@lval+2,f,c
  4037  00168E  2244               	addwfc	___fttol@lval+3,f,c
  4038  001690                     l533:
  4039  001690  C041  F037         	movff	___fttol@lval,?___fttol
  4040  001694  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  4041  001698  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  4042  00169C  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  4043  0016A0  0012               	return	
  4044  0016A2                     __end_of___fttol:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           plusw1	equ	0xFE3
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           plusw2	equ	0xFDB
  4054                           fsr2h	equ	0xFDA
  4055                           fsr2l	equ	0xFD9
  4056                           status	equ	0xFD8
  4057                           
  4058 ;; *************** function ___ftge *****************
  4059 ;; Defined at:
  4060 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  ff1             3    0[COMRAM] float 
  4063 ;;  ff2             3    3[COMRAM] float 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4075 ;;      Params:         6       0       0       0       0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4077 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4078 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4079 ;;Total ram usage:        9 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_pow
  4085 ;;		_exp
  4086 ;;		_floor
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text18
  4091  001CE8                     __ptext18:
  4092                           	opt stack 0
  4093  001CE8                     ___ftge:
  4094                           	opt stack 25
  4095                           
  4096                           ;incstack = 0
  4097  001CE8  AE03               	btfss	___ftge@ff1+2,7,c
  4098  001CEA  D016               	goto	l494
  4099  001CEC  C001  F007         	movff	___ftge@ff1,??___ftge
  4100  001CF0  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4101  001CF4  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4102  001CF8  1E07               	comf	??___ftge,f,c
  4103  001CFA  1E08               	comf	??___ftge+1,f,c
  4104  001CFC  1E09               	comf	??___ftge+2,f,c
  4105  001CFE  2A07               	incf	??___ftge,f,c
  4106  001D00  0E00               	movlw	0
  4107  001D02  2208               	addwfc	??___ftge+1,f,c
  4108  001D04  2209               	addwfc	??___ftge+2,f,c
  4109  001D06  0E00               	movlw	0
  4110  001D08  2407               	addwf	??___ftge,w,c
  4111  001D0A  6E01               	movwf	___ftge@ff1,c
  4112  001D0C  0E00               	movlw	0
  4113  001D0E  2008               	addwfc	??___ftge+1,w,c
  4114  001D10  6E02               	movwf	___ftge@ff1+1,c
  4115  001D12  0E80               	movlw	128
  4116  001D14  2009               	addwfc	??___ftge+2,w,c
  4117  001D16  6E03               	movwf	___ftge@ff1+2,c
  4118  001D18                     l494:
  4119  001D18  AE06               	btfss	___ftge@ff2+2,7,c
  4120  001D1A  D016               	goto	l495
  4121  001D1C  C004  F007         	movff	___ftge@ff2,??___ftge
  4122  001D20  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4123  001D24  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4124  001D28  1E07               	comf	??___ftge,f,c
  4125  001D2A  1E08               	comf	??___ftge+1,f,c
  4126  001D2C  1E09               	comf	??___ftge+2,f,c
  4127  001D2E  2A07               	incf	??___ftge,f,c
  4128  001D30  0E00               	movlw	0
  4129  001D32  2208               	addwfc	??___ftge+1,f,c
  4130  001D34  2209               	addwfc	??___ftge+2,f,c
  4131  001D36  0E00               	movlw	0
  4132  001D38  2407               	addwf	??___ftge,w,c
  4133  001D3A  6E04               	movwf	___ftge@ff2,c
  4134  001D3C  0E00               	movlw	0
  4135  001D3E  2008               	addwfc	??___ftge+1,w,c
  4136  001D40  6E05               	movwf	___ftge@ff2+1,c
  4137  001D42  0E80               	movlw	128
  4138  001D44  2009               	addwfc	??___ftge+2,w,c
  4139  001D46  6E06               	movwf	___ftge@ff2+2,c
  4140  001D48                     l495:
  4141  001D48  0E00               	movlw	0
  4142  001D4A  1A01               	xorwf	___ftge@ff1,f,c
  4143  001D4C  0E00               	movlw	0
  4144  001D4E  1A02               	xorwf	___ftge@ff1+1,f,c
  4145  001D50  0E80               	movlw	128
  4146  001D52  1A03               	xorwf	___ftge@ff1+2,f,c
  4147  001D54  0E00               	movlw	0
  4148  001D56  1A04               	xorwf	___ftge@ff2,f,c
  4149  001D58  0E00               	movlw	0
  4150  001D5A  1A05               	xorwf	___ftge@ff2+1,f,c
  4151  001D5C  0E80               	movlw	128
  4152  001D5E  1A06               	xorwf	___ftge@ff2+2,f,c
  4153  001D60  5004               	movf	___ftge@ff2,w,c
  4154  001D62  5C01               	subwf	___ftge@ff1,w,c
  4155  001D64  5005               	movf	___ftge@ff2+1,w,c
  4156  001D66  5802               	subwfb	___ftge@ff1+1,w,c
  4157  001D68  5006               	movf	___ftge@ff2+2,w,c
  4158  001D6A  5803               	subwfb	___ftge@ff1+2,w,c
  4159  001D6C  B0D8               	btfsc	status,0,c
  4160  001D6E  D002               	goto	l1946
  4161  001D70  90D8               	bcf	status,0,c
  4162  001D72  0012               	return	
  4163  001D74                     l1946:
  4164  001D74  80D8               	bsf	status,0,c
  4165  001D76  0012               	return	
  4166  001D78                     __end_of___ftge:
  4167                           	opt stack 0
  4168                           tblptru	equ	0xFF8
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           plusw1	equ	0xFE3
  4173                           postinc2	equ	0xFDE
  4174                           postdec2	equ	0xFDD
  4175                           plusw2	equ	0xFDB
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function ___altoft *****************
  4181 ;; Defined at:
  4182 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  c               4   69[COMRAM] long 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  sign            1   78[COMRAM] unsigned char 
  4187 ;;  exp             1   77[COMRAM] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  3   69[COMRAM] float 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4197 ;;      Params:         4       0       0       0       0       0       0       0       0
  4198 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4199 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4200 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:       10 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    1
  4204 ;; This function calls:
  4205 ;;		___ftpack
  4206 ;; This function is called by:
  4207 ;;		_floor
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text19
  4212  001DFC                     __ptext19:
  4213                           	opt stack 0
  4214  001DFC                     ___altoft:
  4215                           	opt stack 24
  4216                           
  4217                           ;incstack = 0
  4218  001DFC  0E00               	movlw	0
  4219  001DFE  6E4F               	movwf	___altoft@sign,c
  4220  001E00  0E8E               	movlw	142
  4221  001E02  6E4E               	movwf	___altoft@exp,c
  4222  001E04  AE49               	btfss	___altoft@c+3,7,c
  4223  001E06  D011               	goto	l292
  4224  001E08  1E49               	comf	___altoft@c+3,f,c
  4225  001E0A  1E48               	comf	___altoft@c+2,f,c
  4226  001E0C  1E47               	comf	___altoft@c+1,f,c
  4227  001E0E  6C46               	negf	___altoft@c,c
  4228  001E10  0E00               	movlw	0
  4229  001E12  2247               	addwfc	___altoft@c+1,f,c
  4230  001E14  2248               	addwfc	___altoft@c+2,f,c
  4231  001E16  2249               	addwfc	___altoft@c+3,f,c
  4232  001E18  0E01               	movlw	1
  4233  001E1A  6E4F               	movwf	___altoft@sign,c
  4234  001E1C  D006               	goto	l292
  4235  001E1E  90D8               	bcf	status,0,c
  4236  001E20  3249               	rrcf	___altoft@c+3,f,c
  4237  001E22  3248               	rrcf	___altoft@c+2,f,c
  4238  001E24  3247               	rrcf	___altoft@c+1,f,c
  4239  001E26  3246               	rrcf	___altoft@c,f,c
  4240  001E28  2A4E               	incf	___altoft@exp,f,c
  4241  001E2A                     l292:
  4242  001E2A  0E00               	movlw	0
  4243  001E2C  1446               	andwf	___altoft@c,w,c
  4244  001E2E  6E4A               	movwf	??___altoft& (0+255),c
  4245  001E30  0E00               	movlw	0
  4246  001E32  1447               	andwf	___altoft@c+1,w,c
  4247  001E34  6E4B               	movwf	(??___altoft+1)& (0+255),c
  4248  001E36  0E00               	movlw	0
  4249  001E38  1448               	andwf	___altoft@c+2,w,c
  4250  001E3A  6E4C               	movwf	(??___altoft+2)& (0+255),c
  4251  001E3C  0EFF               	movlw	255
  4252  001E3E  1449               	andwf	___altoft@c+3,w,c
  4253  001E40  6E4D               	movwf	(??___altoft+3)& (0+255),c
  4254  001E42  504A               	movf	??___altoft,w,c
  4255  001E44  104B               	iorwf	??___altoft+1,w,c
  4256  001E46  104C               	iorwf	??___altoft+2,w,c
  4257  001E48  104D               	iorwf	??___altoft+3,w,c
  4258  001E4A  A4D8               	btfss	status,2,c
  4259  001E4C  D7E8               	goto	l293
  4260  001E4E  C046  F001         	movff	___altoft@c,___ftpack@arg
  4261  001E52  C047  F002         	movff	___altoft@c+1,___ftpack@arg+1
  4262  001E56  C048  F003         	movff	___altoft@c+2,___ftpack@arg+2
  4263  001E5A  C04E  F004         	movff	___altoft@exp,___ftpack@exp
  4264  001E5E  C04F  F005         	movff	___altoft@sign,___ftpack@sign
  4265  001E62  ECD5  F00D         	call	___ftpack	;wreg free
  4266  001E66  C001  F046         	movff	?___ftpack,?___altoft
  4267  001E6A  C002  F047         	movff	?___ftpack+1,?___altoft+1
  4268  001E6E  C003  F048         	movff	?___ftpack+2,?___altoft+2
  4269  001E72  0012               	return	
  4270  001E74                     __end_of___altoft:
  4271                           	opt stack 0
  4272                           tblptru	equ	0xFF8
  4273                           intcon	equ	0xFF2
  4274                           postinc0	equ	0xFEE
  4275                           wreg	equ	0xFE8
  4276                           plusw1	equ	0xFE3
  4277                           postinc2	equ	0xFDE
  4278                           postdec2	equ	0xFDD
  4279                           plusw2	equ	0xFDB
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _eval_poly *****************
  4285 ;; Defined at:
  4286 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  x               3   54[COMRAM] float 
  4289 ;;  d               2   57[COMRAM] PTR const 
  4290 ;;		 -> log@coeff(27), exp@coeff(30), 
  4291 ;;  n               2   59[COMRAM] int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  res             3   63[COMRAM] int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  3   54[COMRAM] int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4303 ;;      Params:         7       0       0       0       0       0       0       0       0
  4304 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4305 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4306 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4307 ;;Total ram usage:       12 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    2
  4310 ;; This function calls:
  4311 ;;		___ftadd
  4312 ;;		___ftmul
  4313 ;;		___wmul
  4314 ;; This function is called by:
  4315 ;;		_exp
  4316 ;;		_log
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text20
  4321  00195A                     __ptext20:
  4322                           	opt stack 0
  4323  00195A                     _eval_poly:
  4324                           	opt stack 24
  4325                           
  4326                           ;incstack = 0
  4327  00195A  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4328  00195E  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4329  001962  0E00               	movlw	0
  4330  001964  6E04               	movwf	___wmul@multiplicand+1,c
  4331  001966  0E03               	movlw	3
  4332  001968  6E03               	movwf	___wmul@multiplicand,c
  4333  00196A  EC4F  F010         	call	___wmul	;wreg free
  4334  00196E  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4335  001972  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4336  001976  5001               	movf	?___wmul,w,c
  4337  001978  263E               	addwf	??_eval_poly,f,c
  4338  00197A  5002               	movf	?___wmul+1,w,c
  4339  00197C  223F               	addwfc	??_eval_poly+1,f,c
  4340  00197E  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4341  001982  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4342  001986                     	if	0	;tblptru may be non-zero
  4343  001986                     	endif
  4344  001986                     	if	0	;tblptru may be non-zero
  4345  001986                     	endif
  4346  001986  0009               	tblrd		*+
  4347  001988  CFF5 F040          	movff	tablat,eval_poly@res
  4348  00198C  0009               	tblrd		*+
  4349  00198E  CFF5 F041          	movff	tablat,eval_poly@res+1
  4350  001992  000A               	tblrd		*-
  4351  001994  CFF5 F042          	movff	tablat,eval_poly@res+2
  4352  001998  D03E               	goto	l851
  4353  00199A  C040  F010         	movff	eval_poly@res,___ftmul@f2
  4354  00199E  C041  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  4355  0019A2  C042  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  4356  0019A6  C037  F00D         	movff	eval_poly@x,___ftmul@f1
  4357  0019AA  C038  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  4358  0019AE  C039  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  4359  0019B2  EC51  F00B         	call	___ftmul	;wreg free
  4360  0019B6  C00D  F02B         	movff	?___ftmul,___ftadd@f1
  4361  0019BA  C00E  F02C         	movff	?___ftmul+1,___ftadd@f1+1
  4362  0019BE  C00F  F02D         	movff	?___ftmul+2,___ftadd@f1+2
  4363  0019C2  0E00               	movlw	0
  4364  0019C4  6E04               	movwf	___wmul@multiplicand+1,c
  4365  0019C6  0E03               	movlw	3
  4366  0019C8  6E03               	movwf	___wmul@multiplicand,c
  4367  0019CA  063C               	decf	eval_poly@n,f,c
  4368  0019CC  A0D8               	btfss	status,0,c
  4369  0019CE  063D               	decf	eval_poly@n+1,f,c
  4370  0019D0  C03C  F001         	movff	eval_poly@n,___wmul@multiplier
  4371  0019D4  C03D  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  4372  0019D8  EC4F  F010         	call	___wmul	;wreg free
  4373  0019DC  C03A  F03E         	movff	eval_poly@d,??_eval_poly
  4374  0019E0  C03B  F03F         	movff	eval_poly@d+1,??_eval_poly+1
  4375  0019E4  5001               	movf	?___wmul,w,c
  4376  0019E6  263E               	addwf	??_eval_poly,f,c
  4377  0019E8  5002               	movf	?___wmul+1,w,c
  4378  0019EA  223F               	addwfc	??_eval_poly+1,f,c
  4379  0019EC  C03E  FFF6         	movff	??_eval_poly,tblptrl
  4380  0019F0  C03F  FFF7         	movff	??_eval_poly+1,tblptrh
  4381  0019F4                     	if	0	;tblptru may be non-zero
  4382  0019F4                     	endif
  4383  0019F4                     	if	0	;tblptru may be non-zero
  4384  0019F4                     	endif
  4385  0019F4  0009               	tblrd		*+
  4386  0019F6  CFF5 F02E          	movff	tablat,___ftadd@f2
  4387  0019FA  0009               	tblrd		*+
  4388  0019FC  CFF5 F02F          	movff	tablat,___ftadd@f2+1
  4389  001A00  000A               	tblrd		*-
  4390  001A02  CFF5 F030          	movff	tablat,___ftadd@f2+2
  4391  001A06  ECE6  F007         	call	___ftadd	;wreg free
  4392  001A0A  C02B  F040         	movff	?___ftadd,eval_poly@res
  4393  001A0E  C02C  F041         	movff	?___ftadd+1,eval_poly@res+1
  4394  001A12  C02D  F042         	movff	?___ftadd+2,eval_poly@res+2
  4395  001A16                     l851:
  4396  001A16  503C               	movf	eval_poly@n,w,c
  4397  001A18  103D               	iorwf	eval_poly@n+1,w,c
  4398  001A1A  A4D8               	btfss	status,2,c
  4399  001A1C  D7BE               	goto	l852
  4400  001A1E  C040  F037         	movff	eval_poly@res,?_eval_poly
  4401  001A22  C041  F038         	movff	eval_poly@res+1,?_eval_poly+1
  4402  001A26  C042  F039         	movff	eval_poly@res+2,?_eval_poly+2
  4403  001A2A  0012               	return		;funcret
  4404  001A2C                     __end_of_eval_poly:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           intcon	equ	0xFF2
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           plusw1	equ	0xFE3
  4414                           postinc2	equ	0xFDE
  4415                           postdec2	equ	0xFDD
  4416                           plusw2	equ	0xFDB
  4417                           fsr2h	equ	0xFDA
  4418                           fsr2l	equ	0xFD9
  4419                           status	equ	0xFD8
  4420                           
  4421 ;; *************** function ___wmul *****************
  4422 ;; Defined at:
  4423 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  multiplier      2    0[COMRAM] unsigned int 
  4426 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  product         2    4[COMRAM] unsigned int 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    0[COMRAM] unsigned int 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, prodl, prodh
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4438 ;;      Params:         4       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4441 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:        6 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_eval_poly
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text21
  4452  00209E                     __ptext21:
  4453                           	opt stack 0
  4454  00209E                     ___wmul:
  4455                           	opt stack 25
  4456                           
  4457                           ;incstack = 0
  4458  00209E  5001               	movf	___wmul@multiplier,w,c
  4459  0020A0  0203               	mulwf	___wmul@multiplicand,c
  4460  0020A2  CFF3 F005          	movff	prodl,___wmul@product
  4461  0020A6  CFF4 F006          	movff	prodh,___wmul@product+1
  4462  0020AA  5001               	movf	___wmul@multiplier,w,c
  4463  0020AC  0204               	mulwf	___wmul@multiplicand+1,c
  4464  0020AE  50F3               	movf	prodl,w,c
  4465  0020B0  2606               	addwf	___wmul@product+1,f,c
  4466  0020B2  5002               	movf	___wmul@multiplier+1,w,c
  4467  0020B4  0203               	mulwf	___wmul@multiplicand,c
  4468  0020B6  50F3               	movf	prodl,w,c
  4469  0020B8  2606               	addwf	___wmul@product+1,f,c
  4470  0020BA  C005  F001         	movff	___wmul@product,?___wmul
  4471  0020BE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4472  0020C2  0012               	return	
  4473  0020C4                     __end_of___wmul:
  4474                           	opt stack 0
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           prodh	equ	0xFF4
  4480                           prodl	equ	0xFF3
  4481                           intcon	equ	0xFF2
  4482                           postinc0	equ	0xFEE
  4483                           wreg	equ	0xFE8
  4484                           plusw1	equ	0xFE3
  4485                           postinc2	equ	0xFDE
  4486                           postdec2	equ	0xFDD
  4487                           plusw2	equ	0xFDB
  4488                           fsr2h	equ	0xFDA
  4489                           fsr2l	equ	0xFD9
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function ___ftmul *****************
  4493 ;; Defined at:
  4494 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  f1              3   12[COMRAM] float 
  4497 ;;  f2              3   15[COMRAM] float 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  4500 ;;  sign            1   26[COMRAM] unsigned char 
  4501 ;;  cntr            1   25[COMRAM] unsigned char 
  4502 ;;  exp             1   21[COMRAM] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  3   12[COMRAM] float 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4512 ;;      Params:         6       0       0       0       0       0       0       0       0
  4513 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4514 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4515 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4516 ;;Total ram usage:       15 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    1
  4519 ;; This function calls:
  4520 ;;		___ftpack
  4521 ;; This function is called by:
  4522 ;;		_coinfig_ccpcon
  4523 ;;		_config_ccp1
  4524 ;;		_config_ccp2
  4525 ;;		_pow
  4526 ;;		_exp
  4527 ;;		_log
  4528 ;;		_eval_poly
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text22
  4533  0016A2                     __ptext22:
  4534                           	opt stack 0
  4535  0016A2                     ___ftmul:
  4536                           	opt stack 28
  4537                           
  4538                           ;incstack = 0
  4539  0016A2  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  4540  0016A6  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4541  0016A8  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4542  0016AA  340E               	rlcf	___ftmul@f1+1,w,c
  4543  0016AC  3613               	rlcf	??___ftmul& (0+255),f,c
  4544  0016AE  E301               	bnc	u2171
  4545  0016B0  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4546  0016B2                     u2171:
  4547  0016B2  5013               	movf	??___ftmul,w,c
  4548  0016B4  6E16               	movwf	___ftmul@exp,c
  4549  0016B6  5016               	movf	___ftmul@exp,w,c
  4550  0016B8  A4D8               	btfss	status,2,c
  4551  0016BA  D007               	goto	l501
  4552  0016BC  0E00               	movlw	0
  4553  0016BE  6E0D               	movwf	?___ftmul,c
  4554  0016C0  0E00               	movlw	0
  4555  0016C2  6E0E               	movwf	?___ftmul+1,c
  4556  0016C4  0E00               	movlw	0
  4557  0016C6  6E0F               	movwf	?___ftmul+2,c
  4558  0016C8  0012               	return	
  4559  0016CA                     l501:
  4560  0016CA  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  4561  0016CE  6A14               	clrf	(??___ftmul+1)& (0+255),c
  4562  0016D0  6A15               	clrf	(??___ftmul+2)& (0+255),c
  4563  0016D2  3411               	rlcf	___ftmul@f2+1,w,c
  4564  0016D4  3613               	rlcf	??___ftmul& (0+255),f,c
  4565  0016D6  E301               	bnc	u2191
  4566  0016D8  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  4567  0016DA                     u2191:
  4568  0016DA  5013               	movf	??___ftmul,w,c
  4569  0016DC  6E1B               	movwf	___ftmul@sign,c
  4570  0016DE  501B               	movf	___ftmul@sign,w,c
  4571  0016E0  A4D8               	btfss	status,2,c
  4572  0016E2  D007               	goto	l503
  4573  0016E4  0E00               	movlw	0
  4574  0016E6  6E0D               	movwf	?___ftmul,c
  4575  0016E8  0E00               	movlw	0
  4576  0016EA  6E0E               	movwf	?___ftmul+1,c
  4577  0016EC  0E00               	movlw	0
  4578  0016EE  6E0F               	movwf	?___ftmul+2,c
  4579  0016F0  0012               	return	
  4580  0016F2                     l503:
  4581  0016F2  501B               	movf	___ftmul@sign,w,c
  4582  0016F4  0F7B               	addlw	123
  4583  0016F6  2616               	addwf	___ftmul@exp,f,c
  4584  0016F8  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  4585  0016FC  5012               	movf	___ftmul@f2+2,w,c
  4586  0016FE  1A1B               	xorwf	___ftmul@sign,f,c
  4587  001700  0E80               	movlw	128
  4588  001702  161B               	andwf	___ftmul@sign,f,c
  4589  001704  8E0E               	bsf	___ftmul@f1+1,7,c
  4590  001706  8E11               	bsf	___ftmul@f2+1,7,c
  4591  001708  0EFF               	movlw	255
  4592  00170A  1610               	andwf	___ftmul@f2,f,c
  4593  00170C  0EFF               	movlw	255
  4594  00170E  1611               	andwf	___ftmul@f2+1,f,c
  4595  001710  0E00               	movlw	0
  4596  001712  1612               	andwf	___ftmul@f2+2,f,c
  4597  001714  0E00               	movlw	0
  4598  001716  6E17               	movwf	___ftmul@f3_as_product,c
  4599  001718  0E00               	movlw	0
  4600  00171A  6E18               	movwf	___ftmul@f3_as_product+1,c
  4601  00171C  0E00               	movlw	0
  4602  00171E  6E19               	movwf	___ftmul@f3_as_product+2,c
  4603  001720  0E07               	movlw	7
  4604  001722  6E1A               	movwf	___ftmul@cntr,c
  4605  001724  A00D               	btfss	___ftmul@f1,0,c
  4606  001726  D006               	goto	l505
  4607  001728  5010               	movf	___ftmul@f2,w,c
  4608  00172A  2617               	addwf	___ftmul@f3_as_product,f,c
  4609  00172C  5011               	movf	___ftmul@f2+1,w,c
  4610  00172E  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4611  001730  5012               	movf	___ftmul@f2+2,w,c
  4612  001732  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4613  001734                     l505:
  4614  001734  90D8               	bcf	status,0,c
  4615  001736  320F               	rrcf	___ftmul@f1+2,f,c
  4616  001738  320E               	rrcf	___ftmul@f1+1,f,c
  4617  00173A  320D               	rrcf	___ftmul@f1,f,c
  4618  00173C  90D8               	bcf	status,0,c
  4619  00173E  3610               	rlcf	___ftmul@f2,f,c
  4620  001740  3611               	rlcf	___ftmul@f2+1,f,c
  4621  001742  3612               	rlcf	___ftmul@f2+2,f,c
  4622  001744  2E1A               	decfsz	___ftmul@cntr,f,c
  4623  001746  D7EE               	goto	l504
  4624  001748  0E09               	movlw	9
  4625  00174A  6E1A               	movwf	___ftmul@cntr,c
  4626  00174C  A00D               	btfss	___ftmul@f1,0,c
  4627  00174E  D006               	goto	l508
  4628  001750  5010               	movf	___ftmul@f2,w,c
  4629  001752  2617               	addwf	___ftmul@f3_as_product,f,c
  4630  001754  5011               	movf	___ftmul@f2+1,w,c
  4631  001756  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  4632  001758  5012               	movf	___ftmul@f2+2,w,c
  4633  00175A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  4634  00175C                     l508:
  4635  00175C  90D8               	bcf	status,0,c
  4636  00175E  320F               	rrcf	___ftmul@f1+2,f,c
  4637  001760  320E               	rrcf	___ftmul@f1+1,f,c
  4638  001762  320D               	rrcf	___ftmul@f1,f,c
  4639  001764  90D8               	bcf	status,0,c
  4640  001766  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  4641  001768  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  4642  00176A  3217               	rrcf	___ftmul@f3_as_product,f,c
  4643  00176C  2E1A               	decfsz	___ftmul@cntr,f,c
  4644  00176E  D7EE               	goto	l507
  4645  001770  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4646  001774  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4647  001778  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4648  00177C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  4649  001780  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  4650  001784  ECD5  F00D         	call	___ftpack	;wreg free
  4651  001788  C001  F00D         	movff	?___ftpack,?___ftmul
  4652  00178C  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  4653  001790  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  4654  001794  0012               	return	
  4655  001796                     __end_of___ftmul:
  4656                           	opt stack 0
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           prodh	equ	0xFF4
  4662                           prodl	equ	0xFF3
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           plusw1	equ	0xFE3
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           plusw2	equ	0xFDB
  4670                           fsr2h	equ	0xFDA
  4671                           fsr2l	equ	0xFD9
  4672                           status	equ	0xFD8
  4673                           
  4674 ;; *************** function ___ftsub *****************
  4675 ;; Defined at:
  4676 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  f1              3   54[COMRAM] float 
  4679 ;;  f2              3   57[COMRAM] float 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  3   54[COMRAM] float 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4691 ;;      Params:         6       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4694 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        6 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    2
  4698 ;; This function calls:
  4699 ;;		___ftadd
  4700 ;; This function is called by:
  4701 ;;		_exp
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text23
  4706  001FEC                     __ptext23:
  4707                           	opt stack 0
  4708  001FEC                     ___ftsub:
  4709                           	opt stack 24
  4710                           
  4711                           ;incstack = 0
  4712  001FEC  503A               	movf	___ftsub@f2,w,c
  4713  001FEE  103B               	iorwf	___ftsub@f2+1,w,c
  4714  001FF0  103C               	iorwf	___ftsub@f2+2,w,c
  4715  001FF2  B4D8               	btfsc	status,2,c
  4716  001FF4  D006               	goto	l518
  4717  001FF6  0E00               	movlw	0
  4718  001FF8  1A3A               	xorwf	___ftsub@f2,f,c
  4719  001FFA  0E00               	movlw	0
  4720  001FFC  1A3B               	xorwf	___ftsub@f2+1,f,c
  4721  001FFE  0E80               	movlw	128
  4722  002000  1A3C               	xorwf	___ftsub@f2+2,f,c
  4723  002002                     l518:
  4724  002002  C037  F02B         	movff	___ftsub@f1,___ftadd@f1
  4725  002006  C038  F02C         	movff	___ftsub@f1+1,___ftadd@f1+1
  4726  00200A  C039  F02D         	movff	___ftsub@f1+2,___ftadd@f1+2
  4727  00200E  C03A  F02E         	movff	___ftsub@f2,___ftadd@f2
  4728  002012  C03B  F02F         	movff	___ftsub@f2+1,___ftadd@f2+1
  4729  002016  C03C  F030         	movff	___ftsub@f2+2,___ftadd@f2+2
  4730  00201A  ECE6  F007         	call	___ftadd	;wreg free
  4731  00201E  C02B  F037         	movff	?___ftadd,?___ftsub
  4732  002022  C02C  F038         	movff	?___ftadd+1,?___ftsub+1
  4733  002026  C02D  F039         	movff	?___ftadd+2,?___ftsub+2
  4734  00202A  0012               	return	
  4735  00202C                     __end_of___ftsub:
  4736                           	opt stack 0
  4737                           tblptru	equ	0xFF8
  4738                           tblptrh	equ	0xFF7
  4739                           tblptrl	equ	0xFF6
  4740                           tablat	equ	0xFF5
  4741                           prodh	equ	0xFF4
  4742                           prodl	equ	0xFF3
  4743                           intcon	equ	0xFF2
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           plusw1	equ	0xFE3
  4747                           postinc2	equ	0xFDE
  4748                           postdec2	equ	0xFDD
  4749                           plusw2	equ	0xFDB
  4750                           fsr2h	equ	0xFDA
  4751                           fsr2l	equ	0xFD9
  4752                           status	equ	0xFD8
  4753                           
  4754 ;; *************** function ___ftadd *****************
  4755 ;; Defined at:
  4756 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  f1              3   42[COMRAM] float 
  4759 ;;  f2              3   45[COMRAM] float 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  exp1            1   53[COMRAM] unsigned char 
  4762 ;;  exp2            1   52[COMRAM] unsigned char 
  4763 ;;  sign            1   51[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  3   42[COMRAM] float 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4773 ;;      Params:         6       0       0       0       0       0       0       0       0
  4774 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4775 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4776 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4777 ;;Total ram usage:       12 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    1
  4780 ;; This function calls:
  4781 ;;		___ftpack
  4782 ;; This function is called by:
  4783 ;;		_coinfig_ccpcon
  4784 ;;		_config_ccp1
  4785 ;;		_config_ccp2
  4786 ;;		___ftsub
  4787 ;;		_floor
  4788 ;;		_log
  4789 ;;		_eval_poly
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text24
  4794  000FCC                     __ptext24:
  4795                           	opt stack 0
  4796  000FCC                     ___ftadd:
  4797                           	opt stack 28
  4798                           
  4799                           ;incstack = 0
  4800  000FCC  C02D  F031         	movff	___ftadd@f1+2,??___ftadd
  4801  000FD0  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4802  000FD2  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4803  000FD4  342C               	rlcf	___ftadd@f1+1,w,c
  4804  000FD6  3631               	rlcf	??___ftadd& (0+255),f,c
  4805  000FD8  E301               	bnc	u1961
  4806  000FDA  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4807  000FDC                     u1961:
  4808  000FDC  5031               	movf	??___ftadd,w,c
  4809  000FDE  6E36               	movwf	___ftadd@exp1,c
  4810  000FE0  C030  F031         	movff	___ftadd@f2+2,??___ftadd
  4811  000FE4  6A32               	clrf	(??___ftadd+1)& (0+255),c
  4812  000FE6  6A33               	clrf	(??___ftadd+2)& (0+255),c
  4813  000FE8  342F               	rlcf	___ftadd@f2+1,w,c
  4814  000FEA  3631               	rlcf	??___ftadd& (0+255),f,c
  4815  000FEC  E301               	bnc	u1971
  4816  000FEE  8032               	bsf	(??___ftadd+1)& (0+255),0,c
  4817  000FF0                     u1971:
  4818  000FF0  5031               	movf	??___ftadd,w,c
  4819  000FF2  6E35               	movwf	___ftadd@exp2,c
  4820  000FF4  5036               	movf	___ftadd@exp1,w,c
  4821  000FF6  B4D8               	btfsc	status,2,c
  4822  000FF8  D00B               	goto	u2000
  4823  000FFA  5035               	movf	___ftadd@exp2,w,c
  4824  000FFC  5C36               	subwf	___ftadd@exp1,w,c
  4825  000FFE  B0D8               	btfsc	status,0,c
  4826  001000  D00E               	goto	l453
  4827  001002  5036               	movf	___ftadd@exp1,w,c
  4828  001004  0800               	sublw	0
  4829  001006  2435               	addwf	___ftadd@exp2,w,c
  4830  001008  6E31               	movwf	??___ftadd& (0+255),c
  4831  00100A  0E18               	movlw	24
  4832  00100C  6431               	cpfsgt	??___ftadd,c
  4833  00100E  D007               	goto	l453
  4834  001010                     u2000:
  4835  001010  C02E  F02B         	movff	___ftadd@f2,?___ftadd
  4836  001014  C02F  F02C         	movff	___ftadd@f2+1,?___ftadd+1
  4837  001018  C030  F02D         	movff	___ftadd@f2+2,?___ftadd+2
  4838  00101C  0012               	return	
  4839  00101E                     l453:
  4840  00101E  5035               	movf	___ftadd@exp2,w,c
  4841  001020  B4D8               	btfsc	status,2,c
  4842  001022  D00B               	goto	u2030
  4843  001024  5036               	movf	___ftadd@exp1,w,c
  4844  001026  5C35               	subwf	___ftadd@exp2,w,c
  4845  001028  B0D8               	btfsc	status,0,c
  4846  00102A  D00E               	goto	l457
  4847  00102C  5035               	movf	___ftadd@exp2,w,c
  4848  00102E  0800               	sublw	0
  4849  001030  2436               	addwf	___ftadd@exp1,w,c
  4850  001032  6E31               	movwf	??___ftadd& (0+255),c
  4851  001034  0E18               	movlw	24
  4852  001036  6431               	cpfsgt	??___ftadd,c
  4853  001038  D007               	goto	l457
  4854  00103A                     u2030:
  4855  00103A  C02B  F02B         	movff	___ftadd@f1,?___ftadd
  4856  00103E  C02C  F02C         	movff	___ftadd@f1+1,?___ftadd+1
  4857  001042  C02D  F02D         	movff	___ftadd@f1+2,?___ftadd+2
  4858  001046  0012               	return	
  4859  001048                     l457:
  4860  001048  0E06               	movlw	6
  4861  00104A  6E34               	movwf	___ftadd@sign,c
  4862  00104C  BE2D               	btfsc	___ftadd@f1+2,7,c
  4863  00104E  8E34               	bsf	___ftadd@sign,7,c
  4864  001050  BE30               	btfsc	___ftadd@f2+2,7,c
  4865  001052  8C34               	bsf	___ftadd@sign,6,c
  4866  001054  8E2C               	bsf	___ftadd@f1+1,7,c
  4867  001056  0EFF               	movlw	255
  4868  001058  162B               	andwf	___ftadd@f1,f,c
  4869  00105A  0EFF               	movlw	255
  4870  00105C  162C               	andwf	___ftadd@f1+1,f,c
  4871  00105E  0E00               	movlw	0
  4872  001060  162D               	andwf	___ftadd@f1+2,f,c
  4873  001062  8E2F               	bsf	___ftadd@f2+1,7,c
  4874  001064  0EFF               	movlw	255
  4875  001066  162E               	andwf	___ftadd@f2,f,c
  4876  001068  0EFF               	movlw	255
  4877  00106A  162F               	andwf	___ftadd@f2+1,f,c
  4878  00106C  0E00               	movlw	0
  4879  00106E  1630               	andwf	___ftadd@f2+2,f,c
  4880  001070  5035               	movf	___ftadd@exp2,w,c
  4881  001072  5C36               	subwf	___ftadd@exp1,w,c
  4882  001074  B0D8               	btfsc	status,0,c
  4883  001076  D01B               	goto	l462
  4884  001078                     u2060:
  4885  001078  90D8               	bcf	status,0,c
  4886  00107A  362E               	rlcf	___ftadd@f2,f,c
  4887  00107C  362F               	rlcf	___ftadd@f2+1,f,c
  4888  00107E  3630               	rlcf	___ftadd@f2+2,f,c
  4889  001080  0635               	decf	___ftadd@exp2,f,c
  4890  001082  5036               	movf	___ftadd@exp1,w,c
  4891  001084  1835               	xorwf	___ftadd@exp2,w,c
  4892  001086  B4D8               	btfsc	status,2,c
  4893  001088  D00D               	goto	l467
  4894  00108A  0634               	decf	___ftadd@sign,f,c
  4895  00108C  C034  F031         	movff	___ftadd@sign,??___ftadd
  4896  001090  0E07               	movlw	7
  4897  001092  1631               	andwf	??___ftadd,f,c
  4898  001094  B4D8               	btfsc	status,2,c
  4899  001096  D006               	goto	l467
  4900  001098  D7EF               	goto	u2060
  4901  00109A  90D8               	bcf	status,0,c
  4902  00109C  322D               	rrcf	___ftadd@f1+2,f,c
  4903  00109E  322C               	rrcf	___ftadd@f1+1,f,c
  4904  0010A0  322B               	rrcf	___ftadd@f1,f,c
  4905  0010A2  2A36               	incf	___ftadd@exp1,f,c
  4906  0010A4                     l467:
  4907  0010A4  5035               	movf	___ftadd@exp2,w,c
  4908  0010A6  1836               	xorwf	___ftadd@exp1,w,c
  4909  0010A8  B4D8               	btfsc	status,2,c
  4910  0010AA  D01F               	goto	u2130
  4911  0010AC  D7F6               	goto	l468
  4912  0010AE                     l462:
  4913  0010AE  5036               	movf	___ftadd@exp1,w,c
  4914  0010B0  5C35               	subwf	___ftadd@exp2,w,c
  4915  0010B2  B0D8               	btfsc	status,0,c
  4916  0010B4  D01A               	goto	u2130
  4917  0010B6                     u2100:
  4918  0010B6  90D8               	bcf	status,0,c
  4919  0010B8  362B               	rlcf	___ftadd@f1,f,c
  4920  0010BA  362C               	rlcf	___ftadd@f1+1,f,c
  4921  0010BC  362D               	rlcf	___ftadd@f1+2,f,c
  4922  0010BE  0636               	decf	___ftadd@exp1,f,c
  4923  0010C0  5036               	movf	___ftadd@exp1,w,c
  4924  0010C2  1835               	xorwf	___ftadd@exp2,w,c
  4925  0010C4  B4D8               	btfsc	status,2,c
  4926  0010C6  D00D               	goto	l476
  4927  0010C8  0634               	decf	___ftadd@sign,f,c
  4928  0010CA  C034  F031         	movff	___ftadd@sign,??___ftadd
  4929  0010CE  0E07               	movlw	7
  4930  0010D0  1631               	andwf	??___ftadd,f,c
  4931  0010D2  B4D8               	btfsc	status,2,c
  4932  0010D4  D006               	goto	l476
  4933  0010D6  D7EF               	goto	u2100
  4934  0010D8  90D8               	bcf	status,0,c
  4935  0010DA  3230               	rrcf	___ftadd@f2+2,f,c
  4936  0010DC  322F               	rrcf	___ftadd@f2+1,f,c
  4937  0010DE  322E               	rrcf	___ftadd@f2,f,c
  4938  0010E0  2A35               	incf	___ftadd@exp2,f,c
  4939  0010E2                     l476:
  4940  0010E2  5035               	movf	___ftadd@exp2,w,c
  4941  0010E4  1836               	xorwf	___ftadd@exp1,w,c
  4942  0010E6  A4D8               	btfss	status,2,c
  4943  0010E8  D7F7               	goto	l477
  4944  0010EA                     u2130:
  4945  0010EA  AE34               	btfss	___ftadd@sign,7,c
  4946  0010EC  D00C               	goto	l479
  4947  0010EE  0EFF               	movlw	255
  4948  0010F0  1A2B               	xorwf	___ftadd@f1,f,c
  4949  0010F2  0EFF               	movlw	255
  4950  0010F4  1A2C               	xorwf	___ftadd@f1+1,f,c
  4951  0010F6  0EFF               	movlw	255
  4952  0010F8  1A2D               	xorwf	___ftadd@f1+2,f,c
  4953  0010FA  0E01               	movlw	1
  4954  0010FC  262B               	addwf	___ftadd@f1,f,c
  4955  0010FE  0E00               	movlw	0
  4956  001100  222C               	addwfc	___ftadd@f1+1,f,c
  4957  001102  0E00               	movlw	0
  4958  001104  222D               	addwfc	___ftadd@f1+2,f,c
  4959  001106                     l479:
  4960  001106  AC34               	btfss	___ftadd@sign,6,c
  4961  001108  D00C               	goto	l480
  4962  00110A  0EFF               	movlw	255
  4963  00110C  1A2E               	xorwf	___ftadd@f2,f,c
  4964  00110E  0EFF               	movlw	255
  4965  001110  1A2F               	xorwf	___ftadd@f2+1,f,c
  4966  001112  0EFF               	movlw	255
  4967  001114  1A30               	xorwf	___ftadd@f2+2,f,c
  4968  001116  0E01               	movlw	1
  4969  001118  262E               	addwf	___ftadd@f2,f,c
  4970  00111A  0E00               	movlw	0
  4971  00111C  222F               	addwfc	___ftadd@f2+1,f,c
  4972  00111E  0E00               	movlw	0
  4973  001120  2230               	addwfc	___ftadd@f2+2,f,c
  4974  001122                     l480:
  4975  001122  0E00               	movlw	0
  4976  001124  6E34               	movwf	___ftadd@sign,c
  4977  001126  502B               	movf	___ftadd@f1,w,c
  4978  001128  262E               	addwf	___ftadd@f2,f,c
  4979  00112A  502C               	movf	___ftadd@f1+1,w,c
  4980  00112C  222F               	addwfc	___ftadd@f2+1,f,c
  4981  00112E  502D               	movf	___ftadd@f1+2,w,c
  4982  001130  2230               	addwfc	___ftadd@f2+2,f,c
  4983  001132  AE30               	btfss	___ftadd@f2+2,7,c
  4984  001134  D00E               	goto	l481
  4985  001136  0EFF               	movlw	255
  4986  001138  1A2E               	xorwf	___ftadd@f2,f,c
  4987  00113A  0EFF               	movlw	255
  4988  00113C  1A2F               	xorwf	___ftadd@f2+1,f,c
  4989  00113E  0EFF               	movlw	255
  4990  001140  1A30               	xorwf	___ftadd@f2+2,f,c
  4991  001142  0E01               	movlw	1
  4992  001144  262E               	addwf	___ftadd@f2,f,c
  4993  001146  0E00               	movlw	0
  4994  001148  222F               	addwfc	___ftadd@f2+1,f,c
  4995  00114A  0E00               	movlw	0
  4996  00114C  2230               	addwfc	___ftadd@f2+2,f,c
  4997  00114E  0E01               	movlw	1
  4998  001150  6E34               	movwf	___ftadd@sign,c
  4999  001152                     l481:
  5000  001152  C02E  F001         	movff	___ftadd@f2,___ftpack@arg
  5001  001156  C02F  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  5002  00115A  C030  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  5003  00115E  C036  F004         	movff	___ftadd@exp1,___ftpack@exp
  5004  001162  C034  F005         	movff	___ftadd@sign,___ftpack@sign
  5005  001166  ECD5  F00D         	call	___ftpack	;wreg free
  5006  00116A  C001  F02B         	movff	?___ftpack,?___ftadd
  5007  00116E  C002  F02C         	movff	?___ftpack+1,?___ftadd+1
  5008  001172  C003  F02D         	movff	?___ftpack+2,?___ftadd+2
  5009  001176  0012               	return	
  5010  001178                     __end_of___ftadd:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           prodh	equ	0xFF4
  5017                           prodl	equ	0xFF3
  5018                           intcon	equ	0xFF2
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           plusw1	equ	0xFE3
  5022                           postinc2	equ	0xFDE
  5023                           postdec2	equ	0xFDD
  5024                           plusw2	equ	0xFDB
  5025                           fsr2h	equ	0xFDA
  5026                           fsr2l	equ	0xFD9
  5027                           status	equ	0xFD8
  5028                           
  5029 ;; *************** function ___ftneg *****************
  5030 ;; Defined at:
  5031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  f1              3    0[COMRAM] float 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  3    0[COMRAM] float 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         3       0       0       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5048 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5049 ;;Total ram usage:        3 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_pow
  5055 ;;		_exp
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text25
  5060  0020E8                     __ptext25:
  5061                           	opt stack 0
  5062  0020E8                     ___ftneg:
  5063                           	opt stack 26
  5064                           
  5065                           ;incstack = 0
  5066  0020E8  5001               	movf	___ftneg@f1,w,c
  5067  0020EA  1002               	iorwf	___ftneg@f1+1,w,c
  5068  0020EC  1003               	iorwf	___ftneg@f1+2,w,c
  5069  0020EE  B4D8               	btfsc	status,2,c
  5070  0020F0  D006               	goto	l512
  5071  0020F2  0E00               	movlw	0
  5072  0020F4  1A01               	xorwf	___ftneg@f1,f,c
  5073  0020F6  0E00               	movlw	0
  5074  0020F8  1A02               	xorwf	___ftneg@f1+1,f,c
  5075  0020FA  0E80               	movlw	128
  5076  0020FC  1A03               	xorwf	___ftneg@f1+2,f,c
  5077  0020FE                     l512:
  5078  0020FE  C001  F001         	movff	___ftneg@f1,?___ftneg
  5079  002102  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  5080  002106  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  5081  00210A  0012               	return		;funcret
  5082  00210C                     __end_of___ftneg:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           plusw1	equ	0xFE3
  5094                           postinc2	equ	0xFDE
  5095                           postdec2	equ	0xFDD
  5096                           plusw2	equ	0xFDB
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function ___ftdiv *****************
  5102 ;; Defined at:
  5103 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  f1              3   27[COMRAM] float 
  5106 ;;  f2              3   30[COMRAM] float 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  f3              3   37[COMRAM] float 
  5109 ;;  sign            1   41[COMRAM] unsigned char 
  5110 ;;  exp             1   40[COMRAM] unsigned char 
  5111 ;;  cntr            1   36[COMRAM] unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  3   27[COMRAM] float 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         6       0       0       0       0       0       0       0       0
  5122 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5123 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5124 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5125 ;;Total ram usage:       15 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    1
  5128 ;; This function calls:
  5129 ;;		___ftpack
  5130 ;; This function is called by:
  5131 ;;		_coinfig_ccpcon
  5132 ;;		_config_ccp1
  5133 ;;		_config_ccp2
  5134 ;;		_exp
  5135 ;;		_wait_in_ms
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text26
  5140  001796                     __ptext26:
  5141                           	opt stack 0
  5142  001796                     ___ftdiv:
  5143                           	opt stack 28
  5144                           
  5145                           ;incstack = 0
  5146  001796  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  5147  00179A  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5148  00179C  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5149  00179E  341D               	rlcf	___ftdiv@f1+1,w,c
  5150  0017A0  3622               	rlcf	??___ftdiv& (0+255),f,c
  5151  0017A2  E301               	bnc	u2361
  5152  0017A4  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5153  0017A6                     u2361:
  5154  0017A6  5022               	movf	??___ftdiv,w,c
  5155  0017A8  6E29               	movwf	___ftdiv@exp,c
  5156  0017AA  5029               	movf	___ftdiv@exp,w,c
  5157  0017AC  A4D8               	btfss	status,2,c
  5158  0017AE  D007               	goto	l486
  5159  0017B0  0E00               	movlw	0
  5160  0017B2  6E1C               	movwf	?___ftdiv,c
  5161  0017B4  0E00               	movlw	0
  5162  0017B6  6E1D               	movwf	?___ftdiv+1,c
  5163  0017B8  0E00               	movlw	0
  5164  0017BA  6E1E               	movwf	?___ftdiv+2,c
  5165  0017BC  0012               	return	
  5166  0017BE                     l486:
  5167  0017BE  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  5168  0017C2  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  5169  0017C4  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  5170  0017C6  3420               	rlcf	___ftdiv@f2+1,w,c
  5171  0017C8  3622               	rlcf	??___ftdiv& (0+255),f,c
  5172  0017CA  E301               	bnc	u2381
  5173  0017CC  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  5174  0017CE                     u2381:
  5175  0017CE  5022               	movf	??___ftdiv,w,c
  5176  0017D0  6E2A               	movwf	___ftdiv@sign,c
  5177  0017D2  502A               	movf	___ftdiv@sign,w,c
  5178  0017D4  A4D8               	btfss	status,2,c
  5179  0017D6  D007               	goto	l488
  5180  0017D8  0E00               	movlw	0
  5181  0017DA  6E1C               	movwf	?___ftdiv,c
  5182  0017DC  0E00               	movlw	0
  5183  0017DE  6E1D               	movwf	?___ftdiv+1,c
  5184  0017E0  0E00               	movlw	0
  5185  0017E2  6E1E               	movwf	?___ftdiv+2,c
  5186  0017E4  0012               	return	
  5187  0017E6                     l488:
  5188  0017E6  0E00               	movlw	0
  5189  0017E8  6E26               	movwf	___ftdiv@f3,c
  5190  0017EA  0E00               	movlw	0
  5191  0017EC  6E27               	movwf	___ftdiv@f3+1,c
  5192  0017EE  0E00               	movlw	0
  5193  0017F0  6E28               	movwf	___ftdiv@f3+2,c
  5194  0017F2  502A               	movf	___ftdiv@sign,w,c
  5195  0017F4  0F89               	addlw	137
  5196  0017F6  5E29               	subwf	___ftdiv@exp,f,c
  5197  0017F8  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5198  0017FC  5021               	movf	___ftdiv@f2+2,w,c
  5199  0017FE  1A2A               	xorwf	___ftdiv@sign,f,c
  5200  001800  0E80               	movlw	128
  5201  001802  162A               	andwf	___ftdiv@sign,f,c
  5202  001804  8E1D               	bsf	___ftdiv@f1+1,7,c
  5203  001806  0EFF               	movlw	255
  5204  001808  161C               	andwf	___ftdiv@f1,f,c
  5205  00180A  0EFF               	movlw	255
  5206  00180C  161D               	andwf	___ftdiv@f1+1,f,c
  5207  00180E  0E00               	movlw	0
  5208  001810  161E               	andwf	___ftdiv@f1+2,f,c
  5209  001812  8E20               	bsf	___ftdiv@f2+1,7,c
  5210  001814  0EFF               	movlw	255
  5211  001816  161F               	andwf	___ftdiv@f2,f,c
  5212  001818  0EFF               	movlw	255
  5213  00181A  1620               	andwf	___ftdiv@f2+1,f,c
  5214  00181C  0E00               	movlw	0
  5215  00181E  1621               	andwf	___ftdiv@f2+2,f,c
  5216  001820  0E18               	movlw	24
  5217  001822  6E25               	movwf	___ftdiv@cntr,c
  5218  001824  90D8               	bcf	status,0,c
  5219  001826  3626               	rlcf	___ftdiv@f3,f,c
  5220  001828  3627               	rlcf	___ftdiv@f3+1,f,c
  5221  00182A  3628               	rlcf	___ftdiv@f3+2,f,c
  5222  00182C  501F               	movf	___ftdiv@f2,w,c
  5223  00182E  5C1C               	subwf	___ftdiv@f1,w,c
  5224  001830  5020               	movf	___ftdiv@f2+1,w,c
  5225  001832  581D               	subwfb	___ftdiv@f1+1,w,c
  5226  001834  5021               	movf	___ftdiv@f2+2,w,c
  5227  001836  581E               	subwfb	___ftdiv@f1+2,w,c
  5228  001838  A0D8               	btfss	status,0,c
  5229  00183A  D007               	goto	l490
  5230  00183C  501F               	movf	___ftdiv@f2,w,c
  5231  00183E  5E1C               	subwf	___ftdiv@f1,f,c
  5232  001840  5020               	movf	___ftdiv@f2+1,w,c
  5233  001842  5A1D               	subwfb	___ftdiv@f1+1,f,c
  5234  001844  5021               	movf	___ftdiv@f2+2,w,c
  5235  001846  5A1E               	subwfb	___ftdiv@f1+2,f,c
  5236  001848  8026               	bsf	___ftdiv@f3,0,c
  5237  00184A                     l490:
  5238  00184A  90D8               	bcf	status,0,c
  5239  00184C  361C               	rlcf	___ftdiv@f1,f,c
  5240  00184E  361D               	rlcf	___ftdiv@f1+1,f,c
  5241  001850  361E               	rlcf	___ftdiv@f1+2,f,c
  5242  001852  2E25               	decfsz	___ftdiv@cntr,f,c
  5243  001854  D7E7               	goto	l489
  5244  001856  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  5245  00185A  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5246  00185E  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5247  001862  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  5248  001866  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5249  00186A  ECD5  F00D         	call	___ftpack	;wreg free
  5250  00186E  C001  F01C         	movff	?___ftpack,?___ftdiv
  5251  001872  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  5252  001876  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  5253  00187A  0012               	return	
  5254  00187C                     __end_of___ftdiv:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           prodh	equ	0xFF4
  5261                           prodl	equ	0xFF3
  5262                           intcon	equ	0xFF2
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           plusw1	equ	0xFE3
  5266                           postinc2	equ	0xFDE
  5267                           postdec2	equ	0xFDD
  5268                           plusw2	equ	0xFDB
  5269                           fsr2h	equ	0xFDA
  5270                           fsr2l	equ	0xFD9
  5271                           status	equ	0xFD8
  5272                           
  5273 ;; *************** function ___awtoft *****************
  5274 ;; Defined at:
  5275 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  c               2    8[COMRAM] int 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  sign            1   11[COMRAM] unsigned char 
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  3    8[COMRAM] float 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5289 ;;      Params:         3       0       0       0       0       0       0       0       0
  5290 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5292 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5293 ;;Total ram usage:        4 bytes
  5294 ;; Hardware stack levels used:    1
  5295 ;; Hardware stack levels required when called:    1
  5296 ;; This function calls:
  5297 ;;		___ftpack
  5298 ;; This function is called by:
  5299 ;;		_config_timer2
  5300 ;;		_config_ccp1
  5301 ;;		_config_ccp2
  5302 ;;		_exp
  5303 ;;		_log
  5304 ;;		_wait_in_ms
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text27
  5309  002066                     __ptext27:
  5310                           	opt stack 0
  5311  002066                     ___awtoft:
  5312                           	opt stack 28
  5313                           
  5314                           ;incstack = 0
  5315  002066  0E00               	movlw	0
  5316  002068  6E0C               	movwf	___awtoft@sign,c
  5317  00206A  AE0A               	btfss	___awtoft@c+1,7,c
  5318  00206C  D006               	goto	l403
  5319  00206E  6C09               	negf	___awtoft@c,c
  5320  002070  1E0A               	comf	___awtoft@c+1,f,c
  5321  002072  B0D8               	btfsc	status,0,c
  5322  002074  2A0A               	incf	___awtoft@c+1,f,c
  5323  002076  0E01               	movlw	1
  5324  002078  6E0C               	movwf	___awtoft@sign,c
  5325  00207A                     l403:
  5326  00207A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5327  00207E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5328  002082  6A03               	clrf	___ftpack@arg+2,c
  5329  002084  0E8E               	movlw	142
  5330  002086  6E04               	movwf	___ftpack@exp,c
  5331  002088  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5332  00208C  ECD5  F00D         	call	___ftpack	;wreg free
  5333  002090  C001  F009         	movff	?___ftpack,?___awtoft
  5334  002094  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5335  002098  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5336  00209C  0012               	return	
  5337  00209E                     __end_of___awtoft:
  5338                           	opt stack 0
  5339                           tblptru	equ	0xFF8
  5340                           tblptrh	equ	0xFF7
  5341                           tblptrl	equ	0xFF6
  5342                           tablat	equ	0xFF5
  5343                           prodh	equ	0xFF4
  5344                           prodl	equ	0xFF3
  5345                           intcon	equ	0xFF2
  5346                           postinc0	equ	0xFEE
  5347                           wreg	equ	0xFE8
  5348                           plusw1	equ	0xFE3
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           plusw2	equ	0xFDB
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function ___lltoft *****************
  5357 ;; Defined at:
  5358 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  c               4    8[COMRAM] unsigned long 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  exp             1   16[COMRAM] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  3    8[COMRAM] float 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5372 ;;      Params:         4       0       0       0       0       0       0       0       0
  5373 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5374 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5375 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5376 ;;Total ram usage:        9 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    1
  5379 ;; This function calls:
  5380 ;;		___ftpack
  5381 ;; This function is called by:
  5382 ;;		_pow
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text28
  5387  001F44                     __ptext28:
  5388                           	opt stack 0
  5389  001F44                     ___lltoft:
  5390                           	opt stack 26
  5391                           
  5392                           ;incstack = 0
  5393  001F44  0E8E               	movlw	142
  5394  001F46  6E11               	movwf	___lltoft@exp,c
  5395  001F48  D006               	goto	l579
  5396  001F4A  90D8               	bcf	status,0,c
  5397  001F4C  320C               	rrcf	___lltoft@c+3,f,c
  5398  001F4E  320B               	rrcf	___lltoft@c+2,f,c
  5399  001F50  320A               	rrcf	___lltoft@c+1,f,c
  5400  001F52  3209               	rrcf	___lltoft@c,f,c
  5401  001F54  2A11               	incf	___lltoft@exp,f,c
  5402  001F56                     l579:
  5403  001F56  0E00               	movlw	0
  5404  001F58  1409               	andwf	___lltoft@c,w,c
  5405  001F5A  6E0D               	movwf	??___lltoft& (0+255),c
  5406  001F5C  0E00               	movlw	0
  5407  001F5E  140A               	andwf	___lltoft@c+1,w,c
  5408  001F60  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5409  001F62  0E00               	movlw	0
  5410  001F64  140B               	andwf	___lltoft@c+2,w,c
  5411  001F66  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5412  001F68  0EFF               	movlw	255
  5413  001F6A  140C               	andwf	___lltoft@c+3,w,c
  5414  001F6C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5415  001F6E  500D               	movf	??___lltoft,w,c
  5416  001F70  100E               	iorwf	??___lltoft+1,w,c
  5417  001F72  100F               	iorwf	??___lltoft+2,w,c
  5418  001F74  1010               	iorwf	??___lltoft+3,w,c
  5419  001F76  A4D8               	btfss	status,2,c
  5420  001F78  D7E8               	goto	l580
  5421  001F7A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5422  001F7E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5423  001F82  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5424  001F86  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5425  001F8A  0E00               	movlw	0
  5426  001F8C  6E05               	movwf	___ftpack@sign,c
  5427  001F8E  ECD5  F00D         	call	___ftpack	;wreg free
  5428  001F92  C001  F009         	movff	?___ftpack,?___lltoft
  5429  001F96  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5430  001F9A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5431  001F9E  0012               	return	
  5432  001FA0                     __end_of___lltoft:
  5433                           	opt stack 0
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           plusw1	equ	0xFE3
  5444                           postinc2	equ	0xFDE
  5445                           postdec2	equ	0xFDD
  5446                           plusw2	equ	0xFDB
  5447                           fsr2h	equ	0xFDA
  5448                           fsr2l	equ	0xFD9
  5449                           status	equ	0xFD8
  5450                           
  5451 ;; *************** function ___ftpack *****************
  5452 ;; Defined at:
  5453 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  arg             3    0[COMRAM] unsigned um
  5456 ;;  exp             1    3[COMRAM] unsigned char 
  5457 ;;  sign            1    4[COMRAM] unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  3    0[COMRAM] float 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5469 ;;      Params:         5       0       0       0       0       0       0       0       0
  5470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5471 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5472 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5473 ;;Total ram usage:        8 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		___altoft
  5479 ;;		___awtoft
  5480 ;;		___ftadd
  5481 ;;		___ftdiv
  5482 ;;		___ftmul
  5483 ;;		___lbtoft
  5484 ;;		___lltoft
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text29
  5489  001BAA                     __ptext29:
  5490                           	opt stack 0
  5491  001BAA                     ___ftpack:
  5492                           	opt stack 28
  5493                           
  5494                           ;incstack = 0
  5495  001BAA  5004               	movf	___ftpack@exp,w,c
  5496  001BAC  B4D8               	btfsc	status,2,c
  5497  001BAE  D005               	goto	u1870
  5498  001BB0  5001               	movf	___ftpack@arg,w,c
  5499  001BB2  1002               	iorwf	___ftpack@arg+1,w,c
  5500  001BB4  1003               	iorwf	___ftpack@arg+2,w,c
  5501  001BB6  A4D8               	btfss	status,2,c
  5502  001BB8  D00C               	goto	l422
  5503  001BBA                     u1870:
  5504  001BBA  0E00               	movlw	0
  5505  001BBC  6E01               	movwf	?___ftpack,c
  5506  001BBE  0E00               	movlw	0
  5507  001BC0  6E02               	movwf	?___ftpack+1,c
  5508  001BC2  0E00               	movlw	0
  5509  001BC4  6E03               	movwf	?___ftpack+2,c
  5510  001BC6  0012               	return	
  5511  001BC8  2A04               	incf	___ftpack@exp,f,c
  5512  001BCA  90D8               	bcf	status,0,c
  5513  001BCC  3203               	rrcf	___ftpack@arg+2,f,c
  5514  001BCE  3202               	rrcf	___ftpack@arg+1,f,c
  5515  001BD0  3201               	rrcf	___ftpack@arg,f,c
  5516  001BD2                     l422:
  5517  001BD2  0E00               	movlw	0
  5518  001BD4  1401               	andwf	___ftpack@arg,w,c
  5519  001BD6  6E06               	movwf	??___ftpack& (0+255),c
  5520  001BD8  0E00               	movlw	0
  5521  001BDA  1402               	andwf	___ftpack@arg+1,w,c
  5522  001BDC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5523  001BDE  0EFE               	movlw	254
  5524  001BE0  1403               	andwf	___ftpack@arg+2,w,c
  5525  001BE2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5526  001BE4  5006               	movf	??___ftpack,w,c
  5527  001BE6  1007               	iorwf	??___ftpack+1,w,c
  5528  001BE8  1008               	iorwf	??___ftpack+2,w,c
  5529  001BEA  B4D8               	btfsc	status,2,c
  5530  001BEC  D00C               	goto	l425
  5531  001BEE  D7EC               	goto	l423
  5532  001BF0  2A04               	incf	___ftpack@exp,f,c
  5533  001BF2  0E01               	movlw	1
  5534  001BF4  2601               	addwf	___ftpack@arg,f,c
  5535  001BF6  0E00               	movlw	0
  5536  001BF8  2202               	addwfc	___ftpack@arg+1,f,c
  5537  001BFA  0E00               	movlw	0
  5538  001BFC  2203               	addwfc	___ftpack@arg+2,f,c
  5539  001BFE  90D8               	bcf	status,0,c
  5540  001C00  3203               	rrcf	___ftpack@arg+2,f,c
  5541  001C02  3202               	rrcf	___ftpack@arg+1,f,c
  5542  001C04  3201               	rrcf	___ftpack@arg,f,c
  5543  001C06                     l425:
  5544  001C06  0E00               	movlw	0
  5545  001C08  1401               	andwf	___ftpack@arg,w,c
  5546  001C0A  6E06               	movwf	??___ftpack& (0+255),c
  5547  001C0C  0E00               	movlw	0
  5548  001C0E  1402               	andwf	___ftpack@arg+1,w,c
  5549  001C10  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5550  001C12  0EFF               	movlw	255
  5551  001C14  1403               	andwf	___ftpack@arg+2,w,c
  5552  001C16  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5553  001C18  5006               	movf	??___ftpack,w,c
  5554  001C1A  1007               	iorwf	??___ftpack+1,w,c
  5555  001C1C  1008               	iorwf	??___ftpack+2,w,c
  5556  001C1E  B4D8               	btfsc	status,2,c
  5557  001C20  D006               	goto	l428
  5558  001C22  D7E6               	goto	l426
  5559  001C24  0604               	decf	___ftpack@exp,f,c
  5560  001C26  90D8               	bcf	status,0,c
  5561  001C28  3601               	rlcf	___ftpack@arg,f,c
  5562  001C2A  3602               	rlcf	___ftpack@arg+1,f,c
  5563  001C2C  3603               	rlcf	___ftpack@arg+2,f,c
  5564  001C2E                     l428:
  5565  001C2E  BE02               	btfsc	___ftpack@arg+1,7,c
  5566  001C30  D003               	goto	u1910
  5567  001C32  0E02               	movlw	2
  5568  001C34  6004               	cpfslt	___ftpack@exp,c
  5569  001C36  D7F6               	goto	l429
  5570  001C38                     u1910:
  5571  001C38  A004               	btfss	___ftpack@exp,0,c
  5572  001C3A  9E02               	bcf	___ftpack@arg+1,7,c
  5573  001C3C  90D8               	bcf	status,0,c
  5574  001C3E  3204               	rrcf	___ftpack@exp,f,c
  5575  001C40  5004               	movf	___ftpack@exp,w,c
  5576  001C42  1203               	iorwf	___ftpack@arg+2,f,c
  5577  001C44  5005               	movf	___ftpack@sign,w,c
  5578  001C46  A4D8               	btfss	status,2,c
  5579  001C48  8E03               	bsf	___ftpack@arg+2,7,c
  5580  001C4A  C001  F001         	movff	___ftpack@arg,?___ftpack
  5581  001C4E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5582  001C52  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5583  001C56  0012               	return	
  5584  001C58                     __end_of___ftpack:
  5585                           	opt stack 0
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           intcon	equ	0xFF2
  5593                           postinc0	equ	0xFEE
  5594                           wreg	equ	0xFE8
  5595                           plusw1	equ	0xFE3
  5596                           postinc2	equ	0xFDE
  5597                           postdec2	equ	0xFDD
  5598                           plusw2	equ	0xFDB
  5599                           fsr2h	equ	0xFDA
  5600                           fsr2l	equ	0xFD9
  5601                           status	equ	0xFD8
  5602                           
  5603 ;; *************** function ___awdiv *****************
  5604 ;; Defined at:
  5605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  dividend        2    0[COMRAM] int 
  5608 ;;  divisor         2    2[COMRAM] int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  quotient        2    6[COMRAM] int 
  5611 ;;  sign            1    5[COMRAM] unsigned char 
  5612 ;;  counter         1    4[COMRAM] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  2    0[COMRAM] int 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5622 ;;      Params:         4       0       0       0       0       0       0       0       0
  5623 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5625 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        8 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_config_ccp1
  5632 ;;		_config_ccp2
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text30
  5637  001D78                     __ptext30:
  5638                           	opt stack 0
  5639  001D78                     ___awdiv:
  5640                           	opt stack 28
  5641                           
  5642                           ;incstack = 0
  5643  001D78  0E00               	movlw	0
  5644  001D7A  6E06               	movwf	___awdiv@sign,c
  5645  001D7C  AE04               	btfss	___awdiv@divisor+1,7,c
  5646  001D7E  D006               	goto	l375
  5647  001D80  6C03               	negf	___awdiv@divisor,c
  5648  001D82  1E04               	comf	___awdiv@divisor+1,f,c
  5649  001D84  B0D8               	btfsc	status,0,c
  5650  001D86  2A04               	incf	___awdiv@divisor+1,f,c
  5651  001D88  0E01               	movlw	1
  5652  001D8A  6E06               	movwf	___awdiv@sign,c
  5653  001D8C                     l375:
  5654  001D8C  AE02               	btfss	___awdiv@dividend+1,7,c
  5655  001D8E  D006               	goto	l376
  5656  001D90  6C01               	negf	___awdiv@dividend,c
  5657  001D92  1E02               	comf	___awdiv@dividend+1,f,c
  5658  001D94  B0D8               	btfsc	status,0,c
  5659  001D96  2A02               	incf	___awdiv@dividend+1,f,c
  5660  001D98  0E01               	movlw	1
  5661  001D9A  1A06               	xorwf	___awdiv@sign,f,c
  5662  001D9C                     l376:
  5663  001D9C  0E00               	movlw	0
  5664  001D9E  6E08               	movwf	___awdiv@quotient+1,c
  5665  001DA0  0E00               	movlw	0
  5666  001DA2  6E07               	movwf	___awdiv@quotient,c
  5667  001DA4  5003               	movf	___awdiv@divisor,w,c
  5668  001DA6  1004               	iorwf	___awdiv@divisor+1,w,c
  5669  001DA8  B4D8               	btfsc	status,2,c
  5670  001DAA  D01C               	goto	l383
  5671  001DAC  0E01               	movlw	1
  5672  001DAE  6E05               	movwf	___awdiv@counter,c
  5673  001DB0  D004               	goto	l378
  5674  001DB2  90D8               	bcf	status,0,c
  5675  001DB4  3603               	rlcf	___awdiv@divisor,f,c
  5676  001DB6  3604               	rlcf	___awdiv@divisor+1,f,c
  5677  001DB8  2A05               	incf	___awdiv@counter,f,c
  5678  001DBA                     l378:
  5679  001DBA  AE04               	btfss	___awdiv@divisor+1,7,c
  5680  001DBC  D7FA               	goto	l379
  5681  001DBE                     u2740:
  5682  001DBE  90D8               	bcf	status,0,c
  5683  001DC0  3607               	rlcf	___awdiv@quotient,f,c
  5684  001DC2  3608               	rlcf	___awdiv@quotient+1,f,c
  5685  001DC4  5003               	movf	___awdiv@divisor,w,c
  5686  001DC6  5C01               	subwf	___awdiv@dividend,w,c
  5687  001DC8  5004               	movf	___awdiv@divisor+1,w,c
  5688  001DCA  5802               	subwfb	___awdiv@dividend+1,w,c
  5689  001DCC  A0D8               	btfss	status,0,c
  5690  001DCE  D005               	goto	l382
  5691  001DD0  5003               	movf	___awdiv@divisor,w,c
  5692  001DD2  5E01               	subwf	___awdiv@dividend,f,c
  5693  001DD4  5004               	movf	___awdiv@divisor+1,w,c
  5694  001DD6  5A02               	subwfb	___awdiv@dividend+1,f,c
  5695  001DD8  8007               	bsf	___awdiv@quotient,0,c
  5696  001DDA                     l382:
  5697  001DDA  90D8               	bcf	status,0,c
  5698  001DDC  3204               	rrcf	___awdiv@divisor+1,f,c
  5699  001DDE  3203               	rrcf	___awdiv@divisor,f,c
  5700  001DE0  2E05               	decfsz	___awdiv@counter,f,c
  5701  001DE2  D7ED               	goto	u2740
  5702  001DE4                     l383:
  5703  001DE4  5006               	movf	___awdiv@sign,w,c
  5704  001DE6  B4D8               	btfsc	status,2,c
  5705  001DE8  D004               	goto	l384
  5706  001DEA  6C07               	negf	___awdiv@quotient,c
  5707  001DEC  1E08               	comf	___awdiv@quotient+1,f,c
  5708  001DEE  B0D8               	btfsc	status,0,c
  5709  001DF0  2A08               	incf	___awdiv@quotient+1,f,c
  5710  001DF2                     l384:
  5711  001DF2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5712  001DF6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5713  001DFA  0012               	return	
  5714  001DFC                     __end_of___awdiv:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           plusw1	equ	0xFE3
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           plusw2	equ	0xFDB
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           tblptru	equ	0xFF8
  5733                           tblptrh	equ	0xFF7
  5734                           tblptrl	equ	0xFF6
  5735                           tablat	equ	0xFF5
  5736                           prodh	equ	0xFF4
  5737                           prodl	equ	0xFF3
  5738                           intcon	equ	0xFF2
  5739                           postinc0	equ	0xFEE
  5740                           wreg	equ	0xFE8
  5741                           plusw1	equ	0xFE3
  5742                           postinc2	equ	0xFDE
  5743                           postdec2	equ	0xFDD
  5744                           plusw2	equ	0xFDB
  5745                           fsr2h	equ	0xFDA
  5746                           fsr2l	equ	0xFD9
  5747                           status	equ	0xFD8
  5748                           
  5749                           	psect	rparam
  5750  0000                     tblptru	equ	0xFF8
  5751                           tblptrh	equ	0xFF7
  5752                           tblptrl	equ	0xFF6
  5753                           tablat	equ	0xFF5
  5754                           prodh	equ	0xFF4
  5755                           prodl	equ	0xFF3
  5756                           intcon	equ	0xFF2
  5757                           postinc0	equ	0xFEE
  5758                           wreg	equ	0xFE8
  5759                           plusw1	equ	0xFE3
  5760                           postinc2	equ	0xFDE
  5761                           postdec2	equ	0xFDD
  5762                           plusw2	equ	0xFDB
  5763                           fsr2h	equ	0xFDA
  5764                           fsr2l	equ	0xFD9
  5765                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         65
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_carroGirar
    _main->_carroGirarEspecial
    _config_timer2->___awtoft
    _coinfig_ccpcon->___fttol
    ___lbtoft->___ftpack
    _carroGirarEspecial->_config_ccp1
    _carroGirarEspecial->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    _carroGirarEspecial->_config_ccp1
    _carroGirarEspecial->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _carroAvanzar->_config_ccp1
    _carroAvanzar->_config_ccp2
    _config_ccp2->_pow
    _config_ccp1->_pow
    _pow->_exp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  824781
                       _carroAvanzar
               _carroAvanzarEspecial
                         _carroGirar
                 _carroGirarEspecial
                     _coinfig_ccpcon
                        _configBoard
                      _config_timer2
 ---------------------------------------------------------------------------------
 (1) _config_timer2                                        6     2      4    3956
                                             12 COMRAM     6     2      4
                           ___awtoft
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coinfig_ccpcon                                       9     3      6   17867
                                             69 COMRAM     9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _carroGirarEspecial                                   1     1      0  200756
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroGirar                                           1     1      0  200778
                                             94 COMRAM     1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzarEspecial                                 0     0      0  200712
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzar                                         0     0      0  200712
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _config_ccp2                                         59    57      2  100356
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _config_ccp1                                         59    57      2  100356
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   79872
                                              6 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   26079
                                             66 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   42552
                                             87 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     400
                                             66 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   10249
                                             79 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1088
                                             54 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2797
                                             69 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11303
                                             54 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5441
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5110
                                             54 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4765
                                             42 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3749
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3738
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _carroAvanzar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroAvanzarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirar
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _carroGirarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _coinfig_ccpcon
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lbtoft
       ___ftpack
   _configBoard
   _config_timer2
     ___awtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      92       5       91.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      20        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 11 17:35:16 2018

                 ___altoft@exp 004E                  ___altoft@sign 004F                             l50 1212  
                           l60 1288                             l52 122A                             l45 11CC  
                           l70 12FC                             l62 129E                             l54 1240  
                           l46 11E2                             l64 12B6                             l56 1258  
                           l48 11FA                             l66 12CE                             l58 1270  
                           l68 12E4                             l93 1FB0                             l95 1FC2  
                           l87 203C                             l97 1FD2                             l89 204C  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003                    __CFG_BORV$3 000000  
 carroGirarEspecial@direccion2 005F                   ___ftadd@exp1 0036                   ___ftadd@exp2 0035  
                 ___ftadd@sign 0034                            l200 0962                            l201 091A  
                          l203 0988                            l205 0A4A                            l403 207A  
                          l501 16CA                            l422 1BD2                            l423 1BC8  
                          l503 16F2                            l191 0C5A                            l175 1EAC  
                          l512 20FE                            l504 1724                            l176 1E96  
                          l425 1C06                            l505 1734                            l193 0D1C  
                          l177 1ED0                            l426 1BF0                            l530 1674  
                          l522 15DA                            l178 1E9C                            l507 174C  
                          l531 1668                            l179 1EA6                            l428 1C2E  
                          l508 175C                            l292 1E2A                            l524 1650  
                          l188 0C34                            l429 1C24                            l453 101E  
                          l293 1E1E                            l533 1690                            l525 1640  
                          l189 0BEC                            l382 1DDA                            l462 10AE  
                          l518 2002                            l383 1DE4                            l375 1D8C  
                          l384 1DF2                            l376 1D9C                            l480 1122  
                          l481 1152                            l457 1048                            l801 0DF8  
                          l641 135E                            l378 1DBA                            l490 184A  
                          l642 134E                            l379 1DB2                            l467 10A4  
                          l803 0E30                            l580 1F4A                            l476 10E2  
                          l468 109A                            l812 18B8                            l804 0E68  
                          l644 1376                            l477 10D8                            l821 1C80  
                          l813 18AA                            l805 0E98                            l645 13FC  
                          l486 17BE                            l494 1D18                            l830 1AAE  
                          l806 0FBE                            l646 13DA                            l479 1106  
                          l495 1D48                            l815 18D2                            l807 0F94  
                          l647 1482                            l488 17E6                            l816 194C  
                          l489 1824                            l825 1A44                            l579 1F56  
                          l851 1A16                            l827 1A8A                            l843 14AC  
                          l852 199A                            l829 1ABA                            l845 14CE  
                          _PR2 000FCB                            _exp 0DE0                            _log 1490  
                          _pow 1314                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 ___ftdiv@cntr 0025                   ___ftdiv@sign 002A                   __CFG_WDT$OFF 000000  
                         l2520 0BEC                           l2418 0F94                           l2530 0C4A  
                         l2610 0A32                           l2612 0A3A                           l2630 0AF8  
                         l2546 0D04                           l2548 0D0C                           l2566 0DCA  
                         l2584 091A                           l1946 1D74                           l2594 0978  
                         ?_exp 0058                           ?_log 0043                           ?_pow 0066  
                         u2000 1010                           u2100 10B6                           u2030 103A  
                         u2130 10EA                           u2060 1078                           u2320 167A  
                         u2171 16B2                           u2500 1A64                           u2261 15BE  
                         u2350 1CA8                           u2191 16DA                           u2280 15F8  
                         u2600 0E70                           u2361 17A6                           u2610 0E72  
                         u2460 18C4                           u2508 1A66                           u2381 17CE  
                         u2285 15F0                           u1910 1C38                           u2358 1CAA  
                         u2800 0D04                           u2740 1DBE                           u2820 0DCA  
                         u1870 1BBA                           u2831 08E6                           u2840 0970  
                         u1961 0FDC                           u2690 13C4                           u1971 0FF0  
                         u2771 0BB8                           u2780 0C42                           u2860 0A32  
                         u2880 0AF8                           _RCIF 007CF5                           u2895 1EE0  
                         u2896 1EE2                   config_ccp1@a 0077                   config_ccp2@a 0077  
                 config_ccp1@i 009A                   config_ccp1@j 00AC                   config_ccp2@i 009A  
                 config_ccp2@j 00AC                   config_ccp1@n 00AA                   config_ccp2@n 00AA  
                 config_ccp1@w 00A6                   config_ccp1@x 00A4                   config_ccp1@y 00A8  
                 config_ccp1@z 009C                   config_ccp2@w 00A6                   config_ccp2@x 00A4  
                 config_ccp2@y 00A8                   config_ccp2@z 009C                           _pr2g 00EA  
                         _main 1178                   ___ftpack@arg 0001                   ___ftpack@exp 0004  
                         fsr2h 000FDA                           fsr2l 000FD9                           exp@x 0058  
                         log@x 0043                           pow@x 0066                           pow@y 0069  
                         prodh 000FF4                           prodl 000FF3           __end_of_carroAvanzar 2150  
                         start 0000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 001A  
                 ___param_bank 000000                   ___ftmul@sign 001B                   ___fttol@exp1 0045  
                        ??_exp 005B                          ??_log 0046                   ___fttol@lval 0041  
                        ??_pow 005B                  __CFG_PLLDIV$2 000000                          ?_main 0001  
              __end_of___awdiv 1DFC                __end_of___ftadd 1178                __end_of___ftdiv 187C  
              __end_of___ftneg 210C                __end_of___ftmul 1796                ___awdiv@divisor 0003  
              __end_of___ftsub 202C                __end_of___fttol 16A2                ___awdiv@counter 0005  
                        _TMR0L 000FD6                          _PORTA 000F80                          _TRISD 000F95  
                 ___lltoft@exp 0011                 __CFG_FCMEN$OFF 000000                  ___awtoft@sign 000C  
                        _floor 187C                          _ldexp 1A2C                          _frexp 1C58  
                        _errno 00ED                  ___ftpack@sign 0005                          tablat 000FF5  
                        pow@yi 0073                          plusw1 000FE3                          plusw2 000FDB  
                        status 000FD8                ??_config_timer2 0011                    exp@exponent 0063  
                  ldexp@newexp 0046                __initialization 2150                    log@exponent 0046  
                 __end_of_main 1314                         ??_main 0060                  ___fttol@sign1 0040  
                __activetblptr 000002                         _ADCON0 000FC2                         ?_floor 0050  
                       ?_ldexp 0043                         ?_frexp 0001               __end_of___altoft 1E74  
                       _CCPR1L 000FBE                         _CCPR2L 000FBB                         _T08BIT 007EAE  
             ___awdiv@dividend 0001               __end_of___awtoft 209E               __end_of___ftpack 1C58  
             __end_of___lbtoft 20E8   __end_of_carroAvanzarEspecial 212E               __end_of___lltoft 1FA0  
             ??_coinfig_ccpcon 004C                         _TMR0IF 007F92                         _TMR0ON 007EAF  
         __size_of_configBoard 0060             config_timer2@onoff 000D             config_timer2@presc 000F  
                       ___ftge 1CE8           __size_of_config_ccp1 02D2           __size_of_config_ccp2 02D2  
                       ___wmul 209E                      ??___awdiv 0005                      ??___ftadd 0031  
                    ??___ftdiv 0022                      ??___ftneg 0004                      ??___ftmul 0013  
                    ??___ftsub 003D                      ??___fttol 003B                         clear_0 2156  
             ___awdiv@quotient 0007                         _prescg 00EF                         floor@i 0053  
                       floor@x 0050          ___ftmul@f3_as_product 0017                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
        __size_of_carroAvanzar 0022               __end_ofexp@coeff 081F               __end_oflog@coeff 083A  
                   __accesstop 0060        __end_of__initialization 215C                     ___altoft@c 0046  
                   ___ftadd@f1 002B                     ___ftadd@f2 002E                     ___ftge@ff1 0001  
                   ___ftge@ff2 0004                   eval_poly@res 0040                  ___rparam_used 000001  
                   ___ftdiv@f1 001C                     ___ftdiv@f2 001F                     ___ftdiv@f3 0026  
                   ___ftneg@f1 0001                     ___awtoft@c 0009                     ___lbtoft@c 000C  
                   ___ftmul@f1 000D                     ___ftmul@f2 0010                     ___ftsub@f1 0037  
                   ___ftsub@f2 003A                     ___fttol@f1 0037                 __pcstackCOMRAM 0001  
                   ___lltoft@c 0009                  __end_of_floor 195A                  __end_of_ldexp 1AF2  
                __end_of_frexp 1CE8    __size_of_carroGirarEspecial 003A                   _carroAvanzar 212E  
                      ??_floor 0053                        ??_ldexp 0048                        ??_frexp 0006  
           coinfig_ccpcon@freq 0049             coinfig_ccpcon@fosc 0046               _config_ccp1$1550 00A1  
             _config_ccp1$1548 0095               _config_ccp1$1549 009E               _config_ccp2$1551 0095  
             _config_ccp2$1552 009E               _config_ccp2$1553 00A1                     __pbssBANK0 00AE  
           __size_of_eval_poly 00D2                     _carroGirar 1FA0                        ?___ftge 0001  
                      ?___wmul 0001                      ?___altoft 0046           _carroAvanzarEspecial 210C  
                    ?___awtoft 0009                      ?___ftpack 0001                      ?___lbtoft 0009  
                    ?___lltoft 0009                        __Hparam 0000                        __Lparam 0000  
              __size_of___ftge 0090                        ___awdiv 1D78                        ___ftadd 0FCC  
                      ___ftdiv 1796                        ___ftneg 20E8                __size_of___wmul 0026  
                      ___ftmul 16A2                        ___ftsub 1FEC                        ___fttol 15AE  
                 __psmallconst 0800          ?_carroAvanzarEspecial 0001                     ??___altoft 004A  
                      __pcinit 2150                     ??___awtoft 000C                     ??___ftpack 0006  
                   ??___lbtoft 000C              __end_of_eval_poly 1A2C                        __ramtop 0800  
                   ??___lltoft 000D                        __ptext0 1178                        __ptext1 1E74  
                      __ptext2 1EE4                        __ptext3 1AF2                        __ptext4 20C4  
                      __ptext5 202C                        __ptext6 1FA0                        __ptext7 210C  
                      __ptext8 212E                        __ptext9 083C                      _T0CONbits 000FD5  
                    _T2CONbits 000FCA                   __size_of_exp 01EC                   __size_of_log 011E  
                 __size_of_pow 017C           end_of_initialization 215C                        exp@sign 0065  
                __Lmediumconst 0000                    ?_carroGirar 0001          __end_of_config_timer2 1EE4  
                      pow@sign 0072                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTBbits 000F81                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISEbits 000F96  
                  _CCP1CONbits 000FBD                    ___ftdiv@exp 0029                  ??_configBoard 0001  
                  _CCP2CONbits 000FBA                  ??_config_ccp1 005D                  ??_config_ccp2 005D  
                  ___ftmul@exp 0016         ??_carroAvanzarEspecial 005F                 __end_of___ftge 1D78  
               __end_of___wmul 20C4                     floor@expon 0056            __size_of_carroGirar 004C  
          start_initialization 2150                     eval_poly@d 003A                     eval_poly@n 003C  
                   eval_poly@x 0037                     ldexp@value 0043                    __end_of_exp 0FCC  
                  __end_of_log 15AE                    __end_of_pow 1490                     frexp@value 0001  
                     ??___ftge 0007        __size_of_coinfig_ccpcon 00B8                       ??___wmul 0005  
          __end_of_configBoard 1F44            __end_of_config_ccp1 0DE0            __end_of_config_ccp2 0B0E  
   __end_of_carroGirarEspecial 2066              __size_of___altoft 0078              __size_of___awtoft 0038  
            __size_of___ftpack 00AE              __size_of___lbtoft 0024              __size_of___lltoft 005C  
                __pcstackBANK0 0060            _coinfig_ccpcon$1547 004C              config_ccp1@valreg 0098  
                    __pnvBANK0 00EF              config_ccp2@valreg 0098                       ?___awdiv 0001  
                     ?___ftadd 002B                       ?___ftdiv 001C                       ?___ftneg 0001  
                     ?___ftmul 000D                       ?___ftsub 0037                       ?___fttol 0037  
                  __smallconst 0800                      _eval_poly 195A                 __size_of_floor 00DE  
               __size_of_ldexp 00C6                 __size_of_frexp 0090                 ___wmul@product 0005  
                     _LATAbits 000F89                       _LATEbits 000F8D                   ??_carroGirar 005F  
                  _configBoard 1EE4                       _PIE1bits 000F9D                    _config_ccp1 0B0E  
                  _config_ccp2 083C                       _PIR1bits 000F9E                     _ADCON0bits 000FC2  
                   _ADCON1bits 000FC1                     _ADCON2bits 000FC0              ___wmul@multiplier 0001  
                   ?_eval_poly 0037             __end_of_carroGirar 1FEC                      frexp@eptr 0004  
                     __Hrparam 0000                       __Lrparam 0000                 _coinfig_ccpcon 1AF2  
             config_ccp1@F3967 00CC               config_ccp2@F3978 00AE            carroGirar@direccion 005F  
             __size_of___awdiv 0084               __size_of___ftadd 01AC               __size_of___ftdiv 00E6  
             __size_of___ftneg 0024                       ___altoft 1DFC               __size_of___ftmul 00F4  
             __size_of___ftsub 0040               __size_of___fttol 00F4                       ___awtoft 2066  
                     ___ftpack 1BAA                       ___lbtoft 20C4                       ___lltoft 1F44  
             config_ccp1@duty1 005B                       _exp$1556 0060                  ?_carroAvanzar 0001  
             config_ccp2@duty2 005B         __size_of_config_timer2 0070                       __ptext10 0B0E  
                     __ptext11 1314                       __ptext20 195A                       __ptext12 1490  
                     __ptext21 209E                       __ptext13 0DE0                       __ptext30 1D78  
                     __ptext22 16A2                       __ptext14 1A2C                       __ptext23 1FEC  
                     __ptext15 187C                       __ptext24 0FCC                       __ptext16 1C58  
                     __ptext25 20E8                       __ptext17 15AE                       __ptext26 1796  
                     __ptext18 1CE8                       __ptext27 2066                       __ptext19 1DFC  
                     __ptext28 1F44                       __ptext29 1BAA                       _pow$1554 006C  
                     _pow$1555 006F                  __size_of_main 019C         __end_of_coinfig_ccpcon 1BAA  
__size_of_carroAvanzarEspecial 0022          __CFG_CPUDIV$OSC1_PLL2 000000                       exp@coeff 0801  
               ??_carroAvanzar 005F                       log@coeff 081F                     _INTCONbits 000FF2  
                  ??_eval_poly 003E             _carroGirarEspecial 202C            ?_carroGirarEspecial 0001  
              ?_coinfig_ccpcon 0046                  _config_timer2 1E74           ??_carroGirarEspecial 005F  
           __CFG_FOSC$HSPLL_HS 000000                   ?_configBoard 0001                 ?_config_timer2 000D  
                 ?_config_ccp1 005B                   ?_config_ccp2 005B  
