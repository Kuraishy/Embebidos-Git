

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 16 20:45:47 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 1.45
    78                           ; Generated 16/11/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	smallconst
   113  000800                     __psmallconst:
   114                           	opt stack 0
   115  000800  00                 	db	0
   116  000801                     exp@coeff:
   117                           	opt stack 0
   118  000801  00                 	db	0
   119  000802  80                 	db	128
   120  000803  3F                 	db	63
   121  000804  72                 	db	114
   122  000805  31                 	db	49
   123  000806  3F                 	db	63
   124  000807  FE                 	db	254
   125  000808  75                 	db	117
   126  000809  3E                 	db	62
   127  00080A  58                 	db	88
   128  00080B  63                 	db	99
   129  00080C  3D                 	db	61
   130  00080D  95                 	db	149
   131  00080E  1D                 	db	29
   132  00080F  3C                 	db	60
   133  000810  C5                 	db	197
   134  000811  AE                 	db	174
   135  000812  3A                 	db	58
   136  000813  79                 	db	121
   137  000814  21                 	db	33
   138  000815  39                 	db	57
   139  000816  94                 	db	148
   140  000817  80                 	db	128
   141  000818  37                 	db	55
   142  000819  93                 	db	147
   143  00081A  A7                 	db	167
   144  00081B  35                 	db	53
   145  00081C  56                 	db	86
   146  00081D  15                 	db	21
   147  00081E  34                 	db	52
   148  00081F                     __end_ofexp@coeff:
   149                           	opt stack 0
   150  00081F                     log@coeff:
   151                           	opt stack 0
   152  00081F  00                 	db	0
   153  000820  00                 	db	0
   154  000821  00                 	db	0
   155  000822  00                 	db	0
   156  000823  80                 	db	128
   157  000824  3F                 	db	63
   158  000825  F0                 	db	240
   159  000826  FF                 	db	255
   160  000827  BE                 	db	190
   161  000828  E2                 	db	226
   162  000829  A9                 	db	169
   163  00082A  3E                 	db	62
   164  00082B  83                 	db	131
   165  00082C  76                 	db	118
   166  00082D  BE                 	db	190
   167  00082E  AE                 	db	174
   168  00082F  2B                 	db	43
   169  000830  3E                 	db	62
   170  000831  3C                 	db	60
   171  000832  C3                 	db	195
   172  000833  BD                 	db	189
   173  000834  D2                 	db	210
   174  000835  13                 	db	19
   175  000836  3D                 	db	61
   176  000837  78                 	db	120
   177  000838  D3                 	db	211
   178  000839  BB                 	db	187
   179  00083A                     __end_oflog@coeff:
   180                           	opt stack 0
   181  00083A  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           	psect	nvBANK1
   184  0001EF                     __pnvBANK1:
   185                           	opt stack 0
   186  0001EF                     _prescg:
   187                           	opt stack 0
   188  0001EF                     	ds	3
   189  0000                     _CCPR2L	set	4027
   190  0000                     _CCPR1L	set	4030
   191  0000                     _CCP2CONbits	set	4026
   192  0000                     _CCP1CONbits	set	4029
   193  0000                     _PR2	set	4043
   194  0000                     _PORTA	set	3968
   195  0000                     _TRISD	set	3989
   196  0000                     _PIR1bits	set	3998
   197  0000                     _PIE1bits	set	3997
   198  0000                     _ADCON2bits	set	4032
   199  0000                     _ADCON0bits	set	4034
   200  0000                     _ADCON0	set	4034
   201  0000                     _T0CONbits	set	4053
   202  0000                     _INTCON2bits	set	4081
   203  0000                     _INTCONbits	set	4082
   204  0000                     _LATAbits	set	3977
   205  0000                     _LATEbits	set	3981
   206  0000                     _PORTAbits	set	3968
   207  0000                     _ADCON1bits	set	4033
   208  0000                     _T2CONbits	set	4042
   209  0000                     _TRISCbits	set	3988
   210  0000                     _TRISBbits	set	3987
   211  0000                     _TRISEbits	set	3990
   212  0000                     _TRISAbits	set	3986
   213  0000                     _TMR0L	set	4054
   214  0000                     _TMR0IF	set	32658
   215  0000                     _TMR0ON	set	32431
   216  0000                     _RCIF	set	31989
   217  0000                     _T08BIT	set	32430
   218  0000                     _INT0F	set	32657
   219  0000                     _INT0IF	set	32657
   220                           
   221                           ; #config settings
   222  0000                     
   223                           	psect	cinit
   224  003972                     __pcinit:
   225                           	opt stack 0
   226  003972                     start_initialization:
   227                           	opt stack 0
   228  003972                     __initialization:
   229                           	opt stack 0
   230                           
   231                           ; Clear objects allocated to BANK1 (66 bytes)
   232  003972  EE01  F0AD         	lfsr	0,__pbssBANK1
   233  003976  0E42               	movlw	66
   234  003978                     clear_0:
   235  003978  6AEE               	clrf	postinc0,c
   236  00397A  06E8               	decf	wreg,f,c
   237  00397C  E1FD               	bnz	clear_0
   238  00397E                     end_of_initialization:
   239                           	opt stack 0
   240  00397E                     __end_of__initialization:
   241                           	opt stack 0
   242  00397E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  003980  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  003982  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  003984  6EF8               	movwf	tblptru,c
   246  003986  0100               	movlb	0
   247  003988  EF7D  F017         	goto	_main	;jump to C main() function
   248                           tblptru	equ	0xFF8
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssBANK1
   253  0001AD                     __pbssBANK1:
   254                           	opt stack 0
   255  0001AD                     config_ccp2@F3978:
   256                           	opt stack 0
   257  0001AD                     	ds	30
   258  0001CB                     config_ccp1@F3967:
   259                           	opt stack 0
   260  0001CB                     	ds	30
   261  0001E9                     _pr2g:
   262                           	opt stack 0
   263  0001E9                     	ds	3
   264  0001EC                     _errno:
   265                           	opt stack 0
   266  0001EC                     	ds	2
   267  0001EE                     _test:
   268                           	opt stack 0
   269  0001EE                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	cstackBANK1
   275  000100                     __pcstackBANK1:
   276                           	opt stack 0
   277  000100                     ?___wmul:
   278                           	opt stack 0
   279  000100                     ?___awdiv:
   280                           	opt stack 0
   281  000100                     ?___ftpack:
   282                           	opt stack 0
   283  000100                     ?_frexp:
   284                           	opt stack 0
   285  000100                     ?___ftneg:
   286                           	opt stack 0
   287  000100                     ___wmul@multiplier:
   288                           	opt stack 0
   289  000100                     ___awdiv@dividend:
   290                           	opt stack 0
   291  000100                     ___ftpack@arg:
   292                           	opt stack 0
   293  000100                     ___ftge@ff1:
   294                           	opt stack 0
   295  000100                     ___ftneg@f1:
   296                           	opt stack 0
   297  000100                     frexp@value:
   298                           	opt stack 0
   299                           
   300                           ; 3 bytes @ 0x0
   301  000100                     	ds	2
   302  000102                     ___wmul@multiplicand:
   303                           	opt stack 0
   304  000102                     ___awdiv@divisor:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x2
   308  000102                     	ds	1
   309  000103                     ___ftpack@exp:
   310                           	opt stack 0
   311  000103                     frexp@eptr:
   312                           	opt stack 0
   313  000103                     ___ftge@ff2:
   314                           	opt stack 0
   315                           
   316                           ; 3 bytes @ 0x3
   317  000103                     	ds	1
   318  000104                     ___awdiv@counter:
   319                           	opt stack 0
   320  000104                     ___ftpack@sign:
   321                           	opt stack 0
   322  000104                     ___wmul@product:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x4
   326  000104                     	ds	1
   327  000105                     ??___ftpack:
   328  000105                     ??_frexp:
   329  000105                     ___awdiv@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x5
   333  000105                     	ds	1
   334  000106                     ??___ftge:
   335  000106                     ___awdiv@quotient:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x6
   339  000106                     	ds	2
   340  000108                     ?___awtoft:
   341                           	opt stack 0
   342  000108                     ?___lbtoft:
   343                           	opt stack 0
   344  000108                     ?___lltoft:
   345                           	opt stack 0
   346  000108                     ___awtoft@c:
   347                           	opt stack 0
   348  000108                     ___lltoft@c:
   349                           	opt stack 0
   350                           
   351                           ; 4 bytes @ 0x8
   352  000108                     	ds	3
   353  00010B                     ___awtoft@sign:
   354                           	opt stack 0
   355  00010B                     ___lbtoft@c:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0xB
   359  00010B                     	ds	1
   360  00010C                     ??___lltoft:
   361  00010C                     ?___ftmul:
   362                           	opt stack 0
   363  00010C                     config_timer2@onoff:
   364                           	opt stack 0
   365  00010C                     ___ftmul@f1:
   366                           	opt stack 0
   367                           
   368                           ; 3 bytes @ 0xC
   369  00010C                     	ds	2
   370  00010E                     config_timer2@presc:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0xE
   374  00010E                     	ds	1
   375  00010F                     ___ftmul@f2:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0xF
   379  00010F                     	ds	1
   380  000110                     ??_config_timer2:
   381  000110                     ___lltoft@exp:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x10
   385  000110                     	ds	2
   386  000112                     ??___ftmul:
   387                           
   388                           ; 1 bytes @ 0x12
   389  000112                     	ds	3
   390  000115                     ___ftmul@exp:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x15
   394  000115                     	ds	1
   395  000116                     ___ftmul@f3_as_product:
   396                           	opt stack 0
   397                           
   398                           ; 3 bytes @ 0x16
   399  000116                     	ds	3
   400  000119                     ___ftmul@cntr:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x19
   404  000119                     	ds	1
   405  00011A                     ___ftmul@sign:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x1A
   409  00011A                     	ds	1
   410  00011B                     ?___ftdiv:
   411                           	opt stack 0
   412  00011B                     ___ftdiv@f1:
   413                           	opt stack 0
   414                           
   415                           ; 3 bytes @ 0x1B
   416  00011B                     	ds	3
   417  00011E                     ___ftdiv@f2:
   418                           	opt stack 0
   419                           
   420                           ; 3 bytes @ 0x1E
   421  00011E                     	ds	3
   422  000121                     ??___ftdiv:
   423                           
   424                           ; 1 bytes @ 0x21
   425  000121                     	ds	3
   426  000124                     ___ftdiv@cntr:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x24
   430  000124                     	ds	1
   431  000125                     ___ftdiv@f3:
   432                           	opt stack 0
   433                           
   434                           ; 3 bytes @ 0x25
   435  000125                     	ds	3
   436  000128                     ___ftdiv@exp:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x28
   440  000128                     	ds	1
   441  000129                     ___ftdiv@sign:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x29
   445  000129                     	ds	1
   446  00012A                     ?___ftadd:
   447                           	opt stack 0
   448  00012A                     ___ftadd@f1:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0x2A
   452  00012A                     	ds	3
   453  00012D                     ___ftadd@f2:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x2D
   457  00012D                     	ds	3
   458  000130                     ??___ftadd:
   459                           
   460                           ; 1 bytes @ 0x30
   461  000130                     	ds	3
   462  000133                     ___ftadd@sign:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x33
   466  000133                     	ds	1
   467  000134                     ___ftadd@exp2:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x34
   471  000134                     	ds	1
   472  000135                     ___ftadd@exp1:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x35
   476  000135                     	ds	1
   477  000136                     ?___ftsub:
   478                           	opt stack 0
   479  000136                     ?_eval_poly:
   480                           	opt stack 0
   481  000136                     ?___fttol:
   482                           	opt stack 0
   483  000136                     ___ftsub@f1:
   484                           	opt stack 0
   485  000136                     ___fttol@f1:
   486                           	opt stack 0
   487  000136                     eval_poly@x:
   488                           	opt stack 0
   489                           
   490                           ; 3 bytes @ 0x36
   491  000136                     	ds	3
   492  000139                     eval_poly@d:
   493                           	opt stack 0
   494  000139                     ___ftsub@f2:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x39
   498  000139                     	ds	1
   499  00013A                     ??___fttol:
   500                           
   501                           ; 1 bytes @ 0x3A
   502  00013A                     	ds	1
   503  00013B                     eval_poly@n:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x3B
   507  00013B                     	ds	1
   508  00013C                     
   509                           ; 1 bytes @ 0x3C
   510  00013C                     	ds	1
   511  00013D                     ??_eval_poly:
   512                           
   513                           ; 1 bytes @ 0x3D
   514  00013D                     	ds	2
   515  00013F                     ___fttol@sign1:
   516                           	opt stack 0
   517  00013F                     eval_poly@res:
   518                           	opt stack 0
   519                           
   520                           ; 3 bytes @ 0x3F
   521  00013F                     	ds	1
   522  000140                     ___fttol@lval:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x40
   526  000140                     	ds	2
   527  000142                     ?_log:
   528                           	opt stack 0
   529  000142                     ?_ldexp:
   530                           	opt stack 0
   531  000142                     ldexp@value:
   532                           	opt stack 0
   533  000142                     log@x:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x42
   537  000142                     	ds	2
   538  000144                     ___fttol@exp1:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x44
   542  000144                     	ds	1
   543  000145                     ?___altoft:
   544                           	opt stack 0
   545  000145                     wait_in_ms@time_in_ms:
   546                           	opt stack 0
   547  000145                     ldexp@newexp:
   548                           	opt stack 0
   549  000145                     log@exponent:
   550                           	opt stack 0
   551  000145                     coinfig_ccpcon@fosc:
   552                           	opt stack 0
   553  000145                     ___altoft@c:
   554                           	opt stack 0
   555                           
   556                           ; 4 bytes @ 0x45
   557  000145                     	ds	2
   558  000147                     ??_wait_in_ms:
   559  000147                     ??_ldexp:
   560                           
   561                           ; 1 bytes @ 0x47
   562  000147                     	ds	1
   563  000148                     coinfig_ccpcon@freq:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x48
   567  000148                     	ds	1
   568  000149                     ??___altoft:
   569  000149                     wait_in_ms@flag:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x49
   573  000149                     	ds	2
   574  00014B                     wait_in_ms@count:
   575                           	opt stack 0
   576  00014B                     _coinfig_ccpcon$1656:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x4B
   580  00014B                     	ds	2
   581  00014D                     ___altoft@exp:
   582                           	opt stack 0
   583  00014D                     wait_in_ms@count_ms:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x4D
   587  00014D                     	ds	1
   588  00014E                     ___altoft@sign:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x4E
   592  00014E                     	ds	1
   593  00014F                     ?_floor:
   594                           	opt stack 0
   595  00014F                     floor@x:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0x4F
   599  00014F                     	ds	3
   600  000152                     floor@i:
   601                           	opt stack 0
   602                           
   603                           ; 3 bytes @ 0x52
   604  000152                     	ds	3
   605  000155                     floor@expon:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x55
   609  000155                     	ds	2
   610  000157                     ?_exp:
   611                           	opt stack 0
   612  000157                     exp@x:
   613                           	opt stack 0
   614                           
   615                           ; 3 bytes @ 0x57
   616  000157                     	ds	3
   617  00015A                     _exp$1665:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x5A
   621  00015A                     	ds	3
   622  00015D                     exp@exponent:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x5D
   626  00015D                     	ds	2
   627  00015F                     exp@sign:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x5F
   631  00015F                     	ds	1
   632  000160                     ?_pow:
   633                           	opt stack 0
   634  000160                     pow@x:
   635                           	opt stack 0
   636                           
   637                           ; 3 bytes @ 0x60
   638  000160                     	ds	3
   639  000163                     pow@y:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x63
   643  000163                     	ds	3
   644  000166                     _pow$1663:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x66
   648  000166                     	ds	3
   649  000169                     _pow$1664:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x69
   653  000169                     	ds	3
   654  00016C                     pow@sign:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x6C
   658  00016C                     	ds	1
   659  00016D                     pow@yi:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x6D
   663  00016D                     	ds	4
   664  000171                     config_ccp1@duty1:
   665                           	opt stack 0
   666  000171                     config_ccp2@duty2:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x71
   670  000171                     	ds	2
   671  000173                     ??_config_ccp1:
   672  000173                     ??_config_ccp2:
   673                           
   674                           ; 1 bytes @ 0x73
   675  000173                     	ds	2
   676  000175                     config_ccp1@a:
   677                           	opt stack 0
   678  000175                     config_ccp2@a:
   679                           	opt stack 0
   680                           
   681                           ; 30 bytes @ 0x75
   682  000175                     	ds	30
   683  000193                     _config_ccp1$1657:
   684                           	opt stack 0
   685  000193                     _config_ccp2$1660:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x93
   689  000193                     	ds	3
   690  000196                     config_ccp1@valreg:
   691                           	opt stack 0
   692  000196                     config_ccp2@valreg:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x96
   696  000196                     	ds	2
   697  000198                     config_ccp1@i:
   698                           	opt stack 0
   699  000198                     config_ccp2@i:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x98
   703  000198                     	ds	2
   704  00019A                     config_ccp1@z:
   705                           	opt stack 0
   706  00019A                     config_ccp2@z:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x9A
   710  00019A                     	ds	2
   711  00019C                     _config_ccp1$1658:
   712                           	opt stack 0
   713  00019C                     _config_ccp2$1661:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x9C
   717  00019C                     	ds	3
   718  00019F                     _config_ccp1$1659:
   719                           	opt stack 0
   720  00019F                     _config_ccp2$1662:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x9F
   724  00019F                     	ds	3
   725  0001A2                     config_ccp1@x:
   726                           	opt stack 0
   727  0001A2                     config_ccp2@x:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xA2
   731  0001A2                     	ds	2
   732  0001A4                     config_ccp1@w:
   733                           	opt stack 0
   734  0001A4                     config_ccp2@w:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0xA4
   738  0001A4                     	ds	2
   739  0001A6                     config_ccp1@y:
   740                           	opt stack 0
   741  0001A6                     config_ccp2@y:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0xA6
   745  0001A6                     	ds	2
   746  0001A8                     config_ccp1@n:
   747                           	opt stack 0
   748  0001A8                     config_ccp2@n:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0xA8
   752  0001A8                     	ds	2
   753  0001AA                     config_ccp1@j:
   754                           	opt stack 0
   755  0001AA                     config_ccp2@j:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0xAA
   759  0001AA                     	ds	2
   760  0001AC                     carroGirar@direccion:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0xAC
   764  0001AC                     	ds	1
   765  0001AD                     tblptru	equ	0xFF8
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           
   769                           ; 1 bytes @ 0xAD
   770                           
   771                           	psect	cstackBANK0
   772  000060                     __pcstackBANK0:
   773                           	opt stack 0
   774  000060                     i2_exp$1882:
   775                           	opt stack 0
   776                           
   777                           ; 3 bytes @ 0x0
   778  000060                     	ds	3
   779  000063                     i2exp@exponent:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x3
   783  000063                     	ds	2
   784  000065                     i2exp@sign:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x5
   788  000065                     	ds	1
   789  000066                     ?i2_pow:
   790                           	opt stack 0
   791  000066                     i2pow@x:
   792                           	opt stack 0
   793                           
   794                           ; 3 bytes @ 0x6
   795  000066                     	ds	3
   796  000069                     i2pow@y:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x9
   800  000069                     	ds	3
   801  00006C                     i2_pow$1880:
   802                           	opt stack 0
   803                           
   804                           ; 3 bytes @ 0xC
   805  00006C                     	ds	3
   806  00006F                     i2_pow$1881:
   807                           	opt stack 0
   808                           
   809                           ; 3 bytes @ 0xF
   810  00006F                     	ds	3
   811  000072                     i2pow@sign:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x12
   815  000072                     	ds	1
   816  000073                     i2pow@yi:
   817                           	opt stack 0
   818                           
   819                           ; 4 bytes @ 0x13
   820  000073                     	ds	4
   821  000077                     i2config_ccp1@a:
   822                           	opt stack 0
   823  000077                     i2config_ccp2@a:
   824                           	opt stack 0
   825                           
   826                           ; 30 bytes @ 0x17
   827  000077                     	ds	30
   828  000095                     i2_config_ccp1$1874:
   829                           	opt stack 0
   830  000095                     i2_config_ccp2$1877:
   831                           	opt stack 0
   832                           
   833                           ; 3 bytes @ 0x35
   834  000095                     	ds	3
   835  000098                     i2config_ccp1@valreg:
   836                           	opt stack 0
   837  000098                     i2config_ccp2@valreg:
   838                           	opt stack 0
   839                           
   840                           ; 2 bytes @ 0x38
   841  000098                     	ds	2
   842  00009A                     i2config_ccp1@i:
   843                           	opt stack 0
   844  00009A                     i2config_ccp2@i:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x3A
   848  00009A                     	ds	2
   849  00009C                     i2config_ccp1@z:
   850                           	opt stack 0
   851  00009C                     i2config_ccp2@z:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x3C
   855  00009C                     	ds	2
   856  00009E                     i2_config_ccp1$1875:
   857                           	opt stack 0
   858  00009E                     i2_config_ccp2$1878:
   859                           	opt stack 0
   860                           
   861                           ; 3 bytes @ 0x3E
   862  00009E                     	ds	3
   863  0000A1                     i2_config_ccp1$1876:
   864                           	opt stack 0
   865  0000A1                     i2_config_ccp2$1879:
   866                           	opt stack 0
   867                           
   868                           ; 3 bytes @ 0x41
   869  0000A1                     	ds	3
   870  0000A4                     i2config_ccp1@x:
   871                           	opt stack 0
   872  0000A4                     i2config_ccp2@x:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x44
   876  0000A4                     	ds	2
   877  0000A6                     i2config_ccp1@w:
   878                           	opt stack 0
   879  0000A6                     i2config_ccp2@w:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x46
   883  0000A6                     	ds	2
   884  0000A8                     i2config_ccp1@y:
   885                           	opt stack 0
   886  0000A8                     i2config_ccp2@y:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x48
   890  0000A8                     	ds	2
   891  0000AA                     i2config_ccp1@n:
   892                           	opt stack 0
   893  0000AA                     i2config_ccp2@n:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x4A
   897  0000AA                     	ds	2
   898  0000AC                     i2config_ccp1@j:
   899                           	opt stack 0
   900  0000AC                     i2config_ccp2@j:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x4C
   904  0000AC                     	ds	2
   905  0000AE                     i2carroGirar@direccion:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x4E
   909  0000AE                     	ds	1
   910  0000AF                     ??_ADCint:
   911                           
   912                           ; 1 bytes @ 0x4F
   913  0000AF                     	ds	18
   914                           tblptru	equ	0xFF8
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           
   918                           	psect	cstackCOMRAM
   919  000001                     __pcstackCOMRAM:
   920                           	opt stack 0
   921  000001                     ?i2___wmul:
   922                           	opt stack 0
   923  000001                     ?i2___awdiv:
   924                           	opt stack 0
   925  000001                     ?i2___ftpack:
   926                           	opt stack 0
   927  000001                     ?i2___ftneg:
   928                           	opt stack 0
   929  000001                     ?i2_frexp:
   930                           	opt stack 0
   931  000001                     i2___wmul@multiplier:
   932                           	opt stack 0
   933  000001                     i2___awdiv@dividend:
   934                           	opt stack 0
   935  000001                     i2___ftpack@arg:
   936                           	opt stack 0
   937  000001                     i2___ftge@ff1:
   938                           	opt stack 0
   939  000001                     i2___ftneg@f1:
   940                           	opt stack 0
   941  000001                     i2frexp@value:
   942                           	opt stack 0
   943                           
   944                           ; 3 bytes @ 0x0
   945  000001                     	ds	2
   946  000003                     i2___wmul@multiplicand:
   947                           	opt stack 0
   948  000003                     i2___awdiv@divisor:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x2
   952  000003                     	ds	1
   953  000004                     i2___ftpack@exp:
   954                           	opt stack 0
   955  000004                     i2frexp@eptr:
   956                           	opt stack 0
   957  000004                     i2___ftge@ff2:
   958                           	opt stack 0
   959                           
   960                           ; 3 bytes @ 0x3
   961  000004                     	ds	1
   962  000005                     i2___awdiv@counter:
   963                           	opt stack 0
   964  000005                     i2___ftpack@sign:
   965                           	opt stack 0
   966  000005                     i2___wmul@product:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x4
   970  000005                     	ds	1
   971  000006                     ??i2___ftpack:
   972  000006                     ??i2_frexp:
   973  000006                     i2___awdiv@sign:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x5
   977  000006                     	ds	1
   978  000007                     ??i2___ftge:
   979  000007                     i2___awdiv@quotient:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x6
   983  000007                     	ds	2
   984  000009                     ?i2___awtoft:
   985                           	opt stack 0
   986  000009                     ?i2___lltoft:
   987                           	opt stack 0
   988  000009                     i2___awtoft@c:
   989                           	opt stack 0
   990  000009                     i2___lltoft@c:
   991                           	opt stack 0
   992                           
   993                           ; 4 bytes @ 0x8
   994  000009                     	ds	3
   995  00000C                     i2___awtoft@sign:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0xB
   999  00000C                     	ds	1
  1000  00000D                     ??i2___lltoft:
  1001  00000D                     ?i2___ftadd:
  1002                           	opt stack 0
  1003  00000D                     i2___ftadd@f1:
  1004                           	opt stack 0
  1005                           
  1006                           ; 3 bytes @ 0xC
  1007  00000D                     	ds	3
  1008  000010                     i2___ftadd@f2:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0xF
  1012  000010                     	ds	1
  1013  000011                     i2___lltoft@exp:
  1014                           	opt stack 0
  1015                           
  1016                           ; 1 bytes @ 0x10
  1017  000011                     	ds	2
  1018  000013                     ??i2___ftadd:
  1019                           
  1020                           ; 1 bytes @ 0x12
  1021  000013                     	ds	3
  1022  000016                     i2___ftadd@sign:
  1023                           	opt stack 0
  1024                           
  1025                           ; 1 bytes @ 0x15
  1026  000016                     	ds	1
  1027  000017                     i2___ftadd@exp2:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x16
  1031  000017                     	ds	1
  1032  000018                     i2___ftadd@exp1:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x17
  1036  000018                     	ds	1
  1037  000019                     ?i2___ftmul:
  1038                           	opt stack 0
  1039  000019                     ?i2___ftsub:
  1040                           	opt stack 0
  1041  000019                     i2___ftmul@f1:
  1042                           	opt stack 0
  1043  000019                     i2___ftsub@f1:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x18
  1047  000019                     	ds	3
  1048  00001C                     i2___ftmul@f2:
  1049                           	opt stack 0
  1050  00001C                     i2___ftsub@f2:
  1051                           	opt stack 0
  1052                           
  1053                           ; 3 bytes @ 0x1B
  1054  00001C                     	ds	3
  1055  00001F                     ??i2___ftmul:
  1056  00001F                     
  1057                           ; 1 bytes @ 0x1E
  1058  00001F                     	ds	3
  1059  000022                     i2___ftmul@exp:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0x21
  1063  000022                     	ds	1
  1064  000023                     i2___ftmul@f3_as_product:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x22
  1068  000023                     	ds	3
  1069  000026                     i2___ftmul@cntr:
  1070                           	opt stack 0
  1071                           
  1072                           ; 1 bytes @ 0x25
  1073  000026                     	ds	1
  1074  000027                     i2___ftmul@sign:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x26
  1078  000027                     	ds	1
  1079  000028                     ?i2___ftdiv:
  1080                           	opt stack 0
  1081  000028                     ?i2_eval_poly:
  1082                           	opt stack 0
  1083  000028                     i2___ftdiv@f1:
  1084                           	opt stack 0
  1085  000028                     i2eval_poly@x:
  1086                           	opt stack 0
  1087                           
  1088                           ; 3 bytes @ 0x27
  1089  000028                     	ds	3
  1090  00002B                     i2eval_poly@d:
  1091                           	opt stack 0
  1092  00002B                     i2___ftdiv@f2:
  1093                           	opt stack 0
  1094                           
  1095                           ; 3 bytes @ 0x2A
  1096  00002B                     	ds	2
  1097  00002D                     i2eval_poly@n:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x2C
  1101  00002D                     	ds	1
  1102  00002E                     ??i2___ftdiv:
  1103                           
  1104                           ; 1 bytes @ 0x2D
  1105  00002E                     	ds	1
  1106  00002F                     ??i2_eval_poly:
  1107                           
  1108                           ; 1 bytes @ 0x2E
  1109  00002F                     	ds	2
  1110  000031                     i2___ftdiv@cntr:
  1111                           	opt stack 0
  1112  000031                     i2eval_poly@res:
  1113                           	opt stack 0
  1114                           
  1115                           ; 3 bytes @ 0x30
  1116  000031                     	ds	1
  1117  000032                     i2___ftdiv@f3:
  1118                           	opt stack 0
  1119                           
  1120                           ; 3 bytes @ 0x31
  1121  000032                     	ds	2
  1122  000034                     ?i2_ldexp:
  1123                           	opt stack 0
  1124  000034                     ?i2_log:
  1125                           	opt stack 0
  1126  000034                     i2ldexp@value:
  1127                           	opt stack 0
  1128  000034                     i2log@x:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x33
  1132  000034                     	ds	1
  1133  000035                     i2___ftdiv@exp:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0x34
  1137  000035                     	ds	1
  1138  000036                     i2___ftdiv@sign:
  1139                           	opt stack 0
  1140                           
  1141                           ; 1 bytes @ 0x35
  1142  000036                     	ds	1
  1143  000037                     ?i2___fttol:
  1144                           	opt stack 0
  1145  000037                     i2ldexp@newexp:
  1146                           	opt stack 0
  1147  000037                     i2log@exponent:
  1148                           	opt stack 0
  1149  000037                     i2___fttol@f1:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x36
  1153  000037                     	ds	2
  1154  000039                     ??i2_ldexp:
  1155                           
  1156                           ; 1 bytes @ 0x38
  1157  000039                     	ds	2
  1158  00003B                     ??i2___fttol:
  1159                           
  1160                           ; 1 bytes @ 0x3A
  1161  00003B                     	ds	5
  1162  000040                     i2___fttol@sign1:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x3F
  1166  000040                     	ds	1
  1167  000041                     i2___fttol@lval:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x40
  1171  000041                     	ds	4
  1172  000045                     i2___fttol@exp1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x44
  1176  000045                     	ds	1
  1177  000046                     ?i2___altoft:
  1178                           	opt stack 0
  1179  000046                     i2wait_in_ms@time_in_ms:
  1180                           	opt stack 0
  1181  000046                     i2___altoft@c:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0x45
  1185  000046                     	ds	2
  1186  000048                     ??i2_wait_in_ms:
  1187                           
  1188                           ; 1 bytes @ 0x47
  1189  000048                     	ds	2
  1190  00004A                     ??i2___altoft:
  1191  00004A                     i2wait_in_ms@flag:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x49
  1195  00004A                     	ds	2
  1196  00004C                     i2wait_in_ms@count:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x4B
  1200  00004C                     	ds	2
  1201  00004E                     i2___altoft@exp:
  1202                           	opt stack 0
  1203  00004E                     i2wait_in_ms@count_ms:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x4D
  1207  00004E                     	ds	1
  1208  00004F                     i2___altoft@sign:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x4E
  1212  00004F                     	ds	1
  1213  000050                     ?i2_floor:
  1214                           	opt stack 0
  1215  000050                     i2floor@x:
  1216                           	opt stack 0
  1217                           
  1218                           ; 3 bytes @ 0x4F
  1219  000050                     	ds	3
  1220  000053                     i2floor@expon:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x52
  1224  000053                     	ds	2
  1225  000055                     i2floor@i:
  1226                           	opt stack 0
  1227                           
  1228                           ; 3 bytes @ 0x54
  1229  000055                     	ds	3
  1230  000058                     ?i2_exp:
  1231                           	opt stack 0
  1232  000058                     i2exp@x:
  1233                           	opt stack 0
  1234                           
  1235                           ; 3 bytes @ 0x57
  1236  000058                     	ds	3
  1237  00005B                     i2config_ccp1@duty1:
  1238                           	opt stack 0
  1239  00005B                     i2config_ccp2@duty2:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x5A
  1243  00005B                     	ds	2
  1244  00005D                     ??i2_config_ccp1:
  1245  00005D                     ??i2_config_ccp2:
  1246                           
  1247                           ; 1 bytes @ 0x5C
  1248  00005D                     	ds	2
  1249  00005F                     tblptru	equ	0xFF8
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           
  1253                           ; 1 bytes @ 0x5E
  1254 ;;
  1255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1256 ;;
  1257 ;; *************** function _main *****************
  1258 ;; Defined at:
  1259 ;;		line 59 in file "carroMain.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels required when called:   17
  1279 ;; This function calls:
  1280 ;;		_EstacionaminetoM1
  1281 ;;		_carroAvanzarEspecial
  1282 ;;		_coinfig_ccpcon
  1283 ;;		_configBoard
  1284 ;;		_config_timer2
  1285 ;;		_wait_in_ms
  1286 ;; This function is called by:
  1287 ;;		Startup code after reset
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text0
  1292  002EFA                     __ptext0:
  1293                           	opt stack 0
  1294  002EFA                     _main:
  1295                           	opt stack 14
  1296                           
  1297                           ;carroMain.c: 62: configBoard();
  1298                           
  1299                           ;incstack = 0
  1300  002EFA  ECAB  F01A         	call	_configBoard	;wreg free
  1301                           
  1302                           ;carroMain.c: 65: TRISAbits.RA4=0;
  1303  002EFE  9892               	bcf	3986,4,c	;volatile
  1304                           
  1305                           ;carroMain.c: 66: TRISAbits.RA1=0;
  1306  002F00  9292               	bcf	3986,1,c	;volatile
  1307                           
  1308                           ;carroMain.c: 67: TRISEbits.RE0=0;
  1309  002F02  9096               	bcf	3990,0,c	;volatile
  1310                           
  1311                           ;carroMain.c: 68: TRISEbits.RE1=0;
  1312  002F04  9296               	bcf	3990,1,c	;volatile
  1313                           
  1314                           ;carroMain.c: 73: TRISBbits.RB5=1;
  1315  002F06  8A93               	bsf	3987,5,c	;volatile
  1316                           
  1317                           ;carroMain.c: 74: TRISBbits.RB4=1;
  1318  002F08  8893               	bsf	3987,4,c	;volatile
  1319                           
  1320                           ;carroMain.c: 75: TRISBbits.RB3=1;
  1321  002F0A  8693               	bsf	3987,3,c	;volatile
  1322                           
  1323                           ;carroMain.c: 76: TRISBbits.RB2=1;
  1324  002F0C  8493               	bsf	3987,2,c	;volatile
  1325                           
  1326                           ;carroMain.c: 77: TRISBbits.RB1=1;
  1327  002F0E  8293               	bsf	3987,1,c	;volatile
  1328                           
  1329                           ;carroMain.c: 79: TRISAbits.RA0=1;
  1330  002F10  8092               	bsf	3986,0,c	;volatile
  1331                           
  1332                           ;carroMain.c: 81: TRISCbits.RC2 = 0;
  1333  002F12  9494               	bcf	3988,2,c	;volatile
  1334                           
  1335                           ;carroMain.c: 82: TRISCbits.RC1 = 0;
  1336  002F14  9294               	bcf	3988,1,c	;volatile
  1337                           
  1338                           ;carroMain.c: 84: config_timer2(0,16);
  1339  002F16  0E00               	movlw	0
  1340  002F18  0101               	movlb	1	; () banked
  1341  002F1A  6F0D               	movwf	(config_timer2@onoff+1)& (0+255),b
  1342  002F1C  0E00               	movlw	0
  1343  002F1E  6F0C               	movwf	config_timer2@onoff& (0+255),b
  1344  002F20  0E00               	movlw	0
  1345  002F22  6F0F               	movwf	(config_timer2@presc+1)& (0+255),b
  1346  002F24  0E10               	movlw	16
  1347  002F26  6F0E               	movwf	config_timer2@presc& (0+255),b
  1348  002F28  EC71  F01A         	call	_config_timer2	;wreg free
  1349                           
  1350                           ;carroMain.c: 85: coinfig_ccpcon(48000000,15000);
  1351  002F2C  0E1B               	movlw	27
  1352  002F2E  0101               	movlb	1	; () banked
  1353  002F30  6F45               	movwf	coinfig_ccpcon@fosc& (0+255),b
  1354  002F32  0E37               	movlw	55
  1355  002F34  6F46               	movwf	(coinfig_ccpcon@fosc+1)& (0+255),b
  1356  002F36  0E4C               	movlw	76
  1357  002F38  6F47               	movwf	(coinfig_ccpcon@fosc+2)& (0+255),b
  1358  002F3A  0E60               	movlw	96
  1359  002F3C  6F48               	movwf	coinfig_ccpcon@freq& (0+255),b
  1360  002F3E  0E6A               	movlw	106
  1361  002F40  6F49               	movwf	(coinfig_ccpcon@freq+1)& (0+255),b
  1362  002F42  0E46               	movlw	70
  1363  002F44  6F4A               	movwf	(coinfig_ccpcon@freq+2)& (0+255),b
  1364  002F46  EC1D  F016         	call	_coinfig_ccpcon	;wreg free
  1365                           
  1366                           ;carroMain.c: 89: T2CONbits.TMR2ON = 1;
  1367  002F4A  84CA               	bsf	4042,2,c	;volatile
  1368                           
  1369                           ;carroMain.c: 90: ADCON1bits.PCFG = 0b1111;
  1370  002F4C  80C1               	bsf	4033,0,c	;volatile
  1371  002F4E  82C1               	bsf	4033,1,c	;volatile
  1372  002F50  84C1               	bsf	4033,2,c	;volatile
  1373  002F52  86C1               	bsf	4033,3,c	;volatile
  1374  002F54                     
  1375                           ;carroMain.c: 94: wait_in_ms(3000);
  1376  002F54  0E0B               	movlw	11
  1377  002F56  0101               	movlb	1	; () banked
  1378  002F58  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1379  002F5A  0EB8               	movlw	184
  1380  002F5C  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1381  002F5E  EC1F  F014         	call	_wait_in_ms	;wreg free
  1382                           
  1383                           ;carroMain.c: 96: carroAvanzarEspecial();
  1384  002F62  EC4C  F01C         	call	_carroAvanzarEspecial	;wreg free
  1385                           
  1386                           ;carroMain.c: 97: wait_in_ms(300);
  1387  002F66  0E01               	movlw	1
  1388  002F68  0101               	movlb	1	; () banked
  1389  002F6A  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1390  002F6C  0E2C               	movlw	44
  1391  002F6E  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1392  002F70  EC1F  F014         	call	_wait_in_ms	;wreg free
  1393                           
  1394                           ;carroMain.c: 98: while(PORTAbits.RA0==0){
  1395  002F74  D009               	goto	l60
  1396  002F76                     
  1397                           ;carroMain.c: 99: carroAvanzarEspecial();
  1398  002F76  EC4C  F01C         	call	_carroAvanzarEspecial	;wreg free
  1399                           
  1400                           ;carroMain.c: 100: wait_in_ms(1000);
  1401  002F7A  0E03               	movlw	3
  1402  002F7C  0101               	movlb	1	; () banked
  1403  002F7E  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1404  002F80  0EE8               	movlw	232
  1405  002F82  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1406  002F84  EC1F  F014         	call	_wait_in_ms	;wreg free
  1407  002F88                     l60:
  1408  002F88  A080               	btfss	3968,0,c	;volatile
  1409  002F8A  D7F5               	goto	l61
  1410                           
  1411                           ;carroMain.c: 101: }
  1412                           ;carroMain.c: 103: EstacionaminetoM1();
  1413  002F8C  ECF0  F018         	call	_EstacionaminetoM1	;wreg free
  1414  002F90  0101               	movlb	1	; () banked
  1415  002F92  05EE               	decf	_test& (0+255),w,b
  1416  002F94  A4D8               	btfss	status,2,c
  1417  002F96  D7DE               	goto	l59
  1418  002F98  D7FB               	goto	l64
  1419  002F9A                     __end_of_main:
  1420                           	opt stack 0
  1421                           tblptru	equ	0xFF8
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _config_timer2 *****************
  1427 ;; Defined at:
  1428 ;;		line 14 in file "Pwm.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  onoff           2   12[BANK1 ] int 
  1431 ;;  presc           2   14[BANK1 ] int 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         0       0       4       0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1446 ;;      Totals:         0       0       6       0       0       0       0       0       0
  1447 ;;Total ram usage:        6 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:   11
  1450 ;; This function calls:
  1451 ;;		___awtoft
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text1
  1458  0034E2                     __ptext1:
  1459                           	opt stack 0
  1460  0034E2                     _config_timer2:
  1461                           	opt stack 19
  1462                           
  1463                           ;Pwm.c: 16: T2CONbits.TOUTPS = 0b0000;
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;incstack = 0
  1467  0034E2  96CA               	bcf	4042,3,c	;volatile
  1468  0034E4  98CA               	bcf	4042,4,c	;volatile
  1469  0034E6  9ACA               	bcf	4042,5,c	;volatile
  1470  0034E8  9CCA               	bcf	4042,6,c	;volatile
  1471                           
  1472                           ;Pwm.c: 18: prescg = presc;
  1473  0034EA  C10E  F108         	movff	config_timer2@presc,___awtoft@c
  1474  0034EE  C10F  F109         	movff	config_timer2@presc+1,___awtoft@c+1
  1475  0034F2  ECD8  F01B         	call	___awtoft	;wreg free
  1476  0034F6  C108  F1EF         	movff	?___awtoft,_prescg
  1477  0034FA  C109  F1F0         	movff	?___awtoft+1,_prescg+1
  1478  0034FE  C10A  F1F1         	movff	?___awtoft+2,_prescg+2
  1479                           
  1480                           ;Pwm.c: 20: switch(presc)
  1481  003502  D00B               	goto	l174
  1482  003504  0EFC               	movlw	-4
  1483  003506  16CA               	andwf	4042,f,c	;volatile
  1484  003508  D01B               	goto	l176
  1485  00350A  50CA               	movf	4042,w,c	;volatile
  1486  00350C  0BFC               	andlw	-4
  1487  00350E  0901               	iorlw	1
  1488  003510  6ECA               	movwf	4042,c	;volatile
  1489  003512  D016               	goto	l176
  1490  003514  0E03               	movlw	3
  1491  003516  12CA               	iorwf	4042,f,c	;volatile
  1492                           
  1493                           ;Pwm.c: 25: }
  1494  003518  D013               	goto	l176
  1495  00351A                     l174:
  1496  00351A  C10E  F110         	movff	config_timer2@presc,??_config_timer2
  1497  00351E  C10F  F111         	movff	config_timer2@presc+1,??_config_timer2+1
  1498                           
  1499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1500                           ; Switch size 1, requested type "space"
  1501                           ; Number of cases is 1, Range of values is 0 to 0
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte            4     3 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506  003522  0101               	movlb	1	; () banked
  1507  003524  5111               	movf	(??_config_timer2+1)& (0+255),w,b
  1508  003526  0A00               	xorlw	0	; case 0
  1509  003528  A4D8               	btfss	status,2,c
  1510  00352A  D00A               	goto	l176
  1511                           
  1512                           ; BSR set to: 1
  1513                           ; Switch size 1, requested type "space"
  1514                           ; Number of cases is 3, Range of values is 1 to 16
  1515                           ; switch strategies available:
  1516                           ; Name         Instructions Cycles
  1517                           ; simple_byte           10     6 (average)
  1518                           ;	Chosen strategy is simple_byte
  1519  00352C  5110               	movf	??_config_timer2& (0+255),w,b
  1520  00352E  0A01               	xorlw	1	; case 1
  1521  003530  B4D8               	btfsc	status,2,c
  1522  003532  D7E8               	goto	l175
  1523  003534  0A05               	xorlw	5	; case 4
  1524  003536  B4D8               	btfsc	status,2,c
  1525  003538  D7E8               	goto	l177
  1526  00353A  0A14               	xorlw	20	; case 16
  1527  00353C  B4D8               	btfsc	status,2,c
  1528  00353E  D7EA               	goto	l178
  1529  003540                     l176:
  1530                           
  1531                           ;Pwm.c: 27: T2CONbits.TOUTPS = 0b0000;
  1532  003540  96CA               	bcf	4042,3,c	;volatile
  1533  003542  98CA               	bcf	4042,4,c	;volatile
  1534  003544  9ACA               	bcf	4042,5,c	;volatile
  1535  003546  9CCA               	bcf	4042,6,c	;volatile
  1536                           
  1537                           ;Pwm.c: 29: T2CONbits.TMR2ON = onoff;
  1538  003548  0101               	movlb	1	; () banked
  1539  00354A  B10C               	btfsc	config_timer2@onoff& (0+255),0,b
  1540  00354C  D002               	bra	u4555
  1541  00354E  94CA               	bcf	4042,2,c	;volatile
  1542  003550  D001               	bra	u4556
  1543  003552                     u4555:
  1544  003552  84CA               	bsf	4042,2,c	;volatile
  1545  003554                     u4556:
  1546  003554  0012               	return		;funcret
  1547  003556                     __end_of_config_timer2:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function _configBoard *****************
  1555 ;; Defined at:
  1556 ;;		line 11 in file "config.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    9
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text2
  1585  003556                     __ptext2:
  1586                           	opt stack 0
  1587  003556                     _configBoard:
  1588                           	opt stack 21
  1589                           
  1590                           ;config.c: 15: INTCONbits.GIE = 0;
  1591                           
  1592                           ;incstack = 0
  1593  003556  9EF2               	bcf	intcon,7,c	;volatile
  1594                           
  1595                           ;config.c: 16: INTCONbits.PEIE = 0;
  1596  003558  9CF2               	bcf	intcon,6,c	;volatile
  1597                           
  1598                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1599  00355A  8ED5               	bsf	4053,7,c	;volatile
  1600                           
  1601                           ;config.c: 26: T08BIT = 1;
  1602  00355C  8CD5               	bsf	4053,6,c	;volatile
  1603                           
  1604                           ;config.c: 27: T0CONbits.T0CS = 0;
  1605  00355E  9AD5               	bcf	4053,5,c	;volatile
  1606                           
  1607                           ;config.c: 29: T0CONbits.PSA = 0;
  1608  003560  96D5               	bcf	4053,3,c	;volatile
  1609                           
  1610                           ;config.c: 30: T0CONbits.T0PS = 100;
  1611  003562  50D5               	movf	4053,w,c	;volatile
  1612  003564  0BF8               	andlw	-8
  1613  003566  0904               	iorlw	4
  1614  003568  6ED5               	movwf	4053,c	;volatile
  1615                           
  1616                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1617  00356A  94F2               	bcf	intcon,2,c	;volatile
  1618                           
  1619                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1620  00356C  80C1               	bsf	4033,0,c	;volatile
  1621  00356E  82C1               	bsf	4033,1,c	;volatile
  1622  003570  84C1               	bsf	4033,2,c	;volatile
  1623  003572  86C1               	bsf	4033,3,c	;volatile
  1624                           
  1625                           ;config.c: 44: ADCON0 = 0b00000111;
  1626  003574  0E07               	movlw	7
  1627  003576  6EC2               	movwf	4034,c	;volatile
  1628                           
  1629                           ;config.c: 47: ADCON0bits.ADON = 0;
  1630  003578  90C2               	bcf	4034,0,c	;volatile
  1631                           
  1632                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1633  00357A  8EC0               	bsf	4032,7,c	;volatile
  1634                           
  1635                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1636  00357C  50C0               	movf	4032,w,c	;volatile
  1637  00357E  0BF8               	andlw	-8
  1638  003580  0906               	iorlw	6
  1639  003582  6EC0               	movwf	4032,c	;volatile
  1640                           
  1641                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1642  003584  50C0               	movf	4032,w,c	;volatile
  1643  003586  0BC7               	andlw	-57
  1644  003588  0928               	iorlw	40
  1645  00358A  6EC0               	movwf	4032,c	;volatile
  1646                           
  1647                           ;config.c: 55: TRISAbits.RA1=1;
  1648  00358C  8292               	bsf	3986,1,c	;volatile
  1649                           
  1650                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1651  00358E  50C0               	movf	4032,w,c	;volatile
  1652  003590  0BF8               	andlw	-8
  1653  003592  0906               	iorlw	6
  1654  003594  6EC0               	movwf	4032,c	;volatile
  1655                           
  1656                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1657  003596  9AC1               	bcf	4033,5,c	;volatile
  1658                           
  1659                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1660  003598  98C1               	bcf	4033,4,c	;volatile
  1661                           
  1662                           ;config.c: 60: ADCON2bits.ADFM=1;
  1663  00359A  8EC0               	bsf	4032,7,c	;volatile
  1664                           
  1665                           ;config.c: 64: ADCON0bits.ADON=0;
  1666  00359C  90C2               	bcf	4034,0,c	;volatile
  1667                           
  1668                           ;config.c: 66: PIE1bits.ADIE=0;
  1669  00359E  9C9D               	bcf	3997,6,c	;volatile
  1670                           
  1671                           ;config.c: 67: PIR1bits.ADIF=0;
  1672  0035A0  9C9E               	bcf	3998,6,c	;volatile
  1673                           
  1674                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1675  0035A2  86C0               	bsf	4032,3,c	;volatile
  1676  0035A4  88C0               	bsf	4032,4,c	;volatile
  1677  0035A6  8AC0               	bsf	4032,5,c	;volatile
  1678                           
  1679                           ;config.c: 70: ADCON0bits.GO=1;
  1680  0035A8  82C2               	bsf	4034,1,c	;volatile
  1681                           
  1682                           ;config.c: 72: RCIF=0;
  1683  0035AA  9A9E               	bcf	3998,5,c	;volatile
  1684                           
  1685                           ;config.c: 75: TRISD=0;
  1686  0035AC  0E00               	movlw	0
  1687  0035AE  6E95               	movwf	3989,c	;volatile
  1688                           
  1689                           ;config.c: 76: PORTA=0;
  1690  0035B0  0E00               	movlw	0
  1691  0035B2  6E80               	movwf	3968,c	;volatile
  1692  0035B4  0012               	return		;funcret
  1693  0035B6                     __end_of_configBoard:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           intcon	equ	0xFF2
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _coinfig_ccpcon *****************
  1702 ;; Defined at:
  1703 ;;		line 34 in file "Pwm.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  fosc            3   69[BANK1 ] float 
  1706 ;;  freq            3   72[BANK1 ] float 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       6       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       9       0       0       0       0       0       0
  1722 ;;Total ram usage:        9 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:   11
  1725 ;; This function calls:
  1726 ;;		___ftadd
  1727 ;;		___ftdiv
  1728 ;;		___ftmul
  1729 ;;		___fttol
  1730 ;;		___lbtoft
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text3
  1737  002C3A                     __ptext3:
  1738                           	opt stack 0
  1739  002C3A                     _coinfig_ccpcon:
  1740                           	opt stack 19
  1741                           
  1742                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1743                           
  1744                           ;incstack = 0
  1745  002C3A  C1EF  F10F         	movff	_prescg,___ftmul@f2
  1746  002C3E  C1F0  F110         	movff	_prescg+1,___ftmul@f2+1
  1747  002C42  C1F1  F111         	movff	_prescg+2,___ftmul@f2+2
  1748  002C46  C148  F10C         	movff	coinfig_ccpcon@freq,___ftmul@f1
  1749  002C4A  C149  F10D         	movff	coinfig_ccpcon@freq+1,___ftmul@f1+1
  1750  002C4E  C14A  F10E         	movff	coinfig_ccpcon@freq+2,___ftmul@f1+2
  1751  002C52  EC7A  F010         	call	___ftmul	;wreg free
  1752  002C56  C10C  F14B         	movff	?___ftmul,_coinfig_ccpcon$1656
  1753  002C5A  C10D  F14C         	movff	?___ftmul+1,_coinfig_ccpcon$1656+1
  1754  002C5E  C10E  F14D         	movff	?___ftmul+2,_coinfig_ccpcon$1656+2
  1755                           
  1756                           ;Pwm.c: 36: PR2 = ((fosc/(4*freq*prescg))-1);
  1757  002C62  0E00               	movlw	0
  1758  002C64  0101               	movlb	1	; () banked
  1759  002C66  6F2D               	movwf	___ftadd@f2& (0+255),b
  1760  002C68  0E80               	movlw	128
  1761  002C6A  6F2E               	movwf	(___ftadd@f2+1)& (0+255),b
  1762  002C6C  0EBF               	movlw	191
  1763  002C6E  6F2F               	movwf	(___ftadd@f2+2)& (0+255),b
  1764  002C70  0E00               	movlw	0
  1765  002C72  6F0F               	movwf	___ftmul@f2& (0+255),b
  1766  002C74  0E80               	movlw	128
  1767  002C76  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  1768  002C78  0E40               	movlw	64
  1769  002C7A  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  1770  002C7C  C14B  F10C         	movff	_coinfig_ccpcon$1656,___ftmul@f1
  1771  002C80  C14C  F10D         	movff	_coinfig_ccpcon$1656+1,___ftmul@f1+1
  1772  002C84  C14D  F10E         	movff	_coinfig_ccpcon$1656+2,___ftmul@f1+2
  1773  002C88  EC7A  F010         	call	___ftmul	;wreg free
  1774  002C8C  C10C  F11E         	movff	?___ftmul,___ftdiv@f2
  1775  002C90  C10D  F11F         	movff	?___ftmul+1,___ftdiv@f2+1
  1776  002C94  C10E  F120         	movff	?___ftmul+2,___ftdiv@f2+2
  1777  002C98  C145  F11B         	movff	coinfig_ccpcon@fosc,___ftdiv@f1
  1778  002C9C  C146  F11C         	movff	coinfig_ccpcon@fosc+1,___ftdiv@f1+1
  1779  002CA0  C147  F11D         	movff	coinfig_ccpcon@fosc+2,___ftdiv@f1+2
  1780  002CA4  ECE9  F011         	call	___ftdiv	;wreg free
  1781  002CA8  C11B  F12A         	movff	?___ftdiv,___ftadd@f1
  1782  002CAC  C11C  F12B         	movff	?___ftdiv+1,___ftadd@f1+1
  1783  002CB0  C11D  F12C         	movff	?___ftdiv+2,___ftadd@f1+2
  1784  002CB4  ECB4  F00B         	call	___ftadd	;wreg free
  1785  002CB8  C12A  F136         	movff	?___ftadd,___fttol@f1
  1786  002CBC  C12B  F137         	movff	?___ftadd+1,___fttol@f1+1
  1787  002CC0  C12C  F138         	movff	?___ftadd+2,___fttol@f1+2
  1788  002CC4  ECFE  F00F         	call	___fttol	;wreg free
  1789  002CC8  0101               	movlb	1	; () banked
  1790  002CCA  5136               	movf	?___fttol& (0+255),w,b
  1791  002CCC  6ECB               	movwf	4043,c	;volatile
  1792                           
  1793                           ;Pwm.c: 37: pr2g = PR2;
  1794  002CCE  50CB               	movf	4043,w,c	;volatile
  1795  002CD0  EC11  F01C         	call	___lbtoft
  1796  002CD4  C108  F1E9         	movff	?___lbtoft,_pr2g
  1797  002CD8  C109  F1EA         	movff	?___lbtoft+1,_pr2g+1
  1798  002CDC  C10A  F1EB         	movff	?___lbtoft+2,_pr2g+2
  1799                           
  1800                           ;Pwm.c: 38: CCP1CONbits.P1M = 0b00;
  1801  002CE0  0E3F               	movlw	-193
  1802  002CE2  16BD               	andwf	4029,f,c	;volatile
  1803                           
  1804                           ;Pwm.c: 39: CCP2CONbits.CCP2M = 1100;
  1805  002CE4  50BA               	movf	4026,w,c	;volatile
  1806  002CE6  0BF0               	andlw	-16
  1807  002CE8  090C               	iorlw	12
  1808  002CEA  6EBA               	movwf	4026,c	;volatile
  1809                           
  1810                           ;Pwm.c: 40: CCP1CONbits.CCP1M = 1100;
  1811  002CEC  50BD               	movf	4029,w,c	;volatile
  1812  002CEE  0BF0               	andlw	-16
  1813  002CF0  090C               	iorlw	12
  1814  002CF2  6EBD               	movwf	4029,c	;volatile
  1815  002CF4  0012               	return		;funcret
  1816  002CF6                     __end_of_coinfig_ccpcon:
  1817                           	opt stack 0
  1818                           tblptru	equ	0xFF8
  1819                           intcon	equ	0xFF2
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function ___lbtoft *****************
  1825 ;; Defined at:
  1826 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  c               1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  c               1   11[BANK1 ] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  3    8[BANK1 ] float 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         0       0       3       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1844 ;;Total ram usage:        4 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:   10
  1847 ;; This function calls:
  1848 ;;		___ftpack
  1849 ;; This function is called by:
  1850 ;;		_coinfig_ccpcon
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text4
  1855  003822                     __ptext4:
  1856                           	opt stack 0
  1857  003822                     ___lbtoft:
  1858                           	opt stack 19
  1859                           
  1860                           ;incstack = 0
  1861                           ;___lbtoft@c stored from wreg
  1862  003822  0101               	movlb	1	; () banked
  1863  003824  6F0B               	movwf	___lbtoft@c& (0+255),b
  1864  003826  0101               	movlb	1	; () banked
  1865  003828  510B               	movf	___lbtoft@c& (0+255),w,b
  1866  00382A  6F00               	movwf	___ftpack@arg& (0+255),b
  1867  00382C  6B01               	clrf	(___ftpack@arg+1)& (0+255),b
  1868  00382E  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
  1869  003830  0E8E               	movlw	142
  1870  003832  6F03               	movwf	___ftpack@exp& (0+255),b
  1871  003834  0E00               	movlw	0
  1872  003836  6F04               	movwf	___ftpack@sign& (0+255),b
  1873  003838  EC7B  F016         	call	___ftpack	;wreg free
  1874  00383C  C100  F108         	movff	?___ftpack,?___lbtoft
  1875  003840  C101  F109         	movff	?___ftpack+1,?___lbtoft+1
  1876  003844  C102  F10A         	movff	?___ftpack+2,?___lbtoft+2
  1877  003848  0012               	return	
  1878  00384A                     __end_of___lbtoft:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           intcon	equ	0xFF2
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function _EstacionaminetoM1 *****************
  1887 ;; Defined at:
  1888 ;;		line 209 in file "carroMain.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:   16
  1909 ;; This function calls:
  1910 ;;		_carroAvanzarEspecial
  1911 ;;		_carroGirar
  1912 ;;		_carroMatar
  1913 ;;		_wait_in_ms
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text5
  1920  0031E0                     __ptext5:
  1921                           	opt stack 0
  1922  0031E0                     _EstacionaminetoM1:
  1923                           	opt stack 14
  1924                           
  1925                           ;carroMain.c: 212: carroMatar();
  1926                           
  1927                           ;incstack = 0
  1928  0031E0  EC39  F01C         	call	_carroMatar	;wreg free
  1929                           
  1930                           ;carroMain.c: 213: wait_in_ms(500);
  1931  0031E4  0E01               	movlw	1
  1932  0031E6  0101               	movlb	1	; () banked
  1933  0031E8  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1934  0031EA  0EF4               	movlw	244
  1935  0031EC  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1936  0031EE  EC1F  F014         	call	_wait_in_ms	;wreg free
  1937                           
  1938                           ;carroMain.c: 214: carroAvanzarEspecial();
  1939  0031F2  EC4C  F01C         	call	_carroAvanzarEspecial	;wreg free
  1940                           
  1941                           ;carroMain.c: 215: wait_in_ms(1500);
  1942  0031F6  0E05               	movlw	5
  1943  0031F8  0101               	movlb	1	; () banked
  1944  0031FA  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1945  0031FC  0EDC               	movlw	220
  1946  0031FE  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1947  003200  EC1F  F014         	call	_wait_in_ms	;wreg free
  1948                           
  1949                           ;carroMain.c: 216: carroGirar(1);
  1950  003204  0E01               	movlw	1
  1951  003206  ECDB  F01A         	call	_carroGirar
  1952                           
  1953                           ;carroMain.c: 217: wait_in_ms(800);
  1954  00320A  0E03               	movlw	3
  1955  00320C  0101               	movlb	1	; () banked
  1956  00320E  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1957  003210  0E20               	movlw	32
  1958  003212  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1959  003214  EC1F  F014         	call	_wait_in_ms	;wreg free
  1960                           
  1961                           ;carroMain.c: 218: carroAvanzarEspecial();
  1962  003218  EC4C  F01C         	call	_carroAvanzarEspecial	;wreg free
  1963                           
  1964                           ;carroMain.c: 219: wait_in_ms(300);
  1965  00321C  0E01               	movlw	1
  1966  00321E  0101               	movlb	1	; () banked
  1967  003220  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1968  003222  0E2C               	movlw	44
  1969  003224  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1970  003226  EC1F  F014         	call	_wait_in_ms	;wreg free
  1971                           
  1972                           ;carroMain.c: 220: carroGirar(3);
  1973  00322A  0E03               	movlw	3
  1974  00322C  ECDB  F01A         	call	_carroGirar
  1975                           
  1976                           ;carroMain.c: 221: wait_in_ms(900);
  1977  003230  0E03               	movlw	3
  1978  003232  0101               	movlb	1	; () banked
  1979  003234  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1980  003236  0E84               	movlw	132
  1981  003238  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1982  00323A  EC1F  F014         	call	_wait_in_ms	;wreg free
  1983                           
  1984                           ;carroMain.c: 222: carroAvanzarEspecial();
  1985  00323E  EC4C  F01C         	call	_carroAvanzarEspecial	;wreg free
  1986                           
  1987                           ;carroMain.c: 223: wait_in_ms(300);
  1988  003242  0E01               	movlw	1
  1989  003244  0101               	movlb	1	; () banked
  1990  003246  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  1991  003248  0E2C               	movlw	44
  1992  00324A  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  1993  00324C  EC1F  F014         	call	_wait_in_ms	;wreg free
  1994                           
  1995                           ;carroMain.c: 224: carroMatar();
  1996  003250  EC39  F01C         	call	_carroMatar	;wreg free
  1997                           
  1998                           ;carroMain.c: 225: wait_in_ms(1000);
  1999  003254  0E03               	movlw	3
  2000  003256  0101               	movlb	1	; () banked
  2001  003258  6F46               	movwf	(wait_in_ms@time_in_ms+1)& (0+255),b
  2002  00325A  0EE8               	movlw	232
  2003  00325C  6F45               	movwf	wait_in_ms@time_in_ms& (0+255),b
  2004  00325E  EC1F  F014         	call	_wait_in_ms	;wreg free
  2005                           
  2006                           ;carroMain.c: 226: test=1;
  2007  003262  0E01               	movlw	1
  2008  003264  0101               	movlb	1	; () banked
  2009  003266  6FEE               	movwf	_test& (0+255),b
  2010                           
  2011                           ; BSR set to: 1
  2012  003268  0012               	return		;funcret
  2013  00326A                     __end_of_EstacionaminetoM1:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           intcon	equ	0xFF2
  2017                           postinc0	equ	0xFEE
  2018                           wreg	equ	0xFE8
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _wait_in_ms *****************
  2022 ;; Defined at:
  2023 ;;		line 80 in file "config.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  time_in_ms      2   69[BANK1 ] int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  count_ms        2   77[BANK1 ] unsigned int 
  2028 ;;  count           2   75[BANK1 ] unsigned int 
  2029 ;;  flag            2   73[BANK1 ] unsigned int 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       2       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       6       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2042 ;;      Totals:         0       0      10       0       0       0       0       0       0
  2043 ;;Total ram usage:       10 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:   11
  2046 ;; This function calls:
  2047 ;;		___awtoft
  2048 ;;		___ftdiv
  2049 ;;		___fttol
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;;		_EstacionaminetoM1
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text6
  2057  00283E                     __ptext6:
  2058                           	opt stack 0
  2059  00283E                     _wait_in_ms:
  2060                           	opt stack 19
  2061                           
  2062                           ;config.c: 81: unsigned int count = 0;
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;incstack = 0
  2066  00283E  0E00               	movlw	0
  2067  002840  0101               	movlb	1	; () banked
  2068  002842  6F4C               	movwf	(wait_in_ms@count+1)& (0+255),b
  2069  002844  0E00               	movlw	0
  2070  002846  6F4B               	movwf	wait_in_ms@count& (0+255),b
  2071                           
  2072                           ;config.c: 82: unsigned int count_ms = 0;
  2073  002848  0E00               	movlw	0
  2074  00284A  6F4E               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  2075  00284C  0E00               	movlw	0
  2076  00284E  6F4D               	movwf	wait_in_ms@count_ms& (0+255),b
  2077                           
  2078                           ;config.c: 83: unsigned int flag = 0;
  2079  002850  0E00               	movlw	0
  2080  002852  6F4A               	movwf	(wait_in_ms@flag+1)& (0+255),b
  2081  002854  0E00               	movlw	0
  2082  002856  6F49               	movwf	wait_in_ms@flag& (0+255),b
  2083                           
  2084                           ;config.c: 85: TMR0L = 131;
  2085  002858  0E83               	movlw	131
  2086  00285A  6ED6               	movwf	4054,c	;volatile
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;config.c: 88: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  2090  00285C  50D6               	movf	4054,w,c	;volatile
  2091  00285E  6F47               	movwf	??_wait_in_ms& (0+255),b
  2092  002860  6B48               	clrf	(??_wait_in_ms+1)& (0+255),b
  2093  002862  1F47               	comf	??_wait_in_ms& (0+255),f,b
  2094  002864  1F48               	comf	(??_wait_in_ms+1)& (0+255),f,b
  2095  002866  4B47               	infsnz	??_wait_in_ms& (0+255),f,b
  2096  002868  2B48               	incf	(??_wait_in_ms+1)& (0+255),f,b
  2097  00286A  0E05               	movlw	5
  2098  00286C                     u4375:
  2099  00286C  90D8               	bcf	status,0,c
  2100  00286E  3747               	rlcf	??_wait_in_ms& (0+255),f,b
  2101  002870  3748               	rlcf	(??_wait_in_ms+1)& (0+255),f,b
  2102  002872  2EE8               	decfsz	wreg,f,c
  2103  002874  D7FB               	goto	u4375
  2104  002876  0E00               	movlw	0
  2105  002878  2547               	addwf	??_wait_in_ms& (0+255),w,b
  2106  00287A  6F08               	movwf	___awtoft@c& (0+255),b
  2107  00287C  0E20               	movlw	32
  2108  00287E  2148               	addwfc	(??_wait_in_ms+1)& (0+255),w,b
  2109  002880  6F09               	movwf	(___awtoft@c+1)& (0+255),b
  2110  002882  ECD8  F01B         	call	___awtoft	;wreg free
  2111  002886  C108  F11E         	movff	?___awtoft,___ftdiv@f2
  2112  00288A  C109  F11F         	movff	?___awtoft+1,___ftdiv@f2+1
  2113  00288E  C10A  F120         	movff	?___awtoft+2,___ftdiv@f2+2
  2114  002892  0E00               	movlw	0
  2115  002894  0101               	movlb	1	; () banked
  2116  002896  6F1B               	movwf	___ftdiv@f1& (0+255),b
  2117  002898  0EFA               	movlw	250
  2118  00289A  6F1C               	movwf	(___ftdiv@f1+1)& (0+255),b
  2119  00289C  0E45               	movlw	69
  2120  00289E  6F1D               	movwf	(___ftdiv@f1+2)& (0+255),b
  2121  0028A0  ECE9  F011         	call	___ftdiv	;wreg free
  2122  0028A4  C11B  F136         	movff	?___ftdiv,___fttol@f1
  2123  0028A8  C11C  F137         	movff	?___ftdiv+1,___fttol@f1+1
  2124  0028AC  C11D  F138         	movff	?___ftdiv+2,___fttol@f1+2
  2125  0028B0  ECFE  F00F         	call	___fttol	;wreg free
  2126  0028B4  C136  F14D         	movff	?___fttol,wait_in_ms@count_ms
  2127  0028B8  C137  F14E         	movff	?___fttol+1,wait_in_ms@count_ms+1
  2128                           
  2129                           ;config.c: 90: TMR0ON = 1;
  2130  0028BC  8ED5               	bsf	4053,7,c	;volatile
  2131                           
  2132                           ;config.c: 92: while (count < count_ms){
  2133  0028BE  D020               	goto	l145
  2134  0028C0                     l141:
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;config.c: 93: if(TMR0IF == 1){
  2138  0028C0  A4F2               	btfss	intcon,2,c	;volatile
  2139  0028C2  D01E               	goto	l145
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;config.c: 94: TMR0IF = 0;
  2143  0028C4  94F2               	bcf	intcon,2,c	;volatile
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;config.c: 95: TMR0L = 131;
  2147  0028C6  0E83               	movlw	131
  2148  0028C8  6ED6               	movwf	4054,c	;volatile
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;config.c: 96: count ++;
  2152  0028CA  4B4B               	infsnz	wait_in_ms@count& (0+255),f,b
  2153  0028CC  2B4C               	incf	(wait_in_ms@count+1)& (0+255),f,b
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;config.c: 97: if (count == count_ms){
  2157  0028CE  514D               	movf	wait_in_ms@count_ms& (0+255),w,b
  2158  0028D0  194B               	xorwf	wait_in_ms@count& (0+255),w,b
  2159  0028D2  E116               	bnz	l4037
  2160  0028D4  514E               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  2161  0028D6  194C               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  2162  0028D8  A4D8               	btfss	status,2,c
  2163  0028DA  D012               	goto	l145
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;config.c: 98: flag++;
  2167  0028DC  4B49               	infsnz	wait_in_ms@flag& (0+255),f,b
  2168  0028DE  2B4A               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;config.c: 99: if (flag != time_in_ms){
  2172  0028E0  5149               	movf	wait_in_ms@flag& (0+255),w,b
  2173  0028E2  1945               	xorwf	wait_in_ms@time_in_ms& (0+255),w,b
  2174  0028E4  E104               	bnz	u4400
  2175  0028E6  514A               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  2176  0028E8  1946               	xorwf	(wait_in_ms@time_in_ms+1)& (0+255),w,b
  2177  0028EA  B4D8               	btfsc	status,2,c
  2178  0028EC  D005               	goto	l144
  2179  0028EE                     u4400:
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;config.c: 100: count = 0;
  2183  0028EE  0E00               	movlw	0
  2184  0028F0  6F4C               	movwf	(wait_in_ms@count+1)& (0+255),b
  2185  0028F2  0E00               	movlw	0
  2186  0028F4  6F4B               	movwf	wait_in_ms@count& (0+255),b
  2187                           
  2188                           ;config.c: 101: }
  2189  0028F6  D004               	goto	l145
  2190  0028F8                     l144:
  2191                           
  2192                           ; BSR set to: 1
  2193                           ;config.c: 102: else{
  2194                           ;config.c: 103: count = count_ms;
  2195  0028F8  C14D  F14B         	movff	wait_in_ms@count_ms,wait_in_ms@count
  2196  0028FC  C14E  F14C         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  2197  002900                     l145:
  2198  002900                     l4037:
  2199  002900  0101               	movlb	1	; () banked
  2200  002902  514D               	movf	wait_in_ms@count_ms& (0+255),w,b
  2201  002904  5D4B               	subwf	wait_in_ms@count& (0+255),w,b
  2202  002906  514E               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  2203  002908  594C               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  2204  00290A  B0D8               	btfsc	status,0,c
  2205  00290C  0012               	return	
  2206  00290E  D7D8               	goto	l141
  2207  002910                     __end_of_wait_in_ms:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           intcon	equ	0xFF2
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           status	equ	0xFD8
  2214                           
  2215 ;; *************** function _carroMatar *****************
  2216 ;; Defined at:
  2217 ;;		line 183 in file "carroMain.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:   15
  2238 ;; This function calls:
  2239 ;;		_config_ccp1
  2240 ;;		_config_ccp2
  2241 ;; This function is called by:
  2242 ;;		_EstacionaminetoM1
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text7
  2247  003872                     __ptext7:
  2248                           	opt stack 0
  2249  003872                     _carroMatar:
  2250                           	opt stack 14
  2251                           
  2252                           ;carroMain.c: 184: LATAbits.LA4=0;
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;incstack = 0
  2256  003872  9889               	bcf	3977,4,c	;volatile
  2257                           
  2258                           ;carroMain.c: 185: LATAbits.LA1=0;
  2259  003874  9289               	bcf	3977,1,c	;volatile
  2260                           
  2261                           ;carroMain.c: 186: LATEbits.LE1 =0;
  2262  003876  928D               	bcf	3981,1,c	;volatile
  2263                           
  2264                           ;carroMain.c: 187: LATEbits.LE0=0;
  2265  003878  908D               	bcf	3981,0,c	;volatile
  2266                           
  2267                           ;carroMain.c: 188: config_ccp1(0);
  2268  00387A  0E00               	movlw	0
  2269  00387C  0101               	movlb	1	; () banked
  2270  00387E  6F72               	movwf	(config_ccp1@duty1+1)& (0+255),b
  2271  003880  0E00               	movlw	0
  2272  003882  6F71               	movwf	config_ccp1@duty1& (0+255),b
  2273  003884  EC89  F005         	call	_config_ccp1	;wreg free
  2274                           
  2275                           ;carroMain.c: 189: config_ccp2(0);
  2276  003888  0E00               	movlw	0
  2277  00388A  0101               	movlb	1	; () banked
  2278  00388C  6F72               	movwf	(config_ccp2@duty2+1)& (0+255),b
  2279  00388E  0E00               	movlw	0
  2280  003890  6F71               	movwf	config_ccp2@duty2& (0+255),b
  2281  003892  EC1E  F004         	call	_config_ccp2	;wreg free
  2282  003896  0012               	return		;funcret
  2283  003898                     __end_of_carroMatar:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           intcon	equ	0xFF2
  2287                           postinc0	equ	0xFEE
  2288                           wreg	equ	0xFE8
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function _carroGirar *****************
  2292 ;; Defined at:
  2293 ;;		line 153 in file "carroMain.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  direccion       1    wreg     unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  direccion       1  172[BANK1 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0
  2308 ;;      Locals:         0       0       1       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2310 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2311 ;;Total ram usage:        1 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:   15
  2314 ;; This function calls:
  2315 ;;		_config_ccp1
  2316 ;;		_config_ccp2
  2317 ;; This function is called by:
  2318 ;;		_EstacionaminetoM1
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text8
  2323  0035B6                     __ptext8:
  2324                           	opt stack 0
  2325  0035B6                     _carroGirar:
  2326                           	opt stack 14
  2327                           
  2328                           ;incstack = 0
  2329                           ;carroGirar@direccion stored from wreg
  2330  0035B6  0101               	movlb	1	; () banked
  2331  0035B8  6FAC               	movwf	carroGirar@direccion& (0+255),b
  2332                           
  2333                           ;carroMain.c: 155: if(direccion==1){
  2334  0035BA  0101               	movlb	1	; () banked
  2335  0035BC  05AC               	decf	carroGirar@direccion& (0+255),w,b
  2336  0035BE  A4D8               	btfss	status,2,c
  2337  0035C0  D004               	goto	l84
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;carroMain.c: 156: LATAbits.LA4=1;
  2341  0035C2  8889               	bsf	3977,4,c	;volatile
  2342                           
  2343                           ;carroMain.c: 157: LATAbits.LA1=0;
  2344  0035C4  9289               	bcf	3977,1,c	;volatile
  2345                           
  2346                           ;carroMain.c: 158: LATEbits.LE1 =0;
  2347  0035C6  928D               	bcf	3981,1,c	;volatile
  2348  0035C8  D017               	goto	L3
  2349  0035CA                     l84:
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;carroMain.c: 161: else if(direccion==2){
  2353                           
  2354                           ; BSR set to: 1
  2355  0035CA  0E02               	movlw	2
  2356  0035CC  19AC               	xorwf	carroGirar@direccion& (0+255),w,b
  2357  0035CE  A4D8               	btfss	status,2,c
  2358  0035D0  D005               	goto	l86
  2359                           
  2360                           ; BSR set to: 1
  2361                           ;carroMain.c: 162: LATAbits.LA4=1;
  2362  0035D2  8889               	bsf	3977,4,c	;volatile
  2363                           
  2364                           ;carroMain.c: 163: LATAbits.LA1=0;
  2365  0035D4  9289               	bcf	3977,1,c	;volatile
  2366                           
  2367                           ;carroMain.c: 164: LATEbits.LE1 =0;
  2368  0035D6  928D               	bcf	3981,1,c	;volatile
  2369                           
  2370                           ;carroMain.c: 165: LATEbits.LE0=1;
  2371  0035D8  808D               	bsf	3981,0,c	;volatile
  2372                           
  2373                           ;carroMain.c: 166: }
  2374  0035DA  D00F               	goto	l90
  2375  0035DC                     l86:
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;carroMain.c: 167: else if(direccion==3){
  2379                           
  2380                           ; BSR set to: 1
  2381  0035DC  0E03               	movlw	3
  2382  0035DE  19AC               	xorwf	carroGirar@direccion& (0+255),w,b
  2383  0035E0  A4D8               	btfss	status,2,c
  2384  0035E2  D003               	goto	l88
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;carroMain.c: 168: LATAbits.LA4=0;
  2388  0035E4  9889               	bcf	3977,4,c	;volatile
  2389                           
  2390                           ;carroMain.c: 169: LATAbits.LA1=0;
  2391  0035E6  9289               	bcf	3977,1,c	;volatile
  2392  0035E8  D006               	goto	L2
  2393  0035EA                     l88:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;carroMain.c: 173: else if(direccion==4){
  2397                           
  2398                           ; BSR set to: 1
  2399  0035EA  0E04               	movlw	4
  2400  0035EC  19AC               	xorwf	carroGirar@direccion& (0+255),w,b
  2401  0035EE  A4D8               	btfss	status,2,c
  2402  0035F0  D004               	goto	l90
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;carroMain.c: 174: LATAbits.LA4=0;
  2406  0035F2  9889               	bcf	3977,4,c	;volatile
  2407                           
  2408                           ;carroMain.c: 175: LATAbits.LA1=1;
  2409  0035F4  8289               	bsf	3977,1,c	;volatile
  2410  0035F6                     L2:
  2411                           
  2412                           ;carroMain.c: 176: LATEbits.LE1 =1;
  2413  0035F6  828D               	bsf	3981,1,c	;volatile
  2414  0035F8                     L3:
  2415                           
  2416                           ;carroMain.c: 177: LATEbits.LE0=0;
  2417  0035F8  908D               	bcf	3981,0,c	;volatile
  2418  0035FA                     l90:
  2419                           
  2420                           ; BSR set to: 1
  2421                           ;carroMain.c: 178: }
  2422                           ;carroMain.c: 179: config_ccp1(100);
  2423                           
  2424                           ; BSR set to: 1
  2425                           
  2426                           ; BSR set to: 1
  2427                           
  2428                           ; BSR set to: 1
  2429                           
  2430                           ; BSR set to: 1
  2431  0035FA  0E00               	movlw	0
  2432  0035FC  6F72               	movwf	(config_ccp1@duty1+1)& (0+255),b
  2433  0035FE  0E64               	movlw	100
  2434  003600  6F71               	movwf	config_ccp1@duty1& (0+255),b
  2435  003602  EC89  F005         	call	_config_ccp1	;wreg free
  2436                           
  2437                           ;carroMain.c: 180: config_ccp2(100);
  2438  003606  0E00               	movlw	0
  2439  003608  0101               	movlb	1	; () banked
  2440  00360A  6F72               	movwf	(config_ccp2@duty2+1)& (0+255),b
  2441  00360C  0E64               	movlw	100
  2442  00360E  6F71               	movwf	config_ccp2@duty2& (0+255),b
  2443  003610  EC1E  F004         	call	_config_ccp2	;wreg free
  2444  003614  0012               	return		;funcret
  2445  003616                     __end_of_carroGirar:
  2446                           	opt stack 0
  2447                           tblptru	equ	0xFF8
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _carroAvanzarEspecial *****************
  2454 ;; Defined at:
  2455 ;;		line 121 in file "carroMain.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2473 ;;Total ram usage:        0 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:   15
  2476 ;; This function calls:
  2477 ;;		_config_ccp1
  2478 ;;		_config_ccp2
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;;		_EstacionaminetoM1
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text9
  2486  003898                     __ptext9:
  2487                           	opt stack 0
  2488  003898                     _carroAvanzarEspecial:
  2489                           	opt stack 15
  2490                           
  2491                           ;carroMain.c: 123: LATEbits.LE1=1;
  2492                           
  2493                           ;incstack = 0
  2494  003898  828D               	bsf	3981,1,c	;volatile
  2495                           
  2496                           ;carroMain.c: 124: LATEbits.LE0=0;
  2497  00389A  908D               	bcf	3981,0,c	;volatile
  2498                           
  2499                           ;carroMain.c: 125: LATAbits.LA4=1;
  2500  00389C  8889               	bsf	3977,4,c	;volatile
  2501                           
  2502                           ;carroMain.c: 126: LATAbits.LA1=0;
  2503  00389E  9289               	bcf	3977,1,c	;volatile
  2504                           
  2505                           ;carroMain.c: 127: config_ccp1(80);
  2506  0038A0  0E00               	movlw	0
  2507  0038A2  0101               	movlb	1	; () banked
  2508  0038A4  6F72               	movwf	(config_ccp1@duty1+1)& (0+255),b
  2509  0038A6  0E50               	movlw	80
  2510  0038A8  6F71               	movwf	config_ccp1@duty1& (0+255),b
  2511  0038AA  EC89  F005         	call	_config_ccp1	;wreg free
  2512                           
  2513                           ;carroMain.c: 128: config_ccp2(80);
  2514  0038AE  0E00               	movlw	0
  2515  0038B0  0101               	movlb	1	; () banked
  2516  0038B2  6F72               	movwf	(config_ccp2@duty2+1)& (0+255),b
  2517  0038B4  0E50               	movlw	80
  2518  0038B6  6F71               	movwf	config_ccp2@duty2& (0+255),b
  2519  0038B8  EC1E  F004         	call	_config_ccp2	;wreg free
  2520  0038BC  0012               	return		;funcret
  2521  0038BE                     __end_of_carroAvanzarEspecial:
  2522                           	opt stack 0
  2523                           tblptru	equ	0xFF8
  2524                           intcon	equ	0xFF2
  2525                           postinc0	equ	0xFEE
  2526                           wreg	equ	0xFE8
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _config_ccp2 *****************
  2530 ;; Defined at:
  2531 ;;		line 85 in file "Pwm.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  duty2           2  113[BANK1 ] int 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  a              30  117[BANK1 ] int [15]
  2536 ;;  j               2  170[BANK1 ] int 
  2537 ;;  n               2  168[BANK1 ] int 
  2538 ;;  y               2  166[BANK1 ] unsigned int 
  2539 ;;  w               2  164[BANK1 ] unsigned int 
  2540 ;;  x               2  162[BANK1 ] int 
  2541 ;;  z               2  154[BANK1 ] int 
  2542 ;;  i               2  152[BANK1 ] int 
  2543 ;;  valreg          2  150[BANK1 ] int 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         0       0       2       0       0       0       0       0       0
  2554 ;;      Locals:         0       0      55       0       0       0       0       0       0
  2555 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2556 ;;      Totals:         0       0      59       0       0       0       0       0       0
  2557 ;;Total ram usage:       59 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:   14
  2560 ;; This function calls:
  2561 ;;		___awdiv
  2562 ;;		___awtoft
  2563 ;;		___ftadd
  2564 ;;		___ftdiv
  2565 ;;		___ftmul
  2566 ;;		___fttol
  2567 ;;		_pow
  2568 ;; This function is called by:
  2569 ;;		_carroAvanzarEspecial
  2570 ;;		_carroGirar
  2571 ;;		_carroMatar
  2572 ;;		_carroAvanzar
  2573 ;;		_carroAtras
  2574 ;;		_carroGirarEspecial
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text10
  2579  00083C                     __ptext10:
  2580                           	opt stack 0
  2581  00083C                     _config_ccp2:
  2582                           	opt stack 15
  2583                           
  2584                           ;Pwm.c: 87: int valreg;
  2585                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  2586                           
  2587                           ;incstack = 0
  2588  00083C  C171  F108         	movff	config_ccp2@duty2,___awtoft@c
  2589  000840  C172  F109         	movff	config_ccp2@duty2+1,___awtoft@c+1
  2590  000844  ECD8  F01B         	call	___awtoft	;wreg free
  2591  000848  C108  F10F         	movff	?___awtoft,___ftmul@f2
  2592  00084C  C109  F110         	movff	?___awtoft+1,___ftmul@f2+1
  2593  000850  C10A  F111         	movff	?___awtoft+2,___ftmul@f2+2
  2594  000854  0E00               	movlw	0
  2595  000856  0101               	movlb	1	; () banked
  2596  000858  6F2D               	movwf	___ftadd@f2& (0+255),b
  2597  00085A  0E80               	movlw	128
  2598  00085C  6F2E               	movwf	(___ftadd@f2+1)& (0+255),b
  2599  00085E  0E3F               	movlw	63
  2600  000860  6F2F               	movwf	(___ftadd@f2+2)& (0+255),b
  2601  000862  C1E9  F12A         	movff	_pr2g,___ftadd@f1
  2602  000866  C1EA  F12B         	movff	_pr2g+1,___ftadd@f1+1
  2603  00086A  C1EB  F12C         	movff	_pr2g+2,___ftadd@f1+2
  2604  00086E  ECB4  F00B         	call	___ftadd	;wreg free
  2605  000872  C12A  F10C         	movff	?___ftadd,___ftmul@f1
  2606  000876  C12B  F10D         	movff	?___ftadd+1,___ftmul@f1+1
  2607  00087A  C12C  F10E         	movff	?___ftadd+2,___ftmul@f1+2
  2608  00087E  EC7A  F010         	call	___ftmul	;wreg free
  2609  000882  C10C  F193         	movff	?___ftmul,_config_ccp2$1660
  2610  000886  C10D  F194         	movff	?___ftmul+1,_config_ccp2$1660+1
  2611  00088A  C10E  F195         	movff	?___ftmul+2,_config_ccp2$1660+2
  2612                           
  2613                           ;Pwm.c: 87: int valreg;
  2614                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  2615  00088E  0E00               	movlw	0
  2616  000890  0101               	movlb	1	; () banked
  2617  000892  6F1E               	movwf	___ftdiv@f2& (0+255),b
  2618  000894  0EC8               	movlw	200
  2619  000896  6F1F               	movwf	(___ftdiv@f2+1)& (0+255),b
  2620  000898  0E42               	movlw	66
  2621  00089A  6F20               	movwf	(___ftdiv@f2+2)& (0+255),b
  2622  00089C  0E00               	movlw	0
  2623  00089E  6F0F               	movwf	___ftmul@f2& (0+255),b
  2624  0008A0  0E80               	movlw	128
  2625  0008A2  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  2626  0008A4  0E40               	movlw	64
  2627  0008A6  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  2628  0008A8  C193  F10C         	movff	_config_ccp2$1660,___ftmul@f1
  2629  0008AC  C194  F10D         	movff	_config_ccp2$1660+1,___ftmul@f1+1
  2630  0008B0  C195  F10E         	movff	_config_ccp2$1660+2,___ftmul@f1+2
  2631  0008B4  EC7A  F010         	call	___ftmul	;wreg free
  2632  0008B8  C10C  F11B         	movff	?___ftmul,___ftdiv@f1
  2633  0008BC  C10D  F11C         	movff	?___ftmul+1,___ftdiv@f1+1
  2634  0008C0  C10E  F11D         	movff	?___ftmul+2,___ftdiv@f1+2
  2635  0008C4  ECE9  F011         	call	___ftdiv	;wreg free
  2636  0008C8  C11B  F136         	movff	?___ftdiv,___fttol@f1
  2637  0008CC  C11C  F137         	movff	?___ftdiv+1,___fttol@f1+1
  2638  0008D0  C11D  F138         	movff	?___ftdiv+2,___fttol@f1+2
  2639  0008D4  ECFE  F00F         	call	___fttol	;wreg free
  2640  0008D8  C136  F196         	movff	?___fttol,config_ccp2@valreg
  2641  0008DC  C137  F197         	movff	?___fttol+1,config_ccp2@valreg+1
  2642                           
  2643                           ;Pwm.c: 92: int n,x,i,j,z;
  2644                           ;Pwm.c: 93: unsigned int w,y;
  2645                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  2646  0008E0  EE21  F0AD         	lfsr	2,config_ccp2@F3978
  2647  0008E4  EE11  F075         	lfsr	1,config_ccp2@a
  2648  0008E8  0E1D               	movlw	29
  2649  0008EA                     u4191:
  2650  0008EA  CFDB FFE3          	movff	plusw2,plusw1
  2651  0008EE  06E8               	decf	wreg,f,c
  2652  0008F0  E2FC               	bc	u4191
  2653                           
  2654                           ;Pwm.c: 96: n = valreg;
  2655  0008F2  C196  F1A8         	movff	config_ccp2@valreg,config_ccp2@n
  2656  0008F6  C197  F1A9         	movff	config_ccp2@valreg+1,config_ccp2@n+1
  2657                           
  2658                           ;Pwm.c: 97: i = 0;
  2659  0008FA  0E00               	movlw	0
  2660  0008FC  0101               	movlb	1	; () banked
  2661  0008FE  6F99               	movwf	(config_ccp2@i+1)& (0+255),b
  2662  000900  0E00               	movlw	0
  2663  000902  6F98               	movwf	config_ccp2@i& (0+255),b
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;Pwm.c: 98: z = 0;
  2667  000904  0E00               	movlw	0
  2668  000906  6F9B               	movwf	(config_ccp2@z+1)& (0+255),b
  2669  000908  0E00               	movlw	0
  2670  00090A  6F9A               	movwf	config_ccp2@z& (0+255),b
  2671                           
  2672                           ; BSR set to: 1
  2673                           ;Pwm.c: 99: y = 0;
  2674  00090C  0E00               	movlw	0
  2675  00090E  6FA7               	movwf	(config_ccp2@y+1)& (0+255),b
  2676  000910  0E00               	movlw	0
  2677  000912  6FA6               	movwf	config_ccp2@y& (0+255),b
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;Pwm.c: 100: w = 0;
  2681  000914  0E00               	movlw	0
  2682  000916  6FA5               	movwf	(config_ccp2@w+1)& (0+255),b
  2683  000918  0E00               	movlw	0
  2684  00091A  6FA4               	movwf	config_ccp2@w& (0+255),b
  2685                           
  2686                           ;Pwm.c: 102: while(n > 0)
  2687  00091C  D024               	goto	l199
  2688  00091E                     l3839:
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;Pwm.c: 103: {
  2692                           ;Pwm.c: 104: a[i] = n % 2;
  2693  00091E  0E01               	movlw	1
  2694  000920  15A8               	andwf	config_ccp2@n& (0+255),w,b
  2695  000922  6F73               	movwf	??_config_ccp2& (0+255),b
  2696  000924  0E00               	movlw	0
  2697  000926  15A9               	andwf	(config_ccp2@n+1)& (0+255),w,b
  2698  000928  6F74               	movwf	(??_config_ccp2+1)& (0+255),b
  2699  00092A  90D8               	bcf	status,0,c
  2700  00092C  3598               	rlcf	config_ccp2@i& (0+255),w,b
  2701  00092E  6ED9               	movwf	fsr2l,c
  2702  000930  3599               	rlcf	(config_ccp2@i+1)& (0+255),w,b
  2703  000932  6EDA               	movwf	fsr2h,c
  2704  000934  0E75               	movlw	low config_ccp2@a
  2705  000936  26D9               	addwf	fsr2l,f,c
  2706  000938  0E01               	movlw	high config_ccp2@a
  2707  00093A  22DA               	addwfc	fsr2h,f,c
  2708  00093C  C173  FFDE         	movff	??_config_ccp2,postinc2
  2709  000940  C174  FFDD         	movff	??_config_ccp2+1,postdec2
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;Pwm.c: 105: n = n / 2;
  2713  000944  C1A8  F100         	movff	config_ccp2@n,___awdiv@dividend
  2714  000948  C1A9  F101         	movff	config_ccp2@n+1,___awdiv@dividend+1
  2715  00094C  0E00               	movlw	0
  2716  00094E  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  2717  000950  0E02               	movlw	2
  2718  000952  6F02               	movwf	___awdiv@divisor& (0+255),b
  2719  000954  EC35  F019         	call	___awdiv	;wreg free
  2720  000958  C100  F1A8         	movff	?___awdiv,config_ccp2@n
  2721  00095C  C101  F1A9         	movff	?___awdiv+1,config_ccp2@n+1
  2722                           
  2723                           ;Pwm.c: 106: i++;
  2724  000960  0101               	movlb	1	; () banked
  2725  000962  4B98               	infsnz	config_ccp2@i& (0+255),f,b
  2726  000964  2B99               	incf	(config_ccp2@i+1)& (0+255),f,b
  2727  000966                     l199:
  2728                           
  2729                           ; BSR set to: 1
  2730                           
  2731                           ; BSR set to: 1
  2732  000966  BFA9               	btfsc	(config_ccp2@n+1)& (0+255),7,b
  2733  000968  D005               	goto	u4200
  2734  00096A  51A9               	movf	(config_ccp2@n+1)& (0+255),w,b
  2735  00096C  E1D8               	bnz	l3839
  2736  00096E  05A8               	decf	config_ccp2@n& (0+255),w,b
  2737  000970  B0D8               	btfsc	status,0,c
  2738  000972  D7D5               	goto	l200
  2739  000974                     u4200:
  2740                           
  2741                           ; BSR set to: 1
  2742                           ;Pwm.c: 107: }
  2743                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  2744                           
  2745                           ; BSR set to: 1
  2746  000974  0E00               	movlw	0
  2747  000976  6FAB               	movwf	(config_ccp2@j+1)& (0+255),b
  2748  000978  0E00               	movlw	0
  2749  00097A  6FAA               	movwf	config_ccp2@j& (0+255),b
  2750  00097C                     l3849:
  2751                           
  2752                           ; BSR set to: 1
  2753  00097C  BFAB               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2754  00097E  D006               	goto	l202
  2755  000980  51AB               	movf	(config_ccp2@j+1)& (0+255),w,b
  2756  000982  E159               	bnz	l3865
  2757  000984  0E02               	movlw	2
  2758  000986  5DAA               	subwf	config_ccp2@j& (0+255),w,b
  2759  000988  B0D8               	btfsc	status,0,c
  2760  00098A  D055               	goto	u4220
  2761  00098C                     l202:
  2762                           
  2763                           ; BSR set to: 1
  2764                           ;Pwm.c: 110: {
  2765                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2766                           
  2767                           ; BSR set to: 1
  2768  00098C  C1AA  F108         	movff	config_ccp2@j,___awtoft@c
  2769  000990  C1AB  F109         	movff	config_ccp2@j+1,___awtoft@c+1
  2770  000994  ECD8  F01B         	call	___awtoft	;wreg free
  2771  000998  C108  F19C         	movff	?___awtoft,_config_ccp2$1661
  2772  00099C  C109  F19D         	movff	?___awtoft+1,_config_ccp2$1661+1
  2773  0009A0  C10A  F19E         	movff	?___awtoft+2,_config_ccp2$1661+2
  2774                           
  2775                           ;Pwm.c: 110: {
  2776                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2777  0009A4  C19C  F163         	movff	_config_ccp2$1661,pow@y
  2778  0009A8  C19D  F164         	movff	_config_ccp2$1661+1,pow@y+1
  2779  0009AC  C19E  F165         	movff	_config_ccp2$1661+2,pow@y+2
  2780  0009B0  0E00               	movlw	0
  2781  0009B2  0101               	movlb	1	; () banked
  2782  0009B4  6F60               	movwf	pow@x& (0+255),b
  2783  0009B6  0E00               	movlw	0
  2784  0009B8  6F61               	movwf	(pow@x+1)& (0+255),b
  2785  0009BA  0E40               	movlw	64
  2786  0009BC  6F62               	movwf	(pow@x+2)& (0+255),b
  2787  0009BE  EC21  F00E         	call	_pow	;wreg free
  2788  0009C2  C160  F19F         	movff	?_pow,_config_ccp2$1662
  2789  0009C6  C161  F1A0         	movff	?_pow+1,_config_ccp2$1662+1
  2790  0009CA  C162  F1A1         	movff	?_pow+2,_config_ccp2$1662+2
  2791                           
  2792                           ;Pwm.c: 110: {
  2793                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  2794  0009CE  C19F  F10F         	movff	_config_ccp2$1662,___ftmul@f2
  2795  0009D2  C1A0  F110         	movff	_config_ccp2$1662+1,___ftmul@f2+1
  2796  0009D6  C1A1  F111         	movff	_config_ccp2$1662+2,___ftmul@f2+2
  2797  0009DA  90D8               	bcf	status,0,c
  2798  0009DC  0101               	movlb	1	; () banked
  2799  0009DE  35AA               	rlcf	config_ccp2@j& (0+255),w,b
  2800  0009E0  6ED9               	movwf	fsr2l,c
  2801  0009E2  35AB               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2802  0009E4  6EDA               	movwf	fsr2h,c
  2803  0009E6  0E75               	movlw	low config_ccp2@a
  2804  0009E8  26D9               	addwf	fsr2l,f,c
  2805  0009EA  0E01               	movlw	high config_ccp2@a
  2806  0009EC  22DA               	addwfc	fsr2h,f,c
  2807  0009EE  CFDE F108          	movff	postinc2,___awtoft@c
  2808  0009F2  CFDD F109          	movff	postdec2,___awtoft@c+1
  2809  0009F6  ECD8  F01B         	call	___awtoft	;wreg free
  2810  0009FA  C108  F10C         	movff	?___awtoft,___ftmul@f1
  2811  0009FE  C109  F10D         	movff	?___awtoft+1,___ftmul@f1+1
  2812  000A02  C10A  F10E         	movff	?___awtoft+2,___ftmul@f1+2
  2813  000A06  EC7A  F010         	call	___ftmul	;wreg free
  2814  000A0A  C10C  F136         	movff	?___ftmul,___fttol@f1
  2815  000A0E  C10D  F137         	movff	?___ftmul+1,___fttol@f1+1
  2816  000A12  C10E  F138         	movff	?___ftmul+2,___fttol@f1+2
  2817  000A16  ECFE  F00F         	call	___fttol	;wreg free
  2818  000A1A  C136  F1A2         	movff	?___fttol,config_ccp2@x
  2819  000A1E  C137  F1A3         	movff	?___fttol+1,config_ccp2@x+1
  2820                           
  2821                           ;Pwm.c: 112: y = x + y;
  2822  000A22  0101               	movlb	1	; () banked
  2823  000A24  51A6               	movf	config_ccp2@y& (0+255),w,b
  2824  000A26  25A2               	addwf	config_ccp2@x& (0+255),w,b
  2825  000A28  6FA6               	movwf	config_ccp2@y& (0+255),b
  2826  000A2A  51A7               	movf	(config_ccp2@y+1)& (0+255),w,b
  2827  000A2C  21A3               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2828  000A2E  6FA7               	movwf	(config_ccp2@y+1)& (0+255),b
  2829                           
  2830                           ; BSR set to: 1
  2831  000A30  4BAA               	infsnz	config_ccp2@j& (0+255),f,b
  2832  000A32  2BAB               	incf	(config_ccp2@j+1)& (0+255),f,b
  2833  000A34  D7A3               	goto	l3849
  2834  000A36                     u4220:
  2835  000A36                     l3865:
  2836                           
  2837                           ; BSR set to: 1
  2838                           ;Pwm.c: 113: }
  2839                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  2840  000A36  0E00               	movlw	0
  2841  000A38  6FAB               	movwf	(config_ccp2@j+1)& (0+255),b
  2842  000A3A  0E02               	movlw	2
  2843  000A3C  6FAA               	movwf	config_ccp2@j& (0+255),b
  2844  000A3E                     l3867:
  2845                           
  2846                           ; BSR set to: 1
  2847  000A3E  BFAB               	btfsc	(config_ccp2@j+1)& (0+255),7,b
  2848  000A40  D006               	goto	l204
  2849  000A42  51AB               	movf	(config_ccp2@j+1)& (0+255),w,b
  2850  000A44  E15B               	bnz	l3885
  2851  000A46  0E0A               	movlw	10
  2852  000A48  5DAA               	subwf	config_ccp2@j& (0+255),w,b
  2853  000A4A  B0D8               	btfsc	status,0,c
  2854  000A4C  D057               	goto	u4240
  2855  000A4E                     l204:
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;Pwm.c: 115: {
  2859                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2860                           
  2861                           ; BSR set to: 1
  2862  000A4E  C19A  F108         	movff	config_ccp2@z,___awtoft@c
  2863  000A52  C19B  F109         	movff	config_ccp2@z+1,___awtoft@c+1
  2864  000A56  ECD8  F01B         	call	___awtoft	;wreg free
  2865  000A5A  C108  F19C         	movff	?___awtoft,_config_ccp2$1661
  2866  000A5E  C109  F19D         	movff	?___awtoft+1,_config_ccp2$1661+1
  2867  000A62  C10A  F19E         	movff	?___awtoft+2,_config_ccp2$1661+2
  2868                           
  2869                           ;Pwm.c: 115: {
  2870                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2871  000A66  C19C  F163         	movff	_config_ccp2$1661,pow@y
  2872  000A6A  C19D  F164         	movff	_config_ccp2$1661+1,pow@y+1
  2873  000A6E  C19E  F165         	movff	_config_ccp2$1661+2,pow@y+2
  2874  000A72  0E00               	movlw	0
  2875  000A74  0101               	movlb	1	; () banked
  2876  000A76  6F60               	movwf	pow@x& (0+255),b
  2877  000A78  0E00               	movlw	0
  2878  000A7A  6F61               	movwf	(pow@x+1)& (0+255),b
  2879  000A7C  0E40               	movlw	64
  2880  000A7E  6F62               	movwf	(pow@x+2)& (0+255),b
  2881  000A80  EC21  F00E         	call	_pow	;wreg free
  2882  000A84  C160  F19F         	movff	?_pow,_config_ccp2$1662
  2883  000A88  C161  F1A0         	movff	?_pow+1,_config_ccp2$1662+1
  2884  000A8C  C162  F1A1         	movff	?_pow+2,_config_ccp2$1662+2
  2885                           
  2886                           ;Pwm.c: 115: {
  2887                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  2888  000A90  C19F  F10F         	movff	_config_ccp2$1662,___ftmul@f2
  2889  000A94  C1A0  F110         	movff	_config_ccp2$1662+1,___ftmul@f2+1
  2890  000A98  C1A1  F111         	movff	_config_ccp2$1662+2,___ftmul@f2+2
  2891  000A9C  90D8               	bcf	status,0,c
  2892  000A9E  0101               	movlb	1	; () banked
  2893  000AA0  35AA               	rlcf	config_ccp2@j& (0+255),w,b
  2894  000AA2  6ED9               	movwf	fsr2l,c
  2895  000AA4  35AB               	rlcf	(config_ccp2@j+1)& (0+255),w,b
  2896  000AA6  6EDA               	movwf	fsr2h,c
  2897  000AA8  0E75               	movlw	low config_ccp2@a
  2898  000AAA  26D9               	addwf	fsr2l,f,c
  2899  000AAC  0E01               	movlw	high config_ccp2@a
  2900  000AAE  22DA               	addwfc	fsr2h,f,c
  2901  000AB0  CFDE F108          	movff	postinc2,___awtoft@c
  2902  000AB4  CFDD F109          	movff	postdec2,___awtoft@c+1
  2903  000AB8  ECD8  F01B         	call	___awtoft	;wreg free
  2904  000ABC  C108  F10C         	movff	?___awtoft,___ftmul@f1
  2905  000AC0  C109  F10D         	movff	?___awtoft+1,___ftmul@f1+1
  2906  000AC4  C10A  F10E         	movff	?___awtoft+2,___ftmul@f1+2
  2907  000AC8  EC7A  F010         	call	___ftmul	;wreg free
  2908  000ACC  C10C  F136         	movff	?___ftmul,___fttol@f1
  2909  000AD0  C10D  F137         	movff	?___ftmul+1,___fttol@f1+1
  2910  000AD4  C10E  F138         	movff	?___ftmul+2,___fttol@f1+2
  2911  000AD8  ECFE  F00F         	call	___fttol	;wreg free
  2912  000ADC  C136  F1A2         	movff	?___fttol,config_ccp2@x
  2913  000AE0  C137  F1A3         	movff	?___fttol+1,config_ccp2@x+1
  2914                           
  2915                           ;Pwm.c: 117: w = x + w;
  2916  000AE4  0101               	movlb	1	; () banked
  2917  000AE6  51A4               	movf	config_ccp2@w& (0+255),w,b
  2918  000AE8  25A2               	addwf	config_ccp2@x& (0+255),w,b
  2919  000AEA  6FA4               	movwf	config_ccp2@w& (0+255),b
  2920  000AEC  51A5               	movf	(config_ccp2@w+1)& (0+255),w,b
  2921  000AEE  21A3               	addwfc	(config_ccp2@x+1)& (0+255),w,b
  2922  000AF0  6FA5               	movwf	(config_ccp2@w+1)& (0+255),b
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;Pwm.c: 118: z++;
  2926  000AF2  4B9A               	infsnz	config_ccp2@z& (0+255),f,b
  2927  000AF4  2B9B               	incf	(config_ccp2@z+1)& (0+255),f,b
  2928                           
  2929                           ; BSR set to: 1
  2930  000AF6  4BAA               	infsnz	config_ccp2@j& (0+255),f,b
  2931  000AF8  2BAB               	incf	(config_ccp2@j+1)& (0+255),f,b
  2932  000AFA  D7A1               	goto	l3867
  2933  000AFC                     u4240:
  2934  000AFC                     l3885:
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;Pwm.c: 119: }
  2938                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  2939  000AFC  C1A6  F173         	movff	config_ccp2@y,??_config_ccp2
  2940  000B00  3B73               	swapf	??_config_ccp2& (0+255),f,b
  2941  000B02  50BA               	movf	4026,w,c	;volatile
  2942  000B04  1973               	xorwf	??_config_ccp2& (0+255),w,b
  2943  000B06  0BCF               	andlw	-49
  2944  000B08  1973               	xorwf	??_config_ccp2& (0+255),w,b
  2945  000B0A  6EBA               	movwf	4026,c	;volatile
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;Pwm.c: 122: CCPR2L = w;
  2949  000B0C  C1A4  FFBB         	movff	config_ccp2@w,4027	;volatile
  2950                           
  2951                           ; BSR set to: 1
  2952  000B10  0012               	return		;funcret
  2953  000B12                     __end_of_config_ccp2:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           plusw1	equ	0xFE3
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           plusw2	equ	0xFDB
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _config_ccp1 *****************
  2968 ;; Defined at:
  2969 ;;		line 43 in file "Pwm.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  duty1           2  113[BANK1 ] int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  a              30  117[BANK1 ] int [15]
  2974 ;;  j               2  170[BANK1 ] int 
  2975 ;;  n               2  168[BANK1 ] int 
  2976 ;;  y               2  166[BANK1 ] unsigned int 
  2977 ;;  w               2  164[BANK1 ] unsigned int 
  2978 ;;  x               2  162[BANK1 ] int 
  2979 ;;  z               2  154[BANK1 ] int 
  2980 ;;  i               2  152[BANK1 ] int 
  2981 ;;  valreg          2  150[BANK1 ] int 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         0       0       2       0       0       0       0       0       0
  2992 ;;      Locals:         0       0      55       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2994 ;;      Totals:         0       0      59       0       0       0       0       0       0
  2995 ;;Total ram usage:       59 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:   14
  2998 ;; This function calls:
  2999 ;;		___awdiv
  3000 ;;		___awtoft
  3001 ;;		___ftadd
  3002 ;;		___ftdiv
  3003 ;;		___ftmul
  3004 ;;		___fttol
  3005 ;;		_pow
  3006 ;; This function is called by:
  3007 ;;		_carroAvanzarEspecial
  3008 ;;		_carroGirar
  3009 ;;		_carroMatar
  3010 ;;		_carroAvanzar
  3011 ;;		_carroAtras
  3012 ;;		_carroGirarEspecial
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text11
  3017  000B12                     __ptext11:
  3018                           	opt stack 0
  3019  000B12                     _config_ccp1:
  3020                           	opt stack 15
  3021                           
  3022                           ;Pwm.c: 45: int valreg;
  3023                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;incstack = 0
  3027  000B12  C171  F108         	movff	config_ccp1@duty1,___awtoft@c
  3028  000B16  C172  F109         	movff	config_ccp1@duty1+1,___awtoft@c+1
  3029  000B1A  ECD8  F01B         	call	___awtoft	;wreg free
  3030  000B1E  C108  F10F         	movff	?___awtoft,___ftmul@f2
  3031  000B22  C109  F110         	movff	?___awtoft+1,___ftmul@f2+1
  3032  000B26  C10A  F111         	movff	?___awtoft+2,___ftmul@f2+2
  3033  000B2A  0E00               	movlw	0
  3034  000B2C  0101               	movlb	1	; () banked
  3035  000B2E  6F2D               	movwf	___ftadd@f2& (0+255),b
  3036  000B30  0E80               	movlw	128
  3037  000B32  6F2E               	movwf	(___ftadd@f2+1)& (0+255),b
  3038  000B34  0E3F               	movlw	63
  3039  000B36  6F2F               	movwf	(___ftadd@f2+2)& (0+255),b
  3040  000B38  C1E9  F12A         	movff	_pr2g,___ftadd@f1
  3041  000B3C  C1EA  F12B         	movff	_pr2g+1,___ftadd@f1+1
  3042  000B40  C1EB  F12C         	movff	_pr2g+2,___ftadd@f1+2
  3043  000B44  ECB4  F00B         	call	___ftadd	;wreg free
  3044  000B48  C12A  F10C         	movff	?___ftadd,___ftmul@f1
  3045  000B4C  C12B  F10D         	movff	?___ftadd+1,___ftmul@f1+1
  3046  000B50  C12C  F10E         	movff	?___ftadd+2,___ftmul@f1+2
  3047  000B54  EC7A  F010         	call	___ftmul	;wreg free
  3048  000B58  C10C  F193         	movff	?___ftmul,_config_ccp1$1657
  3049  000B5C  C10D  F194         	movff	?___ftmul+1,_config_ccp1$1657+1
  3050  000B60  C10E  F195         	movff	?___ftmul+2,_config_ccp1$1657+2
  3051                           
  3052                           ;Pwm.c: 45: int valreg;
  3053                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  3054  000B64  0E00               	movlw	0
  3055  000B66  0101               	movlb	1	; () banked
  3056  000B68  6F1E               	movwf	___ftdiv@f2& (0+255),b
  3057  000B6A  0EC8               	movlw	200
  3058  000B6C  6F1F               	movwf	(___ftdiv@f2+1)& (0+255),b
  3059  000B6E  0E42               	movlw	66
  3060  000B70  6F20               	movwf	(___ftdiv@f2+2)& (0+255),b
  3061  000B72  0E00               	movlw	0
  3062  000B74  6F0F               	movwf	___ftmul@f2& (0+255),b
  3063  000B76  0E80               	movlw	128
  3064  000B78  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  3065  000B7A  0E40               	movlw	64
  3066  000B7C  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  3067  000B7E  C193  F10C         	movff	_config_ccp1$1657,___ftmul@f1
  3068  000B82  C194  F10D         	movff	_config_ccp1$1657+1,___ftmul@f1+1
  3069  000B86  C195  F10E         	movff	_config_ccp1$1657+2,___ftmul@f1+2
  3070  000B8A  EC7A  F010         	call	___ftmul	;wreg free
  3071  000B8E  C10C  F11B         	movff	?___ftmul,___ftdiv@f1
  3072  000B92  C10D  F11C         	movff	?___ftmul+1,___ftdiv@f1+1
  3073  000B96  C10E  F11D         	movff	?___ftmul+2,___ftdiv@f1+2
  3074  000B9A  ECE9  F011         	call	___ftdiv	;wreg free
  3075  000B9E  C11B  F136         	movff	?___ftdiv,___fttol@f1
  3076  000BA2  C11C  F137         	movff	?___ftdiv+1,___fttol@f1+1
  3077  000BA6  C11D  F138         	movff	?___ftdiv+2,___fttol@f1+2
  3078  000BAA  ECFE  F00F         	call	___fttol	;wreg free
  3079  000BAE  C136  F196         	movff	?___fttol,config_ccp1@valreg
  3080  000BB2  C137  F197         	movff	?___fttol+1,config_ccp1@valreg+1
  3081                           
  3082                           ;Pwm.c: 50: int n,x,i,j,z;
  3083                           ;Pwm.c: 51: unsigned int w,y;
  3084                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  3085  000BB6  EE21  F0CB         	lfsr	2,config_ccp1@F3967
  3086  000BBA  EE11  F075         	lfsr	1,config_ccp1@a
  3087  000BBE  0E1D               	movlw	29
  3088  000BC0                     u4131:
  3089  000BC0  CFDB FFE3          	movff	plusw2,plusw1
  3090  000BC4  06E8               	decf	wreg,f,c
  3091  000BC6  E2FC               	bc	u4131
  3092                           
  3093                           ;Pwm.c: 54: n = valreg;
  3094  000BC8  C196  F1A8         	movff	config_ccp1@valreg,config_ccp1@n
  3095  000BCC  C197  F1A9         	movff	config_ccp1@valreg+1,config_ccp1@n+1
  3096                           
  3097                           ;Pwm.c: 55: i = 0;
  3098  000BD0  0E00               	movlw	0
  3099  000BD2  0101               	movlb	1	; () banked
  3100  000BD4  6F99               	movwf	(config_ccp1@i+1)& (0+255),b
  3101  000BD6  0E00               	movlw	0
  3102  000BD8  6F98               	movwf	config_ccp1@i& (0+255),b
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;Pwm.c: 56: z = 0;
  3106  000BDA  0E00               	movlw	0
  3107  000BDC  6F9B               	movwf	(config_ccp1@z+1)& (0+255),b
  3108  000BDE  0E00               	movlw	0
  3109  000BE0  6F9A               	movwf	config_ccp1@z& (0+255),b
  3110                           
  3111                           ; BSR set to: 1
  3112                           ;Pwm.c: 57: y = 0;
  3113  000BE2  0E00               	movlw	0
  3114  000BE4  6FA7               	movwf	(config_ccp1@y+1)& (0+255),b
  3115  000BE6  0E00               	movlw	0
  3116  000BE8  6FA6               	movwf	config_ccp1@y& (0+255),b
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;Pwm.c: 58: w = 0;
  3120  000BEA  0E00               	movlw	0
  3121  000BEC  6FA5               	movwf	(config_ccp1@w+1)& (0+255),b
  3122  000BEE  0E00               	movlw	0
  3123  000BF0  6FA4               	movwf	config_ccp1@w& (0+255),b
  3124                           
  3125                           ;Pwm.c: 60: while(n > 0)
  3126  000BF2  D024               	goto	l187
  3127  000BF4                     l3775:
  3128                           
  3129                           ; BSR set to: 1
  3130                           ;Pwm.c: 61: {
  3131                           ;Pwm.c: 62: a[i] = n % 2;
  3132  000BF4  0E01               	movlw	1
  3133  000BF6  15A8               	andwf	config_ccp1@n& (0+255),w,b
  3134  000BF8  6F73               	movwf	??_config_ccp1& (0+255),b
  3135  000BFA  0E00               	movlw	0
  3136  000BFC  15A9               	andwf	(config_ccp1@n+1)& (0+255),w,b
  3137  000BFE  6F74               	movwf	(??_config_ccp1+1)& (0+255),b
  3138  000C00  90D8               	bcf	status,0,c
  3139  000C02  3598               	rlcf	config_ccp1@i& (0+255),w,b
  3140  000C04  6ED9               	movwf	fsr2l,c
  3141  000C06  3599               	rlcf	(config_ccp1@i+1)& (0+255),w,b
  3142  000C08  6EDA               	movwf	fsr2h,c
  3143  000C0A  0E75               	movlw	low config_ccp1@a
  3144  000C0C  26D9               	addwf	fsr2l,f,c
  3145  000C0E  0E01               	movlw	high config_ccp1@a
  3146  000C10  22DA               	addwfc	fsr2h,f,c
  3147  000C12  C173  FFDE         	movff	??_config_ccp1,postinc2
  3148  000C16  C174  FFDD         	movff	??_config_ccp1+1,postdec2
  3149                           
  3150                           ; BSR set to: 1
  3151                           ;Pwm.c: 63: n = n / 2;
  3152  000C1A  C1A8  F100         	movff	config_ccp1@n,___awdiv@dividend
  3153  000C1E  C1A9  F101         	movff	config_ccp1@n+1,___awdiv@dividend+1
  3154  000C22  0E00               	movlw	0
  3155  000C24  6F03               	movwf	(___awdiv@divisor+1)& (0+255),b
  3156  000C26  0E02               	movlw	2
  3157  000C28  6F02               	movwf	___awdiv@divisor& (0+255),b
  3158  000C2A  EC35  F019         	call	___awdiv	;wreg free
  3159  000C2E  C100  F1A8         	movff	?___awdiv,config_ccp1@n
  3160  000C32  C101  F1A9         	movff	?___awdiv+1,config_ccp1@n+1
  3161                           
  3162                           ;Pwm.c: 64: i++;
  3163  000C36  0101               	movlb	1	; () banked
  3164  000C38  4B98               	infsnz	config_ccp1@i& (0+255),f,b
  3165  000C3A  2B99               	incf	(config_ccp1@i+1)& (0+255),f,b
  3166  000C3C                     l187:
  3167                           
  3168                           ; BSR set to: 1
  3169                           
  3170                           ; BSR set to: 1
  3171  000C3C  BFA9               	btfsc	(config_ccp1@n+1)& (0+255),7,b
  3172  000C3E  D005               	goto	u4140
  3173  000C40  51A9               	movf	(config_ccp1@n+1)& (0+255),w,b
  3174  000C42  E1D8               	bnz	l3775
  3175  000C44  05A8               	decf	config_ccp1@n& (0+255),w,b
  3176  000C46  B0D8               	btfsc	status,0,c
  3177  000C48  D7D5               	goto	l188
  3178  000C4A                     u4140:
  3179                           
  3180                           ; BSR set to: 1
  3181                           ;Pwm.c: 65: }
  3182                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  3183                           
  3184                           ; BSR set to: 1
  3185  000C4A  0E00               	movlw	0
  3186  000C4C  6FAB               	movwf	(config_ccp1@j+1)& (0+255),b
  3187  000C4E  0E00               	movlw	0
  3188  000C50  6FAA               	movwf	config_ccp1@j& (0+255),b
  3189  000C52                     l3785:
  3190                           
  3191                           ; BSR set to: 1
  3192  000C52  BFAB               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  3193  000C54  D006               	goto	l190
  3194  000C56  51AB               	movf	(config_ccp1@j+1)& (0+255),w,b
  3195  000C58  E159               	bnz	l3801
  3196  000C5A  0E02               	movlw	2
  3197  000C5C  5DAA               	subwf	config_ccp1@j& (0+255),w,b
  3198  000C5E  B0D8               	btfsc	status,0,c
  3199  000C60  D055               	goto	u4160
  3200  000C62                     l190:
  3201                           
  3202                           ; BSR set to: 1
  3203                           ;Pwm.c: 68: {
  3204                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  3205                           
  3206                           ; BSR set to: 1
  3207  000C62  C1AA  F108         	movff	config_ccp1@j,___awtoft@c
  3208  000C66  C1AB  F109         	movff	config_ccp1@j+1,___awtoft@c+1
  3209  000C6A  ECD8  F01B         	call	___awtoft	;wreg free
  3210  000C6E  C108  F19C         	movff	?___awtoft,_config_ccp1$1658
  3211  000C72  C109  F19D         	movff	?___awtoft+1,_config_ccp1$1658+1
  3212  000C76  C10A  F19E         	movff	?___awtoft+2,_config_ccp1$1658+2
  3213                           
  3214                           ;Pwm.c: 68: {
  3215                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  3216  000C7A  C19C  F163         	movff	_config_ccp1$1658,pow@y
  3217  000C7E  C19D  F164         	movff	_config_ccp1$1658+1,pow@y+1
  3218  000C82  C19E  F165         	movff	_config_ccp1$1658+2,pow@y+2
  3219  000C86  0E00               	movlw	0
  3220  000C88  0101               	movlb	1	; () banked
  3221  000C8A  6F60               	movwf	pow@x& (0+255),b
  3222  000C8C  0E00               	movlw	0
  3223  000C8E  6F61               	movwf	(pow@x+1)& (0+255),b
  3224  000C90  0E40               	movlw	64
  3225  000C92  6F62               	movwf	(pow@x+2)& (0+255),b
  3226  000C94  EC21  F00E         	call	_pow	;wreg free
  3227  000C98  C160  F19F         	movff	?_pow,_config_ccp1$1659
  3228  000C9C  C161  F1A0         	movff	?_pow+1,_config_ccp1$1659+1
  3229  000CA0  C162  F1A1         	movff	?_pow+2,_config_ccp1$1659+2
  3230                           
  3231                           ;Pwm.c: 68: {
  3232                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  3233  000CA4  C19F  F10F         	movff	_config_ccp1$1659,___ftmul@f2
  3234  000CA8  C1A0  F110         	movff	_config_ccp1$1659+1,___ftmul@f2+1
  3235  000CAC  C1A1  F111         	movff	_config_ccp1$1659+2,___ftmul@f2+2
  3236  000CB0  90D8               	bcf	status,0,c
  3237  000CB2  0101               	movlb	1	; () banked
  3238  000CB4  35AA               	rlcf	config_ccp1@j& (0+255),w,b
  3239  000CB6  6ED9               	movwf	fsr2l,c
  3240  000CB8  35AB               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  3241  000CBA  6EDA               	movwf	fsr2h,c
  3242  000CBC  0E75               	movlw	low config_ccp1@a
  3243  000CBE  26D9               	addwf	fsr2l,f,c
  3244  000CC0  0E01               	movlw	high config_ccp1@a
  3245  000CC2  22DA               	addwfc	fsr2h,f,c
  3246  000CC4  CFDE F108          	movff	postinc2,___awtoft@c
  3247  000CC8  CFDD F109          	movff	postdec2,___awtoft@c+1
  3248  000CCC  ECD8  F01B         	call	___awtoft	;wreg free
  3249  000CD0  C108  F10C         	movff	?___awtoft,___ftmul@f1
  3250  000CD4  C109  F10D         	movff	?___awtoft+1,___ftmul@f1+1
  3251  000CD8  C10A  F10E         	movff	?___awtoft+2,___ftmul@f1+2
  3252  000CDC  EC7A  F010         	call	___ftmul	;wreg free
  3253  000CE0  C10C  F136         	movff	?___ftmul,___fttol@f1
  3254  000CE4  C10D  F137         	movff	?___ftmul+1,___fttol@f1+1
  3255  000CE8  C10E  F138         	movff	?___ftmul+2,___fttol@f1+2
  3256  000CEC  ECFE  F00F         	call	___fttol	;wreg free
  3257  000CF0  C136  F1A2         	movff	?___fttol,config_ccp1@x
  3258  000CF4  C137  F1A3         	movff	?___fttol+1,config_ccp1@x+1
  3259                           
  3260                           ;Pwm.c: 70: y = x + y;
  3261  000CF8  0101               	movlb	1	; () banked
  3262  000CFA  51A6               	movf	config_ccp1@y& (0+255),w,b
  3263  000CFC  25A2               	addwf	config_ccp1@x& (0+255),w,b
  3264  000CFE  6FA6               	movwf	config_ccp1@y& (0+255),b
  3265  000D00  51A7               	movf	(config_ccp1@y+1)& (0+255),w,b
  3266  000D02  21A3               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  3267  000D04  6FA7               	movwf	(config_ccp1@y+1)& (0+255),b
  3268                           
  3269                           ; BSR set to: 1
  3270  000D06  4BAA               	infsnz	config_ccp1@j& (0+255),f,b
  3271  000D08  2BAB               	incf	(config_ccp1@j+1)& (0+255),f,b
  3272  000D0A  D7A3               	goto	l3785
  3273  000D0C                     u4160:
  3274  000D0C                     l3801:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;Pwm.c: 71: }
  3278                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  3279  000D0C  0E00               	movlw	0
  3280  000D0E  6FAB               	movwf	(config_ccp1@j+1)& (0+255),b
  3281  000D10  0E02               	movlw	2
  3282  000D12  6FAA               	movwf	config_ccp1@j& (0+255),b
  3283  000D14                     l3803:
  3284                           
  3285                           ; BSR set to: 1
  3286  000D14  BFAB               	btfsc	(config_ccp1@j+1)& (0+255),7,b
  3287  000D16  D006               	goto	l192
  3288  000D18  51AB               	movf	(config_ccp1@j+1)& (0+255),w,b
  3289  000D1A  E15B               	bnz	l3821
  3290  000D1C  0E0A               	movlw	10
  3291  000D1E  5DAA               	subwf	config_ccp1@j& (0+255),w,b
  3292  000D20  B0D8               	btfsc	status,0,c
  3293  000D22  D057               	goto	u4180
  3294  000D24                     l192:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;Pwm.c: 73: {
  3298                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  3299                           
  3300                           ; BSR set to: 1
  3301  000D24  C19A  F108         	movff	config_ccp1@z,___awtoft@c
  3302  000D28  C19B  F109         	movff	config_ccp1@z+1,___awtoft@c+1
  3303  000D2C  ECD8  F01B         	call	___awtoft	;wreg free
  3304  000D30  C108  F19C         	movff	?___awtoft,_config_ccp1$1658
  3305  000D34  C109  F19D         	movff	?___awtoft+1,_config_ccp1$1658+1
  3306  000D38  C10A  F19E         	movff	?___awtoft+2,_config_ccp1$1658+2
  3307                           
  3308                           ;Pwm.c: 73: {
  3309                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  3310  000D3C  C19C  F163         	movff	_config_ccp1$1658,pow@y
  3311  000D40  C19D  F164         	movff	_config_ccp1$1658+1,pow@y+1
  3312  000D44  C19E  F165         	movff	_config_ccp1$1658+2,pow@y+2
  3313  000D48  0E00               	movlw	0
  3314  000D4A  0101               	movlb	1	; () banked
  3315  000D4C  6F60               	movwf	pow@x& (0+255),b
  3316  000D4E  0E00               	movlw	0
  3317  000D50  6F61               	movwf	(pow@x+1)& (0+255),b
  3318  000D52  0E40               	movlw	64
  3319  000D54  6F62               	movwf	(pow@x+2)& (0+255),b
  3320  000D56  EC21  F00E         	call	_pow	;wreg free
  3321  000D5A  C160  F19F         	movff	?_pow,_config_ccp1$1659
  3322  000D5E  C161  F1A0         	movff	?_pow+1,_config_ccp1$1659+1
  3323  000D62  C162  F1A1         	movff	?_pow+2,_config_ccp1$1659+2
  3324                           
  3325                           ;Pwm.c: 73: {
  3326                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  3327  000D66  C19F  F10F         	movff	_config_ccp1$1659,___ftmul@f2
  3328  000D6A  C1A0  F110         	movff	_config_ccp1$1659+1,___ftmul@f2+1
  3329  000D6E  C1A1  F111         	movff	_config_ccp1$1659+2,___ftmul@f2+2
  3330  000D72  90D8               	bcf	status,0,c
  3331  000D74  0101               	movlb	1	; () banked
  3332  000D76  35AA               	rlcf	config_ccp1@j& (0+255),w,b
  3333  000D78  6ED9               	movwf	fsr2l,c
  3334  000D7A  35AB               	rlcf	(config_ccp1@j+1)& (0+255),w,b
  3335  000D7C  6EDA               	movwf	fsr2h,c
  3336  000D7E  0E75               	movlw	low config_ccp1@a
  3337  000D80  26D9               	addwf	fsr2l,f,c
  3338  000D82  0E01               	movlw	high config_ccp1@a
  3339  000D84  22DA               	addwfc	fsr2h,f,c
  3340  000D86  CFDE F108          	movff	postinc2,___awtoft@c
  3341  000D8A  CFDD F109          	movff	postdec2,___awtoft@c+1
  3342  000D8E  ECD8  F01B         	call	___awtoft	;wreg free
  3343  000D92  C108  F10C         	movff	?___awtoft,___ftmul@f1
  3344  000D96  C109  F10D         	movff	?___awtoft+1,___ftmul@f1+1
  3345  000D9A  C10A  F10E         	movff	?___awtoft+2,___ftmul@f1+2
  3346  000D9E  EC7A  F010         	call	___ftmul	;wreg free
  3347  000DA2  C10C  F136         	movff	?___ftmul,___fttol@f1
  3348  000DA6  C10D  F137         	movff	?___ftmul+1,___fttol@f1+1
  3349  000DAA  C10E  F138         	movff	?___ftmul+2,___fttol@f1+2
  3350  000DAE  ECFE  F00F         	call	___fttol	;wreg free
  3351  000DB2  C136  F1A2         	movff	?___fttol,config_ccp1@x
  3352  000DB6  C137  F1A3         	movff	?___fttol+1,config_ccp1@x+1
  3353                           
  3354                           ;Pwm.c: 75: w = x + w;
  3355  000DBA  0101               	movlb	1	; () banked
  3356  000DBC  51A4               	movf	config_ccp1@w& (0+255),w,b
  3357  000DBE  25A2               	addwf	config_ccp1@x& (0+255),w,b
  3358  000DC0  6FA4               	movwf	config_ccp1@w& (0+255),b
  3359  000DC2  51A5               	movf	(config_ccp1@w+1)& (0+255),w,b
  3360  000DC4  21A3               	addwfc	(config_ccp1@x+1)& (0+255),w,b
  3361  000DC6  6FA5               	movwf	(config_ccp1@w+1)& (0+255),b
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;Pwm.c: 76: z++;
  3365  000DC8  4B9A               	infsnz	config_ccp1@z& (0+255),f,b
  3366  000DCA  2B9B               	incf	(config_ccp1@z+1)& (0+255),f,b
  3367                           
  3368                           ; BSR set to: 1
  3369  000DCC  4BAA               	infsnz	config_ccp1@j& (0+255),f,b
  3370  000DCE  2BAB               	incf	(config_ccp1@j+1)& (0+255),f,b
  3371  000DD0  D7A1               	goto	l3803
  3372  000DD2                     u4180:
  3373  000DD2                     l3821:
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;Pwm.c: 77: }
  3377                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  3378  000DD2  C1A6  F173         	movff	config_ccp1@y,??_config_ccp1
  3379  000DD6  3B73               	swapf	??_config_ccp1& (0+255),f,b
  3380  000DD8  50BD               	movf	4029,w,c	;volatile
  3381  000DDA  1973               	xorwf	??_config_ccp1& (0+255),w,b
  3382  000DDC  0BCF               	andlw	-49
  3383  000DDE  1973               	xorwf	??_config_ccp1& (0+255),w,b
  3384  000DE0  6EBD               	movwf	4029,c	;volatile
  3385                           
  3386                           ; BSR set to: 1
  3387                           ;Pwm.c: 80: CCPR1L = w;
  3388  000DE2  C1A4  FFBE         	movff	config_ccp1@w,4030	;volatile
  3389                           
  3390                           ; BSR set to: 1
  3391  000DE6  0012               	return		;funcret
  3392  000DE8                     __end_of_config_ccp1:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           intcon	equ	0xFF2
  3396                           postinc0	equ	0xFEE
  3397                           wreg	equ	0xFE8
  3398                           plusw1	equ	0xFE3
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           plusw2	equ	0xFDB
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _pow *****************
  3407 ;; Defined at:
  3408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  x               3   96[BANK1 ] void 
  3411 ;;  y               3   99[BANK1 ] void 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  yi              4  109[BANK1 ] unsigned long 
  3414 ;;  sign            1  108[BANK1 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  3   96[BANK1 ] unsigned char 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3424 ;;      Params:         0       0       6       0       0       0       0       0       0
  3425 ;;      Locals:         0       0      11       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3427 ;;      Totals:         0       0      17       0       0       0       0       0       0
  3428 ;;Total ram usage:       17 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:   13
  3431 ;; This function calls:
  3432 ;;		___ftge
  3433 ;;		___ftmul
  3434 ;;		___ftneg
  3435 ;;		___fttol
  3436 ;;		___lltoft
  3437 ;;		_exp
  3438 ;;		_log
  3439 ;; This function is called by:
  3440 ;;		_config_ccp1
  3441 ;;		_config_ccp2
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text12
  3446  001C42                     __ptext12:
  3447                           	opt stack 0
  3448  001C42                     _pow:
  3449                           	opt stack 15
  3450                           
  3451                           ; BSR set to: 1
  3452                           ;incstack = 0
  3453  001C42  0E00               	movlw	0
  3454  001C44  0101               	movlb	1	; () banked
  3455  001C46  6F6C               	movwf	pow@sign& (0+255),b
  3456                           
  3457                           ; BSR set to: 1
  3458  001C48  5160               	movf	pow@x& (0+255),w,b
  3459  001C4A  1161               	iorwf	(pow@x+1)& (0+255),w,b
  3460  001C4C  1162               	iorwf	(pow@x+2)& (0+255),w,b
  3461  001C4E  A4D8               	btfss	status,2,c
  3462  001C50  D01C               	goto	l640
  3463                           
  3464                           ; BSR set to: 1
  3465  001C52  0E00               	movlw	0
  3466  001C54  6F00               	movwf	___ftge@ff1& (0+255),b
  3467  001C56  0E00               	movlw	0
  3468  001C58  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  3469  001C5A  0E00               	movlw	0
  3470  001C5C  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  3471  001C5E  C163  F103         	movff	pow@y,___ftge@ff2
  3472  001C62  C164  F104         	movff	pow@y+1,___ftge@ff2+1
  3473  001C66  C165  F105         	movff	pow@y+2,___ftge@ff2+2
  3474  001C6A  EC17  F018         	call	___ftge	;wreg free
  3475  001C6E  0101               	movlb	1	; () banked
  3476  001C70  A0D8               	btfss	status,0,c
  3477  001C72  D004               	goto	l641
  3478                           
  3479                           ; BSR set to: 1
  3480  001C74  0E00               	movlw	0
  3481  001C76  6FED               	movwf	(_errno+1)& (0+255),b
  3482  001C78  0E21               	movlw	33
  3483  001C7A  6FEC               	movwf	_errno& (0+255),b
  3484  001C7C                     l641:
  3485                           
  3486                           ; BSR set to: 1
  3487  001C7C  0E00               	movlw	0
  3488  001C7E  6F60               	movwf	?_pow& (0+255),b
  3489  001C80  0E00               	movlw	0
  3490  001C82  6F61               	movwf	(?_pow+1)& (0+255),b
  3491  001C84  0E00               	movlw	0
  3492  001C86  6F62               	movwf	(?_pow+2)& (0+255),b
  3493                           
  3494                           ; BSR set to: 1
  3495  001C88  0012               	return	
  3496  001C8A                     l640:
  3497                           
  3498                           ; BSR set to: 1
  3499                           
  3500                           ; BSR set to: 1
  3501  001C8A  5163               	movf	pow@y& (0+255),w,b
  3502  001C8C  1164               	iorwf	(pow@y+1)& (0+255),w,b
  3503  001C8E  1165               	iorwf	(pow@y+2)& (0+255),w,b
  3504  001C90  A4D8               	btfss	status,2,c
  3505  001C92  D007               	goto	l643
  3506                           
  3507                           ; BSR set to: 1
  3508  001C94  0E00               	movlw	0
  3509  001C96  6F60               	movwf	?_pow& (0+255),b
  3510  001C98  0E80               	movlw	128
  3511  001C9A  6F61               	movwf	(?_pow+1)& (0+255),b
  3512  001C9C  0E3F               	movlw	63
  3513  001C9E  6F62               	movwf	(?_pow+2)& (0+255),b
  3514                           
  3515                           ; BSR set to: 1
  3516  001CA0  0012               	return	
  3517  001CA2                     l643:
  3518                           
  3519                           ; BSR set to: 1
  3520                           
  3521                           ; BSR set to: 1
  3522  001CA2  AF62               	btfss	(pow@x+2)& (0+255),7,b
  3523  001CA4  D041               	goto	l644
  3524                           
  3525                           ; BSR set to: 1
  3526  001CA6  C163  F136         	movff	pow@y,___fttol@f1
  3527  001CAA  C164  F137         	movff	pow@y+1,___fttol@f1+1
  3528  001CAE  C165  F138         	movff	pow@y+2,___fttol@f1+2
  3529  001CB2  ECFE  F00F         	call	___fttol	;wreg free
  3530  001CB6  C136  F16D         	movff	?___fttol,pow@yi
  3531  001CBA  C137  F16E         	movff	?___fttol+1,pow@yi+1
  3532  001CBE  C138  F16F         	movff	?___fttol+2,pow@yi+2
  3533  001CC2  C139  F170         	movff	?___fttol+3,pow@yi+3
  3534  001CC6  C16D  F108         	movff	pow@yi,___lltoft@c
  3535  001CCA  C16E  F109         	movff	pow@yi+1,___lltoft@c+1
  3536  001CCE  C16F  F10A         	movff	pow@yi+2,___lltoft@c+2
  3537  001CD2  C170  F10B         	movff	pow@yi+3,___lltoft@c+3
  3538  001CD6  EC0B  F01B         	call	___lltoft	;wreg free
  3539  001CDA  0101               	movlb	1	; () banked
  3540  001CDC  5163               	movf	pow@y& (0+255),w,b
  3541  001CDE  1908               	xorwf	?___lltoft& (0+255),w,b
  3542  001CE0  E107               	bnz	u3930
  3543  001CE2  5164               	movf	(pow@y+1)& (0+255),w,b
  3544  001CE4  1909               	xorwf	(?___lltoft+1)& (0+255),w,b
  3545  001CE6  E104               	bnz	u3930
  3546  001CE8  5165               	movf	(pow@y+2)& (0+255),w,b
  3547  001CEA  190A               	xorwf	(?___lltoft+2)& (0+255),w,b
  3548  001CEC  B4D8               	btfsc	status,2,c
  3549  001CEE  D00B               	goto	l645
  3550  001CF0                     u3930:
  3551                           
  3552                           ; BSR set to: 1
  3553  001CF0  0E00               	movlw	0
  3554  001CF2  6FED               	movwf	(_errno+1)& (0+255),b
  3555  001CF4  0E21               	movlw	33
  3556  001CF6  6FEC               	movwf	_errno& (0+255),b
  3557  001CF8  0E00               	movlw	0
  3558  001CFA  6F60               	movwf	?_pow& (0+255),b
  3559  001CFC  0E00               	movlw	0
  3560  001CFE  6F61               	movwf	(?_pow+1)& (0+255),b
  3561  001D00  0E00               	movlw	0
  3562  001D02  6F62               	movwf	(?_pow+2)& (0+255),b
  3563                           
  3564                           ; BSR set to: 1
  3565  001D04  0012               	return	
  3566  001D06                     l645:
  3567                           
  3568                           ; BSR set to: 1
  3569                           
  3570                           ; BSR set to: 1
  3571  001D06  516D               	movf	pow@yi& (0+255),w,b
  3572  001D08  0B01               	andlw	1
  3573  001D0A  6F6C               	movwf	pow@sign& (0+255),b
  3574                           
  3575                           ; BSR set to: 1
  3576  001D0C  C160  F100         	movff	pow@x,___ftneg@f1
  3577  001D10  C161  F101         	movff	pow@x+1,___ftneg@f1+1
  3578  001D14  C162  F102         	movff	pow@x+2,___ftneg@f1+2
  3579  001D18  EC5F  F01C         	call	___ftneg	;wreg free
  3580  001D1C  C100  F160         	movff	?___ftneg,pow@x
  3581  001D20  C101  F161         	movff	?___ftneg+1,pow@x+1
  3582  001D24  C102  F162         	movff	?___ftneg+2,pow@x+2
  3583  001D28                     l644:
  3584  001D28  C160  F142         	movff	pow@x,log@x
  3585  001D2C  C161  F143         	movff	pow@x+1,log@x+1
  3586  001D30  C162  F144         	movff	pow@x+2,log@x+2
  3587  001D34  ECDE  F00E         	call	_log	;wreg free
  3588  001D38  C142  F166         	movff	?_log,_pow$1663
  3589  001D3C  C143  F167         	movff	?_log+1,_pow$1663+1
  3590  001D40  C144  F168         	movff	?_log+2,_pow$1663+2
  3591  001D44  C166  F10C         	movff	_pow$1663,___ftmul@f1
  3592  001D48  C167  F10D         	movff	_pow$1663+1,___ftmul@f1+1
  3593  001D4C  C168  F10E         	movff	_pow$1663+2,___ftmul@f1+2
  3594  001D50  C163  F10F         	movff	pow@y,___ftmul@f2
  3595  001D54  C164  F110         	movff	pow@y+1,___ftmul@f2+1
  3596  001D58  C165  F111         	movff	pow@y+2,___ftmul@f2+2
  3597  001D5C  EC7A  F010         	call	___ftmul	;wreg free
  3598  001D60  C10C  F169         	movff	?___ftmul,_pow$1664
  3599  001D64  C10D  F16A         	movff	?___ftmul+1,_pow$1664+1
  3600  001D68  C10E  F16B         	movff	?___ftmul+2,_pow$1664+2
  3601  001D6C  C169  F157         	movff	_pow$1664,exp@x
  3602  001D70  C16A  F158         	movff	_pow$1664+1,exp@x+1
  3603  001D74  C16B  F159         	movff	_pow$1664+2,exp@x+2
  3604  001D78  ECC6  F009         	call	_exp	;wreg free
  3605  001D7C  C157  F160         	movff	?_exp,pow@x
  3606  001D80  C158  F161         	movff	?_exp+1,pow@x+1
  3607  001D84  C159  F162         	movff	?_exp+2,pow@x+2
  3608  001D88  0101               	movlb	1	; () banked
  3609  001D8A  516C               	movf	pow@sign& (0+255),w,b
  3610  001D8C  B4D8               	btfsc	status,2,c
  3611  001D8E  D00F               	goto	l646
  3612                           
  3613                           ; BSR set to: 1
  3614  001D90  C160  F100         	movff	pow@x,___ftneg@f1
  3615  001D94  C161  F101         	movff	pow@x+1,___ftneg@f1+1
  3616  001D98  C162  F102         	movff	pow@x+2,___ftneg@f1+2
  3617  001D9C  EC5F  F01C         	call	___ftneg	;wreg free
  3618  001DA0  C100  F160         	movff	?___ftneg,?_pow
  3619  001DA4  C101  F161         	movff	?___ftneg+1,?_pow+1
  3620  001DA8  C102  F162         	movff	?___ftneg+2,?_pow+2
  3621  001DAC  0012               	return	
  3622  001DAE                     l646:
  3623                           
  3624                           ; BSR set to: 1
  3625  001DAE  C160  F160         	movff	pow@x,?_pow
  3626  001DB2  C161  F161         	movff	pow@x+1,?_pow+1
  3627  001DB6  C162  F162         	movff	pow@x+2,?_pow+2
  3628  001DBA  0012               	return		;funcret
  3629  001DBC                     __end_of_pow:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           intcon	equ	0xFF2
  3633                           postinc0	equ	0xFEE
  3634                           wreg	equ	0xFE8
  3635                           plusw1	equ	0xFE3
  3636                           postinc2	equ	0xFDE
  3637                           postdec2	equ	0xFDD
  3638                           plusw2	equ	0xFDB
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _log *****************
  3644 ;; Defined at:
  3645 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  x               3   66[BANK1 ] unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  exponent        2   69[BANK1 ] int 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  3   66[BANK1 ] int 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3659 ;;      Params:         0       0       3       0       0       0       0       0       0
  3660 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3663 ;;Total ram usage:        5 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:   12
  3666 ;; This function calls:
  3667 ;;		___awtoft
  3668 ;;		___ftadd
  3669 ;;		___ftmul
  3670 ;;		_eval_poly
  3671 ;;		_frexp
  3672 ;; This function is called by:
  3673 ;;		_pow
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text13
  3678  001DBC                     __ptext13:
  3679                           	opt stack 0
  3680  001DBC                     _log:
  3681                           	opt stack 15
  3682                           
  3683                           ;incstack = 0
  3684  001DBC  0101               	movlb	1	; () banked
  3685  001DBE  AF44               	btfss	(log@x+2)& (0+255),7,b
  3686  001DC0  D00B               	goto	l842
  3687                           
  3688                           ; BSR set to: 1
  3689  001DC2  0E00               	movlw	0
  3690  001DC4  6FED               	movwf	(_errno+1)& (0+255),b
  3691  001DC6  0E21               	movlw	33
  3692  001DC8  6FEC               	movwf	_errno& (0+255),b
  3693  001DCA  0E00               	movlw	0
  3694  001DCC  6F42               	movwf	?_log& (0+255),b
  3695  001DCE  0E00               	movlw	0
  3696  001DD0  6F43               	movwf	(?_log+1)& (0+255),b
  3697  001DD2  0E00               	movlw	0
  3698  001DD4  6F44               	movwf	(?_log+2)& (0+255),b
  3699                           
  3700                           ; BSR set to: 1
  3701  001DD6  0012               	return	
  3702  001DD8                     l842:
  3703                           
  3704                           ; BSR set to: 1
  3705                           
  3706                           ; BSR set to: 1
  3707  001DD8  5142               	movf	log@x& (0+255),w,b
  3708  001DDA  1143               	iorwf	(log@x+1)& (0+255),w,b
  3709  001DDC  1144               	iorwf	(log@x+2)& (0+255),w,b
  3710  001DDE  A4D8               	btfss	status,2,c
  3711  001DE0  D00B               	goto	l844
  3712                           
  3713                           ; BSR set to: 1
  3714  001DE2  0E00               	movlw	0
  3715  001DE4  6FED               	movwf	(_errno+1)& (0+255),b
  3716  001DE6  0E22               	movlw	34
  3717  001DE8  6FEC               	movwf	_errno& (0+255),b
  3718  001DEA  0E00               	movlw	0
  3719  001DEC  6F42               	movwf	?_log& (0+255),b
  3720  001DEE  0E00               	movlw	0
  3721  001DF0  6F43               	movwf	(?_log+1)& (0+255),b
  3722  001DF2  0E00               	movlw	0
  3723  001DF4  6F44               	movwf	(?_log+2)& (0+255),b
  3724                           
  3725                           ; BSR set to: 1
  3726  001DF6  0012               	return	
  3727  001DF8                     l844:
  3728                           
  3729                           ; BSR set to: 1
  3730                           
  3731                           ; BSR set to: 1
  3732  001DF8  0E00               	movlw	0
  3733  001DFA  6F0F               	movwf	___ftmul@f2& (0+255),b
  3734  001DFC  0E00               	movlw	0
  3735  001DFE  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  3736  001E00  0E40               	movlw	64
  3737  001E02  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  3738  001E04  0E45               	movlw	low log@exponent
  3739  001E06  6F03               	movwf	frexp@eptr& (0+255),b
  3740  001E08  0E01               	movlw	high log@exponent
  3741  001E0A  6F04               	movwf	(frexp@eptr+1)& (0+255),b
  3742  001E0C  C142  F100         	movff	log@x,frexp@value
  3743  001E10  C143  F101         	movff	log@x+1,frexp@value+1
  3744  001E14  C144  F102         	movff	log@x+2,frexp@value+2
  3745  001E18  ECCD  F017         	call	_frexp	;wreg free
  3746  001E1C  C100  F10C         	movff	?_frexp,___ftmul@f1
  3747  001E20  C101  F10D         	movff	?_frexp+1,___ftmul@f1+1
  3748  001E24  C102  F10E         	movff	?_frexp+2,___ftmul@f1+2
  3749  001E28  EC7A  F010         	call	___ftmul	;wreg free
  3750  001E2C  C10C  F12A         	movff	?___ftmul,___ftadd@f1
  3751  001E30  C10D  F12B         	movff	?___ftmul+1,___ftadd@f1+1
  3752  001E34  C10E  F12C         	movff	?___ftmul+2,___ftadd@f1+2
  3753  001E38  0E00               	movlw	0
  3754  001E3A  0101               	movlb	1	; () banked
  3755  001E3C  6F2D               	movwf	___ftadd@f2& (0+255),b
  3756  001E3E  0E80               	movlw	128
  3757  001E40  6F2E               	movwf	(___ftadd@f2+1)& (0+255),b
  3758  001E42  0EBF               	movlw	191
  3759  001E44  6F2F               	movwf	(___ftadd@f2+2)& (0+255),b
  3760  001E46  ECB4  F00B         	call	___ftadd	;wreg free
  3761  001E4A  C12A  F142         	movff	?___ftadd,log@x
  3762  001E4E  C12B  F143         	movff	?___ftadd+1,log@x+1
  3763  001E52  C12C  F144         	movff	?___ftadd+2,log@x+2
  3764  001E56  0101               	movlb	1	; () banked
  3765  001E58  0745               	decf	log@exponent& (0+255),f,b
  3766  001E5A  A0D8               	btfss	status,0,c
  3767  001E5C  0746               	decf	(log@exponent+1)& (0+255),f,b
  3768                           
  3769                           ; BSR set to: 1
  3770  001E5E  C142  F136         	movff	log@x,eval_poly@x
  3771  001E62  C143  F137         	movff	log@x+1,eval_poly@x+1
  3772  001E66  C144  F138         	movff	log@x+2,eval_poly@x+2
  3773  001E6A  0E1F               	movlw	low log@coeff
  3774  001E6C  6F39               	movwf	eval_poly@d& (0+255),b
  3775  001E6E  0E08               	movlw	high log@coeff
  3776  001E70  6F3A               	movwf	(eval_poly@d+1)& (0+255),b
  3777  001E72  0E00               	movlw	0
  3778  001E74  6F3C               	movwf	(eval_poly@n+1)& (0+255),b
  3779  001E76  0E08               	movlw	8
  3780  001E78  6F3B               	movwf	eval_poly@n& (0+255),b
  3781  001E7A  ECB1  F013         	call	_eval_poly	;wreg free
  3782  001E7E  C136  F142         	movff	?_eval_poly,log@x
  3783  001E82  C137  F143         	movff	?_eval_poly+1,log@x+1
  3784  001E86  C138  F144         	movff	?_eval_poly+2,log@x+2
  3785  001E8A  0E72               	movlw	114
  3786  001E8C  0101               	movlb	1	; () banked
  3787  001E8E  6F0F               	movwf	___ftmul@f2& (0+255),b
  3788  001E90  0E31               	movlw	49
  3789  001E92  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  3790  001E94  0E3F               	movlw	63
  3791  001E96  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  3792  001E98  C145  F108         	movff	log@exponent,___awtoft@c
  3793  001E9C  C146  F109         	movff	log@exponent+1,___awtoft@c+1
  3794  001EA0  ECD8  F01B         	call	___awtoft	;wreg free
  3795  001EA4  C108  F10C         	movff	?___awtoft,___ftmul@f1
  3796  001EA8  C109  F10D         	movff	?___awtoft+1,___ftmul@f1+1
  3797  001EAC  C10A  F10E         	movff	?___awtoft+2,___ftmul@f1+2
  3798  001EB0  EC7A  F010         	call	___ftmul	;wreg free
  3799  001EB4  C10C  F12A         	movff	?___ftmul,___ftadd@f1
  3800  001EB8  C10D  F12B         	movff	?___ftmul+1,___ftadd@f1+1
  3801  001EBC  C10E  F12C         	movff	?___ftmul+2,___ftadd@f1+2
  3802  001EC0  C142  F12D         	movff	log@x,___ftadd@f2
  3803  001EC4  C143  F12E         	movff	log@x+1,___ftadd@f2+1
  3804  001EC8  C144  F12F         	movff	log@x+2,___ftadd@f2+2
  3805  001ECC  ECB4  F00B         	call	___ftadd	;wreg free
  3806  001ED0  C12A  F142         	movff	?___ftadd,?_log
  3807  001ED4  C12B  F143         	movff	?___ftadd+1,?_log+1
  3808  001ED8  C12C  F144         	movff	?___ftadd+2,?_log+2
  3809  001EDC  0012               	return	
  3810  001EDE                     __end_of_log:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           intcon	equ	0xFF2
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           plusw1	equ	0xFE3
  3817                           postinc2	equ	0xFDE
  3818                           postdec2	equ	0xFDD
  3819                           plusw2	equ	0xFDB
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _exp *****************
  3825 ;; Defined at:
  3826 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  x               3   87[BANK1 ] int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  exponent        2   93[BANK1 ] int 
  3831 ;;  sign            1   95[BANK1 ] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  3   87[BANK1 ] unsigned char 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3841 ;;      Params:         0       0       3       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       6       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       9       0       0       0       0       0       0
  3845 ;;Total ram usage:        9 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:   12
  3848 ;; This function calls:
  3849 ;;		___awtoft
  3850 ;;		___ftdiv
  3851 ;;		___ftge
  3852 ;;		___ftmul
  3853 ;;		___ftneg
  3854 ;;		___ftsub
  3855 ;;		___fttol
  3856 ;;		_eval_poly
  3857 ;;		_floor
  3858 ;;		_ldexp
  3859 ;; This function is called by:
  3860 ;;		_pow
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text14
  3865  00138C                     __ptext14:
  3866                           	opt stack 0
  3867  00138C                     _exp:
  3868                           	opt stack 15
  3869                           
  3870                           ;incstack = 0
  3871  00138C  0101               	movlb	1	; () banked
  3872  00138E  5157               	movf	exp@x& (0+255),w,b
  3873  001390  1158               	iorwf	(exp@x+1)& (0+255),w,b
  3874  001392  1159               	iorwf	(exp@x+2)& (0+255),w,b
  3875  001394  A4D8               	btfss	status,2,c
  3876  001396  D007               	goto	l800
  3877                           
  3878                           ; BSR set to: 1
  3879  001398  0E00               	movlw	0
  3880  00139A  6F57               	movwf	?_exp& (0+255),b
  3881  00139C  0E80               	movlw	128
  3882  00139E  6F58               	movwf	(?_exp+1)& (0+255),b
  3883  0013A0  0E3F               	movlw	63
  3884  0013A2  6F59               	movwf	(?_exp+2)& (0+255),b
  3885                           
  3886                           ; BSR set to: 1
  3887  0013A4  0012               	return	
  3888  0013A6                     l800:
  3889                           
  3890                           ; BSR set to: 1
  3891                           
  3892                           ; BSR set to: 1
  3893  0013A6  0E72               	movlw	114
  3894  0013A8  6F00               	movwf	___ftge@ff1& (0+255),b
  3895  0013AA  0E31               	movlw	49
  3896  0013AC  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  3897  0013AE  0E44               	movlw	68
  3898  0013B0  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  3899  0013B2  C157  F103         	movff	exp@x,___ftge@ff2
  3900  0013B6  C158  F104         	movff	exp@x+1,___ftge@ff2+1
  3901  0013BA  C159  F105         	movff	exp@x+2,___ftge@ff2+2
  3902  0013BE  EC17  F018         	call	___ftge	;wreg free
  3903  0013C2  0101               	movlb	1	; () banked
  3904  0013C4  B0D8               	btfsc	status,0,c
  3905  0013C6  D00B               	goto	l802
  3906                           
  3907                           ; BSR set to: 1
  3908  0013C8  0E00               	movlw	0
  3909  0013CA  6FED               	movwf	(_errno+1)& (0+255),b
  3910  0013CC  0E22               	movlw	34
  3911  0013CE  6FEC               	movwf	_errno& (0+255),b
  3912  0013D0  0EFF               	movlw	255
  3913  0013D2  6F57               	movwf	?_exp& (0+255),b
  3914  0013D4  0E7F               	movlw	127
  3915  0013D6  6F58               	movwf	(?_exp+1)& (0+255),b
  3916  0013D8  0E7F               	movlw	127
  3917  0013DA  6F59               	movwf	(?_exp+2)& (0+255),b
  3918                           
  3919                           ; BSR set to: 1
  3920  0013DC  0012               	return	
  3921  0013DE                     l802:
  3922                           
  3923                           ; BSR set to: 1
  3924                           
  3925                           ; BSR set to: 1
  3926  0013DE  C157  F100         	movff	exp@x,___ftge@ff1
  3927  0013E2  C158  F101         	movff	exp@x+1,___ftge@ff1+1
  3928  0013E6  C159  F102         	movff	exp@x+2,___ftge@ff1+2
  3929  0013EA  0E49               	movlw	73
  3930  0013EC  6F03               	movwf	___ftge@ff2& (0+255),b
  3931  0013EE  0E3A               	movlw	58
  3932  0013F0  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  3933  0013F2  0EC4               	movlw	196
  3934  0013F4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  3935  0013F6  EC17  F018         	call	___ftge	;wreg free
  3936  0013FA  0101               	movlb	1	; () banked
  3937  0013FC  B0D8               	btfsc	status,0,c
  3938  0013FE  D00B               	goto	l803
  3939                           
  3940                           ; BSR set to: 1
  3941  001400  0E00               	movlw	0
  3942  001402  6FED               	movwf	(_errno+1)& (0+255),b
  3943  001404  0E22               	movlw	34
  3944  001406  6FEC               	movwf	_errno& (0+255),b
  3945  001408  0E00               	movlw	0
  3946  00140A  6F57               	movwf	?_exp& (0+255),b
  3947  00140C  0E00               	movlw	0
  3948  00140E  6F58               	movwf	(?_exp+1)& (0+255),b
  3949  001410  0E00               	movlw	0
  3950  001412  6F59               	movwf	(?_exp+2)& (0+255),b
  3951                           
  3952                           ; BSR set to: 1
  3953  001414  0012               	return	
  3954  001416                     l803:
  3955                           
  3956                           ; BSR set to: 1
  3957                           
  3958                           ; BSR set to: 1
  3959  001416  AF59               	btfss	(exp@x+2)& (0+255),7,b
  3960  001418  D002               	goto	u3730
  3961  00141A  0E01               	movlw	1
  3962  00141C  D001               	goto	u3740
  3963  00141E                     u3730:
  3964  00141E  0E00               	movlw	0
  3965  001420                     u3740:
  3966  001420  6F5F               	movwf	exp@sign& (0+255),b
  3967                           
  3968                           ; BSR set to: 1
  3969  001422  515F               	movf	exp@sign& (0+255),w,b
  3970  001424  B4D8               	btfsc	status,2,c
  3971  001426  D00E               	goto	l804
  3972                           
  3973                           ; BSR set to: 1
  3974  001428  C157  F100         	movff	exp@x,___ftneg@f1
  3975  00142C  C158  F101         	movff	exp@x+1,___ftneg@f1+1
  3976  001430  C159  F102         	movff	exp@x+2,___ftneg@f1+2
  3977  001434  EC5F  F01C         	call	___ftneg	;wreg free
  3978  001438  C100  F157         	movff	?___ftneg,exp@x
  3979  00143C  C101  F158         	movff	?___ftneg+1,exp@x+1
  3980  001440  C102  F159         	movff	?___ftneg+2,exp@x+2
  3981  001444                     l804:
  3982  001444  C157  F10C         	movff	exp@x,___ftmul@f1
  3983  001448  C158  F10D         	movff	exp@x+1,___ftmul@f1+1
  3984  00144C  C159  F10E         	movff	exp@x+2,___ftmul@f1+2
  3985  001450  0EAA               	movlw	170
  3986  001452  0101               	movlb	1	; () banked
  3987  001454  6F0F               	movwf	___ftmul@f2& (0+255),b
  3988  001456  0EB8               	movlw	184
  3989  001458  6F10               	movwf	(___ftmul@f2+1)& (0+255),b
  3990  00145A  0E3F               	movlw	63
  3991  00145C  6F11               	movwf	(___ftmul@f2+2)& (0+255),b
  3992  00145E  EC7A  F010         	call	___ftmul	;wreg free
  3993  001462  C10C  F157         	movff	?___ftmul,exp@x
  3994  001466  C10D  F158         	movff	?___ftmul+1,exp@x+1
  3995  00146A  C10E  F159         	movff	?___ftmul+2,exp@x+2
  3996  00146E  C157  F14F         	movff	exp@x,floor@x
  3997  001472  C158  F150         	movff	exp@x+1,floor@x+1
  3998  001476  C159  F151         	movff	exp@x+2,floor@x+2
  3999  00147A  ECD0  F012         	call	_floor	;wreg free
  4000  00147E  C14F  F15A         	movff	?_floor,_exp$1665
  4001  001482  C150  F15B         	movff	?_floor+1,_exp$1665+1
  4002  001486  C151  F15C         	movff	?_floor+2,_exp$1665+2
  4003  00148A  C15A  F136         	movff	_exp$1665,___fttol@f1
  4004  00148E  C15B  F137         	movff	_exp$1665+1,___fttol@f1+1
  4005  001492  C15C  F138         	movff	_exp$1665+2,___fttol@f1+2
  4006  001496  ECFE  F00F         	call	___fttol	;wreg free
  4007  00149A  C136  F15D         	movff	?___fttol,exp@exponent
  4008  00149E  C137  F15E         	movff	?___fttol+1,exp@exponent+1
  4009  0014A2  C157  F136         	movff	exp@x,___ftsub@f1
  4010  0014A6  C158  F137         	movff	exp@x+1,___ftsub@f1+1
  4011  0014AA  C159  F138         	movff	exp@x+2,___ftsub@f1+2
  4012  0014AE  C15D  F108         	movff	exp@exponent,___awtoft@c
  4013  0014B2  C15E  F109         	movff	exp@exponent+1,___awtoft@c+1
  4014  0014B6  ECD8  F01B         	call	___awtoft	;wreg free
  4015  0014BA  C108  F139         	movff	?___awtoft,___ftsub@f2
  4016  0014BE  C109  F13A         	movff	?___awtoft+1,___ftsub@f2+1
  4017  0014C2  C10A  F13B         	movff	?___awtoft+2,___ftsub@f2+2
  4018  0014C6  EC97  F01B         	call	___ftsub	;wreg free
  4019  0014CA  C136  F157         	movff	?___ftsub,exp@x
  4020  0014CE  C137  F158         	movff	?___ftsub+1,exp@x+1
  4021  0014D2  C138  F159         	movff	?___ftsub+2,exp@x+2
  4022  0014D6  C157  F136         	movff	exp@x,eval_poly@x
  4023  0014DA  C158  F137         	movff	exp@x+1,eval_poly@x+1
  4024  0014DE  C159  F138         	movff	exp@x+2,eval_poly@x+2
  4025  0014E2  0E01               	movlw	low exp@coeff
  4026  0014E4  0101               	movlb	1	; () banked
  4027  0014E6  6F39               	movwf	eval_poly@d& (0+255),b
  4028  0014E8  0E08               	movlw	high exp@coeff
  4029  0014EA  6F3A               	movwf	(eval_poly@d+1)& (0+255),b
  4030  0014EC  0E00               	movlw	0
  4031  0014EE  6F3C               	movwf	(eval_poly@n+1)& (0+255),b
  4032  0014F0  0E09               	movlw	9
  4033  0014F2  6F3B               	movwf	eval_poly@n& (0+255),b
  4034  0014F4  ECB1  F013         	call	_eval_poly	;wreg free
  4035  0014F8  C136  F142         	movff	?_eval_poly,ldexp@value
  4036  0014FC  C137  F143         	movff	?_eval_poly+1,ldexp@value+1
  4037  001500  C138  F144         	movff	?_eval_poly+2,ldexp@value+2
  4038  001504  C15D  F145         	movff	exp@exponent,ldexp@newexp
  4039  001508  C15E  F146         	movff	exp@exponent+1,ldexp@newexp+1
  4040  00150C  EC57  F015         	call	_ldexp	;wreg free
  4041  001510  C142  F157         	movff	?_ldexp,exp@x
  4042  001514  C143  F158         	movff	?_ldexp+1,exp@x+1
  4043  001518  C144  F159         	movff	?_ldexp+2,exp@x+2
  4044  00151C  0101               	movlb	1	; () banked
  4045  00151E  515F               	movf	exp@sign& (0+255),w,b
  4046  001520  B4D8               	btfsc	status,2,c
  4047  001522  D025               	goto	l805
  4048                           
  4049                           ; BSR set to: 1
  4050  001524  2957               	incf	exp@x& (0+255),w,b
  4051  001526  E10E               	bnz	l3513
  4052  001528  0E7F               	movlw	127
  4053  00152A  1958               	xorwf	(exp@x+1)& (0+255),w,b
  4054  00152C  E10B               	bnz	l3513
  4055  00152E  0E7F               	movlw	127
  4056  001530  1959               	xorwf	(exp@x+2)& (0+255),w,b
  4057  001532  A4D8               	btfss	status,2,c
  4058  001534  D007               	goto	l806
  4059                           
  4060                           ; BSR set to: 1
  4061  001536  0E00               	movlw	0
  4062  001538  6F57               	movwf	?_exp& (0+255),b
  4063  00153A  0E00               	movlw	0
  4064  00153C  6F58               	movwf	(?_exp+1)& (0+255),b
  4065  00153E  0E00               	movlw	0
  4066  001540  6F59               	movwf	(?_exp+2)& (0+255),b
  4067                           
  4068                           ; BSR set to: 1
  4069  001542  0012               	return	
  4070  001544                     l806:
  4071  001544                     l3513:
  4072                           
  4073                           ; BSR set to: 1
  4074  001544  0E00               	movlw	0
  4075  001546  6F1B               	movwf	___ftdiv@f1& (0+255),b
  4076  001548  0E80               	movlw	128
  4077  00154A  6F1C               	movwf	(___ftdiv@f1+1)& (0+255),b
  4078  00154C  0E3F               	movlw	63
  4079  00154E  6F1D               	movwf	(___ftdiv@f1+2)& (0+255),b
  4080  001550  C157  F11E         	movff	exp@x,___ftdiv@f2
  4081  001554  C158  F11F         	movff	exp@x+1,___ftdiv@f2+1
  4082  001558  C159  F120         	movff	exp@x+2,___ftdiv@f2+2
  4083  00155C  ECE9  F011         	call	___ftdiv	;wreg free
  4084  001560  C11B  F157         	movff	?___ftdiv,?_exp
  4085  001564  C11C  F158         	movff	?___ftdiv+1,?_exp+1
  4086  001568  C11D  F159         	movff	?___ftdiv+2,?_exp+2
  4087  00156C  0012               	return	
  4088  00156E                     l805:
  4089                           
  4090                           ; BSR set to: 1
  4091  00156E  C157  F157         	movff	exp@x,?_exp
  4092  001572  C158  F158         	movff	exp@x+1,?_exp+1
  4093  001576  C159  F159         	movff	exp@x+2,?_exp+2
  4094  00157A  0012               	return		;funcret
  4095  00157C                     __end_of_exp:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           intcon	equ	0xFF2
  4099                           postinc0	equ	0xFEE
  4100                           wreg	equ	0xFE8
  4101                           plusw1	equ	0xFE3
  4102                           postinc2	equ	0xFDE
  4103                           postdec2	equ	0xFDD
  4104                           plusw2	equ	0xFDB
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109 ;; *************** function _ldexp *****************
  4110 ;; Defined at:
  4111 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  value           3   66[BANK1 ] unsigned char 
  4114 ;;  newexp          2   69[BANK1 ] int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  3   66[BANK1 ] int 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4126 ;;      Params:         0       0       5       0       0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4128 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4129 ;;      Totals:         0       0       7       0       0       0       0       0       0
  4130 ;;Total ram usage:        7 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    9
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_exp
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text15
  4141  002AAE                     __ptext15:
  4142                           	opt stack 0
  4143  002AAE                     _ldexp:
  4144                           	opt stack 17
  4145                           
  4146                           ;incstack = 0
  4147  002AAE  0101               	movlb	1	; () banked
  4148  002AB0  5142               	movf	ldexp@value& (0+255),w,b
  4149  002AB2  1143               	iorwf	(ldexp@value+1)& (0+255),w,b
  4150  002AB4  1144               	iorwf	(ldexp@value+2)& (0+255),w,b
  4151  002AB6  A4D8               	btfss	status,2,c
  4152  002AB8  D007               	goto	l824
  4153                           
  4154                           ; BSR set to: 1
  4155  002ABA  0E00               	movlw	0
  4156  002ABC  6F42               	movwf	?_ldexp& (0+255),b
  4157  002ABE  0E00               	movlw	0
  4158  002AC0  6F43               	movwf	(?_ldexp+1)& (0+255),b
  4159  002AC2  0E00               	movlw	0
  4160  002AC4  6F44               	movwf	(?_ldexp+2)& (0+255),b
  4161                           
  4162                           ; BSR set to: 1
  4163  002AC6  0012               	return	
  4164  002AC8                     l824:
  4165                           
  4166                           ; BSR set to: 1
  4167                           
  4168                           ; BSR set to: 1
  4169  002AC8  5144               	movf	(ldexp@value+2)& (0+255),w,b
  4170  002ACA  0B7F               	andlw	127
  4171  002ACC  6F47               	movwf	??_ldexp& (0+255),b
  4172  002ACE  6B48               	clrf	(??_ldexp+1)& (0+255),b
  4173  002AD0  90D8               	bcf	status,0,c
  4174  002AD2  3747               	rlcf	??_ldexp& (0+255),f,b
  4175  002AD4  3748               	rlcf	(??_ldexp+1)& (0+255),f,b
  4176  002AD6  5147               	movf	??_ldexp& (0+255),w,b
  4177  002AD8  2745               	addwf	ldexp@newexp& (0+255),f,b
  4178  002ADA  5148               	movf	(??_ldexp+1)& (0+255),w,b
  4179  002ADC  2346               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4180  002ADE  AF43               	btfss	(ldexp@value+1)& (0+255),7,b
  4181  002AE0  D003               	goto	u3450
  4182  002AE2  6B47               	clrf	??_ldexp& (0+255),b
  4183  002AE4  2B47               	incf	??_ldexp& (0+255),f,b
  4184  002AE6  D002               	goto	u3458
  4185  002AE8                     u3450:
  4186  002AE8  0101               	movlb	1	; () banked
  4187  002AEA  6B47               	clrf	??_ldexp& (0+255),b
  4188  002AEC                     u3458:
  4189  002AEC  5147               	movf	??_ldexp& (0+255),w,b
  4190  002AEE  2745               	addwf	ldexp@newexp& (0+255),f,b
  4191  002AF0  0E00               	movlw	0
  4192  002AF2  2346               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4193  002AF4  AF46               	btfss	(ldexp@newexp+1)& (0+255),7,b
  4194  002AF6  D00B               	goto	l826
  4195                           
  4196                           ; BSR set to: 1
  4197  002AF8  0E00               	movlw	0
  4198  002AFA  6FED               	movwf	(_errno+1)& (0+255),b
  4199  002AFC  0E22               	movlw	34
  4200  002AFE  6FEC               	movwf	_errno& (0+255),b
  4201  002B00  0E00               	movlw	0
  4202  002B02  6F42               	movwf	?_ldexp& (0+255),b
  4203  002B04  0E00               	movlw	0
  4204  002B06  6F43               	movwf	(?_ldexp+1)& (0+255),b
  4205  002B08  0E00               	movlw	0
  4206  002B0A                     L4:
  4207  002B0A  6F44               	movwf	(?_ldexp+2)& (0+255),b
  4208                           
  4209                           ; BSR set to: 1
  4210  002B0C  0012               	return	
  4211  002B0E                     l826:
  4212                           
  4213                           ; BSR set to: 1
  4214                           
  4215                           ; BSR set to: 1
  4216  002B0E  BF46               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  4217  002B10  D015               	goto	l828
  4218  002B12  0546               	decf	(ldexp@newexp+1)& (0+255),w,b
  4219  002B14  A0D8               	btfss	status,0,c
  4220  002B16  D012               	goto	l828
  4221                           
  4222                           ; BSR set to: 1
  4223  002B18  0E00               	movlw	0
  4224  002B1A  6FED               	movwf	(_errno+1)& (0+255),b
  4225  002B1C  0E22               	movlw	34
  4226  002B1E  6FEC               	movwf	_errno& (0+255),b
  4227                           
  4228                           ; BSR set to: 1
  4229  002B20  AF44               	btfss	(ldexp@value+2)& (0+255),7,b
  4230  002B22  D006               	goto	l829
  4231                           
  4232                           ; BSR set to: 1
  4233  002B24  0EFF               	movlw	255
  4234  002B26  6F42               	movwf	?_ldexp& (0+255),b
  4235  002B28  0E7F               	movlw	127
  4236  002B2A  6F43               	movwf	(?_ldexp+1)& (0+255),b
  4237  002B2C  0EFF               	movlw	255
  4238  002B2E  D7ED               	goto	L4
  4239  002B30                     l829:
  4240                           
  4241                           ; BSR set to: 1
  4242                           
  4243                           ; BSR set to: 1
  4244  002B30  0EFF               	movlw	255
  4245  002B32  6F42               	movwf	?_ldexp& (0+255),b
  4246  002B34  0E7F               	movlw	127
  4247  002B36  6F43               	movwf	(?_ldexp+1)& (0+255),b
  4248  002B38  0E7F               	movlw	127
  4249  002B3A  D7E7               	goto	L4
  4250  002B3C                     l828:
  4251                           
  4252                           ; BSR set to: 1
  4253                           
  4254                           ; BSR set to: 1
  4255  002B3C  3546               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  4256  002B3E  3146               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  4257  002B40  6F48               	movwf	(??_ldexp+1)& (0+255),b
  4258  002B42  3145               	rrcf	ldexp@newexp& (0+255),w,b
  4259  002B44  6F47               	movwf	??_ldexp& (0+255),b
  4260  002B46  5144               	movf	(ldexp@value+2)& (0+255),w,b
  4261  002B48  1947               	xorwf	??_ldexp& (0+255),w,b
  4262  002B4A  0B80               	andlw	-128
  4263  002B4C  1947               	xorwf	??_ldexp& (0+255),w,b
  4264  002B4E  6F44               	movwf	(ldexp@value+2)& (0+255),b
  4265  002B50  C145  F147         	movff	ldexp@newexp,??_ldexp
  4266  002B54  0E01               	movlw	1
  4267  002B56  1747               	andwf	??_ldexp& (0+255),f,b
  4268  002B58  3347               	rrcf	??_ldexp& (0+255),f,b
  4269  002B5A  3347               	rrcf	??_ldexp& (0+255),f,b
  4270  002B5C  5143               	movf	(ldexp@value+1)& (0+255),w,b
  4271  002B5E  1947               	xorwf	??_ldexp& (0+255),w,b
  4272  002B60  0B7F               	andlw	-129
  4273  002B62  1947               	xorwf	??_ldexp& (0+255),w,b
  4274  002B64  6F43               	movwf	(ldexp@value+1)& (0+255),b
  4275                           
  4276                           ; BSR set to: 1
  4277                           
  4278                           ; BSR set to: 1
  4279                           
  4280                           ; BSR set to: 1
  4281  002B66  C142  F142         	movff	ldexp@value,?_ldexp
  4282  002B6A  C143  F143         	movff	ldexp@value+1,?_ldexp+1
  4283  002B6E  C144  F144         	movff	ldexp@value+2,?_ldexp+2
  4284  002B72  0012               	return	
  4285  002B74                     __end_of_ldexp:
  4286                           	opt stack 0
  4287                           tblptru	equ	0xFF8
  4288                           intcon	equ	0xFF2
  4289                           postinc0	equ	0xFEE
  4290                           wreg	equ	0xFE8
  4291                           plusw1	equ	0xFE3
  4292                           postinc2	equ	0xFDE
  4293                           postdec2	equ	0xFDD
  4294                           plusw2	equ	0xFDB
  4295                           fsr2h	equ	0xFDA
  4296                           fsr2l	equ	0xFD9
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _floor *****************
  4300 ;; Defined at:
  4301 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  x               3   79[BANK1 ] int 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  i               3   82[BANK1 ] int 
  4306 ;;  expon           2   85[BANK1 ] int 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  3   79[BANK1 ] int 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4316 ;;      Params:         0       0       3       0       0       0       0       0       0
  4317 ;;      Locals:         0       0       5       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4319 ;;      Totals:         0       0       8       0       0       0       0       0       0
  4320 ;;Total ram usage:        8 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:   11
  4323 ;; This function calls:
  4324 ;;		___altoft
  4325 ;;		___ftadd
  4326 ;;		___ftge
  4327 ;;		___fttol
  4328 ;;		_frexp
  4329 ;; This function is called by:
  4330 ;;		_exp
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text16
  4335  0025A0                     __ptext16:
  4336                           	opt stack 0
  4337  0025A0                     _floor:
  4338                           	opt stack 15
  4339                           
  4340                           ; BSR set to: 1
  4341                           ;incstack = 0
  4342  0025A0  C14F  F100         	movff	floor@x,frexp@value
  4343  0025A4  C150  F101         	movff	floor@x+1,frexp@value+1
  4344  0025A8  C151  F102         	movff	floor@x+2,frexp@value+2
  4345  0025AC  0E55               	movlw	low floor@expon
  4346  0025AE  0101               	movlb	1	; () banked
  4347  0025B0  6F03               	movwf	frexp@eptr& (0+255),b
  4348  0025B2  0E01               	movlw	high floor@expon
  4349  0025B4  6F04               	movwf	(frexp@eptr+1)& (0+255),b
  4350  0025B6  ECCD  F017         	call	_frexp	;wreg free
  4351  0025BA  0101               	movlb	1	; () banked
  4352  0025BC  AF56               	btfss	(floor@expon+1)& (0+255),7,b
  4353  0025BE  D010               	goto	l811
  4354                           
  4355                           ; BSR set to: 1
  4356  0025C0  AF51               	btfss	(floor@x+2)& (0+255),7,b
  4357  0025C2  D007               	goto	l812
  4358                           
  4359                           ; BSR set to: 1
  4360  0025C4  0E00               	movlw	0
  4361  0025C6  6F4F               	movwf	?_floor& (0+255),b
  4362  0025C8  0E80               	movlw	128
  4363  0025CA  6F50               	movwf	(?_floor+1)& (0+255),b
  4364  0025CC  0EBF               	movlw	191
  4365  0025CE  6F51               	movwf	(?_floor+2)& (0+255),b
  4366                           
  4367                           ; BSR set to: 1
  4368  0025D0  0012               	return	
  4369  0025D2                     l812:
  4370                           
  4371                           ; BSR set to: 1
  4372                           
  4373                           ; BSR set to: 1
  4374  0025D2  0E00               	movlw	0
  4375  0025D4  6F4F               	movwf	?_floor& (0+255),b
  4376  0025D6  0E00               	movlw	0
  4377  0025D8  6F50               	movwf	(?_floor+1)& (0+255),b
  4378  0025DA  0E00               	movlw	0
  4379  0025DC  6F51               	movwf	(?_floor+2)& (0+255),b
  4380                           
  4381                           ; BSR set to: 1
  4382  0025DE  0012               	return	
  4383  0025E0                     l811:
  4384                           
  4385                           ; BSR set to: 1
  4386                           
  4387                           ; BSR set to: 1
  4388  0025E0  5156               	movf	(floor@expon+1)& (0+255),w,b
  4389  0025E2  E104               	bnz	u3410
  4390  0025E4  0E15               	movlw	21
  4391  0025E6  5D55               	subwf	floor@expon& (0+255),w,b
  4392  0025E8  A0D8               	btfss	status,0,c
  4393  0025EA  D007               	goto	l814
  4394  0025EC                     u3410:
  4395                           
  4396                           ; BSR set to: 1
  4397  0025EC  C14F  F14F         	movff	floor@x,?_floor
  4398  0025F0  C150  F150         	movff	floor@x+1,?_floor+1
  4399  0025F4  C151  F151         	movff	floor@x+2,?_floor+2
  4400  0025F8  0012               	return	
  4401  0025FA                     l814:
  4402                           
  4403                           ; BSR set to: 1
  4404                           
  4405                           ; BSR set to: 1
  4406  0025FA  C14F  F136         	movff	floor@x,___fttol@f1
  4407  0025FE  C150  F137         	movff	floor@x+1,___fttol@f1+1
  4408  002602  C151  F138         	movff	floor@x+2,___fttol@f1+2
  4409  002606  ECFE  F00F         	call	___fttol	;wreg free
  4410  00260A  C136  F145         	movff	?___fttol,___altoft@c
  4411  00260E  C137  F146         	movff	?___fttol+1,___altoft@c+1
  4412  002612  C138  F147         	movff	?___fttol+2,___altoft@c+2
  4413  002616  C139  F148         	movff	?___fttol+3,___altoft@c+3
  4414  00261A  ECF8  F019         	call	___altoft	;wreg free
  4415  00261E  C145  F152         	movff	?___altoft,floor@i
  4416  002622  C146  F153         	movff	?___altoft+1,floor@i+1
  4417  002626  C147  F154         	movff	?___altoft+2,floor@i+2
  4418  00262A  C14F  F100         	movff	floor@x,___ftge@ff1
  4419  00262E  C150  F101         	movff	floor@x+1,___ftge@ff1+1
  4420  002632  C151  F102         	movff	floor@x+2,___ftge@ff1+2
  4421  002636  C152  F103         	movff	floor@i,___ftge@ff2
  4422  00263A  C153  F104         	movff	floor@i+1,___ftge@ff2+1
  4423  00263E  C154  F105         	movff	floor@i+2,___ftge@ff2+2
  4424  002642  EC17  F018         	call	___ftge	;wreg free
  4425  002646  0101               	movlb	1	; () banked
  4426  002648  B0D8               	btfsc	status,0,c
  4427  00264A  D015               	goto	l815
  4428                           
  4429                           ; BSR set to: 1
  4430  00264C  C152  F12A         	movff	floor@i,___ftadd@f1
  4431  002650  C153  F12B         	movff	floor@i+1,___ftadd@f1+1
  4432  002654  C154  F12C         	movff	floor@i+2,___ftadd@f1+2
  4433  002658  0E00               	movlw	0
  4434  00265A  6F2D               	movwf	___ftadd@f2& (0+255),b
  4435  00265C  0E80               	movlw	128
  4436  00265E  6F2E               	movwf	(___ftadd@f2+1)& (0+255),b
  4437  002660  0EBF               	movlw	191
  4438  002662  6F2F               	movwf	(___ftadd@f2+2)& (0+255),b
  4439  002664  ECB4  F00B         	call	___ftadd	;wreg free
  4440  002668  C12A  F14F         	movff	?___ftadd,?_floor
  4441  00266C  C12B  F150         	movff	?___ftadd+1,?_floor+1
  4442  002670  C12C  F151         	movff	?___ftadd+2,?_floor+2
  4443  002674  0012               	return	
  4444  002676                     l815:
  4445                           
  4446                           ; BSR set to: 1
  4447  002676  C152  F14F         	movff	floor@i,?_floor
  4448  00267A  C153  F150         	movff	floor@i+1,?_floor+1
  4449  00267E  C154  F151         	movff	floor@i+2,?_floor+2
  4450  002682  0012               	return		;funcret
  4451  002684                     __end_of_floor:
  4452                           	opt stack 0
  4453                           tblptru	equ	0xFF8
  4454                           intcon	equ	0xFF2
  4455                           postinc0	equ	0xFEE
  4456                           wreg	equ	0xFE8
  4457                           plusw1	equ	0xFE3
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           plusw2	equ	0xFDB
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _frexp *****************
  4466 ;; Defined at:
  4467 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  value           3    0[BANK1 ] int 
  4470 ;;  eptr            2    3[BANK1 ] PTR int 
  4471 ;;		 -> log@exponent(2), floor@expon(2), 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  3    0[BANK1 ] PTR int 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         0       0       5       0       0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          0       0       2       0       0       0       0       0       0
  4486 ;;      Totals:         0       0       7       0       0       0       0       0       0
  4487 ;;Total ram usage:        7 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    9
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_floor
  4494 ;;		_log
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text17
  4499  002F9A                     __ptext17:
  4500                           	opt stack 0
  4501  002F9A                     _frexp:
  4502                           	opt stack 17
  4503                           
  4504                           ;incstack = 0
  4505  002F9A  0101               	movlb	1	; () banked
  4506  002F9C  5100               	movf	frexp@value& (0+255),w,b
  4507  002F9E  1101               	iorwf	(frexp@value+1)& (0+255),w,b
  4508  002FA0  1102               	iorwf	(frexp@value+2)& (0+255),w,b
  4509  002FA2  A4D8               	btfss	status,2,c
  4510  002FA4  D00F               	goto	l820
  4511                           
  4512                           ; BSR set to: 1
  4513  002FA6  C103  FFD9         	movff	frexp@eptr,fsr2l
  4514  002FAA  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  4515  002FAE  0E00               	movlw	0
  4516  002FB0  6EDE               	movwf	postinc2,c
  4517  002FB2  0E00               	movlw	0
  4518  002FB4  6EDD               	movwf	postdec2,c
  4519                           
  4520                           ; BSR set to: 1
  4521  002FB6  0E00               	movlw	0
  4522  002FB8  6F00               	movwf	?_frexp& (0+255),b
  4523  002FBA  0E00               	movlw	0
  4524  002FBC  6F01               	movwf	(?_frexp+1)& (0+255),b
  4525  002FBE  0E00               	movlw	0
  4526  002FC0  6F02               	movwf	(?_frexp+2)& (0+255),b
  4527                           
  4528                           ; BSR set to: 1
  4529  002FC2  0012               	return	
  4530  002FC4                     l820:
  4531                           
  4532                           ; BSR set to: 1
  4533                           
  4534                           ; BSR set to: 1
  4535  002FC4  5102               	movf	(frexp@value+2)& (0+255),w,b
  4536  002FC6  0B7F               	andlw	127
  4537  002FC8  6F05               	movwf	??_frexp& (0+255),b
  4538  002FCA  6B06               	clrf	(??_frexp+1)& (0+255),b
  4539  002FCC  90D8               	bcf	status,0,c
  4540  002FCE  3705               	rlcf	??_frexp& (0+255),f,b
  4541  002FD0  3706               	rlcf	(??_frexp+1)& (0+255),f,b
  4542  002FD2  C103  FFD9         	movff	frexp@eptr,fsr2l
  4543  002FD6  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  4544  002FDA  C105  FFDE         	movff	??_frexp,postinc2
  4545  002FDE  C106  FFDD         	movff	??_frexp+1,postdec2
  4546  002FE2  AF01               	btfss	(frexp@value+1)& (0+255),7,b
  4547  002FE4  D003               	goto	u2880
  4548  002FE6  6B05               	clrf	??_frexp& (0+255),b
  4549  002FE8  2B05               	incf	??_frexp& (0+255),f,b
  4550  002FEA  D002               	goto	u2888
  4551  002FEC                     u2880:
  4552  002FEC  0101               	movlb	1	; () banked
  4553  002FEE  6B05               	clrf	??_frexp& (0+255),b
  4554  002FF0                     u2888:
  4555  002FF0  5105               	movf	??_frexp& (0+255),w,b
  4556  002FF2  C103  FFD9         	movff	frexp@eptr,fsr2l
  4557  002FF6  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  4558  002FFA  12DE               	iorwf	postinc2,f,c
  4559  002FFC  0E00               	movlw	0
  4560  002FFE  12DD               	iorwf	postdec2,f,c
  4561                           
  4562                           ; BSR set to: 1
  4563  003000  C103  FFD9         	movff	frexp@eptr,fsr2l
  4564  003004  C104  FFDA         	movff	frexp@eptr+1,fsr2h
  4565  003008  0E82               	movlw	130
  4566  00300A  26DE               	addwf	postinc2,f,c
  4567  00300C  0EFF               	movlw	255
  4568  00300E  22DD               	addwfc	postdec2,f,c
  4569                           
  4570                           ; BSR set to: 1
  4571  003010  8102               	bsf	(frexp@value+2)& (0+255),0,b
  4572  003012  8302               	bsf	(frexp@value+2)& (0+255),1,b
  4573  003014  8502               	bsf	(frexp@value+2)& (0+255),2,b
  4574  003016  8702               	bsf	(frexp@value+2)& (0+255),3,b
  4575  003018  8902               	bsf	(frexp@value+2)& (0+255),4,b
  4576  00301A  8B02               	bsf	(frexp@value+2)& (0+255),5,b
  4577  00301C  9D02               	bcf	(frexp@value+2)& (0+255),6,b
  4578                           
  4579                           ; BSR set to: 1
  4580  00301E  9F01               	bcf	(frexp@value+1)& (0+255),7,b
  4581                           
  4582                           ; BSR set to: 1
  4583  003020  C100  F100         	movff	frexp@value,?_frexp
  4584  003024  C101  F101         	movff	frexp@value+1,?_frexp+1
  4585  003028  C102  F102         	movff	frexp@value+2,?_frexp+2
  4586  00302C  0012               	return	
  4587  00302E                     __end_of_frexp:
  4588                           	opt stack 0
  4589                           tblptru	equ	0xFF8
  4590                           intcon	equ	0xFF2
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           plusw1	equ	0xFE3
  4594                           postinc2	equ	0xFDE
  4595                           postdec2	equ	0xFDD
  4596                           plusw2	equ	0xFDB
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function ___fttol *****************
  4602 ;; Defined at:
  4603 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  f1              3   54[BANK1 ] float 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  lval            4   64[BANK1 ] unsigned long 
  4608 ;;  exp1            1   68[BANK1 ] unsigned char 
  4609 ;;  sign1           1   63[BANK1 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  4   54[BANK1 ] long 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         0       0       4       0       0       0       0       0       0
  4620 ;;      Locals:         0       0       6       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       5       0       0       0       0       0       0
  4622 ;;      Totals:         0       0      15       0       0       0       0       0       0
  4623 ;;Total ram usage:       15 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    9
  4626 ;; This function calls:
  4627 ;;		Nothing
  4628 ;; This function is called by:
  4629 ;;		_wait_in_ms
  4630 ;;		_coinfig_ccpcon
  4631 ;;		_config_ccp1
  4632 ;;		_config_ccp2
  4633 ;;		_pow
  4634 ;;		_exp
  4635 ;;		_floor
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text18
  4640  001FFC                     __ptext18:
  4641                           	opt stack 0
  4642  001FFC                     ___fttol:
  4643                           	opt stack 20
  4644                           
  4645                           ; BSR set to: 1
  4646                           ;incstack = 0
  4647  001FFC  C138  F13A         	movff	___fttol@f1+2,??___fttol
  4648  002000  0101               	movlb	1	; () banked
  4649  002002  6B3B               	clrf	(??___fttol+1)& (0+255),b
  4650  002004  6B3C               	clrf	(??___fttol+2)& (0+255),b
  4651  002006  3537               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4652  002008  373A               	rlcf	??___fttol& (0+255),f,b
  4653  00200A  E301               	bnc	u2791
  4654  00200C  813B               	bsf	(??___fttol+1)& (0+255),0,b
  4655  00200E                     u2791:
  4656  00200E  513A               	movf	??___fttol& (0+255),w,b
  4657  002010  6F44               	movwf	___fttol@exp1& (0+255),b
  4658  002012  5144               	movf	___fttol@exp1& (0+255),w,b
  4659  002014  A4D8               	btfss	status,2,c
  4660  002016  D009               	goto	l521
  4661                           
  4662                           ; BSR set to: 1
  4663  002018  0E00               	movlw	0
  4664  00201A  6F36               	movwf	?___fttol& (0+255),b
  4665  00201C  0E00               	movlw	0
  4666  00201E  6F37               	movwf	(?___fttol+1)& (0+255),b
  4667  002020  0E00               	movlw	0
  4668  002022  6F38               	movwf	(?___fttol+2)& (0+255),b
  4669  002024  0E00               	movlw	0
  4670  002026  6F39               	movwf	(?___fttol+3)& (0+255),b
  4671                           
  4672                           ; BSR set to: 1
  4673  002028  0012               	return	
  4674  00202A                     l521:
  4675                           
  4676                           ; BSR set to: 1
  4677                           
  4678                           ; BSR set to: 1
  4679  00202A  0E17               	movlw	23
  4680  00202C  6F3A               	movwf	??___fttol& (0+255),b
  4681  00202E  C136  F13B         	movff	___fttol@f1,??___fttol+1
  4682  002032  C137  F13C         	movff	___fttol@f1+1,??___fttol+2
  4683  002036  C138  F13D         	movff	___fttol@f1+2,??___fttol+3
  4684  00203A  293A               	incf	??___fttol& (0+255),w,b
  4685  00203C  6F3E               	movwf	(??___fttol+4)& (0+255),b
  4686  00203E  D004               	goto	u2810
  4687  002040                     u2815:
  4688  002040  90D8               	bcf	status,0,c
  4689  002042  333D               	rrcf	(??___fttol+3)& (0+255),f,b
  4690  002044  333C               	rrcf	(??___fttol+2)& (0+255),f,b
  4691  002046  333B               	rrcf	(??___fttol+1)& (0+255),f,b
  4692  002048                     u2810:
  4693  002048  2F3E               	decfsz	(??___fttol+4)& (0+255),f,b
  4694  00204A  D7FA               	goto	u2815
  4695  00204C  0101               	movlb	1	; () banked
  4696  00204E  513B               	movf	(??___fttol+1)& (0+255),w,b
  4697  002050  6F3F               	movwf	___fttol@sign1& (0+255),b
  4698                           
  4699                           ; BSR set to: 1
  4700  002052  8F37               	bsf	(___fttol@f1+1)& (0+255),7,b
  4701                           
  4702                           ; BSR set to: 1
  4703  002054  0EFF               	movlw	255
  4704  002056  1736               	andwf	___fttol@f1& (0+255),f,b
  4705  002058  0EFF               	movlw	255
  4706  00205A  1737               	andwf	(___fttol@f1+1)& (0+255),f,b
  4707  00205C  0E00               	movlw	0
  4708  00205E  1738               	andwf	(___fttol@f1+2)& (0+255),f,b
  4709                           
  4710                           ; BSR set to: 1
  4711  002060  5136               	movf	___fttol@f1& (0+255),w,b
  4712  002062  6F40               	movwf	___fttol@lval& (0+255),b
  4713  002064  5137               	movf	(___fttol@f1+1)& (0+255),w,b
  4714  002066  6F41               	movwf	(___fttol@lval+1)& (0+255),b
  4715  002068  5138               	movf	(___fttol@f1+2)& (0+255),w,b
  4716  00206A  6F42               	movwf	(___fttol@lval+2)& (0+255),b
  4717  00206C  6B43               	clrf	(___fttol@lval+3)& (0+255),b
  4718                           
  4719                           ; BSR set to: 1
  4720  00206E  0E8E               	movlw	142
  4721  002070  5F44               	subwf	___fttol@exp1& (0+255),f,b
  4722                           
  4723                           ; BSR set to: 1
  4724  002072  AF44               	btfss	___fttol@exp1& (0+255),7,b
  4725  002074  D016               	goto	l523
  4726                           
  4727                           ; BSR set to: 1
  4728  002076  5144               	movf	___fttol@exp1& (0+255),w,b
  4729  002078  0A80               	xorlw	128
  4730  00207A  0F8F               	addlw	143
  4731  00207C  B0D8               	btfsc	status,0,c
  4732  00207E  D009               	goto	l524
  4733                           
  4734                           ; BSR set to: 1
  4735  002080  0E00               	movlw	0
  4736  002082  6F36               	movwf	?___fttol& (0+255),b
  4737  002084  0E00               	movlw	0
  4738  002086  6F37               	movwf	(?___fttol+1)& (0+255),b
  4739  002088  0E00               	movlw	0
  4740  00208A  6F38               	movwf	(?___fttol+2)& (0+255),b
  4741  00208C  0E00               	movlw	0
  4742  00208E  6F39               	movwf	(?___fttol+3)& (0+255),b
  4743                           
  4744                           ; BSR set to: 1
  4745  002090  0012               	return	
  4746  002092                     l524:
  4747                           
  4748                           ; BSR set to: 1
  4749                           
  4750                           ; BSR set to: 1
  4751                           
  4752                           ; BSR set to: 1
  4753  002092  90D8               	bcf	status,0,c
  4754  002094  3343               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4755  002096  3342               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4756  002098  3341               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4757  00209A  3340               	rrcf	___fttol@lval& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 1
  4760  00209C  3F44               	incfsz	___fttol@exp1& (0+255),f,b
  4761  00209E  D7F9               	goto	l524
  4762                           
  4763                           ; BSR set to: 1
  4764  0020A0  D015               	goto	u2850
  4765  0020A2                     l523:
  4766                           
  4767                           ; BSR set to: 1
  4768                           
  4769                           ; BSR set to: 1
  4770  0020A2  0E17               	movlw	23
  4771  0020A4  6544               	cpfsgt	___fttol@exp1& (0+255),b
  4772  0020A6  D00F               	goto	l529
  4773                           
  4774                           ; BSR set to: 1
  4775  0020A8  0E00               	movlw	0
  4776  0020AA  6F36               	movwf	?___fttol& (0+255),b
  4777  0020AC  0E00               	movlw	0
  4778  0020AE  6F37               	movwf	(?___fttol+1)& (0+255),b
  4779  0020B0  0E00               	movlw	0
  4780  0020B2  6F38               	movwf	(?___fttol+2)& (0+255),b
  4781  0020B4  0E00               	movlw	0
  4782  0020B6  6F39               	movwf	(?___fttol+3)& (0+255),b
  4783                           
  4784                           ; BSR set to: 1
  4785  0020B8  0012               	return	
  4786  0020BA                     
  4787                           ; BSR set to: 1
  4788                           
  4789                           ; BSR set to: 1
  4790  0020BA  90D8               	bcf	status,0,c
  4791  0020BC  3740               	rlcf	___fttol@lval& (0+255),f,b
  4792  0020BE  3741               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4793  0020C0  3742               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4794  0020C2  3743               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4795  0020C4  0744               	decf	___fttol@exp1& (0+255),f,b
  4796  0020C6                     l529:
  4797                           
  4798                           ; BSR set to: 1
  4799                           
  4800                           ; BSR set to: 1
  4801  0020C6  5144               	movf	___fttol@exp1& (0+255),w,b
  4802  0020C8  A4D8               	btfss	status,2,c
  4803  0020CA  D7F7               	goto	l530
  4804  0020CC                     u2850:
  4805                           
  4806                           ; BSR set to: 1
  4807                           
  4808                           ; BSR set to: 1
  4809                           
  4810                           ; BSR set to: 1
  4811  0020CC  513F               	movf	___fttol@sign1& (0+255),w,b
  4812  0020CE  B4D8               	btfsc	status,2,c
  4813  0020D0  D008               	goto	l532
  4814                           
  4815                           ; BSR set to: 1
  4816  0020D2  1F43               	comf	(___fttol@lval+3)& (0+255),f,b
  4817  0020D4  1F42               	comf	(___fttol@lval+2)& (0+255),f,b
  4818  0020D6  1F41               	comf	(___fttol@lval+1)& (0+255),f,b
  4819  0020D8  6D40               	negf	___fttol@lval& (0+255),b
  4820  0020DA  0E00               	movlw	0
  4821  0020DC  2341               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4822  0020DE  2342               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4823  0020E0  2343               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4824  0020E2                     l532:
  4825                           
  4826                           ; BSR set to: 1
  4827                           
  4828                           ; BSR set to: 1
  4829  0020E2  C140  F136         	movff	___fttol@lval,?___fttol
  4830  0020E6  C141  F137         	movff	___fttol@lval+1,?___fttol+1
  4831  0020EA  C142  F138         	movff	___fttol@lval+2,?___fttol+2
  4832  0020EE  C143  F139         	movff	___fttol@lval+3,?___fttol+3
  4833  0020F2  0012               	return	
  4834  0020F4                     __end_of___fttol:
  4835                           	opt stack 0
  4836                           tblptru	equ	0xFF8
  4837                           intcon	equ	0xFF2
  4838                           postinc0	equ	0xFEE
  4839                           wreg	equ	0xFE8
  4840                           plusw1	equ	0xFE3
  4841                           postinc2	equ	0xFDE
  4842                           postdec2	equ	0xFDD
  4843                           plusw2	equ	0xFDB
  4844                           fsr2h	equ	0xFDA
  4845                           fsr2l	equ	0xFD9
  4846                           status	equ	0xFD8
  4847                           
  4848 ;; *************** function ___ftge *****************
  4849 ;; Defined at:
  4850 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  ff1             3    0[BANK1 ] float 
  4853 ;;  ff2             3    3[BANK1 ] float 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;		None               void
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         0       0       6       0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          0       0       3       0       0       0       0       0       0
  4868 ;;      Totals:         0       0       9       0       0       0       0       0       0
  4869 ;;Total ram usage:        9 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    9
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_pow
  4876 ;;		_exp
  4877 ;;		_floor
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text19
  4882  00302E                     __ptext19:
  4883                           	opt stack 0
  4884  00302E                     ___ftge:
  4885                           	opt stack 16
  4886                           
  4887                           ; BSR set to: 1
  4888                           ;incstack = 0
  4889  00302E  0101               	movlb	1	; () banked
  4890  003030  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
  4891  003032  D016               	goto	l493
  4892                           
  4893                           ; BSR set to: 1
  4894  003034  C100  F106         	movff	___ftge@ff1,??___ftge
  4895  003038  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
  4896  00303C  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
  4897  003040  1F06               	comf	??___ftge& (0+255),f,b
  4898  003042  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4899  003044  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4900  003046  2B06               	incf	??___ftge& (0+255),f,b
  4901  003048  0E00               	movlw	0
  4902  00304A  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4903  00304C  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4904  00304E  0E00               	movlw	0
  4905  003050  2506               	addwf	??___ftge& (0+255),w,b
  4906  003052  6F00               	movwf	___ftge@ff1& (0+255),b
  4907  003054  0E00               	movlw	0
  4908  003056  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4909  003058  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
  4910  00305A  0E80               	movlw	128
  4911  00305C  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4912  00305E  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
  4913  003060                     l493:
  4914                           
  4915                           ; BSR set to: 1
  4916                           
  4917                           ; BSR set to: 1
  4918  003060  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4919  003062  D016               	goto	l494
  4920                           
  4921                           ; BSR set to: 1
  4922  003064  C103  F106         	movff	___ftge@ff2,??___ftge
  4923  003068  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
  4924  00306C  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
  4925  003070  1F06               	comf	??___ftge& (0+255),f,b
  4926  003072  1F07               	comf	(??___ftge+1)& (0+255),f,b
  4927  003074  1F08               	comf	(??___ftge+2)& (0+255),f,b
  4928  003076  2B06               	incf	??___ftge& (0+255),f,b
  4929  003078  0E00               	movlw	0
  4930  00307A  2307               	addwfc	(??___ftge+1)& (0+255),f,b
  4931  00307C  2308               	addwfc	(??___ftge+2)& (0+255),f,b
  4932  00307E  0E00               	movlw	0
  4933  003080  2506               	addwf	??___ftge& (0+255),w,b
  4934  003082  6F03               	movwf	___ftge@ff2& (0+255),b
  4935  003084  0E00               	movlw	0
  4936  003086  2107               	addwfc	(??___ftge+1)& (0+255),w,b
  4937  003088  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
  4938  00308A  0E80               	movlw	128
  4939  00308C  2108               	addwfc	(??___ftge+2)& (0+255),w,b
  4940  00308E  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
  4941  003090                     l494:
  4942                           
  4943                           ; BSR set to: 1
  4944                           
  4945                           ; BSR set to: 1
  4946  003090  0E00               	movlw	0
  4947  003092  1B00               	xorwf	___ftge@ff1& (0+255),f,b
  4948  003094  0E00               	movlw	0
  4949  003096  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4950  003098  0E80               	movlw	128
  4951  00309A  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4952                           
  4953                           ; BSR set to: 1
  4954  00309C  0E00               	movlw	0
  4955  00309E  1B03               	xorwf	___ftge@ff2& (0+255),f,b
  4956  0030A0  0E00               	movlw	0
  4957  0030A2  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4958  0030A4  0E80               	movlw	128
  4959  0030A6  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4960  0030A8  5103               	movf	___ftge@ff2& (0+255),w,b
  4961  0030AA  5D00               	subwf	___ftge@ff1& (0+255),w,b
  4962  0030AC  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
  4963  0030AE  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4964  0030B0  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
  4965  0030B2  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4966  0030B4  B0D8               	btfsc	status,0,c
  4967  0030B6  D002               	goto	l2645
  4968                           
  4969                           ; BSR set to: 1
  4970  0030B8  90D8               	bcf	status,0,c
  4971  0030BA  0012               	return	
  4972  0030BC                     l2645:
  4973                           
  4974                           ; BSR set to: 1
  4975                           
  4976                           ; BSR set to: 1
  4977  0030BC  80D8               	bsf	status,0,c
  4978                           
  4979                           ; BSR set to: 1
  4980  0030BE  0012               	return	
  4981  0030C0                     __end_of___ftge:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           intcon	equ	0xFF2
  4985                           postinc0	equ	0xFEE
  4986                           wreg	equ	0xFE8
  4987                           plusw1	equ	0xFE3
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           plusw2	equ	0xFDB
  4991                           fsr2h	equ	0xFDA
  4992                           fsr2l	equ	0xFD9
  4993                           status	equ	0xFD8
  4994                           
  4995 ;; *************** function ___altoft *****************
  4996 ;; Defined at:
  4997 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  c               4   69[BANK1 ] long 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  sign            1   78[BANK1 ] unsigned char 
  5002 ;;  exp             1   77[BANK1 ] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  3   69[BANK1 ] float 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5012 ;;      Params:         0       0       4       0       0       0       0       0       0
  5013 ;;      Locals:         0       0       2       0       0       0       0       0       0
  5014 ;;      Temps:          0       0       4       0       0       0       0       0       0
  5015 ;;      Totals:         0       0      10       0       0       0       0       0       0
  5016 ;;Total ram usage:       10 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:   10
  5019 ;; This function calls:
  5020 ;;		___ftpack
  5021 ;; This function is called by:
  5022 ;;		_floor
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text20
  5027  0033F0                     __ptext20:
  5028                           	opt stack 0
  5029  0033F0                     ___altoft:
  5030                           	opt stack 15
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;incstack = 0
  5034  0033F0  0E00               	movlw	0
  5035  0033F2  0101               	movlb	1	; () banked
  5036  0033F4  6F4E               	movwf	___altoft@sign& (0+255),b
  5037  0033F6  0E8E               	movlw	142
  5038  0033F8  6F4D               	movwf	___altoft@exp& (0+255),b
  5039                           
  5040                           ; BSR set to: 1
  5041  0033FA  AF48               	btfss	(___altoft@c+3)& (0+255),7,b
  5042  0033FC  D011               	goto	l291
  5043                           
  5044                           ; BSR set to: 1
  5045  0033FE  1F48               	comf	(___altoft@c+3)& (0+255),f,b
  5046  003400  1F47               	comf	(___altoft@c+2)& (0+255),f,b
  5047  003402  1F46               	comf	(___altoft@c+1)& (0+255),f,b
  5048  003404  6D45               	negf	___altoft@c& (0+255),b
  5049  003406  0E00               	movlw	0
  5050  003408  2346               	addwfc	(___altoft@c+1)& (0+255),f,b
  5051  00340A  2347               	addwfc	(___altoft@c+2)& (0+255),f,b
  5052  00340C  2348               	addwfc	(___altoft@c+3)& (0+255),f,b
  5053                           
  5054                           ; BSR set to: 1
  5055  00340E  0E01               	movlw	1
  5056  003410  6F4E               	movwf	___altoft@sign& (0+255),b
  5057                           
  5058                           ; BSR set to: 1
  5059  003412  D006               	goto	l291
  5060  003414                     
  5061                           ; BSR set to: 1
  5062                           
  5063                           ; BSR set to: 1
  5064  003414  90D8               	bcf	status,0,c
  5065  003416  3348               	rrcf	(___altoft@c+3)& (0+255),f,b
  5066  003418  3347               	rrcf	(___altoft@c+2)& (0+255),f,b
  5067  00341A  3346               	rrcf	(___altoft@c+1)& (0+255),f,b
  5068  00341C  3345               	rrcf	___altoft@c& (0+255),f,b
  5069  00341E  2B4D               	incf	___altoft@exp& (0+255),f,b
  5070  003420                     l291:
  5071                           
  5072                           ; BSR set to: 1
  5073                           
  5074                           ; BSR set to: 1
  5075  003420  0E00               	movlw	0
  5076  003422  1545               	andwf	___altoft@c& (0+255),w,b
  5077  003424  6F49               	movwf	??___altoft& (0+255),b
  5078  003426  0E00               	movlw	0
  5079  003428  1546               	andwf	(___altoft@c+1)& (0+255),w,b
  5080  00342A  6F4A               	movwf	(??___altoft+1)& (0+255),b
  5081  00342C  0E00               	movlw	0
  5082  00342E  1547               	andwf	(___altoft@c+2)& (0+255),w,b
  5083  003430  6F4B               	movwf	(??___altoft+2)& (0+255),b
  5084  003432  0EFF               	movlw	255
  5085  003434  1548               	andwf	(___altoft@c+3)& (0+255),w,b
  5086  003436  6F4C               	movwf	(??___altoft+3)& (0+255),b
  5087  003438  5149               	movf	??___altoft& (0+255),w,b
  5088  00343A  114A               	iorwf	(??___altoft+1)& (0+255),w,b
  5089  00343C  114B               	iorwf	(??___altoft+2)& (0+255),w,b
  5090  00343E  114C               	iorwf	(??___altoft+3)& (0+255),w,b
  5091  003440  A4D8               	btfss	status,2,c
  5092  003442  D7E8               	goto	l292
  5093                           
  5094                           ; BSR set to: 1
  5095                           
  5096                           ; BSR set to: 1
  5097  003444  C145  F100         	movff	___altoft@c,___ftpack@arg
  5098  003448  C146  F101         	movff	___altoft@c+1,___ftpack@arg+1
  5099  00344C  C147  F102         	movff	___altoft@c+2,___ftpack@arg+2
  5100  003450  C14D  F103         	movff	___altoft@exp,___ftpack@exp
  5101  003454  C14E  F104         	movff	___altoft@sign,___ftpack@sign
  5102  003458  EC7B  F016         	call	___ftpack	;wreg free
  5103  00345C  C100  F145         	movff	?___ftpack,?___altoft
  5104  003460  C101  F146         	movff	?___ftpack+1,?___altoft+1
  5105  003464  C102  F147         	movff	?___ftpack+2,?___altoft+2
  5106  003468  0012               	return	
  5107  00346A                     __end_of___altoft:
  5108                           	opt stack 0
  5109                           tblptru	equ	0xFF8
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           plusw1	equ	0xFE3
  5114                           postinc2	equ	0xFDE
  5115                           postdec2	equ	0xFDD
  5116                           plusw2	equ	0xFDB
  5117                           fsr2h	equ	0xFDA
  5118                           fsr2l	equ	0xFD9
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _eval_poly *****************
  5122 ;; Defined at:
  5123 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  x               3   54[BANK1 ] float 
  5126 ;;  d               2   57[BANK1 ] PTR const 
  5127 ;;		 -> log@coeff(27), exp@coeff(30), 
  5128 ;;  n               2   59[BANK1 ] int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  res             3   63[BANK1 ] int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  3   54[BANK1 ] int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5140 ;;      Params:         0       0       7       0       0       0       0       0       0
  5141 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       2       0       0       0       0       0       0
  5143 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5144 ;;Total ram usage:       12 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   11
  5147 ;; This function calls:
  5148 ;;		___ftadd
  5149 ;;		___ftmul
  5150 ;;		___wmul
  5151 ;; This function is called by:
  5152 ;;		_exp
  5153 ;;		_log
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text21
  5158  002762                     __ptext21:
  5159                           	opt stack 0
  5160  002762                     _eval_poly:
  5161                           	opt stack 15
  5162                           
  5163                           ;incstack = 0
  5164  002762  C13B  F100         	movff	eval_poly@n,___wmul@multiplier
  5165  002766  C13C  F101         	movff	eval_poly@n+1,___wmul@multiplier+1
  5166  00276A  0E00               	movlw	0
  5167  00276C  0101               	movlb	1	; () banked
  5168  00276E  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5169  002770  0E03               	movlw	3
  5170  002772  6F02               	movwf	___wmul@multiplicand& (0+255),b
  5171  002774  EC25  F01C         	call	___wmul	;wreg free
  5172  002778  C139  F13D         	movff	eval_poly@d,??_eval_poly
  5173  00277C  C13A  F13E         	movff	eval_poly@d+1,??_eval_poly+1
  5174  002780  0101               	movlb	1	; () banked
  5175  002782  5100               	movf	?___wmul& (0+255),w,b
  5176  002784  273D               	addwf	??_eval_poly& (0+255),f,b
  5177  002786  5101               	movf	(?___wmul+1)& (0+255),w,b
  5178  002788  233E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  5179  00278A  C13D  FFF6         	movff	??_eval_poly,tblptrl
  5180  00278E  C13E  FFF7         	movff	??_eval_poly+1,tblptrh
  5181  002792                     	if	0	;tblptru may be non-zero
  5182  002792                     	endif
  5183  002792                     	if	0	;tblptru may be non-zero
  5184  002792                     	endif
  5185  002792  0009               	tblrd		*+
  5186  002794  CFF5 F13F          	movff	tablat,eval_poly@res
  5187  002798  0009               	tblrd		*+
  5188  00279A  CFF5 F140          	movff	tablat,eval_poly@res+1
  5189  00279E  000A               	tblrd		*-
  5190  0027A0  CFF5 F141          	movff	tablat,eval_poly@res+2
  5191  0027A4  D040               	goto	l850
  5192  0027A6                     
  5193                           ; BSR set to: 1
  5194                           
  5195                           ; BSR set to: 1
  5196  0027A6  C13F  F10F         	movff	eval_poly@res,___ftmul@f2
  5197  0027AA  C140  F110         	movff	eval_poly@res+1,___ftmul@f2+1
  5198  0027AE  C141  F111         	movff	eval_poly@res+2,___ftmul@f2+2
  5199  0027B2  C136  F10C         	movff	eval_poly@x,___ftmul@f1
  5200  0027B6  C137  F10D         	movff	eval_poly@x+1,___ftmul@f1+1
  5201  0027BA  C138  F10E         	movff	eval_poly@x+2,___ftmul@f1+2
  5202  0027BE  EC7A  F010         	call	___ftmul	;wreg free
  5203  0027C2  C10C  F12A         	movff	?___ftmul,___ftadd@f1
  5204  0027C6  C10D  F12B         	movff	?___ftmul+1,___ftadd@f1+1
  5205  0027CA  C10E  F12C         	movff	?___ftmul+2,___ftadd@f1+2
  5206  0027CE  0E00               	movlw	0
  5207  0027D0  0101               	movlb	1	; () banked
  5208  0027D2  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5209  0027D4  0E03               	movlw	3
  5210  0027D6  6F02               	movwf	___wmul@multiplicand& (0+255),b
  5211  0027D8  073B               	decf	eval_poly@n& (0+255),f,b
  5212  0027DA  A0D8               	btfss	status,0,c
  5213  0027DC  073C               	decf	(eval_poly@n+1)& (0+255),f,b
  5214  0027DE  C13B  F100         	movff	eval_poly@n,___wmul@multiplier
  5215  0027E2  C13C  F101         	movff	eval_poly@n+1,___wmul@multiplier+1
  5216  0027E6  EC25  F01C         	call	___wmul	;wreg free
  5217  0027EA  C139  F13D         	movff	eval_poly@d,??_eval_poly
  5218  0027EE  C13A  F13E         	movff	eval_poly@d+1,??_eval_poly+1
  5219  0027F2  0101               	movlb	1	; () banked
  5220  0027F4  5100               	movf	?___wmul& (0+255),w,b
  5221  0027F6  273D               	addwf	??_eval_poly& (0+255),f,b
  5222  0027F8  5101               	movf	(?___wmul+1)& (0+255),w,b
  5223  0027FA  233E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  5224  0027FC  C13D  FFF6         	movff	??_eval_poly,tblptrl
  5225  002800  C13E  FFF7         	movff	??_eval_poly+1,tblptrh
  5226  002804                     	if	0	;tblptru may be non-zero
  5227  002804                     	endif
  5228  002804                     	if	0	;tblptru may be non-zero
  5229  002804                     	endif
  5230  002804  0009               	tblrd		*+
  5231  002806  CFF5 F12D          	movff	tablat,___ftadd@f2
  5232  00280A  0009               	tblrd		*+
  5233  00280C  CFF5 F12E          	movff	tablat,___ftadd@f2+1
  5234  002810  000A               	tblrd		*-
  5235  002812  CFF5 F12F          	movff	tablat,___ftadd@f2+2
  5236  002816  ECB4  F00B         	call	___ftadd	;wreg free
  5237  00281A  C12A  F13F         	movff	?___ftadd,eval_poly@res
  5238  00281E  C12B  F140         	movff	?___ftadd+1,eval_poly@res+1
  5239  002822  C12C  F141         	movff	?___ftadd+2,eval_poly@res+2
  5240  002826                     l850:
  5241  002826  0101               	movlb	1	; () banked
  5242  002828  513B               	movf	eval_poly@n& (0+255),w,b
  5243  00282A  113C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5244  00282C  A4D8               	btfss	status,2,c
  5245  00282E  D7BB               	goto	l851
  5246                           
  5247                           ; BSR set to: 1
  5248  002830  C13F  F136         	movff	eval_poly@res,?_eval_poly
  5249  002834  C140  F137         	movff	eval_poly@res+1,?_eval_poly+1
  5250  002838  C141  F138         	movff	eval_poly@res+2,?_eval_poly+2
  5251                           
  5252                           ; BSR set to: 1
  5253  00283C  0012               	return		;funcret
  5254  00283E                     __end_of_eval_poly:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           intcon	equ	0xFF2
  5261                           postinc0	equ	0xFEE
  5262                           wreg	equ	0xFE8
  5263                           plusw1	equ	0xFE3
  5264                           postinc2	equ	0xFDE
  5265                           postdec2	equ	0xFDD
  5266                           plusw2	equ	0xFDB
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function ___wmul *****************
  5272 ;; Defined at:
  5273 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  multiplier      2    0[BANK1 ] unsigned int 
  5276 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  product         2    4[BANK1 ] unsigned int 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  2    0[BANK1 ] unsigned int 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, prodl, prodh
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5288 ;;      Params:         0       0       4       0       0       0       0       0       0
  5289 ;;      Locals:         0       0       2       0       0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5291 ;;      Totals:         0       0       6       0       0       0       0       0       0
  5292 ;;Total ram usage:        6 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    9
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_eval_poly
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text22
  5303  00384A                     __ptext22:
  5304                           	opt stack 0
  5305  00384A                     ___wmul:
  5306                           	opt stack 16
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;incstack = 0
  5310  00384A  0101               	movlb	1	; () banked
  5311  00384C  5100               	movf	___wmul@multiplier& (0+255),w,b
  5312  00384E  0302               	mulwf	___wmul@multiplicand& (0+255),b
  5313  003850  CFF3 F104          	movff	prodl,___wmul@product
  5314  003854  CFF4 F105          	movff	prodh,___wmul@product+1
  5315  003858  5100               	movf	___wmul@multiplier& (0+255),w,b
  5316  00385A  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5317  00385C  50F3               	movf	prodl,w,c
  5318  00385E  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  5319  003860  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5320  003862  0302               	mulwf	___wmul@multiplicand& (0+255),b
  5321  003864  50F3               	movf	prodl,w,c
  5322  003866  2705               	addwf	(___wmul@product+1)& (0+255),f,b
  5323                           
  5324                           ; BSR set to: 1
  5325  003868  C104  F100         	movff	___wmul@product,?___wmul
  5326  00386C  C105  F101         	movff	___wmul@product+1,?___wmul+1
  5327  003870  0012               	return	
  5328  003872                     __end_of___wmul:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           plusw1	equ	0xFE3
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           plusw2	equ	0xFDB
  5343                           fsr2h	equ	0xFDA
  5344                           fsr2l	equ	0xFD9
  5345                           status	equ	0xFD8
  5346                           
  5347 ;; *************** function ___ftmul *****************
  5348 ;; Defined at:
  5349 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  f1              3   12[BANK1 ] float 
  5352 ;;  f2              3   15[BANK1 ] float 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  f3_as_produc    3   22[BANK1 ] unsigned um
  5355 ;;  sign            1   26[BANK1 ] unsigned char 
  5356 ;;  cntr            1   25[BANK1 ] unsigned char 
  5357 ;;  exp             1   21[BANK1 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  3   12[BANK1 ] float 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5367 ;;      Params:         0       0       6       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       6       0       0       0       0       0       0
  5369 ;;      Temps:          0       0       3       0       0       0       0       0       0
  5370 ;;      Totals:         0       0      15       0       0       0       0       0       0
  5371 ;;Total ram usage:       15 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   10
  5374 ;; This function calls:
  5375 ;;		___ftpack
  5376 ;; This function is called by:
  5377 ;;		_coinfig_ccpcon
  5378 ;;		_config_ccp1
  5379 ;;		_config_ccp2
  5380 ;;		_pow
  5381 ;;		_exp
  5382 ;;		_log
  5383 ;;		_eval_poly
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           	psect	text23
  5388  0020F4                     __ptext23:
  5389                           	opt stack 0
  5390  0020F4                     ___ftmul:
  5391                           	opt stack 19
  5392                           
  5393                           ; BSR set to: 1
  5394                           ;incstack = 0
  5395  0020F4  C10E  F112         	movff	___ftmul@f1+2,??___ftmul
  5396  0020F8  0101               	movlb	1	; () banked
  5397  0020FA  6B13               	clrf	(??___ftmul+1)& (0+255),b
  5398  0020FC  6B14               	clrf	(??___ftmul+2)& (0+255),b
  5399  0020FE  350D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5400  002100  3712               	rlcf	??___ftmul& (0+255),f,b
  5401  002102  E301               	bnc	u2701
  5402  002104  8113               	bsf	(??___ftmul+1)& (0+255),0,b
  5403  002106                     u2701:
  5404  002106  5112               	movf	??___ftmul& (0+255),w,b
  5405  002108  6F15               	movwf	___ftmul@exp& (0+255),b
  5406  00210A  5115               	movf	___ftmul@exp& (0+255),w,b
  5407  00210C  A4D8               	btfss	status,2,c
  5408  00210E  D007               	goto	l500
  5409                           
  5410                           ; BSR set to: 1
  5411  002110  0E00               	movlw	0
  5412  002112  6F0C               	movwf	?___ftmul& (0+255),b
  5413  002114  0E00               	movlw	0
  5414  002116  6F0D               	movwf	(?___ftmul+1)& (0+255),b
  5415  002118  0E00               	movlw	0
  5416  00211A  6F0E               	movwf	(?___ftmul+2)& (0+255),b
  5417                           
  5418                           ; BSR set to: 1
  5419  00211C  0012               	return	
  5420  00211E                     l500:
  5421                           
  5422                           ; BSR set to: 1
  5423                           
  5424                           ; BSR set to: 1
  5425  00211E  C111  F112         	movff	___ftmul@f2+2,??___ftmul
  5426  002122  6B13               	clrf	(??___ftmul+1)& (0+255),b
  5427  002124  6B14               	clrf	(??___ftmul+2)& (0+255),b
  5428  002126  3510               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5429  002128  3712               	rlcf	??___ftmul& (0+255),f,b
  5430  00212A  E301               	bnc	u2721
  5431  00212C  8113               	bsf	(??___ftmul+1)& (0+255),0,b
  5432  00212E                     u2721:
  5433  00212E  5112               	movf	??___ftmul& (0+255),w,b
  5434  002130  6F1A               	movwf	___ftmul@sign& (0+255),b
  5435  002132  511A               	movf	___ftmul@sign& (0+255),w,b
  5436  002134  A4D8               	btfss	status,2,c
  5437  002136  D007               	goto	l502
  5438                           
  5439                           ; BSR set to: 1
  5440  002138  0E00               	movlw	0
  5441  00213A  6F0C               	movwf	?___ftmul& (0+255),b
  5442  00213C  0E00               	movlw	0
  5443  00213E  6F0D               	movwf	(?___ftmul+1)& (0+255),b
  5444  002140  0E00               	movlw	0
  5445  002142  6F0E               	movwf	(?___ftmul+2)& (0+255),b
  5446                           
  5447                           ; BSR set to: 1
  5448  002144  0012               	return	
  5449  002146                     l502:
  5450                           
  5451                           ; BSR set to: 1
  5452                           
  5453                           ; BSR set to: 1
  5454  002146  511A               	movf	___ftmul@sign& (0+255),w,b
  5455  002148  0F7B               	addlw	123
  5456  00214A  2715               	addwf	___ftmul@exp& (0+255),f,b
  5457                           
  5458                           ; BSR set to: 1
  5459  00214C  C10E  F11A         	movff	___ftmul@f1+2,___ftmul@sign
  5460  002150  5111               	movf	(___ftmul@f2+2)& (0+255),w,b
  5461  002152  1B1A               	xorwf	___ftmul@sign& (0+255),f,b
  5462  002154  0E80               	movlw	128
  5463  002156  171A               	andwf	___ftmul@sign& (0+255),f,b
  5464                           
  5465                           ; BSR set to: 1
  5466  002158  8F0D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5467                           
  5468                           ; BSR set to: 1
  5469  00215A  8F10               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5470                           
  5471                           ; BSR set to: 1
  5472  00215C  0EFF               	movlw	255
  5473  00215E  170F               	andwf	___ftmul@f2& (0+255),f,b
  5474  002160  0EFF               	movlw	255
  5475  002162  1710               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5476  002164  0E00               	movlw	0
  5477  002166  1711               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5478                           
  5479                           ; BSR set to: 1
  5480  002168  0E00               	movlw	0
  5481  00216A  6F16               	movwf	___ftmul@f3_as_product& (0+255),b
  5482  00216C  0E00               	movlw	0
  5483  00216E  6F17               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5484  002170  0E00               	movlw	0
  5485  002172  6F18               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5486                           
  5487                           ; BSR set to: 1
  5488  002174  0E07               	movlw	7
  5489  002176  6F19               	movwf	___ftmul@cntr& (0+255),b
  5490  002178                     
  5491                           ; BSR set to: 1
  5492                           
  5493                           ; BSR set to: 1
  5494  002178  A10C               	btfss	___ftmul@f1& (0+255),0,b
  5495  00217A  D006               	goto	l504
  5496                           
  5497                           ; BSR set to: 1
  5498  00217C  510F               	movf	___ftmul@f2& (0+255),w,b
  5499  00217E  2716               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5500  002180  5110               	movf	(___ftmul@f2+1)& (0+255),w,b
  5501  002182  2317               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5502  002184  5111               	movf	(___ftmul@f2+2)& (0+255),w,b
  5503  002186  2318               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5504  002188                     l504:
  5505                           
  5506                           ; BSR set to: 1
  5507                           
  5508                           ; BSR set to: 1
  5509  002188  90D8               	bcf	status,0,c
  5510  00218A  330E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5511  00218C  330D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5512  00218E  330C               	rrcf	___ftmul@f1& (0+255),f,b
  5513  002190  90D8               	bcf	status,0,c
  5514  002192  370F               	rlcf	___ftmul@f2& (0+255),f,b
  5515  002194  3710               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5516  002196  3711               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5517                           
  5518                           ; BSR set to: 1
  5519  002198  2F19               	decfsz	___ftmul@cntr& (0+255),f,b
  5520  00219A  D7EE               	goto	l503
  5521                           
  5522                           ; BSR set to: 1
  5523                           
  5524                           ; BSR set to: 1
  5525  00219C  0E09               	movlw	9
  5526  00219E  6F19               	movwf	___ftmul@cntr& (0+255),b
  5527  0021A0                     
  5528                           ; BSR set to: 1
  5529                           
  5530                           ; BSR set to: 1
  5531  0021A0  A10C               	btfss	___ftmul@f1& (0+255),0,b
  5532  0021A2  D006               	goto	l507
  5533                           
  5534                           ; BSR set to: 1
  5535  0021A4  510F               	movf	___ftmul@f2& (0+255),w,b
  5536  0021A6  2716               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5537  0021A8  5110               	movf	(___ftmul@f2+1)& (0+255),w,b
  5538  0021AA  2317               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5539  0021AC  5111               	movf	(___ftmul@f2+2)& (0+255),w,b
  5540  0021AE  2318               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5541  0021B0                     l507:
  5542                           
  5543                           ; BSR set to: 1
  5544                           
  5545                           ; BSR set to: 1
  5546  0021B0  90D8               	bcf	status,0,c
  5547  0021B2  330E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5548  0021B4  330D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5549  0021B6  330C               	rrcf	___ftmul@f1& (0+255),f,b
  5550  0021B8  90D8               	bcf	status,0,c
  5551  0021BA  3318               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5552  0021BC  3317               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5553  0021BE  3316               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5554                           
  5555                           ; BSR set to: 1
  5556  0021C0  2F19               	decfsz	___ftmul@cntr& (0+255),f,b
  5557  0021C2  D7EE               	goto	l506
  5558                           
  5559                           ; BSR set to: 1
  5560                           
  5561                           ; BSR set to: 1
  5562  0021C4  C116  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
  5563  0021C8  C117  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5564  0021CC  C118  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5565  0021D0  C115  F103         	movff	___ftmul@exp,___ftpack@exp
  5566  0021D4  C11A  F104         	movff	___ftmul@sign,___ftpack@sign
  5567  0021D8  EC7B  F016         	call	___ftpack	;wreg free
  5568  0021DC  C100  F10C         	movff	?___ftpack,?___ftmul
  5569  0021E0  C101  F10D         	movff	?___ftpack+1,?___ftmul+1
  5570  0021E4  C102  F10E         	movff	?___ftpack+2,?___ftmul+2
  5571  0021E8  0012               	return	
  5572  0021EA                     __end_of___ftmul:
  5573                           	opt stack 0
  5574                           tblptru	equ	0xFF8
  5575                           tblptrh	equ	0xFF7
  5576                           tblptrl	equ	0xFF6
  5577                           tablat	equ	0xFF5
  5578                           prodh	equ	0xFF4
  5579                           prodl	equ	0xFF3
  5580                           intcon	equ	0xFF2
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           plusw1	equ	0xFE3
  5584                           postinc2	equ	0xFDE
  5585                           postdec2	equ	0xFDD
  5586                           plusw2	equ	0xFDB
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function ___ftsub *****************
  5592 ;; Defined at:
  5593 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  f1              3   54[BANK1 ] float 
  5596 ;;  f2              3   57[BANK1 ] float 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;		None
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  3   54[BANK1 ] float 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5608 ;;      Params:         0       0       6       0       0       0       0       0       0
  5609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5611 ;;      Totals:         0       0       6       0       0       0       0       0       0
  5612 ;;Total ram usage:        6 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:   11
  5615 ;; This function calls:
  5616 ;;		___ftadd
  5617 ;; This function is called by:
  5618 ;;		_exp
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text24
  5623  00372E                     __ptext24:
  5624                           	opt stack 0
  5625  00372E                     ___ftsub:
  5626                           	opt stack 15
  5627                           
  5628                           ;incstack = 0
  5629  00372E  0101               	movlb	1	; () banked
  5630  003730  5139               	movf	___ftsub@f2& (0+255),w,b
  5631  003732  113A               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  5632  003734  113B               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  5633  003736  B4D8               	btfsc	status,2,c
  5634  003738  D006               	goto	l517
  5635                           
  5636                           ; BSR set to: 1
  5637  00373A  0E00               	movlw	0
  5638  00373C  1B39               	xorwf	___ftsub@f2& (0+255),f,b
  5639  00373E  0E00               	movlw	0
  5640  003740  1B3A               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  5641  003742  0E80               	movlw	128
  5642  003744  1B3B               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  5643  003746                     l517:
  5644                           
  5645                           ; BSR set to: 1
  5646                           
  5647                           ; BSR set to: 1
  5648  003746  C136  F12A         	movff	___ftsub@f1,___ftadd@f1
  5649  00374A  C137  F12B         	movff	___ftsub@f1+1,___ftadd@f1+1
  5650  00374E  C138  F12C         	movff	___ftsub@f1+2,___ftadd@f1+2
  5651  003752  C139  F12D         	movff	___ftsub@f2,___ftadd@f2
  5652  003756  C13A  F12E         	movff	___ftsub@f2+1,___ftadd@f2+1
  5653  00375A  C13B  F12F         	movff	___ftsub@f2+2,___ftadd@f2+2
  5654  00375E  ECB4  F00B         	call	___ftadd	;wreg free
  5655  003762  C12A  F136         	movff	?___ftadd,?___ftsub
  5656  003766  C12B  F137         	movff	?___ftadd+1,?___ftsub+1
  5657  00376A  C12C  F138         	movff	?___ftadd+2,?___ftsub+2
  5658  00376E  0012               	return	
  5659  003770                     __end_of___ftsub:
  5660                           	opt stack 0
  5661                           tblptru	equ	0xFF8
  5662                           tblptrh	equ	0xFF7
  5663                           tblptrl	equ	0xFF6
  5664                           tablat	equ	0xFF5
  5665                           prodh	equ	0xFF4
  5666                           prodl	equ	0xFF3
  5667                           intcon	equ	0xFF2
  5668                           postinc0	equ	0xFEE
  5669                           wreg	equ	0xFE8
  5670                           plusw1	equ	0xFE3
  5671                           postinc2	equ	0xFDE
  5672                           postdec2	equ	0xFDD
  5673                           plusw2	equ	0xFDB
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function ___ftadd *****************
  5679 ;; Defined at:
  5680 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  f1              3   42[BANK1 ] float 
  5683 ;;  f2              3   45[BANK1 ] float 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  exp1            1   53[BANK1 ] unsigned char 
  5686 ;;  exp2            1   52[BANK1 ] unsigned char 
  5687 ;;  sign            1   51[BANK1 ] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  3   42[BANK1 ] float 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5697 ;;      Params:         0       0       6       0       0       0       0       0       0
  5698 ;;      Locals:         0       0       3       0       0       0       0       0       0
  5699 ;;      Temps:          0       0       3       0       0       0       0       0       0
  5700 ;;      Totals:         0       0      12       0       0       0       0       0       0
  5701 ;;Total ram usage:       12 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:   10
  5704 ;; This function calls:
  5705 ;;		___ftpack
  5706 ;; This function is called by:
  5707 ;;		_coinfig_ccpcon
  5708 ;;		_config_ccp1
  5709 ;;		_config_ccp2
  5710 ;;		___ftsub
  5711 ;;		_floor
  5712 ;;		_log
  5713 ;;		_eval_poly
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text25
  5718  001768                     __ptext25:
  5719                           	opt stack 0
  5720  001768                     ___ftadd:
  5721                           	opt stack 19
  5722                           
  5723                           ;incstack = 0
  5724  001768  C12C  F130         	movff	___ftadd@f1+2,??___ftadd
  5725  00176C  0101               	movlb	1	; () banked
  5726  00176E  6B31               	clrf	(??___ftadd+1)& (0+255),b
  5727  001770  6B32               	clrf	(??___ftadd+2)& (0+255),b
  5728  001772  352B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5729  001774  3730               	rlcf	??___ftadd& (0+255),f,b
  5730  001776  E301               	bnc	u2491
  5731  001778  8131               	bsf	(??___ftadd+1)& (0+255),0,b
  5732  00177A                     u2491:
  5733  00177A  5130               	movf	??___ftadd& (0+255),w,b
  5734  00177C  6F35               	movwf	___ftadd@exp1& (0+255),b
  5735  00177E  C12F  F130         	movff	___ftadd@f2+2,??___ftadd
  5736  001782  6B31               	clrf	(??___ftadd+1)& (0+255),b
  5737  001784  6B32               	clrf	(??___ftadd+2)& (0+255),b
  5738  001786  352E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5739  001788  3730               	rlcf	??___ftadd& (0+255),f,b
  5740  00178A  E301               	bnc	u2501
  5741  00178C  8131               	bsf	(??___ftadd+1)& (0+255),0,b
  5742  00178E                     u2501:
  5743  00178E  5130               	movf	??___ftadd& (0+255),w,b
  5744  001790  6F34               	movwf	___ftadd@exp2& (0+255),b
  5745                           
  5746                           ; BSR set to: 1
  5747  001792  5135               	movf	___ftadd@exp1& (0+255),w,b
  5748  001794  B4D8               	btfsc	status,2,c
  5749  001796  D00B               	goto	u2530
  5750                           
  5751                           ; BSR set to: 1
  5752  001798  5134               	movf	___ftadd@exp2& (0+255),w,b
  5753  00179A  5D35               	subwf	___ftadd@exp1& (0+255),w,b
  5754  00179C  B0D8               	btfsc	status,0,c
  5755  00179E  D00E               	goto	l452
  5756                           
  5757                           ; BSR set to: 1
  5758  0017A0  5135               	movf	___ftadd@exp1& (0+255),w,b
  5759  0017A2  0800               	sublw	0
  5760  0017A4  2534               	addwf	___ftadd@exp2& (0+255),w,b
  5761  0017A6  6F30               	movwf	??___ftadd& (0+255),b
  5762  0017A8  0E18               	movlw	24
  5763  0017AA  6530               	cpfsgt	??___ftadd& (0+255),b
  5764  0017AC  D007               	goto	l452
  5765  0017AE                     u2530:
  5766                           
  5767                           ; BSR set to: 1
  5768  0017AE  C12D  F12A         	movff	___ftadd@f2,?___ftadd
  5769  0017B2  C12E  F12B         	movff	___ftadd@f2+1,?___ftadd+1
  5770  0017B6  C12F  F12C         	movff	___ftadd@f2+2,?___ftadd+2
  5771  0017BA  0012               	return	
  5772  0017BC                     l452:
  5773                           
  5774                           ; BSR set to: 1
  5775                           
  5776                           ; BSR set to: 1
  5777  0017BC  5134               	movf	___ftadd@exp2& (0+255),w,b
  5778  0017BE  B4D8               	btfsc	status,2,c
  5779  0017C0  D00B               	goto	u2560
  5780                           
  5781                           ; BSR set to: 1
  5782  0017C2  5135               	movf	___ftadd@exp1& (0+255),w,b
  5783  0017C4  5D34               	subwf	___ftadd@exp2& (0+255),w,b
  5784  0017C6  B0D8               	btfsc	status,0,c
  5785  0017C8  D00E               	goto	l456
  5786                           
  5787                           ; BSR set to: 1
  5788  0017CA  5134               	movf	___ftadd@exp2& (0+255),w,b
  5789  0017CC  0800               	sublw	0
  5790  0017CE  2535               	addwf	___ftadd@exp1& (0+255),w,b
  5791  0017D0  6F30               	movwf	??___ftadd& (0+255),b
  5792  0017D2  0E18               	movlw	24
  5793  0017D4  6530               	cpfsgt	??___ftadd& (0+255),b
  5794  0017D6  D007               	goto	l456
  5795  0017D8                     u2560:
  5796                           
  5797                           ; BSR set to: 1
  5798  0017D8  C12A  F12A         	movff	___ftadd@f1,?___ftadd
  5799  0017DC  C12B  F12B         	movff	___ftadd@f1+1,?___ftadd+1
  5800  0017E0  C12C  F12C         	movff	___ftadd@f1+2,?___ftadd+2
  5801  0017E4  0012               	return	
  5802  0017E6                     l456:
  5803                           
  5804                           ; BSR set to: 1
  5805                           
  5806                           ; BSR set to: 1
  5807  0017E6  0E06               	movlw	6
  5808  0017E8  6F33               	movwf	___ftadd@sign& (0+255),b
  5809                           
  5810                           ; BSR set to: 1
  5811  0017EA  BF2C               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  5812                           
  5813                           ; BSR set to: 1
  5814  0017EC  8F33               	bsf	___ftadd@sign& (0+255),7,b
  5815                           
  5816                           ; BSR set to: 1
  5817                           
  5818                           ; BSR set to: 1
  5819  0017EE  BF2F               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  5820                           
  5821                           ; BSR set to: 1
  5822  0017F0  8D33               	bsf	___ftadd@sign& (0+255),6,b
  5823                           
  5824                           ; BSR set to: 1
  5825  0017F2  8F2B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5826                           
  5827                           ; BSR set to: 1
  5828  0017F4  0EFF               	movlw	255
  5829  0017F6  172A               	andwf	___ftadd@f1& (0+255),f,b
  5830  0017F8  0EFF               	movlw	255
  5831  0017FA  172B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5832  0017FC  0E00               	movlw	0
  5833  0017FE  172C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5834  001800  8F2E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5835                           
  5836                           ; BSR set to: 1
  5837  001802  0EFF               	movlw	255
  5838  001804  172D               	andwf	___ftadd@f2& (0+255),f,b
  5839  001806  0EFF               	movlw	255
  5840  001808  172E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5841  00180A  0E00               	movlw	0
  5842  00180C  172F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5843                           
  5844                           ; BSR set to: 1
  5845  00180E  5134               	movf	___ftadd@exp2& (0+255),w,b
  5846  001810  5D35               	subwf	___ftadd@exp1& (0+255),w,b
  5847  001812  B0D8               	btfsc	status,0,c
  5848  001814  D01B               	goto	l461
  5849  001816                     u2590:
  5850                           
  5851                           ; BSR set to: 1
  5852                           
  5853                           ; BSR set to: 1
  5854  001816  90D8               	bcf	status,0,c
  5855  001818  372D               	rlcf	___ftadd@f2& (0+255),f,b
  5856  00181A  372E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5857  00181C  372F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5858  00181E  0734               	decf	___ftadd@exp2& (0+255),f,b
  5859                           
  5860                           ; BSR set to: 1
  5861  001820  5135               	movf	___ftadd@exp1& (0+255),w,b
  5862  001822  1934               	xorwf	___ftadd@exp2& (0+255),w,b
  5863  001824  B4D8               	btfsc	status,2,c
  5864  001826  D00D               	goto	l466
  5865                           
  5866                           ; BSR set to: 1
  5867  001828  0733               	decf	___ftadd@sign& (0+255),f,b
  5868  00182A  C133  F130         	movff	___ftadd@sign,??___ftadd
  5869  00182E  0E07               	movlw	7
  5870  001830  1730               	andwf	??___ftadd& (0+255),f,b
  5871  001832  B4D8               	btfsc	status,2,c
  5872  001834  D006               	goto	l466
  5873  001836  D7EF               	goto	u2590
  5874  001838                     
  5875                           ; BSR set to: 1
  5876                           
  5877                           ; BSR set to: 1
  5878  001838  90D8               	bcf	status,0,c
  5879  00183A  332C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5880  00183C  332B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5881  00183E  332A               	rrcf	___ftadd@f1& (0+255),f,b
  5882  001840  2B35               	incf	___ftadd@exp1& (0+255),f,b
  5883  001842                     l466:
  5884                           
  5885                           ; BSR set to: 1
  5886                           
  5887                           ; BSR set to: 1
  5888  001842  5134               	movf	___ftadd@exp2& (0+255),w,b
  5889  001844  1935               	xorwf	___ftadd@exp1& (0+255),w,b
  5890  001846  B4D8               	btfsc	status,2,c
  5891  001848  D01F               	goto	u2660
  5892  00184A  D7F6               	goto	l467
  5893  00184C                     l461:
  5894                           
  5895                           ; BSR set to: 1
  5896                           
  5897                           ; BSR set to: 1
  5898  00184C  5135               	movf	___ftadd@exp1& (0+255),w,b
  5899  00184E  5D34               	subwf	___ftadd@exp2& (0+255),w,b
  5900  001850  B0D8               	btfsc	status,0,c
  5901  001852  D01A               	goto	u2660
  5902  001854                     u2630:
  5903                           
  5904                           ; BSR set to: 1
  5905                           
  5906                           ; BSR set to: 1
  5907  001854  90D8               	bcf	status,0,c
  5908  001856  372A               	rlcf	___ftadd@f1& (0+255),f,b
  5909  001858  372B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5910  00185A  372C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5911  00185C  0735               	decf	___ftadd@exp1& (0+255),f,b
  5912                           
  5913                           ; BSR set to: 1
  5914  00185E  5135               	movf	___ftadd@exp1& (0+255),w,b
  5915  001860  1934               	xorwf	___ftadd@exp2& (0+255),w,b
  5916  001862  B4D8               	btfsc	status,2,c
  5917  001864  D00D               	goto	l475
  5918                           
  5919                           ; BSR set to: 1
  5920  001866  0733               	decf	___ftadd@sign& (0+255),f,b
  5921  001868  C133  F130         	movff	___ftadd@sign,??___ftadd
  5922  00186C  0E07               	movlw	7
  5923  00186E  1730               	andwf	??___ftadd& (0+255),f,b
  5924  001870  B4D8               	btfsc	status,2,c
  5925  001872  D006               	goto	l475
  5926  001874  D7EF               	goto	u2630
  5927  001876                     
  5928                           ; BSR set to: 1
  5929                           
  5930                           ; BSR set to: 1
  5931  001876  90D8               	bcf	status,0,c
  5932  001878  332F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5933  00187A  332E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5934  00187C  332D               	rrcf	___ftadd@f2& (0+255),f,b
  5935  00187E  2B34               	incf	___ftadd@exp2& (0+255),f,b
  5936  001880                     l475:
  5937                           
  5938                           ; BSR set to: 1
  5939                           
  5940                           ; BSR set to: 1
  5941  001880  5134               	movf	___ftadd@exp2& (0+255),w,b
  5942  001882  1935               	xorwf	___ftadd@exp1& (0+255),w,b
  5943  001884  A4D8               	btfss	status,2,c
  5944  001886  D7F7               	goto	l476
  5945  001888                     u2660:
  5946                           
  5947                           ; BSR set to: 1
  5948                           
  5949                           ; BSR set to: 1
  5950                           
  5951                           ; BSR set to: 1
  5952  001888  AF33               	btfss	___ftadd@sign& (0+255),7,b
  5953  00188A  D00C               	goto	l478
  5954                           
  5955                           ; BSR set to: 1
  5956  00188C  0EFF               	movlw	255
  5957  00188E  1B2A               	xorwf	___ftadd@f1& (0+255),f,b
  5958  001890  0EFF               	movlw	255
  5959  001892  1B2B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5960  001894  0EFF               	movlw	255
  5961  001896  1B2C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5962  001898  0E01               	movlw	1
  5963  00189A  272A               	addwf	___ftadd@f1& (0+255),f,b
  5964  00189C  0E00               	movlw	0
  5965  00189E  232B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5966  0018A0  0E00               	movlw	0
  5967  0018A2  232C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5968  0018A4                     l478:
  5969                           
  5970                           ; BSR set to: 1
  5971  0018A4  AD33               	btfss	___ftadd@sign& (0+255),6,b
  5972  0018A6  D00C               	goto	l479
  5973                           
  5974                           ; BSR set to: 1
  5975  0018A8  0EFF               	movlw	255
  5976  0018AA  1B2D               	xorwf	___ftadd@f2& (0+255),f,b
  5977  0018AC  0EFF               	movlw	255
  5978  0018AE  1B2E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5979  0018B0  0EFF               	movlw	255
  5980  0018B2  1B2F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5981  0018B4  0E01               	movlw	1
  5982  0018B6  272D               	addwf	___ftadd@f2& (0+255),f,b
  5983  0018B8  0E00               	movlw	0
  5984  0018BA  232E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5985  0018BC  0E00               	movlw	0
  5986  0018BE  232F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5987  0018C0                     l479:
  5988                           
  5989                           ; BSR set to: 1
  5990                           
  5991                           ; BSR set to: 1
  5992  0018C0  0E00               	movlw	0
  5993  0018C2  6F33               	movwf	___ftadd@sign& (0+255),b
  5994                           
  5995                           ; BSR set to: 1
  5996  0018C4  512A               	movf	___ftadd@f1& (0+255),w,b
  5997  0018C6  272D               	addwf	___ftadd@f2& (0+255),f,b
  5998  0018C8  512B               	movf	(___ftadd@f1+1)& (0+255),w,b
  5999  0018CA  232E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6000  0018CC  512C               	movf	(___ftadd@f1+2)& (0+255),w,b
  6001  0018CE  232F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6002                           
  6003                           ; BSR set to: 1
  6004  0018D0  AF2F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6005  0018D2  D00E               	goto	l480
  6006                           
  6007                           ; BSR set to: 1
  6008  0018D4  0EFF               	movlw	255
  6009  0018D6  1B2D               	xorwf	___ftadd@f2& (0+255),f,b
  6010  0018D8  0EFF               	movlw	255
  6011  0018DA  1B2E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6012  0018DC  0EFF               	movlw	255
  6013  0018DE  1B2F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6014  0018E0  0E01               	movlw	1
  6015  0018E2  272D               	addwf	___ftadd@f2& (0+255),f,b
  6016  0018E4  0E00               	movlw	0
  6017  0018E6  232E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6018  0018E8  0E00               	movlw	0
  6019  0018EA  232F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6020                           
  6021                           ; BSR set to: 1
  6022  0018EC  0E01               	movlw	1
  6023  0018EE  6F33               	movwf	___ftadd@sign& (0+255),b
  6024  0018F0                     l480:
  6025                           
  6026                           ; BSR set to: 1
  6027                           
  6028                           ; BSR set to: 1
  6029  0018F0  C12D  F100         	movff	___ftadd@f2,___ftpack@arg
  6030  0018F4  C12E  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
  6031  0018F8  C12F  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
  6032  0018FC  C135  F103         	movff	___ftadd@exp1,___ftpack@exp
  6033  001900  C133  F104         	movff	___ftadd@sign,___ftpack@sign
  6034  001904  EC7B  F016         	call	___ftpack	;wreg free
  6035  001908  C100  F12A         	movff	?___ftpack,?___ftadd
  6036  00190C  C101  F12B         	movff	?___ftpack+1,?___ftadd+1
  6037  001910  C102  F12C         	movff	?___ftpack+2,?___ftadd+2
  6038  001914  0012               	return	
  6039  001916                     __end_of___ftadd:
  6040                           	opt stack 0
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodh	equ	0xFF4
  6046                           prodl	equ	0xFF3
  6047                           intcon	equ	0xFF2
  6048                           postinc0	equ	0xFEE
  6049                           wreg	equ	0xFE8
  6050                           plusw1	equ	0xFE3
  6051                           postinc2	equ	0xFDE
  6052                           postdec2	equ	0xFDD
  6053                           plusw2	equ	0xFDB
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function ___ftneg *****************
  6059 ;; Defined at:
  6060 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  f1              3    0[BANK1 ] float 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  3    0[BANK1 ] float 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6074 ;;      Params:         0       0       3       0       0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6077 ;;      Totals:         0       0       3       0       0       0       0       0       0
  6078 ;;Total ram usage:        3 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    9
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_pow
  6085 ;;		_exp
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text26
  6090  0038BE                     __ptext26:
  6091                           	opt stack 0
  6092  0038BE                     ___ftneg:
  6093                           	opt stack 17
  6094                           
  6095                           ;incstack = 0
  6096  0038BE  0101               	movlb	1	; () banked
  6097  0038C0  5100               	movf	___ftneg@f1& (0+255),w,b
  6098  0038C2  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6099  0038C4  1102               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6100  0038C6  B4D8               	btfsc	status,2,c
  6101  0038C8  D006               	goto	l511
  6102                           
  6103                           ; BSR set to: 1
  6104  0038CA  0E00               	movlw	0
  6105  0038CC  1B00               	xorwf	___ftneg@f1& (0+255),f,b
  6106  0038CE  0E00               	movlw	0
  6107  0038D0  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6108  0038D2  0E80               	movlw	128
  6109  0038D4  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6110  0038D6                     l511:
  6111                           
  6112                           ; BSR set to: 1
  6113  0038D6  C100  F100         	movff	___ftneg@f1,?___ftneg
  6114  0038DA  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
  6115  0038DE  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
  6116                           
  6117                           ; BSR set to: 1
  6118  0038E2  0012               	return		;funcret
  6119  0038E4                     __end_of___ftneg:
  6120                           	opt stack 0
  6121                           tblptru	equ	0xFF8
  6122                           tblptrh	equ	0xFF7
  6123                           tblptrl	equ	0xFF6
  6124                           tablat	equ	0xFF5
  6125                           prodh	equ	0xFF4
  6126                           prodl	equ	0xFF3
  6127                           intcon	equ	0xFF2
  6128                           postinc0	equ	0xFEE
  6129                           wreg	equ	0xFE8
  6130                           plusw1	equ	0xFE3
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           plusw2	equ	0xFDB
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function ___ftdiv *****************
  6139 ;; Defined at:
  6140 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  f1              3   27[BANK1 ] float 
  6143 ;;  f2              3   30[BANK1 ] float 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  f3              3   37[BANK1 ] float 
  6146 ;;  sign            1   41[BANK1 ] unsigned char 
  6147 ;;  exp             1   40[BANK1 ] unsigned char 
  6148 ;;  cntr            1   36[BANK1 ] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  3   27[BANK1 ] float 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0, cstack
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6158 ;;      Params:         0       0       6       0       0       0       0       0       0
  6159 ;;      Locals:         0       0       6       0       0       0       0       0       0
  6160 ;;      Temps:          0       0       3       0       0       0       0       0       0
  6161 ;;      Totals:         0       0      15       0       0       0       0       0       0
  6162 ;;Total ram usage:       15 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:   10
  6165 ;; This function calls:
  6166 ;;		___ftpack
  6167 ;; This function is called by:
  6168 ;;		_wait_in_ms
  6169 ;;		_coinfig_ccpcon
  6170 ;;		_config_ccp1
  6171 ;;		_config_ccp2
  6172 ;;		_exp
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text27
  6177  0023D2                     __ptext27:
  6178                           	opt stack 0
  6179  0023D2                     ___ftdiv:
  6180                           	opt stack 19
  6181                           
  6182                           ; BSR set to: 1
  6183                           ;incstack = 0
  6184  0023D2  C11D  F121         	movff	___ftdiv@f1+2,??___ftdiv
  6185  0023D6  0101               	movlb	1	; () banked
  6186  0023D8  6B22               	clrf	(??___ftdiv+1)& (0+255),b
  6187  0023DA  6B23               	clrf	(??___ftdiv+2)& (0+255),b
  6188  0023DC  351C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  6189  0023DE  3721               	rlcf	??___ftdiv& (0+255),f,b
  6190  0023E0  E301               	bnc	u3311
  6191  0023E2  8122               	bsf	(??___ftdiv+1)& (0+255),0,b
  6192  0023E4                     u3311:
  6193  0023E4  5121               	movf	??___ftdiv& (0+255),w,b
  6194  0023E6  6F28               	movwf	___ftdiv@exp& (0+255),b
  6195  0023E8  5128               	movf	___ftdiv@exp& (0+255),w,b
  6196  0023EA  A4D8               	btfss	status,2,c
  6197  0023EC  D007               	goto	l485
  6198                           
  6199                           ; BSR set to: 1
  6200  0023EE  0E00               	movlw	0
  6201  0023F0  6F1B               	movwf	?___ftdiv& (0+255),b
  6202  0023F2  0E00               	movlw	0
  6203  0023F4  6F1C               	movwf	(?___ftdiv+1)& (0+255),b
  6204  0023F6  0E00               	movlw	0
  6205  0023F8  6F1D               	movwf	(?___ftdiv+2)& (0+255),b
  6206                           
  6207                           ; BSR set to: 1
  6208  0023FA  0012               	return	
  6209  0023FC                     l485:
  6210                           
  6211                           ; BSR set to: 1
  6212                           
  6213                           ; BSR set to: 1
  6214  0023FC  C120  F121         	movff	___ftdiv@f2+2,??___ftdiv
  6215  002400  6B22               	clrf	(??___ftdiv+1)& (0+255),b
  6216  002402  6B23               	clrf	(??___ftdiv+2)& (0+255),b
  6217  002404  351F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  6218  002406  3721               	rlcf	??___ftdiv& (0+255),f,b
  6219  002408  E301               	bnc	u3331
  6220  00240A  8122               	bsf	(??___ftdiv+1)& (0+255),0,b
  6221  00240C                     u3331:
  6222  00240C  5121               	movf	??___ftdiv& (0+255),w,b
  6223  00240E  6F29               	movwf	___ftdiv@sign& (0+255),b
  6224  002410  5129               	movf	___ftdiv@sign& (0+255),w,b
  6225  002412  A4D8               	btfss	status,2,c
  6226  002414  D007               	goto	l487
  6227                           
  6228                           ; BSR set to: 1
  6229  002416  0E00               	movlw	0
  6230  002418  6F1B               	movwf	?___ftdiv& (0+255),b
  6231  00241A  0E00               	movlw	0
  6232  00241C  6F1C               	movwf	(?___ftdiv+1)& (0+255),b
  6233  00241E  0E00               	movlw	0
  6234  002420  6F1D               	movwf	(?___ftdiv+2)& (0+255),b
  6235                           
  6236                           ; BSR set to: 1
  6237  002422  0012               	return	
  6238  002424                     l487:
  6239                           
  6240                           ; BSR set to: 1
  6241                           
  6242                           ; BSR set to: 1
  6243  002424  0E00               	movlw	0
  6244  002426  6F25               	movwf	___ftdiv@f3& (0+255),b
  6245  002428  0E00               	movlw	0
  6246  00242A  6F26               	movwf	(___ftdiv@f3+1)& (0+255),b
  6247  00242C  0E00               	movlw	0
  6248  00242E  6F27               	movwf	(___ftdiv@f3+2)& (0+255),b
  6249                           
  6250                           ; BSR set to: 1
  6251  002430  5129               	movf	___ftdiv@sign& (0+255),w,b
  6252  002432  0F89               	addlw	137
  6253  002434  5F28               	subwf	___ftdiv@exp& (0+255),f,b
  6254                           
  6255                           ; BSR set to: 1
  6256  002436  C11D  F129         	movff	___ftdiv@f1+2,___ftdiv@sign
  6257                           
  6258                           ; BSR set to: 1
  6259  00243A  5120               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6260  00243C  1B29               	xorwf	___ftdiv@sign& (0+255),f,b
  6261                           
  6262                           ; BSR set to: 1
  6263  00243E  0E80               	movlw	128
  6264  002440  1729               	andwf	___ftdiv@sign& (0+255),f,b
  6265                           
  6266                           ; BSR set to: 1
  6267  002442  8F1C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  6268                           
  6269                           ; BSR set to: 1
  6270  002444  0EFF               	movlw	255
  6271  002446  171B               	andwf	___ftdiv@f1& (0+255),f,b
  6272  002448  0EFF               	movlw	255
  6273  00244A  171C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  6274  00244C  0E00               	movlw	0
  6275  00244E  171D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  6276                           
  6277                           ; BSR set to: 1
  6278  002450  8F1F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  6279                           
  6280                           ; BSR set to: 1
  6281  002452  0EFF               	movlw	255
  6282  002454  171E               	andwf	___ftdiv@f2& (0+255),f,b
  6283  002456  0EFF               	movlw	255
  6284  002458  171F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  6285  00245A  0E00               	movlw	0
  6286  00245C  1720               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  6287                           
  6288                           ; BSR set to: 1
  6289  00245E  0E18               	movlw	24
  6290  002460  6F24               	movwf	___ftdiv@cntr& (0+255),b
  6291  002462                     
  6292                           ; BSR set to: 1
  6293                           
  6294                           ; BSR set to: 1
  6295  002462  90D8               	bcf	status,0,c
  6296  002464  3725               	rlcf	___ftdiv@f3& (0+255),f,b
  6297  002466  3726               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6298  002468  3727               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6299                           
  6300                           ; BSR set to: 1
  6301  00246A  511E               	movf	___ftdiv@f2& (0+255),w,b
  6302  00246C  5D1B               	subwf	___ftdiv@f1& (0+255),w,b
  6303  00246E  511F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6304  002470  591C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6305  002472  5120               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6306  002474  591D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6307  002476  A0D8               	btfss	status,0,c
  6308  002478  D007               	goto	l489
  6309                           
  6310                           ; BSR set to: 1
  6311  00247A  511E               	movf	___ftdiv@f2& (0+255),w,b
  6312  00247C  5F1B               	subwf	___ftdiv@f1& (0+255),f,b
  6313  00247E  511F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6314  002480  5B1C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6315  002482  5120               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6316  002484  5B1D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6317                           
  6318                           ; BSR set to: 1
  6319  002486  8125               	bsf	___ftdiv@f3& (0+255),0,b
  6320  002488                     l489:
  6321                           
  6322                           ; BSR set to: 1
  6323  002488  90D8               	bcf	status,0,c
  6324  00248A  371B               	rlcf	___ftdiv@f1& (0+255),f,b
  6325  00248C  371C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6326  00248E  371D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6327                           
  6328                           ; BSR set to: 1
  6329  002490  2F24               	decfsz	___ftdiv@cntr& (0+255),f,b
  6330  002492  D7E7               	goto	l488
  6331                           
  6332                           ; BSR set to: 1
  6333                           
  6334                           ; BSR set to: 1
  6335  002494  C125  F100         	movff	___ftdiv@f3,___ftpack@arg
  6336  002498  C126  F101         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6337  00249C  C127  F102         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6338  0024A0  C128  F103         	movff	___ftdiv@exp,___ftpack@exp
  6339  0024A4  C129  F104         	movff	___ftdiv@sign,___ftpack@sign
  6340  0024A8  EC7B  F016         	call	___ftpack	;wreg free
  6341  0024AC  C100  F11B         	movff	?___ftpack,?___ftdiv
  6342  0024B0  C101  F11C         	movff	?___ftpack+1,?___ftdiv+1
  6343  0024B4  C102  F11D         	movff	?___ftpack+2,?___ftdiv+2
  6344  0024B8  0012               	return	
  6345  0024BA                     __end_of___ftdiv:
  6346                           	opt stack 0
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           plusw1	equ	0xFE3
  6357                           postinc2	equ	0xFDE
  6358                           postdec2	equ	0xFDD
  6359                           plusw2	equ	0xFDB
  6360                           fsr2h	equ	0xFDA
  6361                           fsr2l	equ	0xFD9
  6362                           status	equ	0xFD8
  6363                           
  6364 ;; *************** function ___awtoft *****************
  6365 ;; Defined at:
  6366 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  c               2    8[BANK1 ] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  sign            1   11[BANK1 ] unsigned char 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  3    8[BANK1 ] float 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6380 ;;      Params:         0       0       3       0       0       0       0       0       0
  6381 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6383 ;;      Totals:         0       0       4       0       0       0       0       0       0
  6384 ;;Total ram usage:        4 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:   10
  6387 ;; This function calls:
  6388 ;;		___ftpack
  6389 ;; This function is called by:
  6390 ;;		_wait_in_ms
  6391 ;;		_config_timer2
  6392 ;;		_config_ccp1
  6393 ;;		_config_ccp2
  6394 ;;		_exp
  6395 ;;		_log
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text28
  6400  0037B0                     __ptext28:
  6401                           	opt stack 0
  6402  0037B0                     ___awtoft:
  6403                           	opt stack 19
  6404                           
  6405                           ;incstack = 0
  6406  0037B0  0E00               	movlw	0
  6407  0037B2  0101               	movlb	1	; () banked
  6408  0037B4  6F0B               	movwf	___awtoft@sign& (0+255),b
  6409                           
  6410                           ; BSR set to: 1
  6411  0037B6  AF09               	btfss	(___awtoft@c+1)& (0+255),7,b
  6412  0037B8  D006               	goto	l402
  6413                           
  6414                           ; BSR set to: 1
  6415  0037BA  6D08               	negf	___awtoft@c& (0+255),b
  6416  0037BC  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
  6417  0037BE  B0D8               	btfsc	status,0,c
  6418  0037C0  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
  6419                           
  6420                           ; BSR set to: 1
  6421  0037C2  0E01               	movlw	1
  6422  0037C4  6F0B               	movwf	___awtoft@sign& (0+255),b
  6423  0037C6                     l402:
  6424                           
  6425                           ; BSR set to: 1
  6426                           
  6427                           ; BSR set to: 1
  6428  0037C6  C108  F100         	movff	___awtoft@c,___ftpack@arg
  6429  0037CA  C109  F101         	movff	___awtoft@c+1,___ftpack@arg+1
  6430  0037CE  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
  6431  0037D0  0E8E               	movlw	142
  6432  0037D2  6F03               	movwf	___ftpack@exp& (0+255),b
  6433  0037D4  C10B  F104         	movff	___awtoft@sign,___ftpack@sign
  6434  0037D8  EC7B  F016         	call	___ftpack	;wreg free
  6435  0037DC  C100  F108         	movff	?___ftpack,?___awtoft
  6436  0037E0  C101  F109         	movff	?___ftpack+1,?___awtoft+1
  6437  0037E4  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
  6438  0037E8  0012               	return	
  6439  0037EA                     __end_of___awtoft:
  6440                           	opt stack 0
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           postinc0	equ	0xFEE
  6449                           wreg	equ	0xFE8
  6450                           plusw1	equ	0xFE3
  6451                           postinc2	equ	0xFDE
  6452                           postdec2	equ	0xFDD
  6453                           plusw2	equ	0xFDB
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function ___lltoft *****************
  6459 ;; Defined at:
  6460 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  c               4    8[BANK1 ] unsigned long 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  exp             1   16[BANK1 ] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  3    8[BANK1 ] float 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         0       0       4       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       1       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       4       0       0       0       0       0       0
  6477 ;;      Totals:         0       0       9       0       0       0       0       0       0
  6478 ;;Total ram usage:        9 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:   10
  6481 ;; This function calls:
  6482 ;;		___ftpack
  6483 ;; This function is called by:
  6484 ;;		_pow
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text29
  6489  003616                     __ptext29:
  6490                           	opt stack 0
  6491  003616                     ___lltoft:
  6492                           	opt stack 17
  6493                           
  6494                           ;incstack = 0
  6495  003616  0E8E               	movlw	142
  6496  003618  0101               	movlb	1	; () banked
  6497  00361A  6F10               	movwf	___lltoft@exp& (0+255),b
  6498  00361C  D006               	goto	l578
  6499  00361E                     
  6500                           ; BSR set to: 1
  6501                           
  6502                           ; BSR set to: 1
  6503  00361E  90D8               	bcf	status,0,c
  6504  003620  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  6505  003622  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  6506  003624  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
  6507  003626  3308               	rrcf	___lltoft@c& (0+255),f,b
  6508  003628  2B10               	incf	___lltoft@exp& (0+255),f,b
  6509  00362A                     l578:
  6510                           
  6511                           ; BSR set to: 1
  6512                           
  6513                           ; BSR set to: 1
  6514  00362A  0E00               	movlw	0
  6515  00362C  1508               	andwf	___lltoft@c& (0+255),w,b
  6516  00362E  6F0C               	movwf	??___lltoft& (0+255),b
  6517  003630  0E00               	movlw	0
  6518  003632  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
  6519  003634  6F0D               	movwf	(??___lltoft+1)& (0+255),b
  6520  003636  0E00               	movlw	0
  6521  003638  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
  6522  00363A  6F0E               	movwf	(??___lltoft+2)& (0+255),b
  6523  00363C  0EFF               	movlw	255
  6524  00363E  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
  6525  003640  6F0F               	movwf	(??___lltoft+3)& (0+255),b
  6526  003642  510C               	movf	??___lltoft& (0+255),w,b
  6527  003644  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
  6528  003646  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
  6529  003648  110F               	iorwf	(??___lltoft+3)& (0+255),w,b
  6530  00364A  A4D8               	btfss	status,2,c
  6531  00364C  D7E8               	goto	l579
  6532                           
  6533                           ; BSR set to: 1
  6534                           
  6535                           ; BSR set to: 1
  6536  00364E  C108  F100         	movff	___lltoft@c,___ftpack@arg
  6537  003652  C109  F101         	movff	___lltoft@c+1,___ftpack@arg+1
  6538  003656  C10A  F102         	movff	___lltoft@c+2,___ftpack@arg+2
  6539  00365A  C110  F103         	movff	___lltoft@exp,___ftpack@exp
  6540  00365E  0E00               	movlw	0
  6541  003660  6F04               	movwf	___ftpack@sign& (0+255),b
  6542  003662  EC7B  F016         	call	___ftpack	;wreg free
  6543  003666  C100  F108         	movff	?___ftpack,?___lltoft
  6544  00366A  C101  F109         	movff	?___ftpack+1,?___lltoft+1
  6545  00366E  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
  6546  003672  0012               	return	
  6547  003674                     __end_of___lltoft:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           prodh	equ	0xFF4
  6554                           prodl	equ	0xFF3
  6555                           intcon	equ	0xFF2
  6556                           postinc0	equ	0xFEE
  6557                           wreg	equ	0xFE8
  6558                           plusw1	equ	0xFE3
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           plusw2	equ	0xFDB
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function ___ftpack *****************
  6567 ;; Defined at:
  6568 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  arg             3    0[BANK1 ] unsigned um
  6571 ;;  exp             1    3[BANK1 ] unsigned char 
  6572 ;;  sign            1    4[BANK1 ] unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  3    0[BANK1 ] float 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6584 ;;      Params:         0       0       5       0       0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6586 ;;      Temps:          0       0       3       0       0       0       0       0       0
  6587 ;;      Totals:         0       0       8       0       0       0       0       0       0
  6588 ;;Total ram usage:        8 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    9
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		___altoft
  6595 ;;		___awtoft
  6596 ;;		___ftadd
  6597 ;;		___ftdiv
  6598 ;;		___ftmul
  6599 ;;		___lbtoft
  6600 ;;		___lltoft
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text30
  6605  002CF6                     __ptext30:
  6606                           	opt stack 0
  6607  002CF6                     ___ftpack:
  6608                           	opt stack 19
  6609                           
  6610                           ;incstack = 0
  6611  002CF6  0101               	movlb	1	; () banked
  6612  002CF8  5103               	movf	___ftpack@exp& (0+255),w,b
  6613  002CFA  B4D8               	btfsc	status,2,c
  6614  002CFC  D005               	goto	u2320
  6615                           
  6616                           ; BSR set to: 1
  6617  002CFE  5100               	movf	___ftpack@arg& (0+255),w,b
  6618  002D00  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6619  002D02  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6620  002D04  A4D8               	btfss	status,2,c
  6621  002D06  D00C               	goto	l421
  6622  002D08                     u2320:
  6623                           
  6624                           ; BSR set to: 1
  6625                           
  6626                           ; BSR set to: 1
  6627  002D08  0E00               	movlw	0
  6628  002D0A  6F00               	movwf	?___ftpack& (0+255),b
  6629  002D0C  0E00               	movlw	0
  6630  002D0E  6F01               	movwf	(?___ftpack+1)& (0+255),b
  6631  002D10  0E00               	movlw	0
  6632  002D12  6F02               	movwf	(?___ftpack+2)& (0+255),b
  6633                           
  6634                           ; BSR set to: 1
  6635  002D14  0012               	return	
  6636  002D16                     
  6637                           ; BSR set to: 1
  6638                           
  6639                           ; BSR set to: 1
  6640  002D16  2B03               	incf	___ftpack@exp& (0+255),f,b
  6641  002D18  90D8               	bcf	status,0,c
  6642  002D1A  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6643  002D1C  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6644  002D1E  3300               	rrcf	___ftpack@arg& (0+255),f,b
  6645  002D20                     l421:
  6646                           
  6647                           ; BSR set to: 1
  6648                           
  6649                           ; BSR set to: 1
  6650  002D20  0E00               	movlw	0
  6651  002D22  1500               	andwf	___ftpack@arg& (0+255),w,b
  6652  002D24  6F05               	movwf	??___ftpack& (0+255),b
  6653  002D26  0E00               	movlw	0
  6654  002D28  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6655  002D2A  6F06               	movwf	(??___ftpack+1)& (0+255),b
  6656  002D2C  0EFE               	movlw	254
  6657  002D2E  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6658  002D30  6F07               	movwf	(??___ftpack+2)& (0+255),b
  6659  002D32  5105               	movf	??___ftpack& (0+255),w,b
  6660  002D34  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  6661  002D36  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  6662  002D38  B4D8               	btfsc	status,2,c
  6663  002D3A  D00C               	goto	l424
  6664  002D3C  D7EC               	goto	l422
  6665  002D3E                     
  6666                           ; BSR set to: 1
  6667                           
  6668                           ; BSR set to: 1
  6669  002D3E  2B03               	incf	___ftpack@exp& (0+255),f,b
  6670                           
  6671                           ; BSR set to: 1
  6672  002D40  0E01               	movlw	1
  6673  002D42  2700               	addwf	___ftpack@arg& (0+255),f,b
  6674  002D44  0E00               	movlw	0
  6675  002D46  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6676  002D48  0E00               	movlw	0
  6677  002D4A  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6678  002D4C  90D8               	bcf	status,0,c
  6679  002D4E  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6680  002D50  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6681  002D52  3300               	rrcf	___ftpack@arg& (0+255),f,b
  6682  002D54                     l424:
  6683                           
  6684                           ; BSR set to: 1
  6685                           
  6686                           ; BSR set to: 1
  6687  002D54  0E00               	movlw	0
  6688  002D56  1500               	andwf	___ftpack@arg& (0+255),w,b
  6689  002D58  6F05               	movwf	??___ftpack& (0+255),b
  6690  002D5A  0E00               	movlw	0
  6691  002D5C  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6692  002D5E  6F06               	movwf	(??___ftpack+1)& (0+255),b
  6693  002D60  0EFF               	movlw	255
  6694  002D62  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6695  002D64  6F07               	movwf	(??___ftpack+2)& (0+255),b
  6696  002D66  5105               	movf	??___ftpack& (0+255),w,b
  6697  002D68  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
  6698  002D6A  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
  6699  002D6C  B4D8               	btfsc	status,2,c
  6700  002D6E  D006               	goto	l427
  6701  002D70  D7E6               	goto	l425
  6702  002D72                     
  6703                           ; BSR set to: 1
  6704                           
  6705                           ; BSR set to: 1
  6706  002D72  0703               	decf	___ftpack@exp& (0+255),f,b
  6707  002D74  90D8               	bcf	status,0,c
  6708  002D76  3700               	rlcf	___ftpack@arg& (0+255),f,b
  6709  002D78  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6710  002D7A  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6711  002D7C                     l427:
  6712                           
  6713                           ; BSR set to: 1
  6714                           
  6715                           ; BSR set to: 1
  6716  002D7C  BF01               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  6717  002D7E  D003               	goto	u2360
  6718                           
  6719                           ; BSR set to: 1
  6720  002D80  0E02               	movlw	2
  6721  002D82  6103               	cpfslt	___ftpack@exp& (0+255),b
  6722  002D84  D7F6               	goto	l428
  6723  002D86                     u2360:
  6724                           
  6725                           ; BSR set to: 1
  6726                           
  6727                           ; BSR set to: 1
  6728  002D86  A103               	btfss	___ftpack@exp& (0+255),0,b
  6729                           
  6730                           ; BSR set to: 1
  6731  002D88  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6732                           
  6733                           ; BSR set to: 1
  6734                           
  6735                           ; BSR set to: 1
  6736  002D8A  90D8               	bcf	status,0,c
  6737  002D8C  3303               	rrcf	___ftpack@exp& (0+255),f,b
  6738  002D8E  5103               	movf	___ftpack@exp& (0+255),w,b
  6739  002D90  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6740                           
  6741                           ; BSR set to: 1
  6742  002D92  5104               	movf	___ftpack@sign& (0+255),w,b
  6743  002D94  A4D8               	btfss	status,2,c
  6744                           
  6745                           ; BSR set to: 1
  6746  002D96  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6747                           
  6748                           ; BSR set to: 1
  6749                           
  6750                           ; BSR set to: 1
  6751  002D98  C100  F100         	movff	___ftpack@arg,?___ftpack
  6752  002D9C  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
  6753  002DA0  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
  6754  002DA4  0012               	return	
  6755  002DA6                     __end_of___ftpack:
  6756                           	opt stack 0
  6757                           tblptru	equ	0xFF8
  6758                           tblptrh	equ	0xFF7
  6759                           tblptrl	equ	0xFF6
  6760                           tablat	equ	0xFF5
  6761                           prodh	equ	0xFF4
  6762                           prodl	equ	0xFF3
  6763                           intcon	equ	0xFF2
  6764                           postinc0	equ	0xFEE
  6765                           wreg	equ	0xFE8
  6766                           plusw1	equ	0xFE3
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           plusw2	equ	0xFDB
  6770                           fsr2h	equ	0xFDA
  6771                           fsr2l	equ	0xFD9
  6772                           status	equ	0xFD8
  6773                           
  6774 ;; *************** function ___awdiv *****************
  6775 ;; Defined at:
  6776 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  dividend        2    0[BANK1 ] int 
  6779 ;;  divisor         2    2[BANK1 ] int 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  quotient        2    6[BANK1 ] int 
  6782 ;;  sign            1    5[BANK1 ] unsigned char 
  6783 ;;  counter         1    4[BANK1 ] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  2    0[BANK1 ] int 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6793 ;;      Params:         0       0       4       0       0       0       0       0       0
  6794 ;;      Locals:         0       0       4       0       0       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6796 ;;      Totals:         0       0       8       0       0       0       0       0       0
  6797 ;;Total ram usage:        8 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    9
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_config_ccp1
  6804 ;;		_config_ccp2
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text31
  6809  00326A                     __ptext31:
  6810                           	opt stack 0
  6811  00326A                     ___awdiv:
  6812                           	opt stack 19
  6813                           
  6814                           ; BSR set to: 1
  6815                           ;incstack = 0
  6816  00326A  0E00               	movlw	0
  6817  00326C  0101               	movlb	1	; () banked
  6818  00326E  6F05               	movwf	___awdiv@sign& (0+255),b
  6819                           
  6820                           ; BSR set to: 1
  6821  003270  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6822  003272  D006               	goto	l374
  6823                           
  6824                           ; BSR set to: 1
  6825  003274  6D02               	negf	___awdiv@divisor& (0+255),b
  6826  003276  1F03               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6827  003278  B0D8               	btfsc	status,0,c
  6828  00327A  2B03               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6829                           
  6830                           ; BSR set to: 1
  6831  00327C  0E01               	movlw	1
  6832  00327E  6F05               	movwf	___awdiv@sign& (0+255),b
  6833  003280                     l374:
  6834                           
  6835                           ; BSR set to: 1
  6836                           
  6837                           ; BSR set to: 1
  6838  003280  AF01               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6839  003282  D006               	goto	l375
  6840                           
  6841                           ; BSR set to: 1
  6842  003284  6D00               	negf	___awdiv@dividend& (0+255),b
  6843  003286  1F01               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6844  003288  B0D8               	btfsc	status,0,c
  6845  00328A  2B01               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6846                           
  6847                           ; BSR set to: 1
  6848  00328C  0E01               	movlw	1
  6849  00328E  1B05               	xorwf	___awdiv@sign& (0+255),f,b
  6850  003290                     l375:
  6851                           
  6852                           ; BSR set to: 1
  6853                           
  6854                           ; BSR set to: 1
  6855  003290  0E00               	movlw	0
  6856  003292  6F07               	movwf	(___awdiv@quotient+1)& (0+255),b
  6857  003294  0E00               	movlw	0
  6858  003296  6F06               	movwf	___awdiv@quotient& (0+255),b
  6859                           
  6860                           ; BSR set to: 1
  6861  003298  5102               	movf	___awdiv@divisor& (0+255),w,b
  6862  00329A  1103               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6863  00329C  B4D8               	btfsc	status,2,c
  6864  00329E  D01C               	goto	l382
  6865                           
  6866                           ; BSR set to: 1
  6867  0032A0  0E01               	movlw	1
  6868  0032A2  6F04               	movwf	___awdiv@counter& (0+255),b
  6869  0032A4  D004               	goto	l377
  6870  0032A6                     
  6871                           ; BSR set to: 1
  6872                           
  6873                           ; BSR set to: 1
  6874  0032A6  90D8               	bcf	status,0,c
  6875  0032A8  3702               	rlcf	___awdiv@divisor& (0+255),f,b
  6876  0032AA  3703               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6877  0032AC  2B04               	incf	___awdiv@counter& (0+255),f,b
  6878  0032AE                     l377:
  6879                           
  6880                           ; BSR set to: 1
  6881                           
  6882                           ; BSR set to: 1
  6883  0032AE  AF03               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6884  0032B0  D7FA               	goto	l378
  6885  0032B2                     u3980:
  6886                           
  6887                           ; BSR set to: 1
  6888                           
  6889                           ; BSR set to: 1
  6890                           
  6891                           ; BSR set to: 1
  6892  0032B2  90D8               	bcf	status,0,c
  6893  0032B4  3706               	rlcf	___awdiv@quotient& (0+255),f,b
  6894  0032B6  3707               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6895                           
  6896                           ; BSR set to: 1
  6897  0032B8  5102               	movf	___awdiv@divisor& (0+255),w,b
  6898  0032BA  5D00               	subwf	___awdiv@dividend& (0+255),w,b
  6899  0032BC  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6900  0032BE  5901               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6901  0032C0  A0D8               	btfss	status,0,c
  6902  0032C2  D005               	goto	l381
  6903                           
  6904                           ; BSR set to: 1
  6905  0032C4  5102               	movf	___awdiv@divisor& (0+255),w,b
  6906  0032C6  5F00               	subwf	___awdiv@dividend& (0+255),f,b
  6907  0032C8  5103               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6908  0032CA  5B01               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6909                           
  6910                           ; BSR set to: 1
  6911  0032CC  8106               	bsf	___awdiv@quotient& (0+255),0,b
  6912  0032CE                     l381:
  6913                           
  6914                           ; BSR set to: 1
  6915                           
  6916                           ; BSR set to: 1
  6917  0032CE  90D8               	bcf	status,0,c
  6918  0032D0  3303               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6919  0032D2  3302               	rrcf	___awdiv@divisor& (0+255),f,b
  6920                           
  6921                           ; BSR set to: 1
  6922  0032D4  2F04               	decfsz	___awdiv@counter& (0+255),f,b
  6923  0032D6  D7ED               	goto	u3980
  6924  0032D8                     l382:
  6925                           
  6926                           ; BSR set to: 1
  6927                           
  6928                           ; BSR set to: 1
  6929                           
  6930                           ; BSR set to: 1
  6931  0032D8  5105               	movf	___awdiv@sign& (0+255),w,b
  6932  0032DA  B4D8               	btfsc	status,2,c
  6933  0032DC  D004               	goto	l383
  6934                           
  6935                           ; BSR set to: 1
  6936  0032DE  6D06               	negf	___awdiv@quotient& (0+255),b
  6937  0032E0  1F07               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6938  0032E2  B0D8               	btfsc	status,0,c
  6939  0032E4  2B07               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6940  0032E6                     l383:
  6941                           
  6942                           ; BSR set to: 1
  6943                           
  6944                           ; BSR set to: 1
  6945  0032E6  C106  F100         	movff	___awdiv@quotient,?___awdiv
  6946  0032EA  C107  F101         	movff	___awdiv@quotient+1,?___awdiv+1
  6947  0032EE  0012               	return	
  6948  0032F0                     __end_of___awdiv:
  6949                           	opt stack 0
  6950                           tblptru	equ	0xFF8
  6951                           tblptrh	equ	0xFF7
  6952                           tblptrl	equ	0xFF6
  6953                           tablat	equ	0xFF5
  6954                           prodh	equ	0xFF4
  6955                           prodl	equ	0xFF3
  6956                           intcon	equ	0xFF2
  6957                           postinc0	equ	0xFEE
  6958                           wreg	equ	0xFE8
  6959                           plusw1	equ	0xFE3
  6960                           postinc2	equ	0xFDE
  6961                           postdec2	equ	0xFDD
  6962                           plusw2	equ	0xFDB
  6963                           fsr2h	equ	0xFDA
  6964                           fsr2l	equ	0xFD9
  6965                           status	equ	0xFD8
  6966                           
  6967 ;; *************** function _ADCint *****************
  6968 ;; Defined at:
  6969 ;;		line 44 in file "carroMain.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6985 ;;      Temps:          0      18       0       0       0       0       0       0       0
  6986 ;;      Totals:         0      18       0       0       0       0       0       0       0
  6987 ;;Total ram usage:       18 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    8
  6990 ;; This function calls:
  6991 ;;		i2_EstacionaminetoM1
  6992 ;; This function is called by:
  6993 ;;		Interrupt level 2
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	intcode
  6998  000008                     __pintcode:
  6999                           	opt stack 0
  7000  000008                     _ADCint:
  7001                           	opt stack 14
  7002                           
  7003                           ; BSR set to: 1
  7004                           ;incstack = 0
  7005  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7006  00000A  ED2A  F017         	call	int_func,f	;refresh shadow registers
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           postinc0	equ	0xFEE
  7015                           wreg	equ	0xFE8
  7016                           plusw1	equ	0xFE3
  7017                           postinc2	equ	0xFDE
  7018                           postdec2	equ	0xFDD
  7019                           plusw2	equ	0xFDB
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8
  7023                           
  7024                           	psect	intcode_body
  7025  002E54                     __pintcode_body:
  7026                           	opt stack 14
  7027  002E54                     int_func:
  7028                           	opt stack 14
  7029  002E54  0006               	pop		; remove dummy address from shadow register refresh
  7030  002E56  CFFA F0AF          	movff	pclath,??_ADCint
  7031  002E5A  CFFB F0B0          	movff	pclatu,??_ADCint+1
  7032  002E5E  CFE9 F0B1          	movff	fsr0l,??_ADCint+2
  7033  002E62  CFEA F0B2          	movff	fsr0h,??_ADCint+3
  7034  002E66  CFE1 F0B3          	movff	fsr1l,??_ADCint+4
  7035  002E6A  CFE2 F0B4          	movff	fsr1h,??_ADCint+5
  7036  002E6E  CFD9 F0B5          	movff	fsr2l,??_ADCint+6
  7037  002E72  CFDA F0B6          	movff	fsr2h,??_ADCint+7
  7038  002E76  CFF3 F0B7          	movff	prodl,??_ADCint+8
  7039  002E7A  CFF4 F0B8          	movff	prodh,??_ADCint+9
  7040  002E7E  CFF6 F0B9          	movff	tblptrl,??_ADCint+10
  7041  002E82  CFF7 F0BA          	movff	tblptrh,??_ADCint+11
  7042  002E86  CFF8 F0BB          	movff	tblptru,??_ADCint+12
  7043  002E8A  CFF5 F0BC          	movff	tablat,??_ADCint+13
  7044  002E8E  C05F  F0BD         	movff	btemp,??_ADCint+14
  7045  002E92  C060  F0BE         	movff	btemp+1,??_ADCint+15
  7046  002E96  C061  F0BF         	movff	btemp+2,??_ADCint+16
  7047  002E9A  C062  F0C0         	movff	btemp+3,??_ADCint+17
  7048                           
  7049                           ;carroMain.c: 48: if(INT0IF==1){
  7050  002E9E  A2F2               	btfss	intcon,1,c	;volatile
  7051  002EA0  D006               	goto	i2l53
  7052                           
  7053                           ;carroMain.c: 49: INT0F=0;
  7054  002EA2  92F2               	bcf	intcon,1,c	;volatile
  7055                           
  7056                           ;carroMain.c: 50: test=1;
  7057  002EA4  0E01               	movlw	1
  7058  002EA6  0101               	movlb	1	; () banked
  7059  002EA8  6FEE               	movwf	_test& (0+255),b
  7060                           
  7061                           ; BSR set to: 1
  7062                           ;carroMain.c: 51: EstacionaminetoM1();
  7063  002EAA  ECBA  F019         	call	i2_EstacionaminetoM1	;wreg free
  7064  002EAE                     i2l53:
  7065  002EAE  C0C0  F062         	movff	??_ADCint+17,btemp+3
  7066  002EB2  C0BF  F061         	movff	??_ADCint+16,btemp+2
  7067  002EB6  C0BE  F060         	movff	??_ADCint+15,btemp+1
  7068  002EBA  C0BD  F05F         	movff	??_ADCint+14,btemp
  7069  002EBE  C0BC  FFF5         	movff	??_ADCint+13,tablat
  7070  002EC2  C0BB  FFF8         	movff	??_ADCint+12,tblptru
  7071  002EC6  C0BA  FFF7         	movff	??_ADCint+11,tblptrh
  7072  002ECA  C0B9  FFF6         	movff	??_ADCint+10,tblptrl
  7073  002ECE  C0B8  FFF4         	movff	??_ADCint+9,prodh
  7074  002ED2  C0B7  FFF3         	movff	??_ADCint+8,prodl
  7075  002ED6  C0B6  FFDA         	movff	??_ADCint+7,fsr2h
  7076  002EDA  C0B5  FFD9         	movff	??_ADCint+6,fsr2l
  7077  002EDE  C0B4  FFE2         	movff	??_ADCint+5,fsr1h
  7078  002EE2  C0B3  FFE1         	movff	??_ADCint+4,fsr1l
  7079  002EE6  C0B2  FFEA         	movff	??_ADCint+3,fsr0h
  7080  002EEA  C0B1  FFE9         	movff	??_ADCint+2,fsr0l
  7081  002EEE  C0B0  FFFB         	movff	??_ADCint+1,pclatu
  7082  002EF2  C0AF  FFFA         	movff	??_ADCint,pclath
  7083  002EF6  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7084  002EF8  0011               	retfie		f
  7085  002EFA                     __end_of_ADCint:
  7086                           	opt stack 0
  7087                           pclatu	equ	0xFFB
  7088                           pclath	equ	0xFFA
  7089                           tblptru	equ	0xFF8
  7090                           tblptrh	equ	0xFF7
  7091                           tblptrl	equ	0xFF6
  7092                           tablat	equ	0xFF5
  7093                           prodh	equ	0xFF4
  7094                           prodl	equ	0xFF3
  7095                           intcon	equ	0xFF2
  7096                           postinc0	equ	0xFEE
  7097                           fsr0h	equ	0xFEA
  7098                           fsr0l	equ	0xFE9
  7099                           wreg	equ	0xFE8
  7100                           plusw1	equ	0xFE3
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           postinc2	equ	0xFDE
  7104                           postdec2	equ	0xFDD
  7105                           plusw2	equ	0xFDB
  7106                           fsr2h	equ	0xFDA
  7107                           fsr2l	equ	0xFD9
  7108                           status	equ	0xFD8
  7109                           
  7110 ;; *************** function i2_EstacionaminetoM1 *****************
  7111 ;; Defined at:
  7112 ;;		line 209 in file "carroMain.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  1    wreg      void 
  7119 ;; Registers used:
  7120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0
  7127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7130 ;;Total ram usage:        0 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    7
  7133 ;; This function calls:
  7134 ;;		i2_carroAvanzarEspecial
  7135 ;;		i2_carroGirar
  7136 ;;		i2_carroMatar
  7137 ;;		i2_wait_in_ms
  7138 ;; This function is called by:
  7139 ;;		_ADCint
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text33
  7144  003374                     __ptext33:
  7145                           	opt stack 0
  7146  003374                     i2_EstacionaminetoM1:
  7147                           	opt stack 14
  7148                           
  7149                           ;carroMain.c: 212: carroMatar();
  7150                           
  7151                           ;incstack = 0
  7152  003374  EC97  F01C         	call	i2_carroMatar	;wreg free
  7153                           
  7154                           ;carroMain.c: 213: wait_in_ms(500);
  7155  003378  0E01               	movlw	1
  7156  00337A  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7157  00337C  0EF4               	movlw	244
  7158  00337E  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7159  003380  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7160                           
  7161                           ;carroMain.c: 214: carroAvanzarEspecial();
  7162  003384  ECA8  F01C         	call	i2_carroAvanzarEspecial	;wreg free
  7163                           
  7164                           ;carroMain.c: 215: wait_in_ms(1500);
  7165  003388  0E05               	movlw	5
  7166  00338A  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7167  00338C  0EDC               	movlw	220
  7168  00338E  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7169  003390  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7170                           
  7171                           ;carroMain.c: 216: carroGirar(1);
  7172  003394  0E01               	movlw	1
  7173  003396  EC3A  F01B         	call	i2_carroGirar
  7174                           
  7175                           ;carroMain.c: 217: wait_in_ms(800);
  7176  00339A  0E03               	movlw	3
  7177  00339C  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7178  00339E  0E20               	movlw	32
  7179  0033A0  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7180  0033A2  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7181                           
  7182                           ;carroMain.c: 218: carroAvanzarEspecial();
  7183  0033A6  ECA8  F01C         	call	i2_carroAvanzarEspecial	;wreg free
  7184                           
  7185                           ;carroMain.c: 219: wait_in_ms(300);
  7186  0033AA  0E01               	movlw	1
  7187  0033AC  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7188  0033AE  0E2C               	movlw	44
  7189  0033B0  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7190  0033B2  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7191                           
  7192                           ;carroMain.c: 220: carroGirar(3);
  7193  0033B6  0E03               	movlw	3
  7194  0033B8  EC3A  F01B         	call	i2_carroGirar
  7195                           
  7196                           ;carroMain.c: 221: wait_in_ms(900);
  7197  0033BC  0E03               	movlw	3
  7198  0033BE  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7199  0033C0  0E84               	movlw	132
  7200  0033C2  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7201  0033C4  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7202                           
  7203                           ;carroMain.c: 222: carroAvanzarEspecial();
  7204  0033C8  ECA8  F01C         	call	i2_carroAvanzarEspecial	;wreg free
  7205                           
  7206                           ;carroMain.c: 223: wait_in_ms(300);
  7207  0033CC  0E01               	movlw	1
  7208  0033CE  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7209  0033D0  0E2C               	movlw	44
  7210  0033D2  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7211  0033D4  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7212                           
  7213                           ;carroMain.c: 224: carroMatar();
  7214  0033D8  EC97  F01C         	call	i2_carroMatar	;wreg free
  7215                           
  7216                           ;carroMain.c: 225: wait_in_ms(1000);
  7217  0033DC  0E03               	movlw	3
  7218  0033DE  6E47               	movwf	i2wait_in_ms@time_in_ms+1,c
  7219  0033E0  0EE8               	movlw	232
  7220  0033E2  6E46               	movwf	i2wait_in_ms@time_in_ms,c
  7221  0033E4  ECF1  F014         	call	i2_wait_in_ms	;wreg free
  7222                           
  7223                           ;carroMain.c: 226: test=1;
  7224  0033E8  0E01               	movlw	1
  7225  0033EA  0101               	movlb	1	; () banked
  7226  0033EC  6FEE               	movwf	_test& (0+255),b
  7227                           
  7228                           ; BSR set to: 1
  7229  0033EE  0012               	return		;funcret
  7230  0033F0                     __end_ofi2_EstacionaminetoM1:
  7231                           	opt stack 0
  7232                           pclatu	equ	0xFFB
  7233                           pclath	equ	0xFFA
  7234                           tblptru	equ	0xFF8
  7235                           tblptrh	equ	0xFF7
  7236                           tblptrl	equ	0xFF6
  7237                           tablat	equ	0xFF5
  7238                           prodh	equ	0xFF4
  7239                           prodl	equ	0xFF3
  7240                           intcon	equ	0xFF2
  7241                           postinc0	equ	0xFEE
  7242                           fsr0h	equ	0xFEA
  7243                           fsr0l	equ	0xFE9
  7244                           wreg	equ	0xFE8
  7245                           plusw1	equ	0xFE3
  7246                           fsr1h	equ	0xFE2
  7247                           fsr1l	equ	0xFE1
  7248                           postinc2	equ	0xFDE
  7249                           postdec2	equ	0xFDD
  7250                           plusw2	equ	0xFDB
  7251                           fsr2h	equ	0xFDA
  7252                           fsr2l	equ	0xFD9
  7253                           status	equ	0xFD8
  7254                           
  7255 ;; *************** function i2_wait_in_ms *****************
  7256 ;; Defined at:
  7257 ;;		line 80 in file "config.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  time_in_ms      2   69[COMRAM] int 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  wait_in_ms      2   77[COMRAM] unsigned int 
  7262 ;;  wait_in_ms      2   75[COMRAM] unsigned int 
  7263 ;;  wait_in_ms      2   73[COMRAM] unsigned int 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7273 ;;      Params:         2       0       0       0       0       0       0       0       0
  7274 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7275 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7276 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7277 ;;Total ram usage:       10 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    2
  7280 ;; This function calls:
  7281 ;;		i2___awtoft
  7282 ;;		i2___ftdiv
  7283 ;;		i2___fttol
  7284 ;; This function is called by:
  7285 ;;		i2_EstacionaminetoM1
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text34
  7290  0029E2                     __ptext34:
  7291                           	opt stack 0
  7292  0029E2                     i2_wait_in_ms:
  7293                           	opt stack 18
  7294                           
  7295                           ;config.c: 81: unsigned int count = 0;
  7296                           
  7297                           ; BSR set to: 1
  7298                           ;incstack = 0
  7299  0029E2  0E00               	movlw	0
  7300  0029E4  6E4D               	movwf	i2wait_in_ms@count+1,c
  7301  0029E6  0E00               	movlw	0
  7302  0029E8  6E4C               	movwf	i2wait_in_ms@count,c
  7303                           
  7304                           ;config.c: 82: unsigned int count_ms = 0;
  7305  0029EA  0E00               	movlw	0
  7306  0029EC  6E4F               	movwf	i2wait_in_ms@count_ms+1,c
  7307  0029EE  0E00               	movlw	0
  7308  0029F0  6E4E               	movwf	i2wait_in_ms@count_ms,c
  7309                           
  7310                           ;config.c: 83: unsigned int flag = 0;
  7311  0029F2  0E00               	movlw	0
  7312  0029F4  6E4B               	movwf	i2wait_in_ms@flag+1,c
  7313  0029F6  0E00               	movlw	0
  7314  0029F8  6E4A               	movwf	i2wait_in_ms@flag,c
  7315                           
  7316                           ;config.c: 85: TMR0L = 131;
  7317  0029FA  0E83               	movlw	131
  7318  0029FC  6ED6               	movwf	4054,c	;volatile
  7319                           
  7320                           ;config.c: 88: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  7321  0029FE  50D6               	movf	4054,w,c	;volatile
  7322  002A00  6E48               	movwf	??i2_wait_in_ms& (0+255),c
  7323  002A02  6A49               	clrf	(??i2_wait_in_ms+1)& (0+255),c
  7324  002A04  1E48               	comf	??i2_wait_in_ms,f,c
  7325  002A06  1E49               	comf	??i2_wait_in_ms+1,f,c
  7326  002A08  4A48               	infsnz	??i2_wait_in_ms,f,c
  7327  002A0A  2A49               	incf	??i2_wait_in_ms+1,f,c
  7328  002A0C  0E05               	movlw	5
  7329  002A0E                     i2u450_45:
  7330  002A0E  90D8               	bcf	status,0,c
  7331  002A10  3648               	rlcf	??i2_wait_in_ms,f,c
  7332  002A12  3649               	rlcf	??i2_wait_in_ms+1,f,c
  7333  002A14  2EE8               	decfsz	wreg,f,c
  7334  002A16  D7FB               	goto	i2u450_45
  7335  002A18  0E00               	movlw	0
  7336  002A1A  2448               	addwf	??i2_wait_in_ms,w,c
  7337  002A1C  6E09               	movwf	i2___awtoft@c,c
  7338  002A1E  0E20               	movlw	32
  7339  002A20  2049               	addwfc	??i2_wait_in_ms+1,w,c
  7340  002A22  6E0A               	movwf	i2___awtoft@c+1,c
  7341  002A24  ECF5  F01B         	call	i2___awtoft	;wreg free
  7342  002A28  C009  F02B         	movff	?i2___awtoft,i2___ftdiv@f2
  7343  002A2C  C00A  F02C         	movff	?i2___awtoft+1,i2___ftdiv@f2+1
  7344  002A30  C00B  F02D         	movff	?i2___awtoft+2,i2___ftdiv@f2+2
  7345  002A34  0E00               	movlw	0
  7346  002A36  6E28               	movwf	i2___ftdiv@f1,c
  7347  002A38  0EFA               	movlw	250
  7348  002A3A  6E29               	movwf	i2___ftdiv@f1+1,c
  7349  002A3C  0E45               	movlw	69
  7350  002A3E  6E2A               	movwf	i2___ftdiv@f1+2,c
  7351  002A40  EC5D  F012         	call	i2___ftdiv	;wreg free
  7352  002A44  C028  F037         	movff	?i2___ftdiv,i2___fttol@f1
  7353  002A48  C029  F038         	movff	?i2___ftdiv+1,i2___fttol@f1+1
  7354  002A4C  C02A  F039         	movff	?i2___ftdiv+2,i2___fttol@f1+2
  7355  002A50  ECF5  F010         	call	i2___fttol	;wreg free
  7356  002A54  C037  F04E         	movff	?i2___fttol,i2wait_in_ms@count_ms
  7357  002A58  C038  F04F         	movff	?i2___fttol+1,i2wait_in_ms@count_ms+1
  7358                           
  7359                           ;config.c: 90: TMR0ON = 1;
  7360  002A5C  8ED5               	bsf	4053,7,c	;volatile
  7361                           
  7362                           ;config.c: 92: while (count < count_ms){
  7363  002A5E  D020               	goto	i2l145
  7364  002A60                     i2l141:
  7365                           
  7366                           ;config.c: 93: if(TMR0IF == 1){
  7367  002A60  A4F2               	btfss	intcon,2,c	;volatile
  7368  002A62  D01E               	goto	i2l145
  7369                           
  7370                           ;config.c: 94: TMR0IF = 0;
  7371  002A64  94F2               	bcf	intcon,2,c	;volatile
  7372                           
  7373                           ;config.c: 95: TMR0L = 131;
  7374  002A66  0E83               	movlw	131
  7375  002A68  6ED6               	movwf	4054,c	;volatile
  7376                           
  7377                           ;config.c: 96: count ++;
  7378  002A6A  4A4C               	infsnz	i2wait_in_ms@count,f,c
  7379  002A6C  2A4D               	incf	i2wait_in_ms@count+1,f,c
  7380                           
  7381                           ;config.c: 97: if (count == count_ms){
  7382  002A6E  504E               	movf	i2wait_in_ms@count_ms,w,c
  7383  002A70  184C               	xorwf	i2wait_in_ms@count,w,c
  7384  002A72  E116               	bnz	i2l4115
  7385  002A74  504F               	movf	i2wait_in_ms@count_ms+1,w,c
  7386  002A76  184D               	xorwf	i2wait_in_ms@count+1,w,c
  7387  002A78  A4D8               	btfss	status,2,c
  7388  002A7A  D012               	goto	i2l145
  7389                           
  7390                           ;config.c: 98: flag++;
  7391  002A7C  4A4A               	infsnz	i2wait_in_ms@flag,f,c
  7392  002A7E  2A4B               	incf	i2wait_in_ms@flag+1,f,c
  7393                           
  7394                           ;config.c: 99: if (flag != time_in_ms){
  7395  002A80  504A               	movf	i2wait_in_ms@flag,w,c
  7396  002A82  1846               	xorwf	i2wait_in_ms@time_in_ms,w,c
  7397  002A84  E104               	bnz	i2u453_40
  7398  002A86  504B               	movf	i2wait_in_ms@flag+1,w,c
  7399  002A88  1847               	xorwf	i2wait_in_ms@time_in_ms+1,w,c
  7400  002A8A  B4D8               	btfsc	status,2,c
  7401  002A8C  D005               	goto	i2l144
  7402  002A8E                     i2u453_40:
  7403                           
  7404                           ;config.c: 100: count = 0;
  7405  002A8E  0E00               	movlw	0
  7406  002A90  6E4D               	movwf	i2wait_in_ms@count+1,c
  7407  002A92  0E00               	movlw	0
  7408  002A94  6E4C               	movwf	i2wait_in_ms@count,c
  7409                           
  7410                           ;config.c: 101: }
  7411  002A96  D004               	goto	i2l145
  7412  002A98                     i2l144:
  7413                           
  7414                           ;config.c: 102: else{
  7415                           ;config.c: 103: count = count_ms;
  7416  002A98  C04E  F04C         	movff	i2wait_in_ms@count_ms,i2wait_in_ms@count
  7417  002A9C  C04F  F04D         	movff	i2wait_in_ms@count_ms+1,i2wait_in_ms@count+1
  7418  002AA0                     i2l145:
  7419  002AA0                     i2l4115:
  7420  002AA0  504E               	movf	i2wait_in_ms@count_ms,w,c
  7421  002AA2  5C4C               	subwf	i2wait_in_ms@count,w,c
  7422  002AA4  504F               	movf	i2wait_in_ms@count_ms+1,w,c
  7423  002AA6  584D               	subwfb	i2wait_in_ms@count+1,w,c
  7424  002AA8  B0D8               	btfsc	status,0,c
  7425  002AAA  0012               	return	
  7426  002AAC  D7D9               	goto	i2l141
  7427  002AAE                     __end_ofi2_wait_in_ms:
  7428                           	opt stack 0
  7429                           pclatu	equ	0xFFB
  7430                           pclath	equ	0xFFA
  7431                           tblptru	equ	0xFF8
  7432                           tblptrh	equ	0xFF7
  7433                           tblptrl	equ	0xFF6
  7434                           tablat	equ	0xFF5
  7435                           prodh	equ	0xFF4
  7436                           prodl	equ	0xFF3
  7437                           intcon	equ	0xFF2
  7438                           postinc0	equ	0xFEE
  7439                           fsr0h	equ	0xFEA
  7440                           fsr0l	equ	0xFE9
  7441                           wreg	equ	0xFE8
  7442                           plusw1	equ	0xFE3
  7443                           fsr1h	equ	0xFE2
  7444                           fsr1l	equ	0xFE1
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           plusw2	equ	0xFDB
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function i2_carroMatar *****************
  7453 ;; Defined at:
  7454 ;;		line 183 in file "carroMain.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    6
  7475 ;; This function calls:
  7476 ;;		i2_config_ccp1
  7477 ;;		i2_config_ccp2
  7478 ;; This function is called by:
  7479 ;;		i2_EstacionaminetoM1
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text35
  7484  00392E                     __ptext35:
  7485                           	opt stack 0
  7486  00392E                     i2_carroMatar:
  7487                           	opt stack 14
  7488                           
  7489                           ;carroMain.c: 184: LATAbits.LA4=0;
  7490                           
  7491                           ;incstack = 0
  7492  00392E  9889               	bcf	3977,4,c	;volatile
  7493                           
  7494                           ;carroMain.c: 185: LATAbits.LA1=0;
  7495  003930  9289               	bcf	3977,1,c	;volatile
  7496                           
  7497                           ;carroMain.c: 186: LATEbits.LE1 =0;
  7498  003932  928D               	bcf	3981,1,c	;volatile
  7499                           
  7500                           ;carroMain.c: 187: LATEbits.LE0=0;
  7501  003934  908D               	bcf	3981,0,c	;volatile
  7502                           
  7503                           ;carroMain.c: 188: config_ccp1(0);
  7504  003936  0E00               	movlw	0
  7505  003938  6E5C               	movwf	i2config_ccp1@duty1+1,c
  7506  00393A  0E00               	movlw	0
  7507  00393C  6E5B               	movwf	i2config_ccp1@duty1,c
  7508  00393E  EC5D  F008         	call	i2_config_ccp1	;wreg free
  7509                           
  7510                           ;carroMain.c: 189: config_ccp2(0);
  7511  003942  0E00               	movlw	0
  7512  003944  6E5C               	movwf	i2config_ccp2@duty2+1,c
  7513  003946  0E00               	movlw	0
  7514  003948  6E5B               	movwf	i2config_ccp2@duty2,c
  7515  00394A  ECF4  F006         	call	i2_config_ccp2	;wreg free
  7516  00394E  0012               	return		;funcret
  7517  003950                     __end_ofi2_carroMatar:
  7518                           	opt stack 0
  7519                           pclatu	equ	0xFFB
  7520                           pclath	equ	0xFFA
  7521                           tblptru	equ	0xFF8
  7522                           tblptrh	equ	0xFF7
  7523                           tblptrl	equ	0xFF6
  7524                           tablat	equ	0xFF5
  7525                           prodh	equ	0xFF4
  7526                           prodl	equ	0xFF3
  7527                           intcon	equ	0xFF2
  7528                           postinc0	equ	0xFEE
  7529                           fsr0h	equ	0xFEA
  7530                           fsr0l	equ	0xFE9
  7531                           wreg	equ	0xFE8
  7532                           plusw1	equ	0xFE3
  7533                           fsr1h	equ	0xFE2
  7534                           fsr1l	equ	0xFE1
  7535                           postinc2	equ	0xFDE
  7536                           postdec2	equ	0xFDD
  7537                           plusw2	equ	0xFDB
  7538                           fsr2h	equ	0xFDA
  7539                           fsr2l	equ	0xFD9
  7540                           status	equ	0xFD8
  7541                           
  7542 ;; *************** function i2_carroGirar *****************
  7543 ;; Defined at:
  7544 ;;		line 153 in file "carroMain.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  direccion       1    wreg     unsigned char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  direccion       1   78[BANK0 ] unsigned char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0
  7559 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7561 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7562 ;;Total ram usage:        1 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    6
  7565 ;; This function calls:
  7566 ;;		i2_config_ccp1
  7567 ;;		i2_config_ccp2
  7568 ;; This function is called by:
  7569 ;;		i2_EstacionaminetoM1
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text36
  7574  003674                     __ptext36:
  7575                           	opt stack 0
  7576  003674                     i2_carroGirar:
  7577                           	opt stack 14
  7578                           
  7579                           ;incstack = 0
  7580                           ;i2carroGirar@direccion stored from wreg
  7581  003674  0100               	movlb	0	; () banked
  7582  003676  6FAE               	movwf	i2carroGirar@direccion& (0+255),b
  7583                           
  7584                           ;carroMain.c: 155: if(direccion==1){
  7585  003678  0100               	movlb	0	; () banked
  7586  00367A  05AE               	decf	i2carroGirar@direccion& (0+255),w,b
  7587  00367C  A4D8               	btfss	status,2,c
  7588  00367E  D004               	goto	i2l84
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;carroMain.c: 156: LATAbits.LA4=1;
  7592  003680  8889               	bsf	3977,4,c	;volatile
  7593                           
  7594                           ;carroMain.c: 157: LATAbits.LA1=0;
  7595  003682  9289               	bcf	3977,1,c	;volatile
  7596                           
  7597                           ;carroMain.c: 158: LATEbits.LE1 =0;
  7598  003684  928D               	bcf	3981,1,c	;volatile
  7599  003686  D017               	goto	L7
  7600  003688                     i2l84:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;carroMain.c: 161: else if(direccion==2){
  7604                           
  7605                           ; BSR set to: 0
  7606  003688  0E02               	movlw	2
  7607  00368A  19AE               	xorwf	i2carroGirar@direccion& (0+255),w,b
  7608  00368C  A4D8               	btfss	status,2,c
  7609  00368E  D005               	goto	i2l86
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;carroMain.c: 162: LATAbits.LA4=1;
  7613  003690  8889               	bsf	3977,4,c	;volatile
  7614                           
  7615                           ;carroMain.c: 163: LATAbits.LA1=0;
  7616  003692  9289               	bcf	3977,1,c	;volatile
  7617                           
  7618                           ;carroMain.c: 164: LATEbits.LE1 =0;
  7619  003694  928D               	bcf	3981,1,c	;volatile
  7620                           
  7621                           ;carroMain.c: 165: LATEbits.LE0=1;
  7622  003696  808D               	bsf	3981,0,c	;volatile
  7623                           
  7624                           ;carroMain.c: 166: }
  7625  003698  D00F               	goto	i2l90
  7626  00369A                     i2l86:
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;carroMain.c: 167: else if(direccion==3){
  7630                           
  7631                           ; BSR set to: 0
  7632  00369A  0E03               	movlw	3
  7633  00369C  19AE               	xorwf	i2carroGirar@direccion& (0+255),w,b
  7634  00369E  A4D8               	btfss	status,2,c
  7635  0036A0  D003               	goto	i2l88
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;carroMain.c: 168: LATAbits.LA4=0;
  7639  0036A2  9889               	bcf	3977,4,c	;volatile
  7640                           
  7641                           ;carroMain.c: 169: LATAbits.LA1=0;
  7642  0036A4  9289               	bcf	3977,1,c	;volatile
  7643  0036A6  D006               	goto	L6
  7644  0036A8                     i2l88:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;carroMain.c: 173: else if(direccion==4){
  7648                           
  7649                           ; BSR set to: 0
  7650  0036A8  0E04               	movlw	4
  7651  0036AA  19AE               	xorwf	i2carroGirar@direccion& (0+255),w,b
  7652  0036AC  A4D8               	btfss	status,2,c
  7653  0036AE  D004               	goto	i2l90
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;carroMain.c: 174: LATAbits.LA4=0;
  7657  0036B0  9889               	bcf	3977,4,c	;volatile
  7658                           
  7659                           ;carroMain.c: 175: LATAbits.LA1=1;
  7660  0036B2  8289               	bsf	3977,1,c	;volatile
  7661  0036B4                     L6:
  7662                           
  7663                           ;carroMain.c: 176: LATEbits.LE1 =1;
  7664  0036B4  828D               	bsf	3981,1,c	;volatile
  7665  0036B6                     L7:
  7666                           
  7667                           ;carroMain.c: 177: LATEbits.LE0=0;
  7668  0036B6  908D               	bcf	3981,0,c	;volatile
  7669  0036B8                     i2l90:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;carroMain.c: 178: }
  7673                           ;carroMain.c: 179: config_ccp1(100);
  7674                           
  7675                           ; BSR set to: 0
  7676                           
  7677                           ; BSR set to: 0
  7678                           
  7679                           ; BSR set to: 0
  7680                           
  7681                           ; BSR set to: 0
  7682  0036B8  0E00               	movlw	0
  7683  0036BA  6E5C               	movwf	i2config_ccp1@duty1+1,c
  7684  0036BC  0E64               	movlw	100
  7685  0036BE  6E5B               	movwf	i2config_ccp1@duty1,c
  7686  0036C0  EC5D  F008         	call	i2_config_ccp1	;wreg free
  7687                           
  7688                           ;carroMain.c: 180: config_ccp2(100);
  7689  0036C4  0E00               	movlw	0
  7690  0036C6  6E5C               	movwf	i2config_ccp2@duty2+1,c
  7691  0036C8  0E64               	movlw	100
  7692  0036CA  6E5B               	movwf	i2config_ccp2@duty2,c
  7693  0036CC  ECF4  F006         	call	i2_config_ccp2	;wreg free
  7694  0036D0  0012               	return		;funcret
  7695  0036D2                     __end_ofi2_carroGirar:
  7696                           	opt stack 0
  7697                           pclatu	equ	0xFFB
  7698                           pclath	equ	0xFFA
  7699                           tblptru	equ	0xFF8
  7700                           tblptrh	equ	0xFF7
  7701                           tblptrl	equ	0xFF6
  7702                           tablat	equ	0xFF5
  7703                           prodh	equ	0xFF4
  7704                           prodl	equ	0xFF3
  7705                           intcon	equ	0xFF2
  7706                           postinc0	equ	0xFEE
  7707                           fsr0h	equ	0xFEA
  7708                           fsr0l	equ	0xFE9
  7709                           wreg	equ	0xFE8
  7710                           plusw1	equ	0xFE3
  7711                           fsr1h	equ	0xFE2
  7712                           fsr1l	equ	0xFE1
  7713                           postinc2	equ	0xFDE
  7714                           postdec2	equ	0xFDD
  7715                           plusw2	equ	0xFDB
  7716                           fsr2h	equ	0xFDA
  7717                           fsr2l	equ	0xFD9
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function i2_carroAvanzarEspecial *****************
  7721 ;; Defined at:
  7722 ;;		line 121 in file "carroMain.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    6
  7743 ;; This function calls:
  7744 ;;		i2_config_ccp1
  7745 ;;		i2_config_ccp2
  7746 ;; This function is called by:
  7747 ;;		i2_EstacionaminetoM1
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           	psect	text37
  7752  003950                     __ptext37:
  7753                           	opt stack 0
  7754  003950                     i2_carroAvanzarEspecial:
  7755                           	opt stack 14
  7756                           
  7757                           ;carroMain.c: 123: LATEbits.LE1=1;
  7758                           
  7759                           ;incstack = 0
  7760  003950  828D               	bsf	3981,1,c	;volatile
  7761                           
  7762                           ;carroMain.c: 124: LATEbits.LE0=0;
  7763  003952  908D               	bcf	3981,0,c	;volatile
  7764                           
  7765                           ;carroMain.c: 125: LATAbits.LA4=1;
  7766  003954  8889               	bsf	3977,4,c	;volatile
  7767                           
  7768                           ;carroMain.c: 126: LATAbits.LA1=0;
  7769  003956  9289               	bcf	3977,1,c	;volatile
  7770                           
  7771                           ;carroMain.c: 127: config_ccp1(80);
  7772  003958  0E00               	movlw	0
  7773  00395A  6E5C               	movwf	i2config_ccp1@duty1+1,c
  7774  00395C  0E50               	movlw	80
  7775  00395E  6E5B               	movwf	i2config_ccp1@duty1,c
  7776  003960  EC5D  F008         	call	i2_config_ccp1	;wreg free
  7777                           
  7778                           ;carroMain.c: 128: config_ccp2(80);
  7779  003964  0E00               	movlw	0
  7780  003966  6E5C               	movwf	i2config_ccp2@duty2+1,c
  7781  003968  0E50               	movlw	80
  7782  00396A  6E5B               	movwf	i2config_ccp2@duty2,c
  7783  00396C  ECF4  F006         	call	i2_config_ccp2	;wreg free
  7784  003970  0012               	return		;funcret
  7785  003972                     __end_ofi2_carroAvanzarEspecial:
  7786                           	opt stack 0
  7787                           pclatu	equ	0xFFB
  7788                           pclath	equ	0xFFA
  7789                           tblptru	equ	0xFF8
  7790                           tblptrh	equ	0xFF7
  7791                           tblptrl	equ	0xFF6
  7792                           tablat	equ	0xFF5
  7793                           prodh	equ	0xFF4
  7794                           prodl	equ	0xFF3
  7795                           intcon	equ	0xFF2
  7796                           postinc0	equ	0xFEE
  7797                           fsr0h	equ	0xFEA
  7798                           fsr0l	equ	0xFE9
  7799                           wreg	equ	0xFE8
  7800                           plusw1	equ	0xFE3
  7801                           fsr1h	equ	0xFE2
  7802                           fsr1l	equ	0xFE1
  7803                           postinc2	equ	0xFDE
  7804                           postdec2	equ	0xFDD
  7805                           plusw2	equ	0xFDB
  7806                           fsr2h	equ	0xFDA
  7807                           fsr2l	equ	0xFD9
  7808                           status	equ	0xFD8
  7809                           
  7810 ;; *************** function i2_config_ccp2 *****************
  7811 ;; Defined at:
  7812 ;;		line 85 in file "Pwm.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  duty2           2   90[COMRAM] int 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  config_ccp2    30   23[BANK0 ] int [15]
  7817 ;;  config_ccp2     2   76[BANK0 ] int 
  7818 ;;  config_ccp2     2   74[BANK0 ] int 
  7819 ;;  config_ccp2     2   72[BANK0 ] unsigned int 
  7820 ;;  config_ccp2     2   70[BANK0 ] unsigned int 
  7821 ;;  config_ccp2     2   68[BANK0 ] int 
  7822 ;;  config_ccp2     2   60[BANK0 ] int 
  7823 ;;  config_ccp2     2   58[BANK0 ] int 
  7824 ;;  config_ccp2     2   56[BANK0 ] int 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7834 ;;      Params:         2       0       0       0       0       0       0       0       0
  7835 ;;      Locals:         0      55       0       0       0       0       0       0       0
  7836 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7837 ;;      Totals:         4      55       0       0       0       0       0       0       0
  7838 ;;Total ram usage:       59 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    5
  7841 ;; This function calls:
  7842 ;;		i2___awdiv
  7843 ;;		i2___awtoft
  7844 ;;		i2___ftadd
  7845 ;;		i2___ftdiv
  7846 ;;		i2___ftmul
  7847 ;;		i2___fttol
  7848 ;;		i2_pow
  7849 ;; This function is called by:
  7850 ;;		i2_carroAvanzarEspecial
  7851 ;;		i2_carroGirar
  7852 ;;		i2_carroMatar
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text38
  7857  000DE8                     __ptext38:
  7858                           	opt stack 0
  7859  000DE8                     i2_config_ccp2:
  7860                           	opt stack 14
  7861                           
  7862                           ;Pwm.c: 87: int valreg;
  7863                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  7864                           
  7865                           ;incstack = 0
  7866  000DE8  C05B  F009         	movff	i2config_ccp2@duty2,i2___awtoft@c
  7867  000DEC  C05C  F00A         	movff	i2config_ccp2@duty2+1,i2___awtoft@c+1
  7868  000DF0  ECF5  F01B         	call	i2___awtoft	;wreg free
  7869  000DF4  C009  F01C         	movff	?i2___awtoft,i2___ftmul@f2
  7870  000DF8  C00A  F01D         	movff	?i2___awtoft+1,i2___ftmul@f2+1
  7871  000DFC  C00B  F01E         	movff	?i2___awtoft+2,i2___ftmul@f2+2
  7872  000E00  0E00               	movlw	0
  7873  000E02  6E10               	movwf	i2___ftadd@f2,c
  7874  000E04  0E80               	movlw	128
  7875  000E06  6E11               	movwf	i2___ftadd@f2+1,c
  7876  000E08  0E3F               	movlw	63
  7877  000E0A  6E12               	movwf	i2___ftadd@f2+2,c
  7878  000E0C  C1E9  F00D         	movff	_pr2g,i2___ftadd@f1
  7879  000E10  C1EA  F00E         	movff	_pr2g+1,i2___ftadd@f1+1
  7880  000E14  C1EB  F00F         	movff	_pr2g+2,i2___ftadd@f1+2
  7881  000E18  EC8B  F00C         	call	i2___ftadd	;wreg free
  7882  000E1C  C00D  F019         	movff	?i2___ftadd,i2___ftmul@f1
  7883  000E20  C00E  F01A         	movff	?i2___ftadd+1,i2___ftmul@f1+1
  7884  000E24  C00F  F01B         	movff	?i2___ftadd+2,i2___ftmul@f1+2
  7885  000E28  EC6F  F011         	call	i2___ftmul	;wreg free
  7886  000E2C  C019  F095         	movff	?i2___ftmul,i2_config_ccp2$1877
  7887  000E30  C01A  F096         	movff	?i2___ftmul+1,i2_config_ccp2$1877+1
  7888  000E34  C01B  F097         	movff	?i2___ftmul+2,i2_config_ccp2$1877+2
  7889                           
  7890                           ;Pwm.c: 87: int valreg;
  7891                           ;Pwm.c: 89: valreg = (duty2*(pr2g + 1)*4)/100;
  7892  000E38  0E00               	movlw	0
  7893  000E3A  6E2B               	movwf	i2___ftdiv@f2,c
  7894  000E3C  0EC8               	movlw	200
  7895  000E3E  6E2C               	movwf	i2___ftdiv@f2+1,c
  7896  000E40  0E42               	movlw	66
  7897  000E42  6E2D               	movwf	i2___ftdiv@f2+2,c
  7898  000E44  0E00               	movlw	0
  7899  000E46  6E1C               	movwf	i2___ftmul@f2,c
  7900  000E48  0E80               	movlw	128
  7901  000E4A  6E1D               	movwf	i2___ftmul@f2+1,c
  7902  000E4C  0E40               	movlw	64
  7903  000E4E  6E1E               	movwf	i2___ftmul@f2+2,c
  7904  000E50  C095  F019         	movff	i2_config_ccp2$1877,i2___ftmul@f1
  7905  000E54  C096  F01A         	movff	i2_config_ccp2$1877+1,i2___ftmul@f1+1
  7906  000E58  C097  F01B         	movff	i2_config_ccp2$1877+2,i2___ftmul@f1+2
  7907  000E5C  EC6F  F011         	call	i2___ftmul	;wreg free
  7908  000E60  C019  F028         	movff	?i2___ftmul,i2___ftdiv@f1
  7909  000E64  C01A  F029         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  7910  000E68  C01B  F02A         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  7911  000E6C  EC5D  F012         	call	i2___ftdiv	;wreg free
  7912  000E70  C028  F037         	movff	?i2___ftdiv,i2___fttol@f1
  7913  000E74  C029  F038         	movff	?i2___ftdiv+1,i2___fttol@f1+1
  7914  000E78  C02A  F039         	movff	?i2___ftdiv+2,i2___fttol@f1+2
  7915  000E7C  ECF5  F010         	call	i2___fttol	;wreg free
  7916  000E80  C037  F098         	movff	?i2___fttol,i2config_ccp2@valreg
  7917  000E84  C038  F099         	movff	?i2___fttol+1,i2config_ccp2@valreg+1
  7918                           
  7919                           ;Pwm.c: 92: int n,x,i,j,z;
  7920                           ;Pwm.c: 93: unsigned int w,y;
  7921                           ;Pwm.c: 94: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  7922  000E88  EE21  F0AD         	lfsr	2,config_ccp2@F3978
  7923  000E8C  EE10  F077         	lfsr	1,i2config_ccp2@a
  7924  000E90  0E1D               	movlw	29
  7925  000E92                     i2u431_41:
  7926  000E92  CFDB FFE3          	movff	plusw2,plusw1
  7927  000E96  06E8               	decf	wreg,f,c
  7928  000E98  E2FC               	bc	i2u431_41
  7929                           
  7930                           ;Pwm.c: 96: n = valreg;
  7931  000E9A  C098  F0AA         	movff	i2config_ccp2@valreg,i2config_ccp2@n
  7932  000E9E  C099  F0AB         	movff	i2config_ccp2@valreg+1,i2config_ccp2@n+1
  7933                           
  7934                           ;Pwm.c: 97: i = 0;
  7935  000EA2  0E00               	movlw	0
  7936  000EA4  0100               	movlb	0	; () banked
  7937  000EA6  6F9B               	movwf	(i2config_ccp2@i+1)& (0+255),b
  7938  000EA8  0E00               	movlw	0
  7939  000EAA  6F9A               	movwf	i2config_ccp2@i& (0+255),b
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;Pwm.c: 98: z = 0;
  7943  000EAC  0E00               	movlw	0
  7944  000EAE  6F9D               	movwf	(i2config_ccp2@z+1)& (0+255),b
  7945  000EB0  0E00               	movlw	0
  7946  000EB2  6F9C               	movwf	i2config_ccp2@z& (0+255),b
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;Pwm.c: 99: y = 0;
  7950  000EB4  0E00               	movlw	0
  7951  000EB6  6FA9               	movwf	(i2config_ccp2@y+1)& (0+255),b
  7952  000EB8  0E00               	movlw	0
  7953  000EBA  6FA8               	movwf	i2config_ccp2@y& (0+255),b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;Pwm.c: 100: w = 0;
  7957  000EBC  0E00               	movlw	0
  7958  000EBE  6FA7               	movwf	(i2config_ccp2@w+1)& (0+255),b
  7959  000EC0  0E00               	movlw	0
  7960  000EC2  6FA6               	movwf	i2config_ccp2@w& (0+255),b
  7961                           
  7962                           ;Pwm.c: 102: while(n > 0)
  7963  000EC4  D024               	goto	i2l199
  7964  000EC6                     i2l3967:
  7965                           
  7966                           ; BSR set to: 0
  7967                           ;Pwm.c: 103: {
  7968                           ;Pwm.c: 104: a[i] = n % 2;
  7969  000EC6  0E01               	movlw	1
  7970  000EC8  15AA               	andwf	i2config_ccp2@n& (0+255),w,b
  7971  000ECA  6E5D               	movwf	??i2_config_ccp2& (0+255),c
  7972  000ECC  0E00               	movlw	0
  7973  000ECE  15AB               	andwf	(i2config_ccp2@n+1)& (0+255),w,b
  7974  000ED0  6E5E               	movwf	(??i2_config_ccp2+1)& (0+255),c
  7975  000ED2  90D8               	bcf	status,0,c
  7976  000ED4  359A               	rlcf	i2config_ccp2@i& (0+255),w,b
  7977  000ED6  6ED9               	movwf	fsr2l,c
  7978  000ED8  359B               	rlcf	(i2config_ccp2@i+1)& (0+255),w,b
  7979  000EDA  6EDA               	movwf	fsr2h,c
  7980  000EDC  0E77               	movlw	low i2config_ccp2@a
  7981  000EDE  26D9               	addwf	fsr2l,f,c
  7982  000EE0  0E00               	movlw	high i2config_ccp2@a
  7983  000EE2  22DA               	addwfc	fsr2h,f,c
  7984  000EE4  C05D  FFDE         	movff	??i2_config_ccp2,postinc2
  7985  000EE8  C05E  FFDD         	movff	??i2_config_ccp2+1,postdec2
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;Pwm.c: 105: n = n / 2;
  7989  000EEC  C0AA  F001         	movff	i2config_ccp2@n,i2___awdiv@dividend
  7990  000EF0  C0AB  F002         	movff	i2config_ccp2@n+1,i2___awdiv@dividend+1
  7991  000EF4  0E00               	movlw	0
  7992  000EF6  6E04               	movwf	i2___awdiv@divisor+1,c
  7993  000EF8  0E02               	movlw	2
  7994  000EFA  6E03               	movwf	i2___awdiv@divisor,c
  7995  000EFC  EC78  F019         	call	i2___awdiv	;wreg free
  7996  000F00  C001  F0AA         	movff	?i2___awdiv,i2config_ccp2@n
  7997  000F04  C002  F0AB         	movff	?i2___awdiv+1,i2config_ccp2@n+1
  7998                           
  7999                           ;Pwm.c: 106: i++;
  8000  000F08  0100               	movlb	0	; () banked
  8001  000F0A  4B9A               	infsnz	i2config_ccp2@i& (0+255),f,b
  8002  000F0C  2B9B               	incf	(i2config_ccp2@i+1)& (0+255),f,b
  8003  000F0E                     i2l199:
  8004                           
  8005                           ; BSR set to: 0
  8006                           
  8007                           ; BSR set to: 0
  8008  000F0E  BFAB               	btfsc	(i2config_ccp2@n+1)& (0+255),7,b
  8009  000F10  D005               	goto	i2u432_40
  8010  000F12  51AB               	movf	(i2config_ccp2@n+1)& (0+255),w,b
  8011  000F14  E1D8               	bnz	i2l3967
  8012  000F16  05AA               	decf	i2config_ccp2@n& (0+255),w,b
  8013  000F18  B0D8               	btfsc	status,0,c
  8014  000F1A  D7D5               	goto	i2l200
  8015  000F1C                     i2u432_40:
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;Pwm.c: 107: }
  8019                           ;Pwm.c: 109: for(j = 0 ; j <= 1; j++)
  8020                           
  8021                           ; BSR set to: 0
  8022  000F1C  0E00               	movlw	0
  8023  000F1E  6FAD               	movwf	(i2config_ccp2@j+1)& (0+255),b
  8024  000F20  0E00               	movlw	0
  8025  000F22  6FAC               	movwf	i2config_ccp2@j& (0+255),b
  8026  000F24                     i2l3977:
  8027                           
  8028                           ; BSR set to: 0
  8029  000F24  BFAD               	btfsc	(i2config_ccp2@j+1)& (0+255),7,b
  8030  000F26  D006               	goto	i2l202
  8031  000F28  51AD               	movf	(i2config_ccp2@j+1)& (0+255),w,b
  8032  000F2A  E159               	bnz	i2l3993
  8033  000F2C  0E02               	movlw	2
  8034  000F2E  5DAC               	subwf	i2config_ccp2@j& (0+255),w,b
  8035  000F30  B0D8               	btfsc	status,0,c
  8036  000F32  D055               	goto	i2u434_40
  8037  000F34                     i2l202:
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;Pwm.c: 110: {
  8041                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  8042                           
  8043                           ; BSR set to: 0
  8044  000F34  C0AC  F009         	movff	i2config_ccp2@j,i2___awtoft@c
  8045  000F38  C0AD  F00A         	movff	i2config_ccp2@j+1,i2___awtoft@c+1
  8046  000F3C  ECF5  F01B         	call	i2___awtoft	;wreg free
  8047  000F40  C009  F09E         	movff	?i2___awtoft,i2_config_ccp2$1878
  8048  000F44  C00A  F09F         	movff	?i2___awtoft+1,i2_config_ccp2$1878+1
  8049  000F48  C00B  F0A0         	movff	?i2___awtoft+2,i2_config_ccp2$1878+2
  8050                           
  8051                           ;Pwm.c: 110: {
  8052                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  8053  000F4C  C09E  F069         	movff	i2_config_ccp2$1878,i2pow@y
  8054  000F50  C09F  F06A         	movff	i2_config_ccp2$1878+1,i2pow@y+1
  8055  000F54  C0A0  F06B         	movff	i2_config_ccp2$1878+2,i2pow@y+2
  8056  000F58  0E00               	movlw	0
  8057  000F5A  0100               	movlb	0	; () banked
  8058  000F5C  6F66               	movwf	i2pow@x& (0+255),b
  8059  000F5E  0E00               	movlw	0
  8060  000F60  6F67               	movwf	(i2pow@x+1)& (0+255),b
  8061  000F62  0E40               	movlw	64
  8062  000F64  6F68               	movwf	(i2pow@x+2)& (0+255),b
  8063  000F66  EC61  F00D         	call	i2_pow	;wreg free
  8064  000F6A  C066  F0A1         	movff	?i2_pow,i2_config_ccp2$1879
  8065  000F6E  C067  F0A2         	movff	?i2_pow+1,i2_config_ccp2$1879+1
  8066  000F72  C068  F0A3         	movff	?i2_pow+2,i2_config_ccp2$1879+2
  8067                           
  8068                           ;Pwm.c: 110: {
  8069                           ;Pwm.c: 111: x = a[j] * (pow (2,j));
  8070  000F76  C0A1  F01C         	movff	i2_config_ccp2$1879,i2___ftmul@f2
  8071  000F7A  C0A2  F01D         	movff	i2_config_ccp2$1879+1,i2___ftmul@f2+1
  8072  000F7E  C0A3  F01E         	movff	i2_config_ccp2$1879+2,i2___ftmul@f2+2
  8073  000F82  90D8               	bcf	status,0,c
  8074  000F84  0100               	movlb	0	; () banked
  8075  000F86  35AC               	rlcf	i2config_ccp2@j& (0+255),w,b
  8076  000F88  6ED9               	movwf	fsr2l,c
  8077  000F8A  35AD               	rlcf	(i2config_ccp2@j+1)& (0+255),w,b
  8078  000F8C  6EDA               	movwf	fsr2h,c
  8079  000F8E  0E77               	movlw	low i2config_ccp2@a
  8080  000F90  26D9               	addwf	fsr2l,f,c
  8081  000F92  0E00               	movlw	high i2config_ccp2@a
  8082  000F94  22DA               	addwfc	fsr2h,f,c
  8083  000F96  CFDE F009          	movff	postinc2,i2___awtoft@c
  8084  000F9A  CFDD F00A          	movff	postdec2,i2___awtoft@c+1
  8085  000F9E  ECF5  F01B         	call	i2___awtoft	;wreg free
  8086  000FA2  C009  F019         	movff	?i2___awtoft,i2___ftmul@f1
  8087  000FA6  C00A  F01A         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  8088  000FAA  C00B  F01B         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  8089  000FAE  EC6F  F011         	call	i2___ftmul	;wreg free
  8090  000FB2  C019  F037         	movff	?i2___ftmul,i2___fttol@f1
  8091  000FB6  C01A  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
  8092  000FBA  C01B  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
  8093  000FBE  ECF5  F010         	call	i2___fttol	;wreg free
  8094  000FC2  C037  F0A4         	movff	?i2___fttol,i2config_ccp2@x
  8095  000FC6  C038  F0A5         	movff	?i2___fttol+1,i2config_ccp2@x+1
  8096                           
  8097                           ;Pwm.c: 112: y = x + y;
  8098  000FCA  0100               	movlb	0	; () banked
  8099  000FCC  51A8               	movf	i2config_ccp2@y& (0+255),w,b
  8100  000FCE  25A4               	addwf	i2config_ccp2@x& (0+255),w,b
  8101  000FD0  6FA8               	movwf	i2config_ccp2@y& (0+255),b
  8102  000FD2  51A9               	movf	(i2config_ccp2@y+1)& (0+255),w,b
  8103  000FD4  21A5               	addwfc	(i2config_ccp2@x+1)& (0+255),w,b
  8104  000FD6  6FA9               	movwf	(i2config_ccp2@y+1)& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107  000FD8  4BAC               	infsnz	i2config_ccp2@j& (0+255),f,b
  8108  000FDA  2BAD               	incf	(i2config_ccp2@j+1)& (0+255),f,b
  8109  000FDC  D7A3               	goto	i2l3977
  8110  000FDE                     i2u434_40:
  8111  000FDE                     i2l3993:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;Pwm.c: 113: }
  8115                           ;Pwm.c: 114: for(j = 2 ; j <= 9; j++)
  8116  000FDE  0E00               	movlw	0
  8117  000FE0  6FAD               	movwf	(i2config_ccp2@j+1)& (0+255),b
  8118  000FE2  0E02               	movlw	2
  8119  000FE4  6FAC               	movwf	i2config_ccp2@j& (0+255),b
  8120  000FE6                     i2l3995:
  8121                           
  8122                           ; BSR set to: 0
  8123  000FE6  BFAD               	btfsc	(i2config_ccp2@j+1)& (0+255),7,b
  8124  000FE8  D006               	goto	i2l204
  8125  000FEA  51AD               	movf	(i2config_ccp2@j+1)& (0+255),w,b
  8126  000FEC  E15B               	bnz	i2l4013
  8127  000FEE  0E0A               	movlw	10
  8128  000FF0  5DAC               	subwf	i2config_ccp2@j& (0+255),w,b
  8129  000FF2  B0D8               	btfsc	status,0,c
  8130  000FF4  D057               	goto	i2u436_40
  8131  000FF6                     i2l204:
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;Pwm.c: 115: {
  8135                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  8136                           
  8137                           ; BSR set to: 0
  8138  000FF6  C09C  F009         	movff	i2config_ccp2@z,i2___awtoft@c
  8139  000FFA  C09D  F00A         	movff	i2config_ccp2@z+1,i2___awtoft@c+1
  8140  000FFE  ECF5  F01B         	call	i2___awtoft	;wreg free
  8141  001002  C009  F09E         	movff	?i2___awtoft,i2_config_ccp2$1878
  8142  001006  C00A  F09F         	movff	?i2___awtoft+1,i2_config_ccp2$1878+1
  8143  00100A  C00B  F0A0         	movff	?i2___awtoft+2,i2_config_ccp2$1878+2
  8144                           
  8145                           ;Pwm.c: 115: {
  8146                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  8147  00100E  C09E  F069         	movff	i2_config_ccp2$1878,i2pow@y
  8148  001012  C09F  F06A         	movff	i2_config_ccp2$1878+1,i2pow@y+1
  8149  001016  C0A0  F06B         	movff	i2_config_ccp2$1878+2,i2pow@y+2
  8150  00101A  0E00               	movlw	0
  8151  00101C  0100               	movlb	0	; () banked
  8152  00101E  6F66               	movwf	i2pow@x& (0+255),b
  8153  001020  0E00               	movlw	0
  8154  001022  6F67               	movwf	(i2pow@x+1)& (0+255),b
  8155  001024  0E40               	movlw	64
  8156  001026  6F68               	movwf	(i2pow@x+2)& (0+255),b
  8157  001028  EC61  F00D         	call	i2_pow	;wreg free
  8158  00102C  C066  F0A1         	movff	?i2_pow,i2_config_ccp2$1879
  8159  001030  C067  F0A2         	movff	?i2_pow+1,i2_config_ccp2$1879+1
  8160  001034  C068  F0A3         	movff	?i2_pow+2,i2_config_ccp2$1879+2
  8161                           
  8162                           ;Pwm.c: 115: {
  8163                           ;Pwm.c: 116: x = a[j] * (pow (2,z));
  8164  001038  C0A1  F01C         	movff	i2_config_ccp2$1879,i2___ftmul@f2
  8165  00103C  C0A2  F01D         	movff	i2_config_ccp2$1879+1,i2___ftmul@f2+1
  8166  001040  C0A3  F01E         	movff	i2_config_ccp2$1879+2,i2___ftmul@f2+2
  8167  001044  90D8               	bcf	status,0,c
  8168  001046  0100               	movlb	0	; () banked
  8169  001048  35AC               	rlcf	i2config_ccp2@j& (0+255),w,b
  8170  00104A  6ED9               	movwf	fsr2l,c
  8171  00104C  35AD               	rlcf	(i2config_ccp2@j+1)& (0+255),w,b
  8172  00104E  6EDA               	movwf	fsr2h,c
  8173  001050  0E77               	movlw	low i2config_ccp2@a
  8174  001052  26D9               	addwf	fsr2l,f,c
  8175  001054  0E00               	movlw	high i2config_ccp2@a
  8176  001056  22DA               	addwfc	fsr2h,f,c
  8177  001058  CFDE F009          	movff	postinc2,i2___awtoft@c
  8178  00105C  CFDD F00A          	movff	postdec2,i2___awtoft@c+1
  8179  001060  ECF5  F01B         	call	i2___awtoft	;wreg free
  8180  001064  C009  F019         	movff	?i2___awtoft,i2___ftmul@f1
  8181  001068  C00A  F01A         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  8182  00106C  C00B  F01B         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  8183  001070  EC6F  F011         	call	i2___ftmul	;wreg free
  8184  001074  C019  F037         	movff	?i2___ftmul,i2___fttol@f1
  8185  001078  C01A  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
  8186  00107C  C01B  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
  8187  001080  ECF5  F010         	call	i2___fttol	;wreg free
  8188  001084  C037  F0A4         	movff	?i2___fttol,i2config_ccp2@x
  8189  001088  C038  F0A5         	movff	?i2___fttol+1,i2config_ccp2@x+1
  8190                           
  8191                           ;Pwm.c: 117: w = x + w;
  8192  00108C  0100               	movlb	0	; () banked
  8193  00108E  51A6               	movf	i2config_ccp2@w& (0+255),w,b
  8194  001090  25A4               	addwf	i2config_ccp2@x& (0+255),w,b
  8195  001092  6FA6               	movwf	i2config_ccp2@w& (0+255),b
  8196  001094  51A7               	movf	(i2config_ccp2@w+1)& (0+255),w,b
  8197  001096  21A5               	addwfc	(i2config_ccp2@x+1)& (0+255),w,b
  8198  001098  6FA7               	movwf	(i2config_ccp2@w+1)& (0+255),b
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;Pwm.c: 118: z++;
  8202  00109A  4B9C               	infsnz	i2config_ccp2@z& (0+255),f,b
  8203  00109C  2B9D               	incf	(i2config_ccp2@z+1)& (0+255),f,b
  8204                           
  8205                           ; BSR set to: 0
  8206  00109E  4BAC               	infsnz	i2config_ccp2@j& (0+255),f,b
  8207  0010A0  2BAD               	incf	(i2config_ccp2@j+1)& (0+255),f,b
  8208  0010A2  D7A1               	goto	i2l3995
  8209  0010A4                     i2u436_40:
  8210  0010A4                     i2l4013:
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;Pwm.c: 119: }
  8214                           ;Pwm.c: 121: CCP2CONbits.DC2B = y;
  8215  0010A4  C0A8  F05D         	movff	i2config_ccp2@y,??i2_config_ccp2
  8216  0010A8  3A5D               	swapf	??i2_config_ccp2,f,c
  8217  0010AA  50BA               	movf	4026,w,c	;volatile
  8218  0010AC  185D               	xorwf	??i2_config_ccp2,w,c
  8219  0010AE  0BCF               	andlw	-49
  8220  0010B0  185D               	xorwf	??i2_config_ccp2,w,c
  8221  0010B2  6EBA               	movwf	4026,c	;volatile
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;Pwm.c: 122: CCPR2L = w;
  8225  0010B4  C0A6  FFBB         	movff	i2config_ccp2@w,4027	;volatile
  8226                           
  8227                           ; BSR set to: 0
  8228  0010B8  0012               	return		;funcret
  8229  0010BA                     __end_ofi2_config_ccp2:
  8230                           	opt stack 0
  8231                           pclatu	equ	0xFFB
  8232                           pclath	equ	0xFFA
  8233                           tblptru	equ	0xFF8
  8234                           tblptrh	equ	0xFF7
  8235                           tblptrl	equ	0xFF6
  8236                           tablat	equ	0xFF5
  8237                           prodh	equ	0xFF4
  8238                           prodl	equ	0xFF3
  8239                           intcon	equ	0xFF2
  8240                           postinc0	equ	0xFEE
  8241                           fsr0h	equ	0xFEA
  8242                           fsr0l	equ	0xFE9
  8243                           wreg	equ	0xFE8
  8244                           plusw1	equ	0xFE3
  8245                           fsr1h	equ	0xFE2
  8246                           fsr1l	equ	0xFE1
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           plusw2	equ	0xFDB
  8250                           fsr2h	equ	0xFDA
  8251                           fsr2l	equ	0xFD9
  8252                           status	equ	0xFD8
  8253                           
  8254 ;; *************** function i2_config_ccp1 *****************
  8255 ;; Defined at:
  8256 ;;		line 43 in file "Pwm.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  duty1           2   90[COMRAM] int 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  config_ccp1    30   23[BANK0 ] int [15]
  8261 ;;  config_ccp1     2   76[BANK0 ] int 
  8262 ;;  config_ccp1     2   74[BANK0 ] int 
  8263 ;;  config_ccp1     2   72[BANK0 ] unsigned int 
  8264 ;;  config_ccp1     2   70[BANK0 ] unsigned int 
  8265 ;;  config_ccp1     2   68[BANK0 ] int 
  8266 ;;  config_ccp1     2   60[BANK0 ] int 
  8267 ;;  config_ccp1     2   58[BANK0 ] int 
  8268 ;;  config_ccp1     2   56[BANK0 ] int 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8278 ;;      Params:         2       0       0       0       0       0       0       0       0
  8279 ;;      Locals:         0      55       0       0       0       0       0       0       0
  8280 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8281 ;;      Totals:         4      55       0       0       0       0       0       0       0
  8282 ;;Total ram usage:       59 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    5
  8285 ;; This function calls:
  8286 ;;		i2___awdiv
  8287 ;;		i2___awtoft
  8288 ;;		i2___ftadd
  8289 ;;		i2___ftdiv
  8290 ;;		i2___ftmul
  8291 ;;		i2___fttol
  8292 ;;		i2_pow
  8293 ;; This function is called by:
  8294 ;;		i2_carroAvanzarEspecial
  8295 ;;		i2_carroGirar
  8296 ;;		i2_carroMatar
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text39
  8301  0010BA                     __ptext39:
  8302                           	opt stack 0
  8303  0010BA                     i2_config_ccp1:
  8304                           	opt stack 14
  8305                           
  8306                           ;Pwm.c: 45: int valreg;
  8307                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;incstack = 0
  8311  0010BA  C05B  F009         	movff	i2config_ccp1@duty1,i2___awtoft@c
  8312  0010BE  C05C  F00A         	movff	i2config_ccp1@duty1+1,i2___awtoft@c+1
  8313  0010C2  ECF5  F01B         	call	i2___awtoft	;wreg free
  8314  0010C6  C009  F01C         	movff	?i2___awtoft,i2___ftmul@f2
  8315  0010CA  C00A  F01D         	movff	?i2___awtoft+1,i2___ftmul@f2+1
  8316  0010CE  C00B  F01E         	movff	?i2___awtoft+2,i2___ftmul@f2+2
  8317  0010D2  0E00               	movlw	0
  8318  0010D4  6E10               	movwf	i2___ftadd@f2,c
  8319  0010D6  0E80               	movlw	128
  8320  0010D8  6E11               	movwf	i2___ftadd@f2+1,c
  8321  0010DA  0E3F               	movlw	63
  8322  0010DC  6E12               	movwf	i2___ftadd@f2+2,c
  8323  0010DE  C1E9  F00D         	movff	_pr2g,i2___ftadd@f1
  8324  0010E2  C1EA  F00E         	movff	_pr2g+1,i2___ftadd@f1+1
  8325  0010E6  C1EB  F00F         	movff	_pr2g+2,i2___ftadd@f1+2
  8326  0010EA  EC8B  F00C         	call	i2___ftadd	;wreg free
  8327  0010EE  C00D  F019         	movff	?i2___ftadd,i2___ftmul@f1
  8328  0010F2  C00E  F01A         	movff	?i2___ftadd+1,i2___ftmul@f1+1
  8329  0010F6  C00F  F01B         	movff	?i2___ftadd+2,i2___ftmul@f1+2
  8330  0010FA  EC6F  F011         	call	i2___ftmul	;wreg free
  8331  0010FE  C019  F095         	movff	?i2___ftmul,i2_config_ccp1$1874
  8332  001102  C01A  F096         	movff	?i2___ftmul+1,i2_config_ccp1$1874+1
  8333  001106  C01B  F097         	movff	?i2___ftmul+2,i2_config_ccp1$1874+2
  8334                           
  8335                           ;Pwm.c: 45: int valreg;
  8336                           ;Pwm.c: 47: valreg = (duty1*(pr2g + 1)*4)/100;
  8337  00110A  0E00               	movlw	0
  8338  00110C  6E2B               	movwf	i2___ftdiv@f2,c
  8339  00110E  0EC8               	movlw	200
  8340  001110  6E2C               	movwf	i2___ftdiv@f2+1,c
  8341  001112  0E42               	movlw	66
  8342  001114  6E2D               	movwf	i2___ftdiv@f2+2,c
  8343  001116  0E00               	movlw	0
  8344  001118  6E1C               	movwf	i2___ftmul@f2,c
  8345  00111A  0E80               	movlw	128
  8346  00111C  6E1D               	movwf	i2___ftmul@f2+1,c
  8347  00111E  0E40               	movlw	64
  8348  001120  6E1E               	movwf	i2___ftmul@f2+2,c
  8349  001122  C095  F019         	movff	i2_config_ccp1$1874,i2___ftmul@f1
  8350  001126  C096  F01A         	movff	i2_config_ccp1$1874+1,i2___ftmul@f1+1
  8351  00112A  C097  F01B         	movff	i2_config_ccp1$1874+2,i2___ftmul@f1+2
  8352  00112E  EC6F  F011         	call	i2___ftmul	;wreg free
  8353  001132  C019  F028         	movff	?i2___ftmul,i2___ftdiv@f1
  8354  001136  C01A  F029         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  8355  00113A  C01B  F02A         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  8356  00113E  EC5D  F012         	call	i2___ftdiv	;wreg free
  8357  001142  C028  F037         	movff	?i2___ftdiv,i2___fttol@f1
  8358  001146  C029  F038         	movff	?i2___ftdiv+1,i2___fttol@f1+1
  8359  00114A  C02A  F039         	movff	?i2___ftdiv+2,i2___fttol@f1+2
  8360  00114E  ECF5  F010         	call	i2___fttol	;wreg free
  8361  001152  C037  F098         	movff	?i2___fttol,i2config_ccp1@valreg
  8362  001156  C038  F099         	movff	?i2___fttol+1,i2config_ccp1@valreg+1
  8363                           
  8364                           ;Pwm.c: 50: int n,x,i,j,z;
  8365                           ;Pwm.c: 51: unsigned int w,y;
  8366                           ;Pwm.c: 52: int a[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  8367  00115A  EE21  F0CB         	lfsr	2,config_ccp1@F3967
  8368  00115E  EE10  F077         	lfsr	1,i2config_ccp1@a
  8369  001162  0E1D               	movlw	29
  8370  001164                     i2u425_41:
  8371  001164  CFDB FFE3          	movff	plusw2,plusw1
  8372  001168  06E8               	decf	wreg,f,c
  8373  00116A  E2FC               	bc	i2u425_41
  8374                           
  8375                           ;Pwm.c: 54: n = valreg;
  8376  00116C  C098  F0AA         	movff	i2config_ccp1@valreg,i2config_ccp1@n
  8377  001170  C099  F0AB         	movff	i2config_ccp1@valreg+1,i2config_ccp1@n+1
  8378                           
  8379                           ;Pwm.c: 55: i = 0;
  8380  001174  0E00               	movlw	0
  8381  001176  0100               	movlb	0	; () banked
  8382  001178  6F9B               	movwf	(i2config_ccp1@i+1)& (0+255),b
  8383  00117A  0E00               	movlw	0
  8384  00117C  6F9A               	movwf	i2config_ccp1@i& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;Pwm.c: 56: z = 0;
  8388  00117E  0E00               	movlw	0
  8389  001180  6F9D               	movwf	(i2config_ccp1@z+1)& (0+255),b
  8390  001182  0E00               	movlw	0
  8391  001184  6F9C               	movwf	i2config_ccp1@z& (0+255),b
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;Pwm.c: 57: y = 0;
  8395  001186  0E00               	movlw	0
  8396  001188  6FA9               	movwf	(i2config_ccp1@y+1)& (0+255),b
  8397  00118A  0E00               	movlw	0
  8398  00118C  6FA8               	movwf	i2config_ccp1@y& (0+255),b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;Pwm.c: 58: w = 0;
  8402  00118E  0E00               	movlw	0
  8403  001190  6FA7               	movwf	(i2config_ccp1@w+1)& (0+255),b
  8404  001192  0E00               	movlw	0
  8405  001194  6FA6               	movwf	i2config_ccp1@w& (0+255),b
  8406                           
  8407                           ;Pwm.c: 60: while(n > 0)
  8408  001196  D024               	goto	i2l187
  8409  001198                     i2l3903:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;Pwm.c: 61: {
  8413                           ;Pwm.c: 62: a[i] = n % 2;
  8414  001198  0E01               	movlw	1
  8415  00119A  15AA               	andwf	i2config_ccp1@n& (0+255),w,b
  8416  00119C  6E5D               	movwf	??i2_config_ccp1& (0+255),c
  8417  00119E  0E00               	movlw	0
  8418  0011A0  15AB               	andwf	(i2config_ccp1@n+1)& (0+255),w,b
  8419  0011A2  6E5E               	movwf	(??i2_config_ccp1+1)& (0+255),c
  8420  0011A4  90D8               	bcf	status,0,c
  8421  0011A6  359A               	rlcf	i2config_ccp1@i& (0+255),w,b
  8422  0011A8  6ED9               	movwf	fsr2l,c
  8423  0011AA  359B               	rlcf	(i2config_ccp1@i+1)& (0+255),w,b
  8424  0011AC  6EDA               	movwf	fsr2h,c
  8425  0011AE  0E77               	movlw	low i2config_ccp1@a
  8426  0011B0  26D9               	addwf	fsr2l,f,c
  8427  0011B2  0E00               	movlw	high i2config_ccp1@a
  8428  0011B4  22DA               	addwfc	fsr2h,f,c
  8429  0011B6  C05D  FFDE         	movff	??i2_config_ccp1,postinc2
  8430  0011BA  C05E  FFDD         	movff	??i2_config_ccp1+1,postdec2
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;Pwm.c: 63: n = n / 2;
  8434  0011BE  C0AA  F001         	movff	i2config_ccp1@n,i2___awdiv@dividend
  8435  0011C2  C0AB  F002         	movff	i2config_ccp1@n+1,i2___awdiv@dividend+1
  8436  0011C6  0E00               	movlw	0
  8437  0011C8  6E04               	movwf	i2___awdiv@divisor+1,c
  8438  0011CA  0E02               	movlw	2
  8439  0011CC  6E03               	movwf	i2___awdiv@divisor,c
  8440  0011CE  EC78  F019         	call	i2___awdiv	;wreg free
  8441  0011D2  C001  F0AA         	movff	?i2___awdiv,i2config_ccp1@n
  8442  0011D6  C002  F0AB         	movff	?i2___awdiv+1,i2config_ccp1@n+1
  8443                           
  8444                           ;Pwm.c: 64: i++;
  8445  0011DA  0100               	movlb	0	; () banked
  8446  0011DC  4B9A               	infsnz	i2config_ccp1@i& (0+255),f,b
  8447  0011DE  2B9B               	incf	(i2config_ccp1@i+1)& (0+255),f,b
  8448  0011E0                     i2l187:
  8449                           
  8450                           ; BSR set to: 0
  8451                           
  8452                           ; BSR set to: 0
  8453  0011E0  BFAB               	btfsc	(i2config_ccp1@n+1)& (0+255),7,b
  8454  0011E2  D005               	goto	i2u426_40
  8455  0011E4  51AB               	movf	(i2config_ccp1@n+1)& (0+255),w,b
  8456  0011E6  E1D8               	bnz	i2l3903
  8457  0011E8  05AA               	decf	i2config_ccp1@n& (0+255),w,b
  8458  0011EA  B0D8               	btfsc	status,0,c
  8459  0011EC  D7D5               	goto	i2l188
  8460  0011EE                     i2u426_40:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;Pwm.c: 65: }
  8464                           ;Pwm.c: 67: for(j = 0 ; j <= 1; j++)
  8465                           
  8466                           ; BSR set to: 0
  8467  0011EE  0E00               	movlw	0
  8468  0011F0  6FAD               	movwf	(i2config_ccp1@j+1)& (0+255),b
  8469  0011F2  0E00               	movlw	0
  8470  0011F4  6FAC               	movwf	i2config_ccp1@j& (0+255),b
  8471  0011F6                     i2l3913:
  8472                           
  8473                           ; BSR set to: 0
  8474  0011F6  BFAD               	btfsc	(i2config_ccp1@j+1)& (0+255),7,b
  8475  0011F8  D006               	goto	i2l190
  8476  0011FA  51AD               	movf	(i2config_ccp1@j+1)& (0+255),w,b
  8477  0011FC  E159               	bnz	i2l3929
  8478  0011FE  0E02               	movlw	2
  8479  001200  5DAC               	subwf	i2config_ccp1@j& (0+255),w,b
  8480  001202  B0D8               	btfsc	status,0,c
  8481  001204  D055               	goto	i2u428_40
  8482  001206                     i2l190:
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;Pwm.c: 68: {
  8486                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  8487                           
  8488                           ; BSR set to: 0
  8489  001206  C0AC  F009         	movff	i2config_ccp1@j,i2___awtoft@c
  8490  00120A  C0AD  F00A         	movff	i2config_ccp1@j+1,i2___awtoft@c+1
  8491  00120E  ECF5  F01B         	call	i2___awtoft	;wreg free
  8492  001212  C009  F09E         	movff	?i2___awtoft,i2_config_ccp1$1875
  8493  001216  C00A  F09F         	movff	?i2___awtoft+1,i2_config_ccp1$1875+1
  8494  00121A  C00B  F0A0         	movff	?i2___awtoft+2,i2_config_ccp1$1875+2
  8495                           
  8496                           ;Pwm.c: 68: {
  8497                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  8498  00121E  C09E  F069         	movff	i2_config_ccp1$1875,i2pow@y
  8499  001222  C09F  F06A         	movff	i2_config_ccp1$1875+1,i2pow@y+1
  8500  001226  C0A0  F06B         	movff	i2_config_ccp1$1875+2,i2pow@y+2
  8501  00122A  0E00               	movlw	0
  8502  00122C  0100               	movlb	0	; () banked
  8503  00122E  6F66               	movwf	i2pow@x& (0+255),b
  8504  001230  0E00               	movlw	0
  8505  001232  6F67               	movwf	(i2pow@x+1)& (0+255),b
  8506  001234  0E40               	movlw	64
  8507  001236  6F68               	movwf	(i2pow@x+2)& (0+255),b
  8508  001238  EC61  F00D         	call	i2_pow	;wreg free
  8509  00123C  C066  F0A1         	movff	?i2_pow,i2_config_ccp1$1876
  8510  001240  C067  F0A2         	movff	?i2_pow+1,i2_config_ccp1$1876+1
  8511  001244  C068  F0A3         	movff	?i2_pow+2,i2_config_ccp1$1876+2
  8512                           
  8513                           ;Pwm.c: 68: {
  8514                           ;Pwm.c: 69: x = a[j] * (pow (2,j));
  8515  001248  C0A1  F01C         	movff	i2_config_ccp1$1876,i2___ftmul@f2
  8516  00124C  C0A2  F01D         	movff	i2_config_ccp1$1876+1,i2___ftmul@f2+1
  8517  001250  C0A3  F01E         	movff	i2_config_ccp1$1876+2,i2___ftmul@f2+2
  8518  001254  90D8               	bcf	status,0,c
  8519  001256  0100               	movlb	0	; () banked
  8520  001258  35AC               	rlcf	i2config_ccp1@j& (0+255),w,b
  8521  00125A  6ED9               	movwf	fsr2l,c
  8522  00125C  35AD               	rlcf	(i2config_ccp1@j+1)& (0+255),w,b
  8523  00125E  6EDA               	movwf	fsr2h,c
  8524  001260  0E77               	movlw	low i2config_ccp1@a
  8525  001262  26D9               	addwf	fsr2l,f,c
  8526  001264  0E00               	movlw	high i2config_ccp1@a
  8527  001266  22DA               	addwfc	fsr2h,f,c
  8528  001268  CFDE F009          	movff	postinc2,i2___awtoft@c
  8529  00126C  CFDD F00A          	movff	postdec2,i2___awtoft@c+1
  8530  001270  ECF5  F01B         	call	i2___awtoft	;wreg free
  8531  001274  C009  F019         	movff	?i2___awtoft,i2___ftmul@f1
  8532  001278  C00A  F01A         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  8533  00127C  C00B  F01B         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  8534  001280  EC6F  F011         	call	i2___ftmul	;wreg free
  8535  001284  C019  F037         	movff	?i2___ftmul,i2___fttol@f1
  8536  001288  C01A  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
  8537  00128C  C01B  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
  8538  001290  ECF5  F010         	call	i2___fttol	;wreg free
  8539  001294  C037  F0A4         	movff	?i2___fttol,i2config_ccp1@x
  8540  001298  C038  F0A5         	movff	?i2___fttol+1,i2config_ccp1@x+1
  8541                           
  8542                           ;Pwm.c: 70: y = x + y;
  8543  00129C  0100               	movlb	0	; () banked
  8544  00129E  51A8               	movf	i2config_ccp1@y& (0+255),w,b
  8545  0012A0  25A4               	addwf	i2config_ccp1@x& (0+255),w,b
  8546  0012A2  6FA8               	movwf	i2config_ccp1@y& (0+255),b
  8547  0012A4  51A9               	movf	(i2config_ccp1@y+1)& (0+255),w,b
  8548  0012A6  21A5               	addwfc	(i2config_ccp1@x+1)& (0+255),w,b
  8549  0012A8  6FA9               	movwf	(i2config_ccp1@y+1)& (0+255),b
  8550                           
  8551                           ; BSR set to: 0
  8552  0012AA  4BAC               	infsnz	i2config_ccp1@j& (0+255),f,b
  8553  0012AC  2BAD               	incf	(i2config_ccp1@j+1)& (0+255),f,b
  8554  0012AE  D7A3               	goto	i2l3913
  8555  0012B0                     i2u428_40:
  8556  0012B0                     i2l3929:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;Pwm.c: 71: }
  8560                           ;Pwm.c: 72: for(j = 2 ; j <= 9; j++)
  8561  0012B0  0E00               	movlw	0
  8562  0012B2  6FAD               	movwf	(i2config_ccp1@j+1)& (0+255),b
  8563  0012B4  0E02               	movlw	2
  8564  0012B6  6FAC               	movwf	i2config_ccp1@j& (0+255),b
  8565  0012B8                     i2l3931:
  8566                           
  8567                           ; BSR set to: 0
  8568  0012B8  BFAD               	btfsc	(i2config_ccp1@j+1)& (0+255),7,b
  8569  0012BA  D006               	goto	i2l192
  8570  0012BC  51AD               	movf	(i2config_ccp1@j+1)& (0+255),w,b
  8571  0012BE  E15B               	bnz	i2l3949
  8572  0012C0  0E0A               	movlw	10
  8573  0012C2  5DAC               	subwf	i2config_ccp1@j& (0+255),w,b
  8574  0012C4  B0D8               	btfsc	status,0,c
  8575  0012C6  D057               	goto	i2u430_40
  8576  0012C8                     i2l192:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;Pwm.c: 73: {
  8580                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  8581                           
  8582                           ; BSR set to: 0
  8583  0012C8  C09C  F009         	movff	i2config_ccp1@z,i2___awtoft@c
  8584  0012CC  C09D  F00A         	movff	i2config_ccp1@z+1,i2___awtoft@c+1
  8585  0012D0  ECF5  F01B         	call	i2___awtoft	;wreg free
  8586  0012D4  C009  F09E         	movff	?i2___awtoft,i2_config_ccp1$1875
  8587  0012D8  C00A  F09F         	movff	?i2___awtoft+1,i2_config_ccp1$1875+1
  8588  0012DC  C00B  F0A0         	movff	?i2___awtoft+2,i2_config_ccp1$1875+2
  8589                           
  8590                           ;Pwm.c: 73: {
  8591                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  8592  0012E0  C09E  F069         	movff	i2_config_ccp1$1875,i2pow@y
  8593  0012E4  C09F  F06A         	movff	i2_config_ccp1$1875+1,i2pow@y+1
  8594  0012E8  C0A0  F06B         	movff	i2_config_ccp1$1875+2,i2pow@y+2
  8595  0012EC  0E00               	movlw	0
  8596  0012EE  0100               	movlb	0	; () banked
  8597  0012F0  6F66               	movwf	i2pow@x& (0+255),b
  8598  0012F2  0E00               	movlw	0
  8599  0012F4  6F67               	movwf	(i2pow@x+1)& (0+255),b
  8600  0012F6  0E40               	movlw	64
  8601  0012F8  6F68               	movwf	(i2pow@x+2)& (0+255),b
  8602  0012FA  EC61  F00D         	call	i2_pow	;wreg free
  8603  0012FE  C066  F0A1         	movff	?i2_pow,i2_config_ccp1$1876
  8604  001302  C067  F0A2         	movff	?i2_pow+1,i2_config_ccp1$1876+1
  8605  001306  C068  F0A3         	movff	?i2_pow+2,i2_config_ccp1$1876+2
  8606                           
  8607                           ;Pwm.c: 73: {
  8608                           ;Pwm.c: 74: x = a[j] * (pow (2,z));
  8609  00130A  C0A1  F01C         	movff	i2_config_ccp1$1876,i2___ftmul@f2
  8610  00130E  C0A2  F01D         	movff	i2_config_ccp1$1876+1,i2___ftmul@f2+1
  8611  001312  C0A3  F01E         	movff	i2_config_ccp1$1876+2,i2___ftmul@f2+2
  8612  001316  90D8               	bcf	status,0,c
  8613  001318  0100               	movlb	0	; () banked
  8614  00131A  35AC               	rlcf	i2config_ccp1@j& (0+255),w,b
  8615  00131C  6ED9               	movwf	fsr2l,c
  8616  00131E  35AD               	rlcf	(i2config_ccp1@j+1)& (0+255),w,b
  8617  001320  6EDA               	movwf	fsr2h,c
  8618  001322  0E77               	movlw	low i2config_ccp1@a
  8619  001324  26D9               	addwf	fsr2l,f,c
  8620  001326  0E00               	movlw	high i2config_ccp1@a
  8621  001328  22DA               	addwfc	fsr2h,f,c
  8622  00132A  CFDE F009          	movff	postinc2,i2___awtoft@c
  8623  00132E  CFDD F00A          	movff	postdec2,i2___awtoft@c+1
  8624  001332  ECF5  F01B         	call	i2___awtoft	;wreg free
  8625  001336  C009  F019         	movff	?i2___awtoft,i2___ftmul@f1
  8626  00133A  C00A  F01A         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  8627  00133E  C00B  F01B         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  8628  001342  EC6F  F011         	call	i2___ftmul	;wreg free
  8629  001346  C019  F037         	movff	?i2___ftmul,i2___fttol@f1
  8630  00134A  C01A  F038         	movff	?i2___ftmul+1,i2___fttol@f1+1
  8631  00134E  C01B  F039         	movff	?i2___ftmul+2,i2___fttol@f1+2
  8632  001352  ECF5  F010         	call	i2___fttol	;wreg free
  8633  001356  C037  F0A4         	movff	?i2___fttol,i2config_ccp1@x
  8634  00135A  C038  F0A5         	movff	?i2___fttol+1,i2config_ccp1@x+1
  8635                           
  8636                           ;Pwm.c: 75: w = x + w;
  8637  00135E  0100               	movlb	0	; () banked
  8638  001360  51A6               	movf	i2config_ccp1@w& (0+255),w,b
  8639  001362  25A4               	addwf	i2config_ccp1@x& (0+255),w,b
  8640  001364  6FA6               	movwf	i2config_ccp1@w& (0+255),b
  8641  001366  51A7               	movf	(i2config_ccp1@w+1)& (0+255),w,b
  8642  001368  21A5               	addwfc	(i2config_ccp1@x+1)& (0+255),w,b
  8643  00136A  6FA7               	movwf	(i2config_ccp1@w+1)& (0+255),b
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;Pwm.c: 76: z++;
  8647  00136C  4B9C               	infsnz	i2config_ccp1@z& (0+255),f,b
  8648  00136E  2B9D               	incf	(i2config_ccp1@z+1)& (0+255),f,b
  8649                           
  8650                           ; BSR set to: 0
  8651  001370  4BAC               	infsnz	i2config_ccp1@j& (0+255),f,b
  8652  001372  2BAD               	incf	(i2config_ccp1@j+1)& (0+255),f,b
  8653  001374  D7A1               	goto	i2l3931
  8654  001376                     i2u430_40:
  8655  001376                     i2l3949:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;Pwm.c: 77: }
  8659                           ;Pwm.c: 79: CCP1CONbits.DC1B = y;
  8660  001376  C0A8  F05D         	movff	i2config_ccp1@y,??i2_config_ccp1
  8661  00137A  3A5D               	swapf	??i2_config_ccp1,f,c
  8662  00137C  50BD               	movf	4029,w,c	;volatile
  8663  00137E  185D               	xorwf	??i2_config_ccp1,w,c
  8664  001380  0BCF               	andlw	-49
  8665  001382  185D               	xorwf	??i2_config_ccp1,w,c
  8666  001384  6EBD               	movwf	4029,c	;volatile
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;Pwm.c: 80: CCPR1L = w;
  8670  001386  C0A6  FFBE         	movff	i2config_ccp1@w,4030	;volatile
  8671                           
  8672                           ; BSR set to: 0
  8673  00138A  0012               	return		;funcret
  8674  00138C                     __end_ofi2_config_ccp1:
  8675                           	opt stack 0
  8676                           pclatu	equ	0xFFB
  8677                           pclath	equ	0xFFA
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           fsr0h	equ	0xFEA
  8687                           fsr0l	equ	0xFE9
  8688                           wreg	equ	0xFE8
  8689                           plusw1	equ	0xFE3
  8690                           fsr1h	equ	0xFE2
  8691                           fsr1l	equ	0xFE1
  8692                           postinc2	equ	0xFDE
  8693                           postdec2	equ	0xFDD
  8694                           plusw2	equ	0xFDB
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function i2_pow *****************
  8700 ;; Defined at:
  8701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  x               3    6[BANK0 ] void 
  8704 ;;  y               3    9[BANK0 ] void 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  pow             4   19[BANK0 ] unsigned long 
  8707 ;;  pow             1   18[BANK0 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  3    6[BANK0 ] unsigned char 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8717 ;;      Params:         0       6       0       0       0       0       0       0       0
  8718 ;;      Locals:         0      11       0       0       0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8720 ;;      Totals:         0      17       0       0       0       0       0       0       0
  8721 ;;Total ram usage:       17 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    4
  8724 ;; This function calls:
  8725 ;;		i2___ftge
  8726 ;;		i2___ftmul
  8727 ;;		i2___ftneg
  8728 ;;		i2___fttol
  8729 ;;		i2___lltoft
  8730 ;;		i2_exp
  8731 ;;		i2_log
  8732 ;; This function is called by:
  8733 ;;		i2_config_ccp1
  8734 ;;		i2_config_ccp2
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text40
  8739  001AC2                     __ptext40:
  8740                           	opt stack 0
  8741  001AC2                     i2_pow:
  8742                           	opt stack 14
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;incstack = 0
  8746  001AC2  0E00               	movlw	0
  8747  001AC4  0100               	movlb	0	; () banked
  8748  001AC6  6F72               	movwf	i2pow@sign& (0+255),b
  8749                           
  8750                           ; BSR set to: 0
  8751  001AC8  5166               	movf	i2pow@x& (0+255),w,b
  8752  001ACA  1167               	iorwf	(i2pow@x+1)& (0+255),w,b
  8753  001ACC  1168               	iorwf	(i2pow@x+2)& (0+255),w,b
  8754  001ACE  A4D8               	btfss	status,2,c
  8755  001AD0  D01D               	goto	i2l640
  8756                           
  8757                           ; BSR set to: 0
  8758  001AD2  0E00               	movlw	0
  8759  001AD4  6E01               	movwf	i2___ftge@ff1,c
  8760  001AD6  0E00               	movlw	0
  8761  001AD8  6E02               	movwf	i2___ftge@ff1+1,c
  8762  001ADA  0E00               	movlw	0
  8763  001ADC  6E03               	movwf	i2___ftge@ff1+2,c
  8764  001ADE  C069  F004         	movff	i2pow@y,i2___ftge@ff2
  8765  001AE2  C06A  F005         	movff	i2pow@y+1,i2___ftge@ff2+1
  8766  001AE6  C06B  F006         	movff	i2pow@y+2,i2___ftge@ff2+2
  8767  001AEA  ECA8  F018         	call	i2___ftge	;wreg free
  8768  001AEE  A0D8               	btfss	status,0,c
  8769  001AF0  D005               	goto	i2l641
  8770  001AF2  0E00               	movlw	0
  8771  001AF4  0101               	movlb	1	; () banked
  8772  001AF6  6FED               	movwf	(_errno+1)& (0+255),b
  8773  001AF8  0E21               	movlw	33
  8774  001AFA  6FEC               	movwf	_errno& (0+255),b
  8775  001AFC                     i2l641:
  8776  001AFC  0E00               	movlw	0
  8777  001AFE  0100               	movlb	0	; () banked
  8778  001B00  6F66               	movwf	?i2_pow& (0+255),b
  8779  001B02  0E00               	movlw	0
  8780  001B04  6F67               	movwf	(?i2_pow+1)& (0+255),b
  8781  001B06  0E00               	movlw	0
  8782  001B08  6F68               	movwf	(?i2_pow+2)& (0+255),b
  8783                           
  8784                           ; BSR set to: 0
  8785  001B0A  0012               	return	
  8786  001B0C                     i2l640:
  8787                           
  8788                           ; BSR set to: 0
  8789                           
  8790                           ; BSR set to: 0
  8791  001B0C  5169               	movf	i2pow@y& (0+255),w,b
  8792  001B0E  116A               	iorwf	(i2pow@y+1)& (0+255),w,b
  8793  001B10  116B               	iorwf	(i2pow@y+2)& (0+255),w,b
  8794  001B12  A4D8               	btfss	status,2,c
  8795  001B14  D007               	goto	i2l643
  8796                           
  8797                           ; BSR set to: 0
  8798  001B16  0E00               	movlw	0
  8799  001B18  6F66               	movwf	?i2_pow& (0+255),b
  8800  001B1A  0E80               	movlw	128
  8801  001B1C  6F67               	movwf	(?i2_pow+1)& (0+255),b
  8802  001B1E  0E3F               	movlw	63
  8803  001B20  6F68               	movwf	(?i2_pow+2)& (0+255),b
  8804                           
  8805                           ; BSR set to: 0
  8806  001B22  0012               	return	
  8807  001B24                     i2l643:
  8808                           
  8809                           ; BSR set to: 0
  8810                           
  8811                           ; BSR set to: 0
  8812  001B24  AF68               	btfss	(i2pow@x+2)& (0+255),7,b
  8813  001B26  D043               	goto	i2l644
  8814                           
  8815                           ; BSR set to: 0
  8816  001B28  C069  F037         	movff	i2pow@y,i2___fttol@f1
  8817  001B2C  C06A  F038         	movff	i2pow@y+1,i2___fttol@f1+1
  8818  001B30  C06B  F039         	movff	i2pow@y+2,i2___fttol@f1+2
  8819  001B34  ECF5  F010         	call	i2___fttol	;wreg free
  8820  001B38  C037  F073         	movff	?i2___fttol,i2pow@yi
  8821  001B3C  C038  F074         	movff	?i2___fttol+1,i2pow@yi+1
  8822  001B40  C039  F075         	movff	?i2___fttol+2,i2pow@yi+2
  8823  001B44  C03A  F076         	movff	?i2___fttol+3,i2pow@yi+3
  8824  001B48  C073  F009         	movff	i2pow@yi,i2___lltoft@c
  8825  001B4C  C074  F00A         	movff	i2pow@yi+1,i2___lltoft@c+1
  8826  001B50  C075  F00B         	movff	i2pow@yi+2,i2___lltoft@c+2
  8827  001B54  C076  F00C         	movff	i2pow@yi+3,i2___lltoft@c+3
  8828  001B58  EC69  F01B         	call	i2___lltoft	;wreg free
  8829  001B5C  0100               	movlb	0	; () banked
  8830  001B5E  5169               	movf	i2pow@y& (0+255),w,b
  8831  001B60  1809               	xorwf	?i2___lltoft,w,c
  8832  001B62  E107               	bnz	i2u411_40
  8833  001B64  516A               	movf	(i2pow@y+1)& (0+255),w,b
  8834  001B66  180A               	xorwf	?i2___lltoft+1,w,c
  8835  001B68  E104               	bnz	i2u411_40
  8836  001B6A  516B               	movf	(i2pow@y+2)& (0+255),w,b
  8837  001B6C  180B               	xorwf	?i2___lltoft+2,w,c
  8838  001B6E  B4D8               	btfsc	status,2,c
  8839  001B70  D00D               	goto	i2l645
  8840  001B72                     i2u411_40:
  8841                           
  8842                           ; BSR set to: 0
  8843  001B72  0E00               	movlw	0
  8844  001B74  0101               	movlb	1	; () banked
  8845  001B76  6FED               	movwf	(_errno+1)& (0+255),b
  8846  001B78  0E21               	movlw	33
  8847  001B7A  6FEC               	movwf	_errno& (0+255),b
  8848  001B7C  0E00               	movlw	0
  8849  001B7E  0100               	movlb	0	; () banked
  8850  001B80  6F66               	movwf	?i2_pow& (0+255),b
  8851  001B82  0E00               	movlw	0
  8852  001B84  6F67               	movwf	(?i2_pow+1)& (0+255),b
  8853  001B86  0E00               	movlw	0
  8854  001B88  6F68               	movwf	(?i2_pow+2)& (0+255),b
  8855                           
  8856                           ; BSR set to: 0
  8857  001B8A  0012               	return	
  8858  001B8C                     i2l645:
  8859                           
  8860                           ; BSR set to: 0
  8861                           
  8862                           ; BSR set to: 0
  8863  001B8C  5173               	movf	i2pow@yi& (0+255),w,b
  8864  001B8E  0B01               	andlw	1
  8865  001B90  6F72               	movwf	i2pow@sign& (0+255),b
  8866                           
  8867                           ; BSR set to: 0
  8868  001B92  C066  F001         	movff	i2pow@x,i2___ftneg@f1
  8869  001B96  C067  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
  8870  001B9A  C068  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
  8871  001B9E  EC85  F01C         	call	i2___ftneg	;wreg free
  8872  001BA2  C001  F066         	movff	?i2___ftneg,i2pow@x
  8873  001BA6  C002  F067         	movff	?i2___ftneg+1,i2pow@x+1
  8874  001BAA  C003  F068         	movff	?i2___ftneg+2,i2pow@x+2
  8875  001BAE                     i2l644:
  8876  001BAE  C066  F034         	movff	i2pow@x,i2log@x
  8877  001BB2  C067  F035         	movff	i2pow@x+1,i2log@x+1
  8878  001BB6  C068  F036         	movff	i2pow@x+2,i2log@x+2
  8879  001BBA  EC6F  F00F         	call	i2_log	;wreg free
  8880  001BBE  C034  F06C         	movff	?i2_log,i2_pow$1880
  8881  001BC2  C035  F06D         	movff	?i2_log+1,i2_pow$1880+1
  8882  001BC6  C036  F06E         	movff	?i2_log+2,i2_pow$1880+2
  8883  001BCA  C06C  F019         	movff	i2_pow$1880,i2___ftmul@f1
  8884  001BCE  C06D  F01A         	movff	i2_pow$1880+1,i2___ftmul@f1+1
  8885  001BD2  C06E  F01B         	movff	i2_pow$1880+2,i2___ftmul@f1+2
  8886  001BD6  C069  F01C         	movff	i2pow@y,i2___ftmul@f2
  8887  001BDA  C06A  F01D         	movff	i2pow@y+1,i2___ftmul@f2+1
  8888  001BDE  C06B  F01E         	movff	i2pow@y+2,i2___ftmul@f2+2
  8889  001BE2  EC6F  F011         	call	i2___ftmul	;wreg free
  8890  001BE6  C019  F06F         	movff	?i2___ftmul,i2_pow$1881
  8891  001BEA  C01A  F070         	movff	?i2___ftmul+1,i2_pow$1881+1
  8892  001BEE  C01B  F071         	movff	?i2___ftmul+2,i2_pow$1881+2
  8893  001BF2  C06F  F058         	movff	i2_pow$1881,i2exp@x
  8894  001BF6  C070  F059         	movff	i2_pow$1881+1,i2exp@x+1
  8895  001BFA  C071  F05A         	movff	i2_pow$1881+2,i2exp@x+2
  8896  001BFE  ECBE  F00A         	call	i2_exp	;wreg free
  8897  001C02  C058  F066         	movff	?i2_exp,i2pow@x
  8898  001C06  C059  F067         	movff	?i2_exp+1,i2pow@x+1
  8899  001C0A  C05A  F068         	movff	?i2_exp+2,i2pow@x+2
  8900  001C0E  0100               	movlb	0	; () banked
  8901  001C10  5172               	movf	i2pow@sign& (0+255),w,b
  8902  001C12  B4D8               	btfsc	status,2,c
  8903  001C14  D00F               	goto	i2l646
  8904                           
  8905                           ; BSR set to: 0
  8906  001C16  C066  F001         	movff	i2pow@x,i2___ftneg@f1
  8907  001C1A  C067  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
  8908  001C1E  C068  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
  8909  001C22  EC85  F01C         	call	i2___ftneg	;wreg free
  8910  001C26  C001  F066         	movff	?i2___ftneg,?i2_pow
  8911  001C2A  C002  F067         	movff	?i2___ftneg+1,?i2_pow+1
  8912  001C2E  C003  F068         	movff	?i2___ftneg+2,?i2_pow+2
  8913  001C32  0012               	return	
  8914  001C34                     i2l646:
  8915                           
  8916                           ; BSR set to: 0
  8917  001C34  C066  F066         	movff	i2pow@x,?i2_pow
  8918  001C38  C067  F067         	movff	i2pow@x+1,?i2_pow+1
  8919  001C3C  C068  F068         	movff	i2pow@x+2,?i2_pow+2
  8920  001C40  0012               	return		;funcret
  8921  001C42                     __end_ofi2_pow:
  8922                           	opt stack 0
  8923                           pclatu	equ	0xFFB
  8924                           pclath	equ	0xFFA
  8925                           tblptru	equ	0xFF8
  8926                           tblptrh	equ	0xFF7
  8927                           tblptrl	equ	0xFF6
  8928                           tablat	equ	0xFF5
  8929                           prodh	equ	0xFF4
  8930                           prodl	equ	0xFF3
  8931                           intcon	equ	0xFF2
  8932                           postinc0	equ	0xFEE
  8933                           fsr0h	equ	0xFEA
  8934                           fsr0l	equ	0xFE9
  8935                           wreg	equ	0xFE8
  8936                           plusw1	equ	0xFE3
  8937                           fsr1h	equ	0xFE2
  8938                           fsr1l	equ	0xFE1
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           plusw2	equ	0xFDB
  8942                           fsr2h	equ	0xFDA
  8943                           fsr2l	equ	0xFD9
  8944                           status	equ	0xFD8
  8945                           
  8946 ;; *************** function i2_log *****************
  8947 ;; Defined at:
  8948 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  x               3   51[COMRAM] unsigned char 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  log             2   54[COMRAM] int 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  3   51[COMRAM] int 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8962 ;;      Params:         3       0       0       0       0       0       0       0       0
  8963 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8965 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8966 ;;Total ram usage:        5 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    3
  8969 ;; This function calls:
  8970 ;;		i2___awtoft
  8971 ;;		i2___ftadd
  8972 ;;		i2___ftmul
  8973 ;;		i2_eval_poly
  8974 ;;		i2_frexp
  8975 ;; This function is called by:
  8976 ;;		i2_pow
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text41
  8981  001EDE                     __ptext41:
  8982                           	opt stack 0
  8983  001EDE                     i2_log:
  8984                           	opt stack 14
  8985                           
  8986                           ;incstack = 0
  8987  001EDE  AE36               	btfss	i2log@x+2,7,c
  8988  001EE0  D00C               	goto	i2l842
  8989  001EE2  0E00               	movlw	0
  8990  001EE4  0101               	movlb	1	; () banked
  8991  001EE6  6FED               	movwf	(_errno+1)& (0+255),b
  8992  001EE8  0E21               	movlw	33
  8993  001EEA  6FEC               	movwf	_errno& (0+255),b
  8994  001EEC  0E00               	movlw	0
  8995  001EEE  6E34               	movwf	?i2_log,c
  8996  001EF0  0E00               	movlw	0
  8997  001EF2  6E35               	movwf	?i2_log+1,c
  8998  001EF4  0E00               	movlw	0
  8999  001EF6  6E36               	movwf	?i2_log+2,c
  9000                           
  9001                           ; BSR set to: 1
  9002  001EF8  0012               	return	
  9003  001EFA                     i2l842:
  9004                           
  9005                           ; BSR set to: 1
  9006  001EFA  5034               	movf	i2log@x,w,c
  9007  001EFC  1035               	iorwf	i2log@x+1,w,c
  9008  001EFE  1036               	iorwf	i2log@x+2,w,c
  9009  001F00  A4D8               	btfss	status,2,c
  9010  001F02  D00C               	goto	i2l844
  9011  001F04  0E00               	movlw	0
  9012  001F06  0101               	movlb	1	; () banked
  9013  001F08  6FED               	movwf	(_errno+1)& (0+255),b
  9014  001F0A  0E22               	movlw	34
  9015  001F0C  6FEC               	movwf	_errno& (0+255),b
  9016  001F0E  0E00               	movlw	0
  9017  001F10  6E34               	movwf	?i2_log,c
  9018  001F12  0E00               	movlw	0
  9019  001F14  6E35               	movwf	?i2_log+1,c
  9020  001F16  0E00               	movlw	0
  9021  001F18  6E36               	movwf	?i2_log+2,c
  9022                           
  9023                           ; BSR set to: 1
  9024  001F1A  0012               	return	
  9025  001F1C                     i2l844:
  9026                           
  9027                           ; BSR set to: 1
  9028  001F1C  0E00               	movlw	0
  9029  001F1E  6E1C               	movwf	i2___ftmul@f2,c
  9030  001F20  0E00               	movlw	0
  9031  001F22  6E1D               	movwf	i2___ftmul@f2+1,c
  9032  001F24  0E40               	movlw	64
  9033  001F26  6E1E               	movwf	i2___ftmul@f2+2,c
  9034  001F28  0E37               	movlw	low i2log@exponent
  9035  001F2A  6E04               	movwf	i2frexp@eptr,c
  9036  001F2C  0E00               	movlw	high i2log@exponent
  9037  001F2E  6E05               	movwf	i2frexp@eptr+1,c
  9038  001F30  C034  F001         	movff	i2log@x,i2frexp@value
  9039  001F34  C035  F002         	movff	i2log@x+1,i2frexp@value+1
  9040  001F38  C036  F003         	movff	i2log@x+2,i2frexp@value+2
  9041  001F3C  EC60  F018         	call	i2_frexp	;wreg free
  9042  001F40  C001  F019         	movff	?i2_frexp,i2___ftmul@f1
  9043  001F44  C002  F01A         	movff	?i2_frexp+1,i2___ftmul@f1+1
  9044  001F48  C003  F01B         	movff	?i2_frexp+2,i2___ftmul@f1+2
  9045  001F4C  EC6F  F011         	call	i2___ftmul	;wreg free
  9046  001F50  C019  F00D         	movff	?i2___ftmul,i2___ftadd@f1
  9047  001F54  C01A  F00E         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  9048  001F58  C01B  F00F         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  9049  001F5C  0E00               	movlw	0
  9050  001F5E  6E10               	movwf	i2___ftadd@f2,c
  9051  001F60  0E80               	movlw	128
  9052  001F62  6E11               	movwf	i2___ftadd@f2+1,c
  9053  001F64  0EBF               	movlw	191
  9054  001F66  6E12               	movwf	i2___ftadd@f2+2,c
  9055  001F68  EC8B  F00C         	call	i2___ftadd	;wreg free
  9056  001F6C  C00D  F034         	movff	?i2___ftadd,i2log@x
  9057  001F70  C00E  F035         	movff	?i2___ftadd+1,i2log@x+1
  9058  001F74  C00F  F036         	movff	?i2___ftadd+2,i2log@x+2
  9059  001F78  0637               	decf	i2log@exponent,f,c
  9060  001F7A  A0D8               	btfss	status,0,c
  9061  001F7C  0638               	decf	i2log@exponent+1,f,c
  9062  001F7E  C034  F028         	movff	i2log@x,i2eval_poly@x
  9063  001F82  C035  F029         	movff	i2log@x+1,i2eval_poly@x+1
  9064  001F86  C036  F02A         	movff	i2log@x+2,i2eval_poly@x+2
  9065  001F8A  0E1F               	movlw	low log@coeff
  9066  001F8C  6E2B               	movwf	i2eval_poly@d,c
  9067  001F8E  0E08               	movlw	high log@coeff
  9068  001F90  6E2C               	movwf	i2eval_poly@d+1,c
  9069  001F92  0E00               	movlw	0
  9070  001F94  6E2E               	movwf	i2eval_poly@n+1,c
  9071  001F96  0E08               	movlw	8
  9072  001F98  6E2D               	movwf	i2eval_poly@n,c
  9073  001F9A  EC88  F014         	call	i2_eval_poly	;wreg free
  9074  001F9E  C028  F034         	movff	?i2_eval_poly,i2log@x
  9075  001FA2  C029  F035         	movff	?i2_eval_poly+1,i2log@x+1
  9076  001FA6  C02A  F036         	movff	?i2_eval_poly+2,i2log@x+2
  9077  001FAA  0E72               	movlw	114
  9078  001FAC  6E1C               	movwf	i2___ftmul@f2,c
  9079  001FAE  0E31               	movlw	49
  9080  001FB0  6E1D               	movwf	i2___ftmul@f2+1,c
  9081  001FB2  0E3F               	movlw	63
  9082  001FB4  6E1E               	movwf	i2___ftmul@f2+2,c
  9083  001FB6  C037  F009         	movff	i2log@exponent,i2___awtoft@c
  9084  001FBA  C038  F00A         	movff	i2log@exponent+1,i2___awtoft@c+1
  9085  001FBE  ECF5  F01B         	call	i2___awtoft	;wreg free
  9086  001FC2  C009  F019         	movff	?i2___awtoft,i2___ftmul@f1
  9087  001FC6  C00A  F01A         	movff	?i2___awtoft+1,i2___ftmul@f1+1
  9088  001FCA  C00B  F01B         	movff	?i2___awtoft+2,i2___ftmul@f1+2
  9089  001FCE  EC6F  F011         	call	i2___ftmul	;wreg free
  9090  001FD2  C019  F00D         	movff	?i2___ftmul,i2___ftadd@f1
  9091  001FD6  C01A  F00E         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  9092  001FDA  C01B  F00F         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  9093  001FDE  C034  F010         	movff	i2log@x,i2___ftadd@f2
  9094  001FE2  C035  F011         	movff	i2log@x+1,i2___ftadd@f2+1
  9095  001FE6  C036  F012         	movff	i2log@x+2,i2___ftadd@f2+2
  9096  001FEA  EC8B  F00C         	call	i2___ftadd	;wreg free
  9097  001FEE  C00D  F034         	movff	?i2___ftadd,?i2_log
  9098  001FF2  C00E  F035         	movff	?i2___ftadd+1,?i2_log+1
  9099  001FF6  C00F  F036         	movff	?i2___ftadd+2,?i2_log+2
  9100  001FFA  0012               	return	
  9101  001FFC                     __end_ofi2_log:
  9102                           	opt stack 0
  9103                           pclatu	equ	0xFFB
  9104                           pclath	equ	0xFFA
  9105                           tblptru	equ	0xFF8
  9106                           tblptrh	equ	0xFF7
  9107                           tblptrl	equ	0xFF6
  9108                           tablat	equ	0xFF5
  9109                           prodh	equ	0xFF4
  9110                           prodl	equ	0xFF3
  9111                           intcon	equ	0xFF2
  9112                           postinc0	equ	0xFEE
  9113                           fsr0h	equ	0xFEA
  9114                           fsr0l	equ	0xFE9
  9115                           wreg	equ	0xFE8
  9116                           plusw1	equ	0xFE3
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           postinc2	equ	0xFDE
  9120                           postdec2	equ	0xFDD
  9121                           plusw2	equ	0xFDB
  9122                           fsr2h	equ	0xFDA
  9123                           fsr2l	equ	0xFD9
  9124                           status	equ	0xFD8
  9125                           
  9126 ;; *************** function i2_exp *****************
  9127 ;; Defined at:
  9128 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;  x               3   87[COMRAM] int 
  9131 ;; Auto vars:     Size  Location     Type
  9132 ;;  exp             2    3[BANK0 ] int 
  9133 ;;  exp             1    5[BANK0 ] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  3   87[COMRAM] unsigned char 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9143 ;;      Params:         3       0       0       0       0       0       0       0       0
  9144 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9146 ;;      Totals:         3       6       0       0       0       0       0       0       0
  9147 ;;Total ram usage:        9 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    3
  9150 ;; This function calls:
  9151 ;;		i2___awtoft
  9152 ;;		i2___ftdiv
  9153 ;;		i2___ftge
  9154 ;;		i2___ftmul
  9155 ;;		i2___ftneg
  9156 ;;		i2___ftsub
  9157 ;;		i2___fttol
  9158 ;;		i2_eval_poly
  9159 ;;		i2_floor
  9160 ;;		i2_ldexp
  9161 ;; This function is called by:
  9162 ;;		i2_pow
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text42
  9167  00157C                     __ptext42:
  9168                           	opt stack 0
  9169  00157C                     i2_exp:
  9170                           	opt stack 14
  9171                           
  9172                           ;incstack = 0
  9173  00157C  5058               	movf	i2exp@x,w,c
  9174  00157E  1059               	iorwf	i2exp@x+1,w,c
  9175  001580  105A               	iorwf	i2exp@x+2,w,c
  9176  001582  A4D8               	btfss	status,2,c
  9177  001584  D007               	goto	i2l800
  9178  001586  0E00               	movlw	0
  9179  001588  6E58               	movwf	?i2_exp,c
  9180  00158A  0E80               	movlw	128
  9181  00158C  6E59               	movwf	?i2_exp+1,c
  9182  00158E  0E3F               	movlw	63
  9183  001590  6E5A               	movwf	?i2_exp+2,c
  9184  001592  0012               	return	
  9185  001594                     i2l800:
  9186  001594  0E72               	movlw	114
  9187  001596  6E01               	movwf	i2___ftge@ff1,c
  9188  001598  0E31               	movlw	49
  9189  00159A  6E02               	movwf	i2___ftge@ff1+1,c
  9190  00159C  0E44               	movlw	68
  9191  00159E  6E03               	movwf	i2___ftge@ff1+2,c
  9192  0015A0  C058  F004         	movff	i2exp@x,i2___ftge@ff2
  9193  0015A4  C059  F005         	movff	i2exp@x+1,i2___ftge@ff2+1
  9194  0015A8  C05A  F006         	movff	i2exp@x+2,i2___ftge@ff2+2
  9195  0015AC  ECA8  F018         	call	i2___ftge	;wreg free
  9196  0015B0  B0D8               	btfsc	status,0,c
  9197  0015B2  D00C               	goto	i2l802
  9198  0015B4  0E00               	movlw	0
  9199  0015B6  0101               	movlb	1	; () banked
  9200  0015B8  6FED               	movwf	(_errno+1)& (0+255),b
  9201  0015BA  0E22               	movlw	34
  9202  0015BC  6FEC               	movwf	_errno& (0+255),b
  9203  0015BE  0EFF               	movlw	255
  9204  0015C0  6E58               	movwf	?i2_exp,c
  9205  0015C2  0E7F               	movlw	127
  9206  0015C4  6E59               	movwf	?i2_exp+1,c
  9207  0015C6  0E7F               	movlw	127
  9208  0015C8  6E5A               	movwf	?i2_exp+2,c
  9209                           
  9210                           ; BSR set to: 1
  9211  0015CA  0012               	return	
  9212  0015CC                     i2l802:
  9213                           
  9214                           ; BSR set to: 1
  9215  0015CC  C058  F001         	movff	i2exp@x,i2___ftge@ff1
  9216  0015D0  C059  F002         	movff	i2exp@x+1,i2___ftge@ff1+1
  9217  0015D4  C05A  F003         	movff	i2exp@x+2,i2___ftge@ff1+2
  9218  0015D8  0E49               	movlw	73
  9219  0015DA  6E04               	movwf	i2___ftge@ff2,c
  9220  0015DC  0E3A               	movlw	58
  9221  0015DE  6E05               	movwf	i2___ftge@ff2+1,c
  9222  0015E0  0EC4               	movlw	196
  9223  0015E2  6E06               	movwf	i2___ftge@ff2+2,c
  9224  0015E4  ECA8  F018         	call	i2___ftge	;wreg free
  9225  0015E8  B0D8               	btfsc	status,0,c
  9226  0015EA  D00C               	goto	i2l803
  9227  0015EC  0E00               	movlw	0
  9228  0015EE  0101               	movlb	1	; () banked
  9229  0015F0  6FED               	movwf	(_errno+1)& (0+255),b
  9230  0015F2  0E22               	movlw	34
  9231  0015F4  6FEC               	movwf	_errno& (0+255),b
  9232  0015F6  0E00               	movlw	0
  9233  0015F8  6E58               	movwf	?i2_exp,c
  9234  0015FA  0E00               	movlw	0
  9235  0015FC  6E59               	movwf	?i2_exp+1,c
  9236  0015FE  0E00               	movlw	0
  9237  001600  6E5A               	movwf	?i2_exp+2,c
  9238                           
  9239                           ; BSR set to: 1
  9240  001602  0012               	return	
  9241  001604                     i2l803:
  9242                           
  9243                           ; BSR set to: 1
  9244  001604  AE5A               	btfss	i2exp@x+2,7,c
  9245  001606  D002               	goto	i2u382_40
  9246  001608  0E01               	movlw	1
  9247  00160A  D001               	goto	i2u383_40
  9248  00160C                     i2u382_40:
  9249  00160C  0E00               	movlw	0
  9250  00160E                     i2u383_40:
  9251  00160E  0100               	movlb	0	; () banked
  9252  001610  6F65               	movwf	i2exp@sign& (0+255),b
  9253                           
  9254                           ; BSR set to: 0
  9255  001612  5165               	movf	i2exp@sign& (0+255),w,b
  9256  001614  B4D8               	btfsc	status,2,c
  9257  001616  D00E               	goto	i2l804
  9258                           
  9259                           ; BSR set to: 0
  9260  001618  C058  F001         	movff	i2exp@x,i2___ftneg@f1
  9261  00161C  C059  F002         	movff	i2exp@x+1,i2___ftneg@f1+1
  9262  001620  C05A  F003         	movff	i2exp@x+2,i2___ftneg@f1+2
  9263  001624  EC85  F01C         	call	i2___ftneg	;wreg free
  9264  001628  C001  F058         	movff	?i2___ftneg,i2exp@x
  9265  00162C  C002  F059         	movff	?i2___ftneg+1,i2exp@x+1
  9266  001630  C003  F05A         	movff	?i2___ftneg+2,i2exp@x+2
  9267  001634                     i2l804:
  9268  001634  C058  F019         	movff	i2exp@x,i2___ftmul@f1
  9269  001638  C059  F01A         	movff	i2exp@x+1,i2___ftmul@f1+1
  9270  00163C  C05A  F01B         	movff	i2exp@x+2,i2___ftmul@f1+2
  9271  001640  0EAA               	movlw	170
  9272  001642  6E1C               	movwf	i2___ftmul@f2,c
  9273  001644  0EB8               	movlw	184
  9274  001646  6E1D               	movwf	i2___ftmul@f2+1,c
  9275  001648  0E3F               	movlw	63
  9276  00164A  6E1E               	movwf	i2___ftmul@f2+2,c
  9277  00164C  EC6F  F011         	call	i2___ftmul	;wreg free
  9278  001650  C019  F058         	movff	?i2___ftmul,i2exp@x
  9279  001654  C01A  F059         	movff	?i2___ftmul+1,i2exp@x+1
  9280  001658  C01B  F05A         	movff	?i2___ftmul+2,i2exp@x+2
  9281  00165C  C058  F050         	movff	i2exp@x,i2floor@x
  9282  001660  C059  F051         	movff	i2exp@x+1,i2floor@x+1
  9283  001664  C05A  F052         	movff	i2exp@x+2,i2floor@x+2
  9284  001668  EC42  F013         	call	i2_floor	;wreg free
  9285  00166C  C050  F060         	movff	?i2_floor,i2_exp$1882
  9286  001670  C051  F061         	movff	?i2_floor+1,i2_exp$1882+1
  9287  001674  C052  F062         	movff	?i2_floor+2,i2_exp$1882+2
  9288  001678  C060  F037         	movff	i2_exp$1882,i2___fttol@f1
  9289  00167C  C061  F038         	movff	i2_exp$1882+1,i2___fttol@f1+1
  9290  001680  C062  F039         	movff	i2_exp$1882+2,i2___fttol@f1+2
  9291  001684  ECF5  F010         	call	i2___fttol	;wreg free
  9292  001688  C037  F063         	movff	?i2___fttol,i2exp@exponent
  9293  00168C  C038  F064         	movff	?i2___fttol+1,i2exp@exponent+1
  9294  001690  C058  F019         	movff	i2exp@x,i2___ftsub@f1
  9295  001694  C059  F01A         	movff	i2exp@x+1,i2___ftsub@f1+1
  9296  001698  C05A  F01B         	movff	i2exp@x+2,i2___ftsub@f1+2
  9297  00169C  C063  F009         	movff	i2exp@exponent,i2___awtoft@c
  9298  0016A0  C064  F00A         	movff	i2exp@exponent+1,i2___awtoft@c+1
  9299  0016A4  ECF5  F01B         	call	i2___awtoft	;wreg free
  9300  0016A8  C009  F01C         	movff	?i2___awtoft,i2___ftsub@f2
  9301  0016AC  C00A  F01D         	movff	?i2___awtoft+1,i2___ftsub@f2+1
  9302  0016B0  C00B  F01E         	movff	?i2___awtoft+2,i2___ftsub@f2+2
  9303  0016B4  ECB8  F01B         	call	i2___ftsub	;wreg free
  9304  0016B8  C019  F058         	movff	?i2___ftsub,i2exp@x
  9305  0016BC  C01A  F059         	movff	?i2___ftsub+1,i2exp@x+1
  9306  0016C0  C01B  F05A         	movff	?i2___ftsub+2,i2exp@x+2
  9307  0016C4  C058  F028         	movff	i2exp@x,i2eval_poly@x
  9308  0016C8  C059  F029         	movff	i2exp@x+1,i2eval_poly@x+1
  9309  0016CC  C05A  F02A         	movff	i2exp@x+2,i2eval_poly@x+2
  9310  0016D0  0E01               	movlw	low exp@coeff
  9311  0016D2  6E2B               	movwf	i2eval_poly@d,c
  9312  0016D4  0E08               	movlw	high exp@coeff
  9313  0016D6  6E2C               	movwf	i2eval_poly@d+1,c
  9314  0016D8  0E00               	movlw	0
  9315  0016DA  6E2E               	movwf	i2eval_poly@n+1,c
  9316  0016DC  0E09               	movlw	9
  9317  0016DE  6E2D               	movwf	i2eval_poly@n,c
  9318  0016E0  EC88  F014         	call	i2_eval_poly	;wreg free
  9319  0016E4  C028  F034         	movff	?i2_eval_poly,i2ldexp@value
  9320  0016E8  C029  F035         	movff	?i2_eval_poly+1,i2ldexp@value+1
  9321  0016EC  C02A  F036         	movff	?i2_eval_poly+2,i2ldexp@value+2
  9322  0016F0  C063  F037         	movff	i2exp@exponent,i2ldexp@newexp
  9323  0016F4  C064  F038         	movff	i2exp@exponent+1,i2ldexp@newexp+1
  9324  0016F8  ECBA  F015         	call	i2_ldexp	;wreg free
  9325  0016FC  C034  F058         	movff	?i2_ldexp,i2exp@x
  9326  001700  C035  F059         	movff	?i2_ldexp+1,i2exp@x+1
  9327  001704  C036  F05A         	movff	?i2_ldexp+2,i2exp@x+2
  9328  001708  0100               	movlb	0	; () banked
  9329  00170A  5165               	movf	i2exp@sign& (0+255),w,b
  9330  00170C  B4D8               	btfsc	status,2,c
  9331  00170E  D025               	goto	i2l805
  9332                           
  9333                           ; BSR set to: 0
  9334  001710  2858               	incf	i2exp@x,w,c
  9335  001712  E10E               	bnz	i2l3567
  9336  001714  0E7F               	movlw	127
  9337  001716  1859               	xorwf	i2exp@x+1,w,c
  9338  001718  E10B               	bnz	i2l3567
  9339  00171A  0E7F               	movlw	127
  9340  00171C  185A               	xorwf	i2exp@x+2,w,c
  9341  00171E  A4D8               	btfss	status,2,c
  9342  001720  D007               	goto	i2l806
  9343                           
  9344                           ; BSR set to: 0
  9345  001722  0E00               	movlw	0
  9346  001724  6E58               	movwf	?i2_exp,c
  9347  001726  0E00               	movlw	0
  9348  001728  6E59               	movwf	?i2_exp+1,c
  9349  00172A  0E00               	movlw	0
  9350  00172C  6E5A               	movwf	?i2_exp+2,c
  9351                           
  9352                           ; BSR set to: 0
  9353  00172E  0012               	return	
  9354  001730                     i2l806:
  9355  001730                     i2l3567:
  9356                           
  9357                           ; BSR set to: 0
  9358  001730  0E00               	movlw	0
  9359  001732  6E28               	movwf	i2___ftdiv@f1,c
  9360  001734  0E80               	movlw	128
  9361  001736  6E29               	movwf	i2___ftdiv@f1+1,c
  9362  001738  0E3F               	movlw	63
  9363  00173A  6E2A               	movwf	i2___ftdiv@f1+2,c
  9364  00173C  C058  F02B         	movff	i2exp@x,i2___ftdiv@f2
  9365  001740  C059  F02C         	movff	i2exp@x+1,i2___ftdiv@f2+1
  9366  001744  C05A  F02D         	movff	i2exp@x+2,i2___ftdiv@f2+2
  9367  001748  EC5D  F012         	call	i2___ftdiv	;wreg free
  9368  00174C  C028  F058         	movff	?i2___ftdiv,?i2_exp
  9369  001750  C029  F059         	movff	?i2___ftdiv+1,?i2_exp+1
  9370  001754  C02A  F05A         	movff	?i2___ftdiv+2,?i2_exp+2
  9371  001758  0012               	return	
  9372  00175A                     i2l805:
  9373                           
  9374                           ; BSR set to: 0
  9375  00175A  C058  F058         	movff	i2exp@x,?i2_exp
  9376  00175E  C059  F059         	movff	i2exp@x+1,?i2_exp+1
  9377  001762  C05A  F05A         	movff	i2exp@x+2,?i2_exp+2
  9378  001766  0012               	return		;funcret
  9379  001768                     __end_ofi2_exp:
  9380                           	opt stack 0
  9381                           pclatu	equ	0xFFB
  9382                           pclath	equ	0xFFA
  9383                           tblptru	equ	0xFF8
  9384                           tblptrh	equ	0xFF7
  9385                           tblptrl	equ	0xFF6
  9386                           tablat	equ	0xFF5
  9387                           prodh	equ	0xFF4
  9388                           prodl	equ	0xFF3
  9389                           intcon	equ	0xFF2
  9390                           postinc0	equ	0xFEE
  9391                           fsr0h	equ	0xFEA
  9392                           fsr0l	equ	0xFE9
  9393                           wreg	equ	0xFE8
  9394                           plusw1	equ	0xFE3
  9395                           fsr1h	equ	0xFE2
  9396                           fsr1l	equ	0xFE1
  9397                           postinc2	equ	0xFDE
  9398                           postdec2	equ	0xFDD
  9399                           plusw2	equ	0xFDB
  9400                           fsr2h	equ	0xFDA
  9401                           fsr2l	equ	0xFD9
  9402                           status	equ	0xFD8
  9403                           
  9404 ;; *************** function i2_ldexp *****************
  9405 ;; Defined at:
  9406 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  value           3   51[COMRAM] unsigned char 
  9409 ;;  newexp          2   54[COMRAM] int 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;		None
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  3   51[COMRAM] int 
  9414 ;; Registers used:
  9415 ;;		wreg, status,2, status,0
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9421 ;;      Params:         5       0       0       0       0       0       0       0       0
  9422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9423 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9424 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9425 ;;Total ram usage:        7 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; This function calls:
  9428 ;;		Nothing
  9429 ;; This function is called by:
  9430 ;;		i2_exp
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text43
  9435  002B74                     __ptext43:
  9436                           	opt stack 0
  9437  002B74                     i2_ldexp:
  9438                           	opt stack 16
  9439                           
  9440                           ;incstack = 0
  9441  002B74  5034               	movf	i2ldexp@value,w,c
  9442  002B76  1035               	iorwf	i2ldexp@value+1,w,c
  9443  002B78  1036               	iorwf	i2ldexp@value+2,w,c
  9444  002B7A  A4D8               	btfss	status,2,c
  9445  002B7C  D007               	goto	i2l824
  9446  002B7E  0E00               	movlw	0
  9447  002B80  6E34               	movwf	?i2_ldexp,c
  9448  002B82  0E00               	movlw	0
  9449  002B84  6E35               	movwf	?i2_ldexp+1,c
  9450  002B86  0E00               	movlw	0
  9451  002B88  6E36               	movwf	?i2_ldexp+2,c
  9452  002B8A  0012               	return	
  9453  002B8C                     i2l824:
  9454  002B8C  5036               	movf	i2ldexp@value+2,w,c
  9455  002B8E  0B7F               	andlw	127
  9456  002B90  6E39               	movwf	??i2_ldexp& (0+255),c
  9457  002B92  6A3A               	clrf	(??i2_ldexp+1)& (0+255),c
  9458  002B94  90D8               	bcf	status,0,c
  9459  002B96  3639               	rlcf	??i2_ldexp,f,c
  9460  002B98  363A               	rlcf	??i2_ldexp+1,f,c
  9461  002B9A  5039               	movf	??i2_ldexp,w,c
  9462  002B9C  2637               	addwf	i2ldexp@newexp,f,c
  9463  002B9E  503A               	movf	??i2_ldexp+1,w,c
  9464  002BA0  2238               	addwfc	i2ldexp@newexp+1,f,c
  9465  002BA2  AE35               	btfss	i2ldexp@value+1,7,c
  9466  002BA4  D003               	goto	i2u362_40
  9467  002BA6  6A39               	clrf	??i2_ldexp& (0+255),c
  9468  002BA8  2A39               	incf	??i2_ldexp& (0+255),f,c
  9469  002BAA  D001               	goto	i2u362_48
  9470  002BAC                     i2u362_40:
  9471  002BAC  6A39               	clrf	??i2_ldexp& (0+255),c
  9472  002BAE                     i2u362_48:
  9473  002BAE  5039               	movf	??i2_ldexp,w,c
  9474  002BB0  2637               	addwf	i2ldexp@newexp,f,c
  9475  002BB2  0E00               	movlw	0
  9476  002BB4  2238               	addwfc	i2ldexp@newexp+1,f,c
  9477  002BB6  AE38               	btfss	i2ldexp@newexp+1,7,c
  9478  002BB8  D00C               	goto	i2l826
  9479  002BBA  0E00               	movlw	0
  9480  002BBC  0101               	movlb	1	; () banked
  9481  002BBE  6FED               	movwf	(_errno+1)& (0+255),b
  9482  002BC0  0E22               	movlw	34
  9483  002BC2  6FEC               	movwf	_errno& (0+255),b
  9484  002BC4  0E00               	movlw	0
  9485  002BC6  6E34               	movwf	?i2_ldexp,c
  9486  002BC8  0E00               	movlw	0
  9487  002BCA  6E35               	movwf	?i2_ldexp+1,c
  9488  002BCC  0E00               	movlw	0
  9489  002BCE                     L8:
  9490  002BCE  6E36               	movwf	?i2_ldexp+2,c
  9491                           
  9492                           ; BSR set to: 1
  9493  002BD0  0012               	return	
  9494  002BD2                     i2l826:
  9495                           
  9496                           ; BSR set to: 1
  9497  002BD2  BE38               	btfsc	i2ldexp@newexp+1,7,c
  9498  002BD4  D016               	goto	i2l828
  9499  002BD6  0438               	decf	i2ldexp@newexp+1,w,c
  9500  002BD8  A0D8               	btfss	status,0,c
  9501  002BDA  D013               	goto	i2l828
  9502  002BDC  0E00               	movlw	0
  9503  002BDE  0101               	movlb	1	; () banked
  9504  002BE0  6FED               	movwf	(_errno+1)& (0+255),b
  9505  002BE2  0E22               	movlw	34
  9506  002BE4  6FEC               	movwf	_errno& (0+255),b
  9507                           
  9508                           ; BSR set to: 1
  9509  002BE6  AE36               	btfss	i2ldexp@value+2,7,c
  9510  002BE8  D006               	goto	i2l829
  9511                           
  9512                           ; BSR set to: 1
  9513  002BEA  0EFF               	movlw	255
  9514  002BEC  6E34               	movwf	?i2_ldexp,c
  9515  002BEE  0E7F               	movlw	127
  9516  002BF0  6E35               	movwf	?i2_ldexp+1,c
  9517  002BF2  0EFF               	movlw	255
  9518  002BF4  D7EC               	goto	L8
  9519  002BF6                     i2l829:
  9520                           
  9521                           ; BSR set to: 1
  9522                           
  9523                           ; BSR set to: 1
  9524  002BF6  0EFF               	movlw	255
  9525  002BF8  6E34               	movwf	?i2_ldexp,c
  9526  002BFA  0E7F               	movlw	127
  9527  002BFC  6E35               	movwf	?i2_ldexp+1,c
  9528  002BFE  0E7F               	movlw	127
  9529  002C00  D7E6               	goto	L8
  9530  002C02                     i2l828:
  9531                           
  9532                           ; BSR set to: 1
  9533  002C02  3438               	rlcf	i2ldexp@newexp+1,w,c
  9534  002C04  3038               	rrcf	i2ldexp@newexp+1,w,c
  9535  002C06  6E3A               	movwf	(??i2_ldexp+1)& (0+255),c
  9536  002C08  3037               	rrcf	i2ldexp@newexp,w,c
  9537  002C0A  6E39               	movwf	??i2_ldexp& (0+255),c
  9538  002C0C  5036               	movf	i2ldexp@value+2,w,c
  9539  002C0E  1839               	xorwf	??i2_ldexp,w,c
  9540  002C10  0B80               	andlw	-128
  9541  002C12  1839               	xorwf	??i2_ldexp,w,c
  9542  002C14  6E36               	movwf	i2ldexp@value+2,c
  9543  002C16  C037  F039         	movff	i2ldexp@newexp,??i2_ldexp
  9544  002C1A  0E01               	movlw	1
  9545  002C1C  1639               	andwf	??i2_ldexp,f,c
  9546  002C1E  3239               	rrcf	??i2_ldexp,f,c
  9547  002C20  3239               	rrcf	??i2_ldexp,f,c
  9548  002C22  5035               	movf	i2ldexp@value+1,w,c
  9549  002C24  1839               	xorwf	??i2_ldexp,w,c
  9550  002C26  0B7F               	andlw	-129
  9551  002C28  1839               	xorwf	??i2_ldexp,w,c
  9552  002C2A  6E35               	movwf	i2ldexp@value+1,c
  9553  002C2C  C034  F034         	movff	i2ldexp@value,?i2_ldexp
  9554  002C30  C035  F035         	movff	i2ldexp@value+1,?i2_ldexp+1
  9555  002C34  C036  F036         	movff	i2ldexp@value+2,?i2_ldexp+2
  9556  002C38  0012               	return	
  9557  002C3A                     __end_ofi2_ldexp:
  9558                           	opt stack 0
  9559                           pclatu	equ	0xFFB
  9560                           pclath	equ	0xFFA
  9561                           tblptru	equ	0xFF8
  9562                           tblptrh	equ	0xFF7
  9563                           tblptrl	equ	0xFF6
  9564                           tablat	equ	0xFF5
  9565                           prodh	equ	0xFF4
  9566                           prodl	equ	0xFF3
  9567                           intcon	equ	0xFF2
  9568                           postinc0	equ	0xFEE
  9569                           fsr0h	equ	0xFEA
  9570                           fsr0l	equ	0xFE9
  9571                           wreg	equ	0xFE8
  9572                           plusw1	equ	0xFE3
  9573                           fsr1h	equ	0xFE2
  9574                           fsr1l	equ	0xFE1
  9575                           postinc2	equ	0xFDE
  9576                           postdec2	equ	0xFDD
  9577                           plusw2	equ	0xFDB
  9578                           fsr2h	equ	0xFDA
  9579                           fsr2l	equ	0xFD9
  9580                           status	equ	0xFD8
  9581                           
  9582 ;; *************** function i2_floor *****************
  9583 ;; Defined at:
  9584 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  x               3   79[COMRAM] int 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  floor           3   84[COMRAM] int 
  9589 ;;  floor           2   82[COMRAM] int 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  3   79[COMRAM] int 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9599 ;;      Params:         3       0       0       0       0       0       0       0       0
  9600 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9602 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9603 ;;Total ram usage:        8 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    2
  9606 ;; This function calls:
  9607 ;;		i2___altoft
  9608 ;;		i2___ftadd
  9609 ;;		i2___ftge
  9610 ;;		i2___fttol
  9611 ;;		i2_frexp
  9612 ;; This function is called by:
  9613 ;;		i2_exp
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text44
  9618  002684                     __ptext44:
  9619                           	opt stack 0
  9620  002684                     i2_floor:
  9621                           	opt stack 14
  9622                           
  9623                           ;incstack = 0
  9624  002684  C050  F001         	movff	i2floor@x,i2frexp@value
  9625  002688  C051  F002         	movff	i2floor@x+1,i2frexp@value+1
  9626  00268C  C052  F003         	movff	i2floor@x+2,i2frexp@value+2
  9627  002690  0E53               	movlw	low i2floor@expon
  9628  002692  6E04               	movwf	i2frexp@eptr,c
  9629  002694  0E00               	movlw	high i2floor@expon
  9630  002696  6E05               	movwf	i2frexp@eptr+1,c
  9631  002698  EC60  F018         	call	i2_frexp	;wreg free
  9632  00269C  AE54               	btfss	i2floor@expon+1,7,c
  9633  00269E  D010               	goto	i2l811
  9634  0026A0  AE52               	btfss	i2floor@x+2,7,c
  9635  0026A2  D007               	goto	i2l812
  9636  0026A4  0E00               	movlw	0
  9637  0026A6  6E50               	movwf	?i2_floor,c
  9638  0026A8  0E80               	movlw	128
  9639  0026AA  6E51               	movwf	?i2_floor+1,c
  9640  0026AC  0EBF               	movlw	191
  9641  0026AE  6E52               	movwf	?i2_floor+2,c
  9642  0026B0  0012               	return	
  9643  0026B2                     i2l812:
  9644  0026B2  0E00               	movlw	0
  9645  0026B4  6E50               	movwf	?i2_floor,c
  9646  0026B6  0E00               	movlw	0
  9647  0026B8  6E51               	movwf	?i2_floor+1,c
  9648  0026BA  0E00               	movlw	0
  9649  0026BC  6E52               	movwf	?i2_floor+2,c
  9650  0026BE  0012               	return	
  9651  0026C0                     i2l811:
  9652  0026C0  5054               	movf	i2floor@expon+1,w,c
  9653  0026C2  E104               	bnz	i2u359_40
  9654  0026C4  0E15               	movlw	21
  9655  0026C6  5C53               	subwf	i2floor@expon,w,c
  9656  0026C8  A0D8               	btfss	status,0,c
  9657  0026CA  D007               	goto	i2l814
  9658  0026CC                     i2u359_40:
  9659  0026CC  C050  F050         	movff	i2floor@x,?i2_floor
  9660  0026D0  C051  F051         	movff	i2floor@x+1,?i2_floor+1
  9661  0026D4  C052  F052         	movff	i2floor@x+2,?i2_floor+2
  9662  0026D8  0012               	return	
  9663  0026DA                     i2l814:
  9664  0026DA  C050  F037         	movff	i2floor@x,i2___fttol@f1
  9665  0026DE  C051  F038         	movff	i2floor@x+1,i2___fttol@f1+1
  9666  0026E2  C052  F039         	movff	i2floor@x+2,i2___fttol@f1+2
  9667  0026E6  ECF5  F010         	call	i2___fttol	;wreg free
  9668  0026EA  C037  F046         	movff	?i2___fttol,i2___altoft@c
  9669  0026EE  C038  F047         	movff	?i2___fttol+1,i2___altoft@c+1
  9670  0026F2  C039  F048         	movff	?i2___fttol+2,i2___altoft@c+2
  9671  0026F6  C03A  F049         	movff	?i2___fttol+3,i2___altoft@c+3
  9672  0026FA  EC35  F01A         	call	i2___altoft	;wreg free
  9673  0026FE  C046  F055         	movff	?i2___altoft,i2floor@i
  9674  002702  C047  F056         	movff	?i2___altoft+1,i2floor@i+1
  9675  002706  C048  F057         	movff	?i2___altoft+2,i2floor@i+2
  9676  00270A  C050  F001         	movff	i2floor@x,i2___ftge@ff1
  9677  00270E  C051  F002         	movff	i2floor@x+1,i2___ftge@ff1+1
  9678  002712  C052  F003         	movff	i2floor@x+2,i2___ftge@ff1+2
  9679  002716  C055  F004         	movff	i2floor@i,i2___ftge@ff2
  9680  00271A  C056  F005         	movff	i2floor@i+1,i2___ftge@ff2+1
  9681  00271E  C057  F006         	movff	i2floor@i+2,i2___ftge@ff2+2
  9682  002722  ECA8  F018         	call	i2___ftge	;wreg free
  9683  002726  B0D8               	btfsc	status,0,c
  9684  002728  D015               	goto	i2l815
  9685  00272A  C055  F00D         	movff	i2floor@i,i2___ftadd@f1
  9686  00272E  C056  F00E         	movff	i2floor@i+1,i2___ftadd@f1+1
  9687  002732  C057  F00F         	movff	i2floor@i+2,i2___ftadd@f1+2
  9688  002736  0E00               	movlw	0
  9689  002738  6E10               	movwf	i2___ftadd@f2,c
  9690  00273A  0E80               	movlw	128
  9691  00273C  6E11               	movwf	i2___ftadd@f2+1,c
  9692  00273E  0EBF               	movlw	191
  9693  002740  6E12               	movwf	i2___ftadd@f2+2,c
  9694  002742  EC8B  F00C         	call	i2___ftadd	;wreg free
  9695  002746  C00D  F050         	movff	?i2___ftadd,?i2_floor
  9696  00274A  C00E  F051         	movff	?i2___ftadd+1,?i2_floor+1
  9697  00274E  C00F  F052         	movff	?i2___ftadd+2,?i2_floor+2
  9698  002752  0012               	return	
  9699  002754                     i2l815:
  9700  002754  C055  F050         	movff	i2floor@i,?i2_floor
  9701  002758  C056  F051         	movff	i2floor@i+1,?i2_floor+1
  9702  00275C  C057  F052         	movff	i2floor@i+2,?i2_floor+2
  9703  002760  0012               	return		;funcret
  9704  002762                     __end_ofi2_floor:
  9705                           	opt stack 0
  9706                           pclatu	equ	0xFFB
  9707                           pclath	equ	0xFFA
  9708                           tblptru	equ	0xFF8
  9709                           tblptrh	equ	0xFF7
  9710                           tblptrl	equ	0xFF6
  9711                           tablat	equ	0xFF5
  9712                           prodh	equ	0xFF4
  9713                           prodl	equ	0xFF3
  9714                           intcon	equ	0xFF2
  9715                           postinc0	equ	0xFEE
  9716                           fsr0h	equ	0xFEA
  9717                           fsr0l	equ	0xFE9
  9718                           wreg	equ	0xFE8
  9719                           plusw1	equ	0xFE3
  9720                           fsr1h	equ	0xFE2
  9721                           fsr1l	equ	0xFE1
  9722                           postinc2	equ	0xFDE
  9723                           postdec2	equ	0xFDD
  9724                           plusw2	equ	0xFDB
  9725                           fsr2h	equ	0xFDA
  9726                           fsr2l	equ	0xFD9
  9727                           status	equ	0xFD8
  9728                           
  9729 ;; *************** function i2_frexp *****************
  9730 ;; Defined at:
  9731 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;  value           3    0[COMRAM] int 
  9734 ;;  eptr            2    3[COMRAM] PTR int 
  9735 ;;		 -> log@exponent(2), floor@expon(2), 
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;                  3    0[COMRAM] PTR int 
  9740 ;; Registers used:
  9741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9747 ;;      Params:         5       0       0       0       0       0       0       0       0
  9748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9749 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9750 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9751 ;;Total ram usage:        7 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		i2_floor
  9757 ;;		i2_log
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text45
  9762  0030C0                     __ptext45:
  9763                           	opt stack 0
  9764  0030C0                     i2_frexp:
  9765                           	opt stack 16
  9766                           
  9767                           ;incstack = 0
  9768  0030C0  5001               	movf	i2frexp@value,w,c
  9769  0030C2  1002               	iorwf	i2frexp@value+1,w,c
  9770  0030C4  1003               	iorwf	i2frexp@value+2,w,c
  9771  0030C6  A4D8               	btfss	status,2,c
  9772  0030C8  D00F               	goto	i2l820
  9773  0030CA  C004  FFD9         	movff	i2frexp@eptr,fsr2l
  9774  0030CE  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
  9775  0030D2  0E00               	movlw	0
  9776  0030D4  6EDE               	movwf	postinc2,c
  9777  0030D6  0E00               	movlw	0
  9778  0030D8  6EDD               	movwf	postdec2,c
  9779  0030DA  0E00               	movlw	0
  9780  0030DC  6E01               	movwf	?i2_frexp,c
  9781  0030DE  0E00               	movlw	0
  9782  0030E0  6E02               	movwf	?i2_frexp+1,c
  9783  0030E2  0E00               	movlw	0
  9784  0030E4  6E03               	movwf	?i2_frexp+2,c
  9785  0030E6  0012               	return	
  9786  0030E8                     i2l820:
  9787  0030E8  5003               	movf	i2frexp@value+2,w,c
  9788  0030EA  0B7F               	andlw	127
  9789  0030EC  6E06               	movwf	??i2_frexp& (0+255),c
  9790  0030EE  6A07               	clrf	(??i2_frexp+1)& (0+255),c
  9791  0030F0  90D8               	bcf	status,0,c
  9792  0030F2  3606               	rlcf	??i2_frexp,f,c
  9793  0030F4  3607               	rlcf	??i2_frexp+1,f,c
  9794  0030F6  C004  FFD9         	movff	i2frexp@eptr,fsr2l
  9795  0030FA  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
  9796  0030FE  C006  FFDE         	movff	??i2_frexp,postinc2
  9797  003102  C007  FFDD         	movff	??i2_frexp+1,postdec2
  9798  003106  AE02               	btfss	i2frexp@value+1,7,c
  9799  003108  D003               	goto	i2u330_40
  9800  00310A  6A06               	clrf	??i2_frexp& (0+255),c
  9801  00310C  2A06               	incf	??i2_frexp& (0+255),f,c
  9802  00310E  D001               	goto	i2u330_48
  9803  003110                     i2u330_40:
  9804  003110  6A06               	clrf	??i2_frexp& (0+255),c
  9805  003112                     i2u330_48:
  9806  003112  5006               	movf	??i2_frexp,w,c
  9807  003114  C004  FFD9         	movff	i2frexp@eptr,fsr2l
  9808  003118  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
  9809  00311C  12DE               	iorwf	postinc2,f,c
  9810  00311E  0E00               	movlw	0
  9811  003120  12DD               	iorwf	postdec2,f,c
  9812  003122  C004  FFD9         	movff	i2frexp@eptr,fsr2l
  9813  003126  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
  9814  00312A  0E82               	movlw	130
  9815  00312C  26DE               	addwf	postinc2,f,c
  9816  00312E  0EFF               	movlw	255
  9817  003130  22DD               	addwfc	postdec2,f,c
  9818  003132  8003               	bsf	i2frexp@value+2,0,c
  9819  003134  8203               	bsf	i2frexp@value+2,1,c
  9820  003136  8403               	bsf	i2frexp@value+2,2,c
  9821  003138  8603               	bsf	i2frexp@value+2,3,c
  9822  00313A  8803               	bsf	i2frexp@value+2,4,c
  9823  00313C  8A03               	bsf	i2frexp@value+2,5,c
  9824  00313E  9C03               	bcf	i2frexp@value+2,6,c
  9825  003140  9E02               	bcf	i2frexp@value+1,7,c
  9826  003142  C001  F001         	movff	i2frexp@value,?i2_frexp
  9827  003146  C002  F002         	movff	i2frexp@value+1,?i2_frexp+1
  9828  00314A  C003  F003         	movff	i2frexp@value+2,?i2_frexp+2
  9829  00314E  0012               	return	
  9830  003150                     __end_ofi2_frexp:
  9831                           	opt stack 0
  9832                           pclatu	equ	0xFFB
  9833                           pclath	equ	0xFFA
  9834                           tblptru	equ	0xFF8
  9835                           tblptrh	equ	0xFF7
  9836                           tblptrl	equ	0xFF6
  9837                           tablat	equ	0xFF5
  9838                           prodh	equ	0xFF4
  9839                           prodl	equ	0xFF3
  9840                           intcon	equ	0xFF2
  9841                           postinc0	equ	0xFEE
  9842                           fsr0h	equ	0xFEA
  9843                           fsr0l	equ	0xFE9
  9844                           wreg	equ	0xFE8
  9845                           plusw1	equ	0xFE3
  9846                           fsr1h	equ	0xFE2
  9847                           fsr1l	equ	0xFE1
  9848                           postinc2	equ	0xFDE
  9849                           postdec2	equ	0xFDD
  9850                           plusw2	equ	0xFDB
  9851                           fsr2h	equ	0xFDA
  9852                           fsr2l	equ	0xFD9
  9853                           status	equ	0xFD8
  9854                           
  9855 ;; *************** function i2___fttol *****************
  9856 ;; Defined at:
  9857 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  f1              3   54[COMRAM] float 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  __fttol         4   64[COMRAM] unsigned long 
  9862 ;;  __fttol         1   68[COMRAM] unsigned char 
  9863 ;;  __fttol         1   63[COMRAM] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  4   54[COMRAM] long 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9873 ;;      Params:         4       0       0       0       0       0       0       0       0
  9874 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9875 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9876 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9877 ;;Total ram usage:       15 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; This function calls:
  9880 ;;		Nothing
  9881 ;; This function is called by:
  9882 ;;		i2_wait_in_ms
  9883 ;;		i2_config_ccp1
  9884 ;;		i2_config_ccp2
  9885 ;;		i2_pow
  9886 ;;		i2_exp
  9887 ;;		i2_floor
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text46
  9892  0021EA                     __ptext46:
  9893                           	opt stack 0
  9894  0021EA                     i2___fttol:
  9895                           	opt stack 19
  9896                           
  9897                           ;incstack = 0
  9898  0021EA  C039  F03B         	movff	i2___fttol@f1+2,??i2___fttol
  9899  0021EE  6A3C               	clrf	(??i2___fttol+1)& (0+255),c
  9900  0021F0  6A3D               	clrf	(??i2___fttol+2)& (0+255),c
  9901  0021F2  3438               	rlcf	i2___fttol@f1+1,w,c
  9902  0021F4  363B               	rlcf	??i2___fttol& (0+255),f,c
  9903  0021F6  E301               	bnc	u321_41
  9904  0021F8  803C               	bsf	(??i2___fttol+1)& (0+255),0,c
  9905  0021FA                     u321_41:
  9906  0021FA  503B               	movf	??i2___fttol,w,c
  9907  0021FC  6E45               	movwf	i2___fttol@exp1,c
  9908  0021FE  5045               	movf	i2___fttol@exp1,w,c
  9909  002200  A4D8               	btfss	status,2,c
  9910  002202  D009               	goto	i2l521
  9911  002204  0E00               	movlw	0
  9912  002206  6E37               	movwf	?i2___fttol,c
  9913  002208  0E00               	movlw	0
  9914  00220A  6E38               	movwf	?i2___fttol+1,c
  9915  00220C  0E00               	movlw	0
  9916  00220E  6E39               	movwf	?i2___fttol+2,c
  9917  002210  0E00               	movlw	0
  9918  002212  6E3A               	movwf	?i2___fttol+3,c
  9919  002214  0012               	return	
  9920  002216                     i2l521:
  9921  002216  0E17               	movlw	23
  9922  002218  6E3B               	movwf	??i2___fttol& (0+255),c
  9923  00221A  C037  F03C         	movff	i2___fttol@f1,??i2___fttol+1
  9924  00221E  C038  F03D         	movff	i2___fttol@f1+1,??i2___fttol+2
  9925  002222  C039  F03E         	movff	i2___fttol@f1+2,??i2___fttol+3
  9926  002226  283B               	incf	??i2___fttol,w,c
  9927  002228  6E3F               	movwf	(??i2___fttol+4)& (0+255),c
  9928  00222A  D004               	goto	i2u323_40
  9929  00222C                     i2u323_45:
  9930  00222C  90D8               	bcf	status,0,c
  9931  00222E  323E               	rrcf	??i2___fttol+3,f,c
  9932  002230  323D               	rrcf	??i2___fttol+2,f,c
  9933  002232  323C               	rrcf	??i2___fttol+1,f,c
  9934  002234                     i2u323_40:
  9935  002234  2E3F               	decfsz	(??i2___fttol+4)& (0+255),f,c
  9936  002236  D7FA               	goto	i2u323_45
  9937  002238  503C               	movf	??i2___fttol+1,w,c
  9938  00223A  6E40               	movwf	i2___fttol@sign1,c
  9939  00223C  8E38               	bsf	i2___fttol@f1+1,7,c
  9940  00223E  0EFF               	movlw	255
  9941  002240  1637               	andwf	i2___fttol@f1,f,c
  9942  002242  0EFF               	movlw	255
  9943  002244  1638               	andwf	i2___fttol@f1+1,f,c
  9944  002246  0E00               	movlw	0
  9945  002248  1639               	andwf	i2___fttol@f1+2,f,c
  9946  00224A  5037               	movf	i2___fttol@f1,w,c
  9947  00224C  6E41               	movwf	i2___fttol@lval,c
  9948  00224E  5038               	movf	i2___fttol@f1+1,w,c
  9949  002250  6E42               	movwf	i2___fttol@lval+1,c
  9950  002252  5039               	movf	i2___fttol@f1+2,w,c
  9951  002254  6E43               	movwf	i2___fttol@lval+2,c
  9952  002256  6A44               	clrf	i2___fttol@lval+3,c
  9953  002258  0E8E               	movlw	142
  9954  00225A  5E45               	subwf	i2___fttol@exp1,f,c
  9955  00225C  AE45               	btfss	i2___fttol@exp1,7,c
  9956  00225E  D016               	goto	i2l523
  9957  002260  5045               	movf	i2___fttol@exp1,w,c
  9958  002262  0A80               	xorlw	128
  9959  002264  0F8F               	addlw	143
  9960  002266  B0D8               	btfsc	status,0,c
  9961  002268  D009               	goto	i2l524
  9962  00226A  0E00               	movlw	0
  9963  00226C  6E37               	movwf	?i2___fttol,c
  9964  00226E  0E00               	movlw	0
  9965  002270  6E38               	movwf	?i2___fttol+1,c
  9966  002272  0E00               	movlw	0
  9967  002274  6E39               	movwf	?i2___fttol+2,c
  9968  002276  0E00               	movlw	0
  9969  002278  6E3A               	movwf	?i2___fttol+3,c
  9970  00227A  0012               	return	
  9971  00227C                     i2l524:
  9972  00227C  90D8               	bcf	status,0,c
  9973  00227E  3244               	rrcf	i2___fttol@lval+3,f,c
  9974  002280  3243               	rrcf	i2___fttol@lval+2,f,c
  9975  002282  3242               	rrcf	i2___fttol@lval+1,f,c
  9976  002284  3241               	rrcf	i2___fttol@lval,f,c
  9977  002286  3E45               	incfsz	i2___fttol@exp1,f,c
  9978  002288  D7F9               	goto	i2l524
  9979  00228A  D015               	goto	i2u327_40
  9980  00228C                     i2l523:
  9981  00228C  0E17               	movlw	23
  9982  00228E  6445               	cpfsgt	i2___fttol@exp1,c
  9983  002290  D00F               	goto	i2l529
  9984  002292  0E00               	movlw	0
  9985  002294  6E37               	movwf	?i2___fttol,c
  9986  002296  0E00               	movlw	0
  9987  002298  6E38               	movwf	?i2___fttol+1,c
  9988  00229A  0E00               	movlw	0
  9989  00229C  6E39               	movwf	?i2___fttol+2,c
  9990  00229E  0E00               	movlw	0
  9991  0022A0  6E3A               	movwf	?i2___fttol+3,c
  9992  0022A2  0012               	return	
  9993  0022A4  90D8               	bcf	status,0,c
  9994  0022A6  3641               	rlcf	i2___fttol@lval,f,c
  9995  0022A8  3642               	rlcf	i2___fttol@lval+1,f,c
  9996  0022AA  3643               	rlcf	i2___fttol@lval+2,f,c
  9997  0022AC  3644               	rlcf	i2___fttol@lval+3,f,c
  9998  0022AE  0645               	decf	i2___fttol@exp1,f,c
  9999  0022B0                     i2l529:
 10000  0022B0  5045               	movf	i2___fttol@exp1,w,c
 10001  0022B2  A4D8               	btfss	status,2,c
 10002  0022B4  D7F7               	goto	i2l530
 10003  0022B6                     i2u327_40:
 10004  0022B6  5040               	movf	i2___fttol@sign1,w,c
 10005  0022B8  B4D8               	btfsc	status,2,c
 10006  0022BA  D008               	goto	i2l532
 10007  0022BC  1E44               	comf	i2___fttol@lval+3,f,c
 10008  0022BE  1E43               	comf	i2___fttol@lval+2,f,c
 10009  0022C0  1E42               	comf	i2___fttol@lval+1,f,c
 10010  0022C2  6C41               	negf	i2___fttol@lval,c
 10011  0022C4  0E00               	movlw	0
 10012  0022C6  2242               	addwfc	i2___fttol@lval+1,f,c
 10013  0022C8  2243               	addwfc	i2___fttol@lval+2,f,c
 10014  0022CA  2244               	addwfc	i2___fttol@lval+3,f,c
 10015  0022CC                     i2l532:
 10016  0022CC  C041  F037         	movff	i2___fttol@lval,?i2___fttol
 10017  0022D0  C042  F038         	movff	i2___fttol@lval+1,?i2___fttol+1
 10018  0022D4  C043  F039         	movff	i2___fttol@lval+2,?i2___fttol+2
 10019  0022D8  C044  F03A         	movff	i2___fttol@lval+3,?i2___fttol+3
 10020  0022DC  0012               	return	
 10021  0022DE                     __end_ofi2___fttol:
 10022                           	opt stack 0
 10023                           pclatu	equ	0xFFB
 10024                           pclath	equ	0xFFA
 10025                           tblptru	equ	0xFF8
 10026                           tblptrh	equ	0xFF7
 10027                           tblptrl	equ	0xFF6
 10028                           tablat	equ	0xFF5
 10029                           prodh	equ	0xFF4
 10030                           prodl	equ	0xFF3
 10031                           intcon	equ	0xFF2
 10032                           postinc0	equ	0xFEE
 10033                           fsr0h	equ	0xFEA
 10034                           fsr0l	equ	0xFE9
 10035                           wreg	equ	0xFE8
 10036                           plusw1	equ	0xFE3
 10037                           fsr1h	equ	0xFE2
 10038                           fsr1l	equ	0xFE1
 10039                           postinc2	equ	0xFDE
 10040                           postdec2	equ	0xFDD
 10041                           plusw2	equ	0xFDB
 10042                           fsr2h	equ	0xFDA
 10043                           fsr2l	equ	0xFD9
 10044                           status	equ	0xFD8
 10045                           
 10046 ;; *************** function i2___ftge *****************
 10047 ;; Defined at:
 10048 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;  ff1             3    0[COMRAM] float 
 10051 ;;  ff2             3    3[COMRAM] float 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;		None               void
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10063 ;;      Params:         6       0       0       0       0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10065 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10066 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10067 ;;Total ram usage:        9 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		i2_pow
 10073 ;;		i2_exp
 10074 ;;		i2_floor
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text47
 10079  003150                     __ptext47:
 10080                           	opt stack 0
 10081  003150                     i2___ftge:
 10082                           	opt stack 15
 10083                           
 10084                           ;incstack = 0
 10085  003150  AE03               	btfss	i2___ftge@ff1+2,7,c
 10086  003152  D016               	goto	i2l493
 10087  003154  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 10088  003158  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 10089  00315C  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 10090  003160  1E07               	comf	??i2___ftge,f,c
 10091  003162  1E08               	comf	??i2___ftge+1,f,c
 10092  003164  1E09               	comf	??i2___ftge+2,f,c
 10093  003166  2A07               	incf	??i2___ftge,f,c
 10094  003168  0E00               	movlw	0
 10095  00316A  2208               	addwfc	??i2___ftge+1,f,c
 10096  00316C  2209               	addwfc	??i2___ftge+2,f,c
 10097  00316E  0E00               	movlw	0
 10098  003170  2407               	addwf	??i2___ftge,w,c
 10099  003172  6E01               	movwf	i2___ftge@ff1,c
 10100  003174  0E00               	movlw	0
 10101  003176  2008               	addwfc	??i2___ftge+1,w,c
 10102  003178  6E02               	movwf	i2___ftge@ff1+1,c
 10103  00317A  0E80               	movlw	128
 10104  00317C  2009               	addwfc	??i2___ftge+2,w,c
 10105  00317E  6E03               	movwf	i2___ftge@ff1+2,c
 10106  003180                     i2l493:
 10107  003180  AE06               	btfss	i2___ftge@ff2+2,7,c
 10108  003182  D016               	goto	i2l494
 10109  003184  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 10110  003188  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 10111  00318C  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 10112  003190  1E07               	comf	??i2___ftge,f,c
 10113  003192  1E08               	comf	??i2___ftge+1,f,c
 10114  003194  1E09               	comf	??i2___ftge+2,f,c
 10115  003196  2A07               	incf	??i2___ftge,f,c
 10116  003198  0E00               	movlw	0
 10117  00319A  2208               	addwfc	??i2___ftge+1,f,c
 10118  00319C  2209               	addwfc	??i2___ftge+2,f,c
 10119  00319E  0E00               	movlw	0
 10120  0031A0  2407               	addwf	??i2___ftge,w,c
 10121  0031A2  6E04               	movwf	i2___ftge@ff2,c
 10122  0031A4  0E00               	movlw	0
 10123  0031A6  2008               	addwfc	??i2___ftge+1,w,c
 10124  0031A8  6E05               	movwf	i2___ftge@ff2+1,c
 10125  0031AA  0E80               	movlw	128
 10126  0031AC  2009               	addwfc	??i2___ftge+2,w,c
 10127  0031AE  6E06               	movwf	i2___ftge@ff2+2,c
 10128  0031B0                     i2l494:
 10129  0031B0  0E00               	movlw	0
 10130  0031B2  1A01               	xorwf	i2___ftge@ff1,f,c
 10131  0031B4  0E00               	movlw	0
 10132  0031B6  1A02               	xorwf	i2___ftge@ff1+1,f,c
 10133  0031B8  0E80               	movlw	128
 10134  0031BA  1A03               	xorwf	i2___ftge@ff1+2,f,c
 10135  0031BC  0E00               	movlw	0
 10136  0031BE  1A04               	xorwf	i2___ftge@ff2,f,c
 10137  0031C0  0E00               	movlw	0
 10138  0031C2  1A05               	xorwf	i2___ftge@ff2+1,f,c
 10139  0031C4  0E80               	movlw	128
 10140  0031C6  1A06               	xorwf	i2___ftge@ff2+2,f,c
 10141  0031C8  5004               	movf	i2___ftge@ff2,w,c
 10142  0031CA  5C01               	subwf	i2___ftge@ff1,w,c
 10143  0031CC  5005               	movf	i2___ftge@ff2+1,w,c
 10144  0031CE  5802               	subwfb	i2___ftge@ff1+1,w,c
 10145  0031D0  5006               	movf	i2___ftge@ff2+2,w,c
 10146  0031D2  5803               	subwfb	i2___ftge@ff1+2,w,c
 10147  0031D4  B0D8               	btfsc	status,0,c
 10148  0031D6  D002               	goto	i2l2641
 10149  0031D8  90D8               	bcf	status,0,c
 10150  0031DA  0012               	return	
 10151  0031DC                     i2l2641:
 10152  0031DC  80D8               	bsf	status,0,c
 10153  0031DE  0012               	return	
 10154  0031E0                     __end_ofi2___ftge:
 10155                           	opt stack 0
 10156                           pclatu	equ	0xFFB
 10157                           pclath	equ	0xFFA
 10158                           tblptru	equ	0xFF8
 10159                           tblptrh	equ	0xFF7
 10160                           tblptrl	equ	0xFF6
 10161                           tablat	equ	0xFF5
 10162                           prodh	equ	0xFF4
 10163                           prodl	equ	0xFF3
 10164                           intcon	equ	0xFF2
 10165                           postinc0	equ	0xFEE
 10166                           fsr0h	equ	0xFEA
 10167                           fsr0l	equ	0xFE9
 10168                           wreg	equ	0xFE8
 10169                           plusw1	equ	0xFE3
 10170                           fsr1h	equ	0xFE2
 10171                           fsr1l	equ	0xFE1
 10172                           postinc2	equ	0xFDE
 10173                           postdec2	equ	0xFDD
 10174                           plusw2	equ	0xFDB
 10175                           fsr2h	equ	0xFDA
 10176                           fsr2l	equ	0xFD9
 10177                           status	equ	0xFD8
 10178                           
 10179 ;; *************** function i2___altoft *****************
 10180 ;; Defined at:
 10181 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  c               4   69[COMRAM] long 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  __altoft        1   78[COMRAM] unsigned char 
 10186 ;;  __altoft        1   77[COMRAM] unsigned char 
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  3   69[COMRAM] float 
 10189 ;; Registers used:
 10190 ;;		wreg, status,2, status,0, cstack
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10196 ;;      Params:         4       0       0       0       0       0       0       0       0
 10197 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10198 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10199 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10200 ;;Total ram usage:       10 bytes
 10201 ;; Hardware stack levels used:    1
 10202 ;; Hardware stack levels required when called:    1
 10203 ;; This function calls:
 10204 ;;		i2___ftpack
 10205 ;; This function is called by:
 10206 ;;		i2_floor
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text48
 10211  00346A                     __ptext48:
 10212                           	opt stack 0
 10213  00346A                     i2___altoft:
 10214                           	opt stack 14
 10215                           
 10216                           ;incstack = 0
 10217  00346A  0E00               	movlw	0
 10218  00346C  6E4F               	movwf	i2___altoft@sign,c
 10219  00346E  0E8E               	movlw	142
 10220  003470  6E4E               	movwf	i2___altoft@exp,c
 10221  003472  AE49               	btfss	i2___altoft@c+3,7,c
 10222  003474  D011               	goto	i2l291
 10223  003476  1E49               	comf	i2___altoft@c+3,f,c
 10224  003478  1E48               	comf	i2___altoft@c+2,f,c
 10225  00347A  1E47               	comf	i2___altoft@c+1,f,c
 10226  00347C  6C46               	negf	i2___altoft@c,c
 10227  00347E  0E00               	movlw	0
 10228  003480  2247               	addwfc	i2___altoft@c+1,f,c
 10229  003482  2248               	addwfc	i2___altoft@c+2,f,c
 10230  003484  2249               	addwfc	i2___altoft@c+3,f,c
 10231  003486  0E01               	movlw	1
 10232  003488  6E4F               	movwf	i2___altoft@sign,c
 10233  00348A  D006               	goto	i2l291
 10234  00348C  90D8               	bcf	status,0,c
 10235  00348E  3249               	rrcf	i2___altoft@c+3,f,c
 10236  003490  3248               	rrcf	i2___altoft@c+2,f,c
 10237  003492  3247               	rrcf	i2___altoft@c+1,f,c
 10238  003494  3246               	rrcf	i2___altoft@c,f,c
 10239  003496  2A4E               	incf	i2___altoft@exp,f,c
 10240  003498                     i2l291:
 10241  003498  0E00               	movlw	0
 10242  00349A  1446               	andwf	i2___altoft@c,w,c
 10243  00349C  6E4A               	movwf	??i2___altoft& (0+255),c
 10244  00349E  0E00               	movlw	0
 10245  0034A0  1447               	andwf	i2___altoft@c+1,w,c
 10246  0034A2  6E4B               	movwf	(??i2___altoft+1)& (0+255),c
 10247  0034A4  0E00               	movlw	0
 10248  0034A6  1448               	andwf	i2___altoft@c+2,w,c
 10249  0034A8  6E4C               	movwf	(??i2___altoft+2)& (0+255),c
 10250  0034AA  0EFF               	movlw	255
 10251  0034AC  1449               	andwf	i2___altoft@c+3,w,c
 10252  0034AE  6E4D               	movwf	(??i2___altoft+3)& (0+255),c
 10253  0034B0  504A               	movf	??i2___altoft,w,c
 10254  0034B2  104B               	iorwf	??i2___altoft+1,w,c
 10255  0034B4  104C               	iorwf	??i2___altoft+2,w,c
 10256  0034B6  104D               	iorwf	??i2___altoft+3,w,c
 10257  0034B8  A4D8               	btfss	status,2,c
 10258  0034BA  D7E8               	goto	i2l292
 10259  0034BC  C046  F001         	movff	i2___altoft@c,i2___ftpack@arg
 10260  0034C0  C047  F002         	movff	i2___altoft@c+1,i2___ftpack@arg+1
 10261  0034C4  C048  F003         	movff	i2___altoft@c+2,i2___ftpack@arg+2
 10262  0034C8  C04E  F004         	movff	i2___altoft@exp,i2___ftpack@exp
 10263  0034CC  C04F  F005         	movff	i2___altoft@sign,i2___ftpack@sign
 10264  0034D0  ECD3  F016         	call	i2___ftpack	;wreg free
 10265  0034D4  C001  F046         	movff	?i2___ftpack,?i2___altoft
 10266  0034D8  C002  F047         	movff	?i2___ftpack+1,?i2___altoft+1
 10267  0034DC  C003  F048         	movff	?i2___ftpack+2,?i2___altoft+2
 10268  0034E0  0012               	return	
 10269  0034E2                     __end_ofi2___altoft:
 10270                           	opt stack 0
 10271                           pclatu	equ	0xFFB
 10272                           pclath	equ	0xFFA
 10273                           tblptru	equ	0xFF8
 10274                           tblptrh	equ	0xFF7
 10275                           tblptrl	equ	0xFF6
 10276                           tablat	equ	0xFF5
 10277                           prodh	equ	0xFF4
 10278                           prodl	equ	0xFF3
 10279                           intcon	equ	0xFF2
 10280                           postinc0	equ	0xFEE
 10281                           fsr0h	equ	0xFEA
 10282                           fsr0l	equ	0xFE9
 10283                           wreg	equ	0xFE8
 10284                           plusw1	equ	0xFE3
 10285                           fsr1h	equ	0xFE2
 10286                           fsr1l	equ	0xFE1
 10287                           postinc2	equ	0xFDE
 10288                           postdec2	equ	0xFDD
 10289                           plusw2	equ	0xFDB
 10290                           fsr2h	equ	0xFDA
 10291                           fsr2l	equ	0xFD9
 10292                           status	equ	0xFD8
 10293                           
 10294 ;; *************** function i2_eval_poly *****************
 10295 ;; Defined at:
 10296 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  x               3   39[COMRAM] float 
 10299 ;;  d               2   42[COMRAM] PTR const 
 10300 ;;		 -> log@coeff(27), exp@coeff(30), 
 10301 ;;  n               2   44[COMRAM] int 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  eval_poly       3   48[COMRAM] int 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  3   39[COMRAM] int 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10313 ;;      Params:         7       0       0       0       0       0       0       0       0
 10314 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10315 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10316 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10317 ;;Total ram usage:       12 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    2
 10320 ;; This function calls:
 10321 ;;		i2___ftadd
 10322 ;;		i2___ftmul
 10323 ;;		i2___wmul
 10324 ;; This function is called by:
 10325 ;;		i2_exp
 10326 ;;		i2_log
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text49
 10331  002910                     __ptext49:
 10332                           	opt stack 0
 10333  002910                     i2_eval_poly:
 10334                           	opt stack 14
 10335                           
 10336                           ;incstack = 0
 10337  002910  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 10338  002914  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 10339  002918  0E00               	movlw	0
 10340  00291A  6E04               	movwf	i2___wmul@multiplicand+1,c
 10341  00291C  0E03               	movlw	3
 10342  00291E  6E03               	movwf	i2___wmul@multiplicand,c
 10343  002920  EC72  F01C         	call	i2___wmul	;wreg free
 10344  002924  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 10345  002928  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 10346  00292C  5001               	movf	?i2___wmul,w,c
 10347  00292E  262F               	addwf	??i2_eval_poly,f,c
 10348  002930  5002               	movf	?i2___wmul+1,w,c
 10349  002932  2230               	addwfc	??i2_eval_poly+1,f,c
 10350  002934  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 10351  002938  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 10352  00293C                     	if	0	;tblptru may be non-zero
 10353  00293C                     	endif
 10354  00293C                     	if	0	;tblptru may be non-zero
 10355  00293C                     	endif
 10356  00293C  0009               	tblrd		*+
 10357  00293E  CFF5 F031          	movff	tablat,i2eval_poly@res
 10358  002942  0009               	tblrd		*+
 10359  002944  CFF5 F032          	movff	tablat,i2eval_poly@res+1
 10360  002948  000A               	tblrd		*-
 10361  00294A  CFF5 F033          	movff	tablat,i2eval_poly@res+2
 10362  00294E  D03E               	goto	i2l850
 10363  002950  C031  F01C         	movff	i2eval_poly@res,i2___ftmul@f2
 10364  002954  C032  F01D         	movff	i2eval_poly@res+1,i2___ftmul@f2+1
 10365  002958  C033  F01E         	movff	i2eval_poly@res+2,i2___ftmul@f2+2
 10366  00295C  C028  F019         	movff	i2eval_poly@x,i2___ftmul@f1
 10367  002960  C029  F01A         	movff	i2eval_poly@x+1,i2___ftmul@f1+1
 10368  002964  C02A  F01B         	movff	i2eval_poly@x+2,i2___ftmul@f1+2
 10369  002968  EC6F  F011         	call	i2___ftmul	;wreg free
 10370  00296C  C019  F00D         	movff	?i2___ftmul,i2___ftadd@f1
 10371  002970  C01A  F00E         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 10372  002974  C01B  F00F         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 10373  002978  0E00               	movlw	0
 10374  00297A  6E04               	movwf	i2___wmul@multiplicand+1,c
 10375  00297C  0E03               	movlw	3
 10376  00297E  6E03               	movwf	i2___wmul@multiplicand,c
 10377  002980  062D               	decf	i2eval_poly@n,f,c
 10378  002982  A0D8               	btfss	status,0,c
 10379  002984  062E               	decf	i2eval_poly@n+1,f,c
 10380  002986  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 10381  00298A  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 10382  00298E  EC72  F01C         	call	i2___wmul	;wreg free
 10383  002992  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 10384  002996  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 10385  00299A  5001               	movf	?i2___wmul,w,c
 10386  00299C  262F               	addwf	??i2_eval_poly,f,c
 10387  00299E  5002               	movf	?i2___wmul+1,w,c
 10388  0029A0  2230               	addwfc	??i2_eval_poly+1,f,c
 10389  0029A2  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 10390  0029A6  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 10391  0029AA                     	if	0	;tblptru may be non-zero
 10392  0029AA                     	endif
 10393  0029AA                     	if	0	;tblptru may be non-zero
 10394  0029AA                     	endif
 10395  0029AA  0009               	tblrd		*+
 10396  0029AC  CFF5 F010          	movff	tablat,i2___ftadd@f2
 10397  0029B0  0009               	tblrd		*+
 10398  0029B2  CFF5 F011          	movff	tablat,i2___ftadd@f2+1
 10399  0029B6  000A               	tblrd		*-
 10400  0029B8  CFF5 F012          	movff	tablat,i2___ftadd@f2+2
 10401  0029BC  EC8B  F00C         	call	i2___ftadd	;wreg free
 10402  0029C0  C00D  F031         	movff	?i2___ftadd,i2eval_poly@res
 10403  0029C4  C00E  F032         	movff	?i2___ftadd+1,i2eval_poly@res+1
 10404  0029C8  C00F  F033         	movff	?i2___ftadd+2,i2eval_poly@res+2
 10405  0029CC                     i2l850:
 10406  0029CC  502D               	movf	i2eval_poly@n,w,c
 10407  0029CE  102E               	iorwf	i2eval_poly@n+1,w,c
 10408  0029D0  A4D8               	btfss	status,2,c
 10409  0029D2  D7BE               	goto	i2l851
 10410  0029D4  C031  F028         	movff	i2eval_poly@res,?i2_eval_poly
 10411  0029D8  C032  F029         	movff	i2eval_poly@res+1,?i2_eval_poly+1
 10412  0029DC  C033  F02A         	movff	i2eval_poly@res+2,?i2_eval_poly+2
 10413  0029E0  0012               	return		;funcret
 10414  0029E2                     __end_ofi2_eval_poly:
 10415                           	opt stack 0
 10416                           pclatu	equ	0xFFB
 10417                           pclath	equ	0xFFA
 10418                           tblptru	equ	0xFF8
 10419                           tblptrh	equ	0xFF7
 10420                           tblptrl	equ	0xFF6
 10421                           tablat	equ	0xFF5
 10422                           prodh	equ	0xFF4
 10423                           prodl	equ	0xFF3
 10424                           intcon	equ	0xFF2
 10425                           postinc0	equ	0xFEE
 10426                           fsr0h	equ	0xFEA
 10427                           fsr0l	equ	0xFE9
 10428                           wreg	equ	0xFE8
 10429                           plusw1	equ	0xFE3
 10430                           fsr1h	equ	0xFE2
 10431                           fsr1l	equ	0xFE1
 10432                           postinc2	equ	0xFDE
 10433                           postdec2	equ	0xFDD
 10434                           plusw2	equ	0xFDB
 10435                           fsr2h	equ	0xFDA
 10436                           fsr2l	equ	0xFD9
 10437                           status	equ	0xFD8
 10438                           
 10439 ;; *************** function i2___wmul *****************
 10440 ;; Defined at:
 10441 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;  multiplier      2    0[COMRAM] unsigned int 
 10444 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  __wmul          2    4[COMRAM] unsigned int 
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  2    0[COMRAM] unsigned int 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0, prodl, prodh
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10456 ;;      Params:         4       0       0       0       0       0       0       0       0
 10457 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10458 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10459 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10460 ;;Total ram usage:        6 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		i2_eval_poly
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text50
 10470  0038E4                     __ptext50:
 10471                           	opt stack 0
 10472  0038E4                     i2___wmul:
 10473                           	opt stack 15
 10474                           
 10475                           ;incstack = 0
 10476  0038E4  5001               	movf	i2___wmul@multiplier,w,c
 10477  0038E6  0203               	mulwf	i2___wmul@multiplicand,c
 10478  0038E8  CFF3 F005          	movff	prodl,i2___wmul@product
 10479  0038EC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 10480  0038F0  5001               	movf	i2___wmul@multiplier,w,c
 10481  0038F2  0204               	mulwf	i2___wmul@multiplicand+1,c
 10482  0038F4  50F3               	movf	prodl,w,c
 10483  0038F6  2606               	addwf	i2___wmul@product+1,f,c
 10484  0038F8  5002               	movf	i2___wmul@multiplier+1,w,c
 10485  0038FA  0203               	mulwf	i2___wmul@multiplicand,c
 10486  0038FC  50F3               	movf	prodl,w,c
 10487  0038FE  2606               	addwf	i2___wmul@product+1,f,c
 10488  003900  C005  F001         	movff	i2___wmul@product,?i2___wmul
 10489  003904  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 10490  003908  0012               	return	
 10491  00390A                     __end_ofi2___wmul:
 10492                           	opt stack 0
 10493                           pclatu	equ	0xFFB
 10494                           pclath	equ	0xFFA
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           intcon	equ	0xFF2
 10502                           postinc0	equ	0xFEE
 10503                           fsr0h	equ	0xFEA
 10504                           fsr0l	equ	0xFE9
 10505                           wreg	equ	0xFE8
 10506                           plusw1	equ	0xFE3
 10507                           fsr1h	equ	0xFE2
 10508                           fsr1l	equ	0xFE1
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           plusw2	equ	0xFDB
 10512                           fsr2h	equ	0xFDA
 10513                           fsr2l	equ	0xFD9
 10514                           status	equ	0xFD8
 10515                           
 10516 ;; *************** function i2___ftmul *****************
 10517 ;; Defined at:
 10518 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  f1              3   24[COMRAM] float 
 10521 ;;  f2              3   27[COMRAM] float 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  __ftmul         3   34[COMRAM] unsigned um
 10524 ;;  __ftmul         1   38[COMRAM] unsigned char 
 10525 ;;  __ftmul         1   37[COMRAM] unsigned char 
 10526 ;;  __ftmul         1   33[COMRAM] unsigned char 
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  3   24[COMRAM] float 
 10529 ;; Registers used:
 10530 ;;		wreg, status,2, status,0, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10536 ;;      Params:         6       0       0       0       0       0       0       0       0
 10537 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10538 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10539 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10540 ;;Total ram usage:       15 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    1
 10543 ;; This function calls:
 10544 ;;		i2___ftpack
 10545 ;; This function is called by:
 10546 ;;		i2_config_ccp1
 10547 ;;		i2_config_ccp2
 10548 ;;		i2_pow
 10549 ;;		i2_exp
 10550 ;;		i2_log
 10551 ;;		i2_eval_poly
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text51
 10556  0022DE                     __ptext51:
 10557                           	opt stack 0
 10558  0022DE                     i2___ftmul:
 10559                           	opt stack 14
 10560                           
 10561                           ;incstack = 0
 10562  0022DE  C01B  F01F         	movff	i2___ftmul@f1+2,??i2___ftmul
 10563  0022E2  6A20               	clrf	(??i2___ftmul+1)& (0+255),c
 10564  0022E4  6A21               	clrf	(??i2___ftmul+2)& (0+255),c
 10565  0022E6  341A               	rlcf	i2___ftmul@f1+1,w,c
 10566  0022E8  361F               	rlcf	??i2___ftmul& (0+255),f,c
 10567  0022EA  E301               	bnc	u315_41
 10568  0022EC  8020               	bsf	(??i2___ftmul+1)& (0+255),0,c
 10569  0022EE                     u315_41:
 10570  0022EE  501F               	movf	??i2___ftmul,w,c
 10571  0022F0  6E22               	movwf	i2___ftmul@exp,c
 10572  0022F2  5022               	movf	i2___ftmul@exp,w,c
 10573  0022F4  A4D8               	btfss	status,2,c
 10574  0022F6  D007               	goto	i2l500
 10575  0022F8  0E00               	movlw	0
 10576  0022FA  6E19               	movwf	?i2___ftmul,c
 10577  0022FC  0E00               	movlw	0
 10578  0022FE  6E1A               	movwf	?i2___ftmul+1,c
 10579  002300  0E00               	movlw	0
 10580  002302  6E1B               	movwf	?i2___ftmul+2,c
 10581  002304  0012               	return	
 10582  002306                     i2l500:
 10583  002306  C01E  F01F         	movff	i2___ftmul@f2+2,??i2___ftmul
 10584  00230A  6A20               	clrf	(??i2___ftmul+1)& (0+255),c
 10585  00230C  6A21               	clrf	(??i2___ftmul+2)& (0+255),c
 10586  00230E  341D               	rlcf	i2___ftmul@f2+1,w,c
 10587  002310  361F               	rlcf	??i2___ftmul& (0+255),f,c
 10588  002312  E301               	bnc	u317_41
 10589  002314  8020               	bsf	(??i2___ftmul+1)& (0+255),0,c
 10590  002316                     u317_41:
 10591  002316  501F               	movf	??i2___ftmul,w,c
 10592  002318  6E27               	movwf	i2___ftmul@sign,c
 10593  00231A  5027               	movf	i2___ftmul@sign,w,c
 10594  00231C  A4D8               	btfss	status,2,c
 10595  00231E  D007               	goto	i2l502
 10596  002320  0E00               	movlw	0
 10597  002322  6E19               	movwf	?i2___ftmul,c
 10598  002324  0E00               	movlw	0
 10599  002326  6E1A               	movwf	?i2___ftmul+1,c
 10600  002328  0E00               	movlw	0
 10601  00232A  6E1B               	movwf	?i2___ftmul+2,c
 10602  00232C  0012               	return	
 10603  00232E                     i2l502:
 10604  00232E  5027               	movf	i2___ftmul@sign,w,c
 10605  002330  0F7B               	addlw	123
 10606  002332  2622               	addwf	i2___ftmul@exp,f,c
 10607  002334  C01B  F027         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 10608  002338  501E               	movf	i2___ftmul@f2+2,w,c
 10609  00233A  1A27               	xorwf	i2___ftmul@sign,f,c
 10610  00233C  0E80               	movlw	128
 10611  00233E  1627               	andwf	i2___ftmul@sign,f,c
 10612  002340  8E1A               	bsf	i2___ftmul@f1+1,7,c
 10613  002342  8E1D               	bsf	i2___ftmul@f2+1,7,c
 10614  002344  0EFF               	movlw	255
 10615  002346  161C               	andwf	i2___ftmul@f2,f,c
 10616  002348  0EFF               	movlw	255
 10617  00234A  161D               	andwf	i2___ftmul@f2+1,f,c
 10618  00234C  0E00               	movlw	0
 10619  00234E  161E               	andwf	i2___ftmul@f2+2,f,c
 10620  002350  0E00               	movlw	0
 10621  002352  6E23               	movwf	i2___ftmul@f3_as_product,c
 10622  002354  0E00               	movlw	0
 10623  002356  6E24               	movwf	i2___ftmul@f3_as_product+1,c
 10624  002358  0E00               	movlw	0
 10625  00235A  6E25               	movwf	i2___ftmul@f3_as_product+2,c
 10626  00235C  0E07               	movlw	7
 10627  00235E  6E26               	movwf	i2___ftmul@cntr,c
 10628  002360  A019               	btfss	i2___ftmul@f1,0,c
 10629  002362  D006               	goto	i2l504
 10630  002364  501C               	movf	i2___ftmul@f2,w,c
 10631  002366  2623               	addwf	i2___ftmul@f3_as_product,f,c
 10632  002368  501D               	movf	i2___ftmul@f2+1,w,c
 10633  00236A  2224               	addwfc	i2___ftmul@f3_as_product+1,f,c
 10634  00236C  501E               	movf	i2___ftmul@f2+2,w,c
 10635  00236E  2225               	addwfc	i2___ftmul@f3_as_product+2,f,c
 10636  002370                     i2l504:
 10637  002370  90D8               	bcf	status,0,c
 10638  002372  321B               	rrcf	i2___ftmul@f1+2,f,c
 10639  002374  321A               	rrcf	i2___ftmul@f1+1,f,c
 10640  002376  3219               	rrcf	i2___ftmul@f1,f,c
 10641  002378  90D8               	bcf	status,0,c
 10642  00237A  361C               	rlcf	i2___ftmul@f2,f,c
 10643  00237C  361D               	rlcf	i2___ftmul@f2+1,f,c
 10644  00237E  361E               	rlcf	i2___ftmul@f2+2,f,c
 10645  002380  2E26               	decfsz	i2___ftmul@cntr,f,c
 10646  002382  D7EE               	goto	i2l503
 10647  002384  0E09               	movlw	9
 10648  002386  6E26               	movwf	i2___ftmul@cntr,c
 10649  002388  A019               	btfss	i2___ftmul@f1,0,c
 10650  00238A  D006               	goto	i2l507
 10651  00238C  501C               	movf	i2___ftmul@f2,w,c
 10652  00238E  2623               	addwf	i2___ftmul@f3_as_product,f,c
 10653  002390  501D               	movf	i2___ftmul@f2+1,w,c
 10654  002392  2224               	addwfc	i2___ftmul@f3_as_product+1,f,c
 10655  002394  501E               	movf	i2___ftmul@f2+2,w,c
 10656  002396  2225               	addwfc	i2___ftmul@f3_as_product+2,f,c
 10657  002398                     i2l507:
 10658  002398  90D8               	bcf	status,0,c
 10659  00239A  321B               	rrcf	i2___ftmul@f1+2,f,c
 10660  00239C  321A               	rrcf	i2___ftmul@f1+1,f,c
 10661  00239E  3219               	rrcf	i2___ftmul@f1,f,c
 10662  0023A0  90D8               	bcf	status,0,c
 10663  0023A2  3225               	rrcf	i2___ftmul@f3_as_product+2,f,c
 10664  0023A4  3224               	rrcf	i2___ftmul@f3_as_product+1,f,c
 10665  0023A6  3223               	rrcf	i2___ftmul@f3_as_product,f,c
 10666  0023A8  2E26               	decfsz	i2___ftmul@cntr,f,c
 10667  0023AA  D7EE               	goto	i2l506
 10668  0023AC  C023  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 10669  0023B0  C024  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 10670  0023B4  C025  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 10671  0023B8  C022  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 10672  0023BC  C027  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 10673  0023C0  ECD3  F016         	call	i2___ftpack	;wreg free
 10674  0023C4  C001  F019         	movff	?i2___ftpack,?i2___ftmul
 10675  0023C8  C002  F01A         	movff	?i2___ftpack+1,?i2___ftmul+1
 10676  0023CC  C003  F01B         	movff	?i2___ftpack+2,?i2___ftmul+2
 10677  0023D0  0012               	return	
 10678  0023D2                     __end_ofi2___ftmul:
 10679                           	opt stack 0
 10680                           pclatu	equ	0xFFB
 10681                           pclath	equ	0xFFA
 10682                           tblptru	equ	0xFF8
 10683                           tblptrh	equ	0xFF7
 10684                           tblptrl	equ	0xFF6
 10685                           tablat	equ	0xFF5
 10686                           prodh	equ	0xFF4
 10687                           prodl	equ	0xFF3
 10688                           intcon	equ	0xFF2
 10689                           postinc0	equ	0xFEE
 10690                           fsr0h	equ	0xFEA
 10691                           fsr0l	equ	0xFE9
 10692                           wreg	equ	0xFE8
 10693                           plusw1	equ	0xFE3
 10694                           fsr1h	equ	0xFE2
 10695                           fsr1l	equ	0xFE1
 10696                           postinc2	equ	0xFDE
 10697                           postdec2	equ	0xFDD
 10698                           plusw2	equ	0xFDB
 10699                           fsr2h	equ	0xFDA
 10700                           fsr2l	equ	0xFD9
 10701                           status	equ	0xFD8
 10702                           
 10703 ;; *************** function i2___ftsub *****************
 10704 ;; Defined at:
 10705 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  f1              3   24[COMRAM] float 
 10708 ;;  f2              3   27[COMRAM] float 
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  3   24[COMRAM] float 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10720 ;;      Params:         6       0       0       0       0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10723 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10724 ;;Total ram usage:        6 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		i2___ftadd
 10729 ;; This function is called by:
 10730 ;;		i2_exp
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           	psect	text52
 10735  003770                     __ptext52:
 10736                           	opt stack 0
 10737  003770                     i2___ftsub:
 10738                           	opt stack 14
 10739                           
 10740                           ;incstack = 0
 10741  003770  501C               	movf	i2___ftsub@f2,w,c
 10742  003772  101D               	iorwf	i2___ftsub@f2+1,w,c
 10743  003774  101E               	iorwf	i2___ftsub@f2+2,w,c
 10744  003776  B4D8               	btfsc	status,2,c
 10745  003778  D006               	goto	i2l517
 10746  00377A  0E00               	movlw	0
 10747  00377C  1A1C               	xorwf	i2___ftsub@f2,f,c
 10748  00377E  0E00               	movlw	0
 10749  003780  1A1D               	xorwf	i2___ftsub@f2+1,f,c
 10750  003782  0E80               	movlw	128
 10751  003784  1A1E               	xorwf	i2___ftsub@f2+2,f,c
 10752  003786                     i2l517:
 10753  003786  C019  F00D         	movff	i2___ftsub@f1,i2___ftadd@f1
 10754  00378A  C01A  F00E         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 10755  00378E  C01B  F00F         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 10756  003792  C01C  F010         	movff	i2___ftsub@f2,i2___ftadd@f2
 10757  003796  C01D  F011         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 10758  00379A  C01E  F012         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 10759  00379E  EC8B  F00C         	call	i2___ftadd	;wreg free
 10760  0037A2  C00D  F019         	movff	?i2___ftadd,?i2___ftsub
 10761  0037A6  C00E  F01A         	movff	?i2___ftadd+1,?i2___ftsub+1
 10762  0037AA  C00F  F01B         	movff	?i2___ftadd+2,?i2___ftsub+2
 10763  0037AE  0012               	return	
 10764  0037B0                     __end_ofi2___ftsub:
 10765                           	opt stack 0
 10766                           pclatu	equ	0xFFB
 10767                           pclath	equ	0xFFA
 10768                           tblptru	equ	0xFF8
 10769                           tblptrh	equ	0xFF7
 10770                           tblptrl	equ	0xFF6
 10771                           tablat	equ	0xFF5
 10772                           prodh	equ	0xFF4
 10773                           prodl	equ	0xFF3
 10774                           intcon	equ	0xFF2
 10775                           postinc0	equ	0xFEE
 10776                           fsr0h	equ	0xFEA
 10777                           fsr0l	equ	0xFE9
 10778                           wreg	equ	0xFE8
 10779                           plusw1	equ	0xFE3
 10780                           fsr1h	equ	0xFE2
 10781                           fsr1l	equ	0xFE1
 10782                           postinc2	equ	0xFDE
 10783                           postdec2	equ	0xFDD
 10784                           plusw2	equ	0xFDB
 10785                           fsr2h	equ	0xFDA
 10786                           fsr2l	equ	0xFD9
 10787                           status	equ	0xFD8
 10788                           
 10789 ;; *************** function i2___ftadd *****************
 10790 ;; Defined at:
 10791 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  f1              3   12[COMRAM] float 
 10794 ;;  f2              3   15[COMRAM] float 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  __ftadd         1   23[COMRAM] unsigned char 
 10797 ;;  __ftadd         1   22[COMRAM] unsigned char 
 10798 ;;  __ftadd         1   21[COMRAM] unsigned char 
 10799 ;; Return value:  Size  Location     Type
 10800 ;;                  3   12[COMRAM] float 
 10801 ;; Registers used:
 10802 ;;		wreg, status,2, status,0, cstack
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10808 ;;      Params:         6       0       0       0       0       0       0       0       0
 10809 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10810 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10811 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10812 ;;Total ram usage:       12 bytes
 10813 ;; Hardware stack levels used:    1
 10814 ;; Hardware stack levels required when called:    1
 10815 ;; This function calls:
 10816 ;;		i2___ftpack
 10817 ;; This function is called by:
 10818 ;;		i2_config_ccp1
 10819 ;;		i2_config_ccp2
 10820 ;;		i2___ftsub
 10821 ;;		i2_floor
 10822 ;;		i2_log
 10823 ;;		i2_eval_poly
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text53
 10828  001916                     __ptext53:
 10829                           	opt stack 0
 10830  001916                     i2___ftadd:
 10831                           	opt stack 14
 10832                           
 10833                           ;incstack = 0
 10834  001916  C00F  F013         	movff	i2___ftadd@f1+2,??i2___ftadd
 10835  00191A  6A14               	clrf	(??i2___ftadd+1)& (0+255),c
 10836  00191C  6A15               	clrf	(??i2___ftadd+2)& (0+255),c
 10837  00191E  340E               	rlcf	i2___ftadd@f1+1,w,c
 10838  001920  3613               	rlcf	??i2___ftadd& (0+255),f,c
 10839  001922  E301               	bnc	u291_41
 10840  001924  8014               	bsf	(??i2___ftadd+1)& (0+255),0,c
 10841  001926                     u291_41:
 10842  001926  5013               	movf	??i2___ftadd,w,c
 10843  001928  6E18               	movwf	i2___ftadd@exp1,c
 10844  00192A  C012  F013         	movff	i2___ftadd@f2+2,??i2___ftadd
 10845  00192E  6A14               	clrf	(??i2___ftadd+1)& (0+255),c
 10846  001930  6A15               	clrf	(??i2___ftadd+2)& (0+255),c
 10847  001932  3411               	rlcf	i2___ftadd@f2+1,w,c
 10848  001934  3613               	rlcf	??i2___ftadd& (0+255),f,c
 10849  001936  E301               	bnc	u292_41
 10850  001938  8014               	bsf	(??i2___ftadd+1)& (0+255),0,c
 10851  00193A                     u292_41:
 10852  00193A  5013               	movf	??i2___ftadd,w,c
 10853  00193C  6E17               	movwf	i2___ftadd@exp2,c
 10854  00193E  5018               	movf	i2___ftadd@exp1,w,c
 10855  001940  B4D8               	btfsc	status,2,c
 10856  001942  D00B               	goto	i2u295_40
 10857  001944  5017               	movf	i2___ftadd@exp2,w,c
 10858  001946  5C18               	subwf	i2___ftadd@exp1,w,c
 10859  001948  B0D8               	btfsc	status,0,c
 10860  00194A  D00E               	goto	i2l452
 10861  00194C  5018               	movf	i2___ftadd@exp1,w,c
 10862  00194E  0800               	sublw	0
 10863  001950  2417               	addwf	i2___ftadd@exp2,w,c
 10864  001952  6E13               	movwf	??i2___ftadd& (0+255),c
 10865  001954  0E18               	movlw	24
 10866  001956  6413               	cpfsgt	??i2___ftadd,c
 10867  001958  D007               	goto	i2l452
 10868  00195A                     i2u295_40:
 10869  00195A  C010  F00D         	movff	i2___ftadd@f2,?i2___ftadd
 10870  00195E  C011  F00E         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 10871  001962  C012  F00F         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 10872  001966  0012               	return	
 10873  001968                     i2l452:
 10874  001968  5017               	movf	i2___ftadd@exp2,w,c
 10875  00196A  B4D8               	btfsc	status,2,c
 10876  00196C  D00B               	goto	i2u298_40
 10877  00196E  5018               	movf	i2___ftadd@exp1,w,c
 10878  001970  5C17               	subwf	i2___ftadd@exp2,w,c
 10879  001972  B0D8               	btfsc	status,0,c
 10880  001974  D00E               	goto	i2l456
 10881  001976  5017               	movf	i2___ftadd@exp2,w,c
 10882  001978  0800               	sublw	0
 10883  00197A  2418               	addwf	i2___ftadd@exp1,w,c
 10884  00197C  6E13               	movwf	??i2___ftadd& (0+255),c
 10885  00197E  0E18               	movlw	24
 10886  001980  6413               	cpfsgt	??i2___ftadd,c
 10887  001982  D007               	goto	i2l456
 10888  001984                     i2u298_40:
 10889  001984  C00D  F00D         	movff	i2___ftadd@f1,?i2___ftadd
 10890  001988  C00E  F00E         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 10891  00198C  C00F  F00F         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 10892  001990  0012               	return	
 10893  001992                     i2l456:
 10894  001992  0E06               	movlw	6
 10895  001994  6E16               	movwf	i2___ftadd@sign,c
 10896  001996  BE0F               	btfsc	i2___ftadd@f1+2,7,c
 10897  001998  8E16               	bsf	i2___ftadd@sign,7,c
 10898  00199A  BE12               	btfsc	i2___ftadd@f2+2,7,c
 10899  00199C  8C16               	bsf	i2___ftadd@sign,6,c
 10900  00199E  8E0E               	bsf	i2___ftadd@f1+1,7,c
 10901  0019A0  0EFF               	movlw	255
 10902  0019A2  160D               	andwf	i2___ftadd@f1,f,c
 10903  0019A4  0EFF               	movlw	255
 10904  0019A6  160E               	andwf	i2___ftadd@f1+1,f,c
 10905  0019A8  0E00               	movlw	0
 10906  0019AA  160F               	andwf	i2___ftadd@f1+2,f,c
 10907  0019AC  8E11               	bsf	i2___ftadd@f2+1,7,c
 10908  0019AE  0EFF               	movlw	255
 10909  0019B0  1610               	andwf	i2___ftadd@f2,f,c
 10910  0019B2  0EFF               	movlw	255
 10911  0019B4  1611               	andwf	i2___ftadd@f2+1,f,c
 10912  0019B6  0E00               	movlw	0
 10913  0019B8  1612               	andwf	i2___ftadd@f2+2,f,c
 10914  0019BA  5017               	movf	i2___ftadd@exp2,w,c
 10915  0019BC  5C18               	subwf	i2___ftadd@exp1,w,c
 10916  0019BE  B0D8               	btfsc	status,0,c
 10917  0019C0  D01B               	goto	i2l461
 10918  0019C2                     i2u301_40:
 10919  0019C2  90D8               	bcf	status,0,c
 10920  0019C4  3610               	rlcf	i2___ftadd@f2,f,c
 10921  0019C6  3611               	rlcf	i2___ftadd@f2+1,f,c
 10922  0019C8  3612               	rlcf	i2___ftadd@f2+2,f,c
 10923  0019CA  0617               	decf	i2___ftadd@exp2,f,c
 10924  0019CC  5018               	movf	i2___ftadd@exp1,w,c
 10925  0019CE  1817               	xorwf	i2___ftadd@exp2,w,c
 10926  0019D0  B4D8               	btfsc	status,2,c
 10927  0019D2  D00D               	goto	i2l466
 10928  0019D4  0616               	decf	i2___ftadd@sign,f,c
 10929  0019D6  C016  F013         	movff	i2___ftadd@sign,??i2___ftadd
 10930  0019DA  0E07               	movlw	7
 10931  0019DC  1613               	andwf	??i2___ftadd,f,c
 10932  0019DE  B4D8               	btfsc	status,2,c
 10933  0019E0  D006               	goto	i2l466
 10934  0019E2  D7EF               	goto	i2u301_40
 10935  0019E4  90D8               	bcf	status,0,c
 10936  0019E6  320F               	rrcf	i2___ftadd@f1+2,f,c
 10937  0019E8  320E               	rrcf	i2___ftadd@f1+1,f,c
 10938  0019EA  320D               	rrcf	i2___ftadd@f1,f,c
 10939  0019EC  2A18               	incf	i2___ftadd@exp1,f,c
 10940  0019EE                     i2l466:
 10941  0019EE  5017               	movf	i2___ftadd@exp2,w,c
 10942  0019F0  1818               	xorwf	i2___ftadd@exp1,w,c
 10943  0019F2  B4D8               	btfsc	status,2,c
 10944  0019F4  D01F               	goto	i2u308_40
 10945  0019F6  D7F6               	goto	i2l467
 10946  0019F8                     i2l461:
 10947  0019F8  5018               	movf	i2___ftadd@exp1,w,c
 10948  0019FA  5C17               	subwf	i2___ftadd@exp2,w,c
 10949  0019FC  B0D8               	btfsc	status,0,c
 10950  0019FE  D01A               	goto	i2u308_40
 10951  001A00                     i2u305_40:
 10952  001A00  90D8               	bcf	status,0,c
 10953  001A02  360D               	rlcf	i2___ftadd@f1,f,c
 10954  001A04  360E               	rlcf	i2___ftadd@f1+1,f,c
 10955  001A06  360F               	rlcf	i2___ftadd@f1+2,f,c
 10956  001A08  0618               	decf	i2___ftadd@exp1,f,c
 10957  001A0A  5018               	movf	i2___ftadd@exp1,w,c
 10958  001A0C  1817               	xorwf	i2___ftadd@exp2,w,c
 10959  001A0E  B4D8               	btfsc	status,2,c
 10960  001A10  D00D               	goto	i2l475
 10961  001A12  0616               	decf	i2___ftadd@sign,f,c
 10962  001A14  C016  F013         	movff	i2___ftadd@sign,??i2___ftadd
 10963  001A18  0E07               	movlw	7
 10964  001A1A  1613               	andwf	??i2___ftadd,f,c
 10965  001A1C  B4D8               	btfsc	status,2,c
 10966  001A1E  D006               	goto	i2l475
 10967  001A20  D7EF               	goto	i2u305_40
 10968  001A22  90D8               	bcf	status,0,c
 10969  001A24  3212               	rrcf	i2___ftadd@f2+2,f,c
 10970  001A26  3211               	rrcf	i2___ftadd@f2+1,f,c
 10971  001A28  3210               	rrcf	i2___ftadd@f2,f,c
 10972  001A2A  2A17               	incf	i2___ftadd@exp2,f,c
 10973  001A2C                     i2l475:
 10974  001A2C  5017               	movf	i2___ftadd@exp2,w,c
 10975  001A2E  1818               	xorwf	i2___ftadd@exp1,w,c
 10976  001A30  A4D8               	btfss	status,2,c
 10977  001A32  D7F7               	goto	i2l476
 10978  001A34                     i2u308_40:
 10979  001A34  AE16               	btfss	i2___ftadd@sign,7,c
 10980  001A36  D00C               	goto	i2l478
 10981  001A38  0EFF               	movlw	255
 10982  001A3A  1A0D               	xorwf	i2___ftadd@f1,f,c
 10983  001A3C  0EFF               	movlw	255
 10984  001A3E  1A0E               	xorwf	i2___ftadd@f1+1,f,c
 10985  001A40  0EFF               	movlw	255
 10986  001A42  1A0F               	xorwf	i2___ftadd@f1+2,f,c
 10987  001A44  0E01               	movlw	1
 10988  001A46  260D               	addwf	i2___ftadd@f1,f,c
 10989  001A48  0E00               	movlw	0
 10990  001A4A  220E               	addwfc	i2___ftadd@f1+1,f,c
 10991  001A4C  0E00               	movlw	0
 10992  001A4E  220F               	addwfc	i2___ftadd@f1+2,f,c
 10993  001A50                     i2l478:
 10994  001A50  AC16               	btfss	i2___ftadd@sign,6,c
 10995  001A52  D00C               	goto	i2l479
 10996  001A54  0EFF               	movlw	255
 10997  001A56  1A10               	xorwf	i2___ftadd@f2,f,c
 10998  001A58  0EFF               	movlw	255
 10999  001A5A  1A11               	xorwf	i2___ftadd@f2+1,f,c
 11000  001A5C  0EFF               	movlw	255
 11001  001A5E  1A12               	xorwf	i2___ftadd@f2+2,f,c
 11002  001A60  0E01               	movlw	1
 11003  001A62  2610               	addwf	i2___ftadd@f2,f,c
 11004  001A64  0E00               	movlw	0
 11005  001A66  2211               	addwfc	i2___ftadd@f2+1,f,c
 11006  001A68  0E00               	movlw	0
 11007  001A6A  2212               	addwfc	i2___ftadd@f2+2,f,c
 11008  001A6C                     i2l479:
 11009  001A6C  0E00               	movlw	0
 11010  001A6E  6E16               	movwf	i2___ftadd@sign,c
 11011  001A70  500D               	movf	i2___ftadd@f1,w,c
 11012  001A72  2610               	addwf	i2___ftadd@f2,f,c
 11013  001A74  500E               	movf	i2___ftadd@f1+1,w,c
 11014  001A76  2211               	addwfc	i2___ftadd@f2+1,f,c
 11015  001A78  500F               	movf	i2___ftadd@f1+2,w,c
 11016  001A7A  2212               	addwfc	i2___ftadd@f2+2,f,c
 11017  001A7C  AE12               	btfss	i2___ftadd@f2+2,7,c
 11018  001A7E  D00E               	goto	i2l480
 11019  001A80  0EFF               	movlw	255
 11020  001A82  1A10               	xorwf	i2___ftadd@f2,f,c
 11021  001A84  0EFF               	movlw	255
 11022  001A86  1A11               	xorwf	i2___ftadd@f2+1,f,c
 11023  001A88  0EFF               	movlw	255
 11024  001A8A  1A12               	xorwf	i2___ftadd@f2+2,f,c
 11025  001A8C  0E01               	movlw	1
 11026  001A8E  2610               	addwf	i2___ftadd@f2,f,c
 11027  001A90  0E00               	movlw	0
 11028  001A92  2211               	addwfc	i2___ftadd@f2+1,f,c
 11029  001A94  0E00               	movlw	0
 11030  001A96  2212               	addwfc	i2___ftadd@f2+2,f,c
 11031  001A98  0E01               	movlw	1
 11032  001A9A  6E16               	movwf	i2___ftadd@sign,c
 11033  001A9C                     i2l480:
 11034  001A9C  C010  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 11035  001AA0  C011  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 11036  001AA4  C012  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 11037  001AA8  C018  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 11038  001AAC  C016  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 11039  001AB0  ECD3  F016         	call	i2___ftpack	;wreg free
 11040  001AB4  C001  F00D         	movff	?i2___ftpack,?i2___ftadd
 11041  001AB8  C002  F00E         	movff	?i2___ftpack+1,?i2___ftadd+1
 11042  001ABC  C003  F00F         	movff	?i2___ftpack+2,?i2___ftadd+2
 11043  001AC0  0012               	return	
 11044  001AC2                     __end_ofi2___ftadd:
 11045                           	opt stack 0
 11046                           pclatu	equ	0xFFB
 11047                           pclath	equ	0xFFA
 11048                           tblptru	equ	0xFF8
 11049                           tblptrh	equ	0xFF7
 11050                           tblptrl	equ	0xFF6
 11051                           tablat	equ	0xFF5
 11052                           prodh	equ	0xFF4
 11053                           prodl	equ	0xFF3
 11054                           intcon	equ	0xFF2
 11055                           postinc0	equ	0xFEE
 11056                           fsr0h	equ	0xFEA
 11057                           fsr0l	equ	0xFE9
 11058                           wreg	equ	0xFE8
 11059                           plusw1	equ	0xFE3
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           postinc2	equ	0xFDE
 11063                           postdec2	equ	0xFDD
 11064                           plusw2	equ	0xFDB
 11065                           fsr2h	equ	0xFDA
 11066                           fsr2l	equ	0xFD9
 11067                           status	equ	0xFD8
 11068                           
 11069 ;; *************** function i2___ftneg *****************
 11070 ;; Defined at:
 11071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;  f1              3    0[COMRAM] float 
 11074 ;; Auto vars:     Size  Location     Type
 11075 ;;		None
 11076 ;; Return value:  Size  Location     Type
 11077 ;;                  3    0[COMRAM] float 
 11078 ;; Registers used:
 11079 ;;		wreg, status,2, status,0
 11080 ;; Tracked objects:
 11081 ;;		On entry : 0/0
 11082 ;;		On exit  : 0/0
 11083 ;;		Unchanged: 0/0
 11084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11085 ;;      Params:         3       0       0       0       0       0       0       0       0
 11086 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11087 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11088 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11089 ;;Total ram usage:        3 bytes
 11090 ;; Hardware stack levels used:    1
 11091 ;; This function calls:
 11092 ;;		Nothing
 11093 ;; This function is called by:
 11094 ;;		i2_pow
 11095 ;;		i2_exp
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text54
 11100  00390A                     __ptext54:
 11101                           	opt stack 0
 11102  00390A                     i2___ftneg:
 11103                           	opt stack 16
 11104                           
 11105                           ;incstack = 0
 11106  00390A  5001               	movf	i2___ftneg@f1,w,c
 11107  00390C  1002               	iorwf	i2___ftneg@f1+1,w,c
 11108  00390E  1003               	iorwf	i2___ftneg@f1+2,w,c
 11109  003910  B4D8               	btfsc	status,2,c
 11110  003912  D006               	goto	i2l511
 11111  003914  0E00               	movlw	0
 11112  003916  1A01               	xorwf	i2___ftneg@f1,f,c
 11113  003918  0E00               	movlw	0
 11114  00391A  1A02               	xorwf	i2___ftneg@f1+1,f,c
 11115  00391C  0E80               	movlw	128
 11116  00391E  1A03               	xorwf	i2___ftneg@f1+2,f,c
 11117  003920                     i2l511:
 11118  003920  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 11119  003924  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 11120  003928  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 11121  00392C  0012               	return		;funcret
 11122  00392E                     __end_ofi2___ftneg:
 11123                           	opt stack 0
 11124                           pclatu	equ	0xFFB
 11125                           pclath	equ	0xFFA
 11126                           tblptru	equ	0xFF8
 11127                           tblptrh	equ	0xFF7
 11128                           tblptrl	equ	0xFF6
 11129                           tablat	equ	0xFF5
 11130                           prodh	equ	0xFF4
 11131                           prodl	equ	0xFF3
 11132                           intcon	equ	0xFF2
 11133                           postinc0	equ	0xFEE
 11134                           fsr0h	equ	0xFEA
 11135                           fsr0l	equ	0xFE9
 11136                           wreg	equ	0xFE8
 11137                           plusw1	equ	0xFE3
 11138                           fsr1h	equ	0xFE2
 11139                           fsr1l	equ	0xFE1
 11140                           postinc2	equ	0xFDE
 11141                           postdec2	equ	0xFDD
 11142                           plusw2	equ	0xFDB
 11143                           fsr2h	equ	0xFDA
 11144                           fsr2l	equ	0xFD9
 11145                           status	equ	0xFD8
 11146                           
 11147 ;; *************** function i2___ftdiv *****************
 11148 ;; Defined at:
 11149 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  f1              3   39[COMRAM] float 
 11152 ;;  f2              3   42[COMRAM] float 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  __ftdiv         3   49[COMRAM] float 
 11155 ;;  __ftdiv         1   53[COMRAM] unsigned char 
 11156 ;;  __ftdiv         1   52[COMRAM] unsigned char 
 11157 ;;  __ftdiv         1   48[COMRAM] unsigned char 
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  3   39[COMRAM] float 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11167 ;;      Params:         6       0       0       0       0       0       0       0       0
 11168 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11169 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11170 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11171 ;;Total ram usage:       15 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    1
 11174 ;; This function calls:
 11175 ;;		i2___ftpack
 11176 ;; This function is called by:
 11177 ;;		i2_wait_in_ms
 11178 ;;		i2_config_ccp1
 11179 ;;		i2_config_ccp2
 11180 ;;		i2_exp
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text55
 11185  0024BA                     __ptext55:
 11186                           	opt stack 0
 11187  0024BA                     i2___ftdiv:
 11188                           	opt stack 18
 11189                           
 11190                           ;incstack = 0
 11191  0024BA  C02A  F02E         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 11192  0024BE  6A2F               	clrf	(??i2___ftdiv+1)& (0+255),c
 11193  0024C0  6A30               	clrf	(??i2___ftdiv+2)& (0+255),c
 11194  0024C2  3429               	rlcf	i2___ftdiv@f1+1,w,c
 11195  0024C4  362E               	rlcf	??i2___ftdiv& (0+255),f,c
 11196  0024C6  E301               	bnc	u350_41
 11197  0024C8  802F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11198  0024CA                     u350_41:
 11199  0024CA  502E               	movf	??i2___ftdiv,w,c
 11200  0024CC  6E35               	movwf	i2___ftdiv@exp,c
 11201  0024CE  5035               	movf	i2___ftdiv@exp,w,c
 11202  0024D0  A4D8               	btfss	status,2,c
 11203  0024D2  D007               	goto	i2l485
 11204  0024D4  0E00               	movlw	0
 11205  0024D6  6E28               	movwf	?i2___ftdiv,c
 11206  0024D8  0E00               	movlw	0
 11207  0024DA  6E29               	movwf	?i2___ftdiv+1,c
 11208  0024DC  0E00               	movlw	0
 11209  0024DE  6E2A               	movwf	?i2___ftdiv+2,c
 11210  0024E0  0012               	return	
 11211  0024E2                     i2l485:
 11212  0024E2  C02D  F02E         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 11213  0024E6  6A2F               	clrf	(??i2___ftdiv+1)& (0+255),c
 11214  0024E8  6A30               	clrf	(??i2___ftdiv+2)& (0+255),c
 11215  0024EA  342C               	rlcf	i2___ftdiv@f2+1,w,c
 11216  0024EC  362E               	rlcf	??i2___ftdiv& (0+255),f,c
 11217  0024EE  E301               	bnc	u352_41
 11218  0024F0  802F               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 11219  0024F2                     u352_41:
 11220  0024F2  502E               	movf	??i2___ftdiv,w,c
 11221  0024F4  6E36               	movwf	i2___ftdiv@sign,c
 11222  0024F6  5036               	movf	i2___ftdiv@sign,w,c
 11223  0024F8  A4D8               	btfss	status,2,c
 11224  0024FA  D007               	goto	i2l487
 11225  0024FC  0E00               	movlw	0
 11226  0024FE  6E28               	movwf	?i2___ftdiv,c
 11227  002500  0E00               	movlw	0
 11228  002502  6E29               	movwf	?i2___ftdiv+1,c
 11229  002504  0E00               	movlw	0
 11230  002506  6E2A               	movwf	?i2___ftdiv+2,c
 11231  002508  0012               	return	
 11232  00250A                     i2l487:
 11233  00250A  0E00               	movlw	0
 11234  00250C  6E32               	movwf	i2___ftdiv@f3,c
 11235  00250E  0E00               	movlw	0
 11236  002510  6E33               	movwf	i2___ftdiv@f3+1,c
 11237  002512  0E00               	movlw	0
 11238  002514  6E34               	movwf	i2___ftdiv@f3+2,c
 11239  002516  5036               	movf	i2___ftdiv@sign,w,c
 11240  002518  0F89               	addlw	137
 11241  00251A  5E35               	subwf	i2___ftdiv@exp,f,c
 11242  00251C  C02A  F036         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 11243  002520  502D               	movf	i2___ftdiv@f2+2,w,c
 11244  002522  1A36               	xorwf	i2___ftdiv@sign,f,c
 11245  002524  0E80               	movlw	128
 11246  002526  1636               	andwf	i2___ftdiv@sign,f,c
 11247  002528  8E29               	bsf	i2___ftdiv@f1+1,7,c
 11248  00252A  0EFF               	movlw	255
 11249  00252C  1628               	andwf	i2___ftdiv@f1,f,c
 11250  00252E  0EFF               	movlw	255
 11251  002530  1629               	andwf	i2___ftdiv@f1+1,f,c
 11252  002532  0E00               	movlw	0
 11253  002534  162A               	andwf	i2___ftdiv@f1+2,f,c
 11254  002536  8E2C               	bsf	i2___ftdiv@f2+1,7,c
 11255  002538  0EFF               	movlw	255
 11256  00253A  162B               	andwf	i2___ftdiv@f2,f,c
 11257  00253C  0EFF               	movlw	255
 11258  00253E  162C               	andwf	i2___ftdiv@f2+1,f,c
 11259  002540  0E00               	movlw	0
 11260  002542  162D               	andwf	i2___ftdiv@f2+2,f,c
 11261  002544  0E18               	movlw	24
 11262  002546  6E31               	movwf	i2___ftdiv@cntr,c
 11263  002548  90D8               	bcf	status,0,c
 11264  00254A  3632               	rlcf	i2___ftdiv@f3,f,c
 11265  00254C  3633               	rlcf	i2___ftdiv@f3+1,f,c
 11266  00254E  3634               	rlcf	i2___ftdiv@f3+2,f,c
 11267  002550  502B               	movf	i2___ftdiv@f2,w,c
 11268  002552  5C28               	subwf	i2___ftdiv@f1,w,c
 11269  002554  502C               	movf	i2___ftdiv@f2+1,w,c
 11270  002556  5829               	subwfb	i2___ftdiv@f1+1,w,c
 11271  002558  502D               	movf	i2___ftdiv@f2+2,w,c
 11272  00255A  582A               	subwfb	i2___ftdiv@f1+2,w,c
 11273  00255C  A0D8               	btfss	status,0,c
 11274  00255E  D007               	goto	i2l489
 11275  002560  502B               	movf	i2___ftdiv@f2,w,c
 11276  002562  5E28               	subwf	i2___ftdiv@f1,f,c
 11277  002564  502C               	movf	i2___ftdiv@f2+1,w,c
 11278  002566  5A29               	subwfb	i2___ftdiv@f1+1,f,c
 11279  002568  502D               	movf	i2___ftdiv@f2+2,w,c
 11280  00256A  5A2A               	subwfb	i2___ftdiv@f1+2,f,c
 11281  00256C  8032               	bsf	i2___ftdiv@f3,0,c
 11282  00256E                     i2l489:
 11283  00256E  90D8               	bcf	status,0,c
 11284  002570  3628               	rlcf	i2___ftdiv@f1,f,c
 11285  002572  3629               	rlcf	i2___ftdiv@f1+1,f,c
 11286  002574  362A               	rlcf	i2___ftdiv@f1+2,f,c
 11287  002576  2E31               	decfsz	i2___ftdiv@cntr,f,c
 11288  002578  D7E7               	goto	i2l488
 11289  00257A  C032  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 11290  00257E  C033  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 11291  002582  C034  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 11292  002586  C035  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 11293  00258A  C036  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 11294  00258E  ECD3  F016         	call	i2___ftpack	;wreg free
 11295  002592  C001  F028         	movff	?i2___ftpack,?i2___ftdiv
 11296  002596  C002  F029         	movff	?i2___ftpack+1,?i2___ftdiv+1
 11297  00259A  C003  F02A         	movff	?i2___ftpack+2,?i2___ftdiv+2
 11298  00259E  0012               	return	
 11299  0025A0                     __end_ofi2___ftdiv:
 11300                           	opt stack 0
 11301                           pclatu	equ	0xFFB
 11302                           pclath	equ	0xFFA
 11303                           tblptru	equ	0xFF8
 11304                           tblptrh	equ	0xFF7
 11305                           tblptrl	equ	0xFF6
 11306                           tablat	equ	0xFF5
 11307                           prodh	equ	0xFF4
 11308                           prodl	equ	0xFF3
 11309                           intcon	equ	0xFF2
 11310                           postinc0	equ	0xFEE
 11311                           fsr0h	equ	0xFEA
 11312                           fsr0l	equ	0xFE9
 11313                           wreg	equ	0xFE8
 11314                           plusw1	equ	0xFE3
 11315                           fsr1h	equ	0xFE2
 11316                           fsr1l	equ	0xFE1
 11317                           postinc2	equ	0xFDE
 11318                           postdec2	equ	0xFDD
 11319                           plusw2	equ	0xFDB
 11320                           fsr2h	equ	0xFDA
 11321                           fsr2l	equ	0xFD9
 11322                           status	equ	0xFD8
 11323                           
 11324 ;; *************** function i2___awtoft *****************
 11325 ;; Defined at:
 11326 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;  c               2    8[COMRAM] int 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  __awtoft        1   11[COMRAM] unsigned char 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  3    8[COMRAM] float 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0, cstack
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11340 ;;      Params:         3       0       0       0       0       0       0       0       0
 11341 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11343 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11344 ;;Total ram usage:        4 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:    1
 11347 ;; This function calls:
 11348 ;;		i2___ftpack
 11349 ;; This function is called by:
 11350 ;;		i2_wait_in_ms
 11351 ;;		i2_config_ccp1
 11352 ;;		i2_config_ccp2
 11353 ;;		i2_exp
 11354 ;;		i2_log
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text56
 11359  0037EA                     __ptext56:
 11360                           	opt stack 0
 11361  0037EA                     i2___awtoft:
 11362                           	opt stack 18
 11363                           
 11364                           ;incstack = 0
 11365  0037EA  0E00               	movlw	0
 11366  0037EC  6E0C               	movwf	i2___awtoft@sign,c
 11367  0037EE  AE0A               	btfss	i2___awtoft@c+1,7,c
 11368  0037F0  D006               	goto	i2l402
 11369  0037F2  6C09               	negf	i2___awtoft@c,c
 11370  0037F4  1E0A               	comf	i2___awtoft@c+1,f,c
 11371  0037F6  B0D8               	btfsc	status,0,c
 11372  0037F8  2A0A               	incf	i2___awtoft@c+1,f,c
 11373  0037FA  0E01               	movlw	1
 11374  0037FC  6E0C               	movwf	i2___awtoft@sign,c
 11375  0037FE                     i2l402:
 11376  0037FE  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 11377  003802  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 11378  003806  6A03               	clrf	i2___ftpack@arg+2,c
 11379  003808  0E8E               	movlw	142
 11380  00380A  6E04               	movwf	i2___ftpack@exp,c
 11381  00380C  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 11382  003810  ECD3  F016         	call	i2___ftpack	;wreg free
 11383  003814  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 11384  003818  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 11385  00381C  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 11386  003820  0012               	return	
 11387  003822                     __end_ofi2___awtoft:
 11388                           	opt stack 0
 11389                           pclatu	equ	0xFFB
 11390                           pclath	equ	0xFFA
 11391                           tblptru	equ	0xFF8
 11392                           tblptrh	equ	0xFF7
 11393                           tblptrl	equ	0xFF6
 11394                           tablat	equ	0xFF5
 11395                           prodh	equ	0xFF4
 11396                           prodl	equ	0xFF3
 11397                           intcon	equ	0xFF2
 11398                           postinc0	equ	0xFEE
 11399                           fsr0h	equ	0xFEA
 11400                           fsr0l	equ	0xFE9
 11401                           wreg	equ	0xFE8
 11402                           plusw1	equ	0xFE3
 11403                           fsr1h	equ	0xFE2
 11404                           fsr1l	equ	0xFE1
 11405                           postinc2	equ	0xFDE
 11406                           postdec2	equ	0xFDD
 11407                           plusw2	equ	0xFDB
 11408                           fsr2h	equ	0xFDA
 11409                           fsr2l	equ	0xFD9
 11410                           status	equ	0xFD8
 11411                           
 11412 ;; *************** function i2___lltoft *****************
 11413 ;; Defined at:
 11414 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  c               4    8[COMRAM] unsigned long 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  __lltoft        1   16[COMRAM] unsigned char 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  3    8[COMRAM] float 
 11421 ;; Registers used:
 11422 ;;		wreg, status,2, status,0, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11428 ;;      Params:         4       0       0       0       0       0       0       0       0
 11429 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11430 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11431 ;;      Totals:         9       0       0       0       0       0       0       0       0
 11432 ;;Total ram usage:        9 bytes
 11433 ;; Hardware stack levels used:    1
 11434 ;; Hardware stack levels required when called:    1
 11435 ;; This function calls:
 11436 ;;		i2___ftpack
 11437 ;; This function is called by:
 11438 ;;		i2_pow
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text57
 11443  0036D2                     __ptext57:
 11444                           	opt stack 0
 11445  0036D2                     i2___lltoft:
 11446                           	opt stack 16
 11447                           
 11448                           ;incstack = 0
 11449  0036D2  0E8E               	movlw	142
 11450  0036D4  6E11               	movwf	i2___lltoft@exp,c
 11451  0036D6  D006               	goto	i2l578
 11452  0036D8  90D8               	bcf	status,0,c
 11453  0036DA  320C               	rrcf	i2___lltoft@c+3,f,c
 11454  0036DC  320B               	rrcf	i2___lltoft@c+2,f,c
 11455  0036DE  320A               	rrcf	i2___lltoft@c+1,f,c
 11456  0036E0  3209               	rrcf	i2___lltoft@c,f,c
 11457  0036E2  2A11               	incf	i2___lltoft@exp,f,c
 11458  0036E4                     i2l578:
 11459  0036E4  0E00               	movlw	0
 11460  0036E6  1409               	andwf	i2___lltoft@c,w,c
 11461  0036E8  6E0D               	movwf	??i2___lltoft& (0+255),c
 11462  0036EA  0E00               	movlw	0
 11463  0036EC  140A               	andwf	i2___lltoft@c+1,w,c
 11464  0036EE  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 11465  0036F0  0E00               	movlw	0
 11466  0036F2  140B               	andwf	i2___lltoft@c+2,w,c
 11467  0036F4  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 11468  0036F6  0EFF               	movlw	255
 11469  0036F8  140C               	andwf	i2___lltoft@c+3,w,c
 11470  0036FA  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 11471  0036FC  500D               	movf	??i2___lltoft,w,c
 11472  0036FE  100E               	iorwf	??i2___lltoft+1,w,c
 11473  003700  100F               	iorwf	??i2___lltoft+2,w,c
 11474  003702  1010               	iorwf	??i2___lltoft+3,w,c
 11475  003704  A4D8               	btfss	status,2,c
 11476  003706  D7E8               	goto	i2l579
 11477  003708  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 11478  00370C  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 11479  003710  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 11480  003714  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 11481  003718  0E00               	movlw	0
 11482  00371A  6E05               	movwf	i2___ftpack@sign,c
 11483  00371C  ECD3  F016         	call	i2___ftpack	;wreg free
 11484  003720  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 11485  003724  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 11486  003728  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 11487  00372C  0012               	return	
 11488  00372E                     __end_ofi2___lltoft:
 11489                           	opt stack 0
 11490                           pclatu	equ	0xFFB
 11491                           pclath	equ	0xFFA
 11492                           tblptru	equ	0xFF8
 11493                           tblptrh	equ	0xFF7
 11494                           tblptrl	equ	0xFF6
 11495                           tablat	equ	0xFF5
 11496                           prodh	equ	0xFF4
 11497                           prodl	equ	0xFF3
 11498                           intcon	equ	0xFF2
 11499                           postinc0	equ	0xFEE
 11500                           fsr0h	equ	0xFEA
 11501                           fsr0l	equ	0xFE9
 11502                           wreg	equ	0xFE8
 11503                           plusw1	equ	0xFE3
 11504                           fsr1h	equ	0xFE2
 11505                           fsr1l	equ	0xFE1
 11506                           postinc2	equ	0xFDE
 11507                           postdec2	equ	0xFDD
 11508                           plusw2	equ	0xFDB
 11509                           fsr2h	equ	0xFDA
 11510                           fsr2l	equ	0xFD9
 11511                           status	equ	0xFD8
 11512                           
 11513 ;; *************** function i2___ftpack *****************
 11514 ;; Defined at:
 11515 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;  arg             3    0[COMRAM] unsigned um
 11518 ;;  exp             1    3[COMRAM] unsigned char 
 11519 ;;  sign            1    4[COMRAM] unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;		None
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  3    0[COMRAM] float 
 11524 ;; Registers used:
 11525 ;;		wreg, status,2, status,0
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11531 ;;      Params:         5       0       0       0       0       0       0       0       0
 11532 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11533 ;;      Temps:          3       0       0       0       0       0       0       0       0
 11534 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11535 ;;Total ram usage:        8 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; This function calls:
 11538 ;;		Nothing
 11539 ;; This function is called by:
 11540 ;;		i2___altoft
 11541 ;;		i2___awtoft
 11542 ;;		i2___ftadd
 11543 ;;		i2___ftdiv
 11544 ;;		i2___ftmul
 11545 ;;		i2___lltoft
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text58
 11550  002DA6                     __ptext58:
 11551                           	opt stack 0
 11552  002DA6                     i2___ftpack:
 11553                           	opt stack 18
 11554                           
 11555                           ;incstack = 0
 11556  002DA6  5004               	movf	i2___ftpack@exp,w,c
 11557  002DA8  B4D8               	btfsc	status,2,c
 11558  002DAA  D005               	goto	i2u240_40
 11559  002DAC  5001               	movf	i2___ftpack@arg,w,c
 11560  002DAE  1002               	iorwf	i2___ftpack@arg+1,w,c
 11561  002DB0  1003               	iorwf	i2___ftpack@arg+2,w,c
 11562  002DB2  A4D8               	btfss	status,2,c
 11563  002DB4  D00C               	goto	i2l421
 11564  002DB6                     i2u240_40:
 11565  002DB6  0E00               	movlw	0
 11566  002DB8  6E01               	movwf	?i2___ftpack,c
 11567  002DBA  0E00               	movlw	0
 11568  002DBC  6E02               	movwf	?i2___ftpack+1,c
 11569  002DBE  0E00               	movlw	0
 11570  002DC0  6E03               	movwf	?i2___ftpack+2,c
 11571  002DC2  0012               	return	
 11572  002DC4  2A04               	incf	i2___ftpack@exp,f,c
 11573  002DC6  90D8               	bcf	status,0,c
 11574  002DC8  3203               	rrcf	i2___ftpack@arg+2,f,c
 11575  002DCA  3202               	rrcf	i2___ftpack@arg+1,f,c
 11576  002DCC  3201               	rrcf	i2___ftpack@arg,f,c
 11577  002DCE                     i2l421:
 11578  002DCE  0E00               	movlw	0
 11579  002DD0  1401               	andwf	i2___ftpack@arg,w,c
 11580  002DD2  6E06               	movwf	??i2___ftpack& (0+255),c
 11581  002DD4  0E00               	movlw	0
 11582  002DD6  1402               	andwf	i2___ftpack@arg+1,w,c
 11583  002DD8  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 11584  002DDA  0EFE               	movlw	254
 11585  002DDC  1403               	andwf	i2___ftpack@arg+2,w,c
 11586  002DDE  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 11587  002DE0  5006               	movf	??i2___ftpack,w,c
 11588  002DE2  1007               	iorwf	??i2___ftpack+1,w,c
 11589  002DE4  1008               	iorwf	??i2___ftpack+2,w,c
 11590  002DE6  B4D8               	btfsc	status,2,c
 11591  002DE8  D00C               	goto	i2l424
 11592  002DEA  D7EC               	goto	i2l422
 11593  002DEC  2A04               	incf	i2___ftpack@exp,f,c
 11594  002DEE  0E01               	movlw	1
 11595  002DF0  2601               	addwf	i2___ftpack@arg,f,c
 11596  002DF2  0E00               	movlw	0
 11597  002DF4  2202               	addwfc	i2___ftpack@arg+1,f,c
 11598  002DF6  0E00               	movlw	0
 11599  002DF8  2203               	addwfc	i2___ftpack@arg+2,f,c
 11600  002DFA  90D8               	bcf	status,0,c
 11601  002DFC  3203               	rrcf	i2___ftpack@arg+2,f,c
 11602  002DFE  3202               	rrcf	i2___ftpack@arg+1,f,c
 11603  002E00  3201               	rrcf	i2___ftpack@arg,f,c
 11604  002E02                     i2l424:
 11605  002E02  0E00               	movlw	0
 11606  002E04  1401               	andwf	i2___ftpack@arg,w,c
 11607  002E06  6E06               	movwf	??i2___ftpack& (0+255),c
 11608  002E08  0E00               	movlw	0
 11609  002E0A  1402               	andwf	i2___ftpack@arg+1,w,c
 11610  002E0C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 11611  002E0E  0EFF               	movlw	255
 11612  002E10  1403               	andwf	i2___ftpack@arg+2,w,c
 11613  002E12  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 11614  002E14  5006               	movf	??i2___ftpack,w,c
 11615  002E16  1007               	iorwf	??i2___ftpack+1,w,c
 11616  002E18  1008               	iorwf	??i2___ftpack+2,w,c
 11617  002E1A  B4D8               	btfsc	status,2,c
 11618  002E1C  D006               	goto	i2l427
 11619  002E1E  D7E6               	goto	i2l425
 11620  002E20  0604               	decf	i2___ftpack@exp,f,c
 11621  002E22  90D8               	bcf	status,0,c
 11622  002E24  3601               	rlcf	i2___ftpack@arg,f,c
 11623  002E26  3602               	rlcf	i2___ftpack@arg+1,f,c
 11624  002E28  3603               	rlcf	i2___ftpack@arg+2,f,c
 11625  002E2A                     i2l427:
 11626  002E2A  BE02               	btfsc	i2___ftpack@arg+1,7,c
 11627  002E2C  D003               	goto	i2u244_40
 11628  002E2E  0E02               	movlw	2
 11629  002E30  6004               	cpfslt	i2___ftpack@exp,c
 11630  002E32  D7F6               	goto	i2l428
 11631  002E34                     i2u244_40:
 11632  002E34  A004               	btfss	i2___ftpack@exp,0,c
 11633  002E36  9E02               	bcf	i2___ftpack@arg+1,7,c
 11634  002E38  90D8               	bcf	status,0,c
 11635  002E3A  3204               	rrcf	i2___ftpack@exp,f,c
 11636  002E3C  5004               	movf	i2___ftpack@exp,w,c
 11637  002E3E  1203               	iorwf	i2___ftpack@arg+2,f,c
 11638  002E40  5005               	movf	i2___ftpack@sign,w,c
 11639  002E42  A4D8               	btfss	status,2,c
 11640  002E44  8E03               	bsf	i2___ftpack@arg+2,7,c
 11641  002E46  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 11642  002E4A  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 11643  002E4E  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 11644  002E52  0012               	return	
 11645  002E54                     __end_ofi2___ftpack:
 11646                           	opt stack 0
 11647                           pclatu	equ	0xFFB
 11648                           pclath	equ	0xFFA
 11649                           tblptru	equ	0xFF8
 11650                           tblptrh	equ	0xFF7
 11651                           tblptrl	equ	0xFF6
 11652                           tablat	equ	0xFF5
 11653                           prodh	equ	0xFF4
 11654                           prodl	equ	0xFF3
 11655                           intcon	equ	0xFF2
 11656                           postinc0	equ	0xFEE
 11657                           fsr0h	equ	0xFEA
 11658                           fsr0l	equ	0xFE9
 11659                           wreg	equ	0xFE8
 11660                           plusw1	equ	0xFE3
 11661                           fsr1h	equ	0xFE2
 11662                           fsr1l	equ	0xFE1
 11663                           postinc2	equ	0xFDE
 11664                           postdec2	equ	0xFDD
 11665                           plusw2	equ	0xFDB
 11666                           fsr2h	equ	0xFDA
 11667                           fsr2l	equ	0xFD9
 11668                           status	equ	0xFD8
 11669                           
 11670 ;; *************** function i2___awdiv *****************
 11671 ;; Defined at:
 11672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  dividend        2    0[COMRAM] int 
 11675 ;;  divisor         2    2[COMRAM] int 
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;  __awdiv         2    6[COMRAM] int 
 11678 ;;  __awdiv         1    5[COMRAM] unsigned char 
 11679 ;;  __awdiv         1    4[COMRAM] unsigned char 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  2    0[COMRAM] int 
 11682 ;; Registers used:
 11683 ;;		wreg, status,2, status,0
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11689 ;;      Params:         4       0       0       0       0       0       0       0       0
 11690 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11692 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11693 ;;Total ram usage:        8 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; This function calls:
 11696 ;;		Nothing
 11697 ;; This function is called by:
 11698 ;;		i2_config_ccp1
 11699 ;;		i2_config_ccp2
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text59
 11704  0032F0                     __ptext59:
 11705                           	opt stack 0
 11706  0032F0                     i2___awdiv:
 11707                           	opt stack 18
 11708                           
 11709                           ;incstack = 0
 11710  0032F0  0E00               	movlw	0
 11711  0032F2  6E06               	movwf	i2___awdiv@sign,c
 11712  0032F4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 11713  0032F6  D006               	goto	i2l374
 11714  0032F8  6C03               	negf	i2___awdiv@divisor,c
 11715  0032FA  1E04               	comf	i2___awdiv@divisor+1,f,c
 11716  0032FC  B0D8               	btfsc	status,0,c
 11717  0032FE  2A04               	incf	i2___awdiv@divisor+1,f,c
 11718  003300  0E01               	movlw	1
 11719  003302  6E06               	movwf	i2___awdiv@sign,c
 11720  003304                     i2l374:
 11721  003304  AE02               	btfss	i2___awdiv@dividend+1,7,c
 11722  003306  D006               	goto	i2l375
 11723  003308  6C01               	negf	i2___awdiv@dividend,c
 11724  00330A  1E02               	comf	i2___awdiv@dividend+1,f,c
 11725  00330C  B0D8               	btfsc	status,0,c
 11726  00330E  2A02               	incf	i2___awdiv@dividend+1,f,c
 11727  003310  0E01               	movlw	1
 11728  003312  1A06               	xorwf	i2___awdiv@sign,f,c
 11729  003314                     i2l375:
 11730  003314  0E00               	movlw	0
 11731  003316  6E08               	movwf	i2___awdiv@quotient+1,c
 11732  003318  0E00               	movlw	0
 11733  00331A  6E07               	movwf	i2___awdiv@quotient,c
 11734  00331C  5003               	movf	i2___awdiv@divisor,w,c
 11735  00331E  1004               	iorwf	i2___awdiv@divisor+1,w,c
 11736  003320  B4D8               	btfsc	status,2,c
 11737  003322  D01C               	goto	i2l382
 11738  003324  0E01               	movlw	1
 11739  003326  6E05               	movwf	i2___awdiv@counter,c
 11740  003328  D004               	goto	i2l377
 11741  00332A  90D8               	bcf	status,0,c
 11742  00332C  3603               	rlcf	i2___awdiv@divisor,f,c
 11743  00332E  3604               	rlcf	i2___awdiv@divisor+1,f,c
 11744  003330  2A05               	incf	i2___awdiv@counter,f,c
 11745  003332                     i2l377:
 11746  003332  AE04               	btfss	i2___awdiv@divisor+1,7,c
 11747  003334  D7FA               	goto	i2l378
 11748  003336                     i2u404_40:
 11749  003336  90D8               	bcf	status,0,c
 11750  003338  3607               	rlcf	i2___awdiv@quotient,f,c
 11751  00333A  3608               	rlcf	i2___awdiv@quotient+1,f,c
 11752  00333C  5003               	movf	i2___awdiv@divisor,w,c
 11753  00333E  5C01               	subwf	i2___awdiv@dividend,w,c
 11754  003340  5004               	movf	i2___awdiv@divisor+1,w,c
 11755  003342  5802               	subwfb	i2___awdiv@dividend+1,w,c
 11756  003344  A0D8               	btfss	status,0,c
 11757  003346  D005               	goto	i2l381
 11758  003348  5003               	movf	i2___awdiv@divisor,w,c
 11759  00334A  5E01               	subwf	i2___awdiv@dividend,f,c
 11760  00334C  5004               	movf	i2___awdiv@divisor+1,w,c
 11761  00334E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 11762  003350  8007               	bsf	i2___awdiv@quotient,0,c
 11763  003352                     i2l381:
 11764  003352  90D8               	bcf	status,0,c
 11765  003354  3204               	rrcf	i2___awdiv@divisor+1,f,c
 11766  003356  3203               	rrcf	i2___awdiv@divisor,f,c
 11767  003358  2E05               	decfsz	i2___awdiv@counter,f,c
 11768  00335A  D7ED               	goto	i2u404_40
 11769  00335C                     i2l382:
 11770  00335C  5006               	movf	i2___awdiv@sign,w,c
 11771  00335E  B4D8               	btfsc	status,2,c
 11772  003360  D004               	goto	i2l383
 11773  003362  6C07               	negf	i2___awdiv@quotient,c
 11774  003364  1E08               	comf	i2___awdiv@quotient+1,f,c
 11775  003366  B0D8               	btfsc	status,0,c
 11776  003368  2A08               	incf	i2___awdiv@quotient+1,f,c
 11777  00336A                     i2l383:
 11778  00336A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 11779  00336E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 11780  003372  0012               	return	
 11781  003374                     __end_ofi2___awdiv:
 11782                           	opt stack 0
 11783                           pclatu	equ	0xFFB
 11784                           pclath	equ	0xFFA
 11785                           tblptru	equ	0xFF8
 11786                           tblptrh	equ	0xFF7
 11787                           tblptrl	equ	0xFF6
 11788                           tablat	equ	0xFF5
 11789                           prodh	equ	0xFF4
 11790                           prodl	equ	0xFF3
 11791                           intcon	equ	0xFF2
 11792                           postinc0	equ	0xFEE
 11793                           fsr0h	equ	0xFEA
 11794                           fsr0l	equ	0xFE9
 11795                           wreg	equ	0xFE8
 11796                           plusw1	equ	0xFE3
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           postinc2	equ	0xFDE
 11800                           postdec2	equ	0xFDD
 11801                           plusw2	equ	0xFDB
 11802                           fsr2h	equ	0xFDA
 11803                           fsr2l	equ	0xFD9
 11804                           status	equ	0xFD8
 11805                           pclatu	equ	0xFFB
 11806                           pclath	equ	0xFFA
 11807                           tblptru	equ	0xFF8
 11808                           tblptrh	equ	0xFF7
 11809                           tblptrl	equ	0xFF6
 11810                           tablat	equ	0xFF5
 11811                           prodh	equ	0xFF4
 11812                           prodl	equ	0xFF3
 11813                           intcon	equ	0xFF2
 11814                           postinc0	equ	0xFEE
 11815                           fsr0h	equ	0xFEA
 11816                           fsr0l	equ	0xFE9
 11817                           wreg	equ	0xFE8
 11818                           plusw1	equ	0xFE3
 11819                           fsr1h	equ	0xFE2
 11820                           fsr1l	equ	0xFE1
 11821                           postinc2	equ	0xFDE
 11822                           postdec2	equ	0xFDD
 11823                           plusw2	equ	0xFDB
 11824                           fsr2h	equ	0xFDA
 11825                           fsr2l	equ	0xFD9
 11826                           status	equ	0xFD8
 11827                           
 11828                           	psect	rparam
 11829  0000                     pclatu	equ	0xFFB
 11830                           pclath	equ	0xFFA
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           postinc0	equ	0xFEE
 11839                           fsr0h	equ	0xFEA
 11840                           fsr0l	equ	0xFE9
 11841                           wreg	equ	0xFE8
 11842                           plusw1	equ	0xFE3
 11843                           fsr1h	equ	0xFE2
 11844                           fsr1l	equ	0xFE1
 11845                           postinc2	equ	0xFDE
 11846                           postdec2	equ	0xFDD
 11847                           plusw2	equ	0xFDB
 11848                           fsr2h	equ	0xFDA
 11849                           fsr2l	equ	0xFD9
 11850                           status	equ	0xFD8
 11851                           
 11852                           	psect	temp
 11853  00005F                     btemp:
 11854                           	opt stack 0
 11855  00005F                     	ds	1
 11856  0000                     int$flags	set	btemp
 11857  0000                     wtemp6	set	btemp+1
 11858                           pclatu	equ	0xFFB
 11859                           pclath	equ	0xFFA
 11860                           tblptru	equ	0xFF8
 11861                           tblptrh	equ	0xFF7
 11862                           tblptrl	equ	0xFF6
 11863                           tablat	equ	0xFF5
 11864                           prodh	equ	0xFF4
 11865                           prodl	equ	0xFF3
 11866                           intcon	equ	0xFF2
 11867                           postinc0	equ	0xFEE
 11868                           fsr0h	equ	0xFEA
 11869                           fsr0l	equ	0xFE9
 11870                           wreg	equ	0xFE8
 11871                           plusw1	equ	0xFE3
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           postinc2	equ	0xFDE
 11875                           postdec2	equ	0xFDD
 11876                           plusw2	equ	0xFDB
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         66
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     97      97
    BANK1           256    173     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ADCint in COMRAM

    i2_wait_in_ms->i2___fttol
    i2_carroMatar->i2_config_ccp1
    i2_carroMatar->i2_config_ccp2
    i2_carroGirar->i2_config_ccp1
    i2_carroGirar->i2_config_ccp2
    i2_carroAvanzarEspecial->i2_config_ccp1
    i2_carroAvanzarEspecial->i2_config_ccp2
    i2_pow->i2_exp
    i2_log->i2_eval_poly
    i2_exp->i2_floor
    i2_ldexp->i2_eval_poly
    i2_floor->i2___altoft
    i2___fttol->i2___ftdiv
    i2___altoft->i2___fttol
    i2_eval_poly->i2___ftmul
    i2___ftmul->i2___ftadd
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___awtoft
    i2___ftdiv->i2___ftmul
    i2___awtoft->i2___ftpack
    i2___lltoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ADCint in BANK0

    i2_EstacionaminetoM1->i2_carroGirar
    i2_carroMatar->i2_config_ccp1
    i2_carroMatar->i2_config_ccp2
    i2_carroGirar->i2_config_ccp1
    i2_carroGirar->i2_config_ccp2
    i2_carroAvanzarEspecial->i2_config_ccp1
    i2_carroAvanzarEspecial->i2_config_ccp2
    i2_config_ccp2->i2_pow
    i2_config_ccp1->i2_pow
    i2_pow->i2_exp

Critical Paths under _main in BANK1

    _config_timer2->___awtoft
    _coinfig_ccpcon->___fttol
    ___lbtoft->___ftpack
    _EstacionaminetoM1->_carroGirar
    _wait_in_ms->___fttol
    _carroMatar->_config_ccp1
    _carroMatar->_config_ccp2
    _carroGirar->_config_ccp1
    _carroGirar->_config_ccp2
    _carroAvanzarEspecial->_config_ccp1
    _carroAvanzarEspecial->_config_ccp2
    _config_ccp2->_pow
    _config_ccp1->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _ADCint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ADCint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  844041
                  _EstacionaminetoM1
               _carroAvanzarEspecial
                     _coinfig_ccpcon
                        _configBoard
                      _config_timer2
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _config_timer2                                        6     2      4    3956
                                             12 BANK1      6     2      4
                           ___awtoft
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coinfig_ccpcon                                       9     3      6   17867
                                             69 BANK1      9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _EstacionaminetoM1                                    0     0      0  611937
               _carroAvanzarEspecial
                         _carroGirar
                         _carroMatar
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _wait_in_ms                                          10     8      2    9497
                                             69 BANK1     10     8      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _carroMatar                                           0     0      0  200784
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _carroGirar                                           1     1      0  200872
                                            172 BANK1      1     1      0
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (1) _carroAvanzarEspecial                                 0     0      0  200784
                        _config_ccp1
                        _config_ccp2
 ---------------------------------------------------------------------------------
 (2) _config_ccp2                                         59    57      2  100392
                                            113 BANK1     59    57      2
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _config_ccp1                                         59    57      2  100392
                                            113 BANK1     59    57      2
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   79904
                                             96 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   26093
                                             66 BANK1      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   42570
                                             87 BANK1      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     404
                                             66 BANK1      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   10261
                                             79 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     532
                                              0 BANK1      7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1088
                                             54 BANK1     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     744
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2797
                                             69 BANK1     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11305
                                             54 BANK1     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     465
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5441
                                             12 BANK1     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5110
                                             54 BANK1      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4765
                                             42 BANK1     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     273
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3749
                                             27 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3738
                                              8 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2728
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2583
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ADCint                                              18    18      0  226249
                                             79 BANK0     18    18      0
                i2_EstacionaminetoM1
 ---------------------------------------------------------------------------------
 (10) i2_EstacionaminetoM1                                 0     0      0  226249
             i2_carroAvanzarEspecial
                       i2_carroGirar
                       i2_carroMatar
                       i2_wait_in_ms
 ---------------------------------------------------------------------------------
 (11) i2_wait_in_ms                                       10     8      2    3171
                                             69 COMRAM    10     8      2
                         i2___awtoft
                          i2___ftdiv
                          i2___fttol
 ---------------------------------------------------------------------------------
 (11) i2_carroMatar                                        0     0      0   74330
                      i2_config_ccp1
                      i2_config_ccp2
 ---------------------------------------------------------------------------------
 (11) i2_carroGirar                                        1     1      0   74418
                                             78 BANK0      1     1      0
                      i2_config_ccp1
                      i2_config_ccp2
 ---------------------------------------------------------------------------------
 (11) i2_carroAvanzarEspecial                              0     0      0   74330
                      i2_config_ccp1
                      i2_config_ccp2
 ---------------------------------------------------------------------------------
 (12) i2_config_ccp2                                      59    57      2   37165
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                          i2___awdiv
                         i2___awtoft
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
                              i2_pow
 ---------------------------------------------------------------------------------
 (12) i2_config_ccp1                                      59    57      2   37165
                                             90 COMRAM     4     2      2
                                             23 BANK0     55    55      0
                          i2___awdiv
                         i2___awtoft
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___fttol
                              i2_pow
 ---------------------------------------------------------------------------------
 (13) i2_pow                                              17    11      6   29613
                                              6 BANK0     17    11      6
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
                         i2___lltoft
                              i2_exp
                              i2_log
 ---------------------------------------------------------------------------------
 (14) i2_log                                               5     2      3    9438
                                             51 COMRAM     5     2      3
                         i2___awtoft
                          i2___ftadd
                          i2___ftmul
                        i2_eval_poly
                            i2_frexp
 ---------------------------------------------------------------------------------
 (14) i2_exp                                               9     6      3   16134
                                             87 COMRAM     3     0      3
                                              0 BANK0      6     6      0
                         i2___awtoft
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                        i2_eval_poly
                            i2_floor
                            i2_ldexp
                              i2_log (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_ldexp                                             7     2      5     296
                                             51 COMRAM     7     2      5
                        i2_eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_floor                                             8     5      3    4215
                                             79 COMRAM     8     5      3
                         i2___altoft
                          i2___ftadd
                           i2___ftge
                          i2___fttol
                            i2_frexp
 ---------------------------------------------------------------------------------
 (15) i2_frexp                                             7     2      5     324
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (12) i2___fttol                                          15    11      4     512
                                             54 COMRAM    15    11      4
                         i2___awtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6     344
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (16) i2___altoft                                         10     6      4     863
                                             69 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (15) i2_eval_poly                                        12     5      7    4199
                                             39 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     261
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___ftmul                                          15     9      6    1701
                                             24 COMRAM    15     9      6
                         i2___awtoft (ARG)
                          i2___ftadd (ARG)
                         i2___ftpack
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftsub                                           6     0      6    2022
                                             24 COMRAM     6     0      6
                         i2___awtoft (ARG)
                          i2___ftadd
 ---------------------------------------------------------------------------------
 (16) i2___ftadd                                          12     6      6    1903
                                             12 COMRAM    12     6      6
                         i2___awtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftneg                                           3     0      3     123
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (12) i2___ftdiv                                          15     9      6    1187
                                             39 COMRAM    15     9      6
                         i2___awtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___awtoft                                          4     1      3    1128
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___lltoft                                          9     5      4     794
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___ftpack                                          8     3      5     699
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (13) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EstacionaminetoM1
     _carroAvanzarEspecial
       _config_ccp1
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
       _config_ccp2
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
     _carroGirar
       _config_ccp1
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
       _config_ccp2
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
     _carroMatar
       _config_ccp1
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
       _config_ccp2
         ___awdiv
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _pow
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           ___lltoft
             ___ftpack
           _exp
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftneg
             ___ftsub
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
               _frexp
             _ldexp
               _eval_poly (ARG)
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
             _log (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _eval_poly
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___wmul
               _frexp
           _log
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
   _carroAvanzarEspecial
     _config_ccp1
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _config_ccp2
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _coinfig_ccpcon
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     ___lbtoft
       ___ftpack
   _configBoard
   _config_timer2
     ___awtoft
       ___ftpack
   _wait_in_ms
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         _frexp (ARG)

 _ADCint (ROOT)
   i2_EstacionaminetoM1
     i2_carroAvanzarEspecial
       i2_config_ccp1
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
       i2_config_ccp2
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
     i2_carroGirar
       i2_config_ccp1
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
       i2_config_ccp2
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
     i2_carroMatar
       i2_config_ccp1
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
       i2_config_ccp2
         i2___awdiv
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftdiv (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_pow
           i2___ftge
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftneg
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftdiv (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2___lltoft
             i2___ftpack
           i2_exp
             i2___awtoft
               i2___ftpack
             i2___ftdiv
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
             i2___ftge
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftneg
             i2___ftsub
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
             i2___fttol
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftdiv (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_floor
               i2___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftdiv (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftmul (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftadd (ARG)
                         i2___awtoft (ARG)
                           i2___ftpack
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                         i2_frexp (ARG)
                       i2___ftpack (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftge
               i2___fttol
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftdiv (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftmul (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftadd (ARG)
                       i2___awtoft (ARG)
                         i2___ftpack
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                       i2_frexp (ARG)
                     i2___ftpack (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
               i2_frexp
             i2_ldexp
               i2_eval_poly (ARG)
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
             i2_log (ARG)
               i2___awtoft
                 i2___ftpack
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2_eval_poly
                 i2___ftadd
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftmul
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftadd (ARG)
                     i2___awtoft (ARG)
                       i2___ftpack
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                     i2_frexp (ARG)
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___wmul
               i2_frexp
           i2_log
             i2___awtoft
               i2___ftpack
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2_eval_poly
               i2___ftadd
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftadd (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___wmul
             i2_frexp
     i2_wait_in_ms
       i2___awtoft
         i2___ftpack
       i2___ftdiv
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftadd (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___ftpack (ARG)
       i2___fttol
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftadd (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftdiv (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2_frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AD      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      61       5       60.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B1      20        0.0%
DATA                 0      0     1B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 16 20:45:47 2018

                   ___altoft@exp 014D                    ___altoft@sign 014E  
                             l60 2F88                               l61 2F76  
                             l64 2F90                               l90 35FA  
                             l59 2F54                               l84 35CA  
                             l86 35DC                               l88 35EA  
                   ___awdiv@sign 0105                       i2___altoft 346A  
            ___wmul@multiplicand 0102                      __CFG_BORV$3 000000  
                     i2___awtoft 37EA                       i2___ftpack 2DA6  
                   ___ftadd@exp1 0135                     ___ftadd@exp2 0134  
                     i2___lltoft 36D2                     ___ftadd@sign 0133  
                            l200 091E                              l202 098C  
                            l204 0A4E                              l141 28C0  
                            l144 28F8                              l145 2900  
                            l402 37C6                              l500 211E  
                            l421 2D20                              l422 2D16  
                            l502 2146                              l190 0C62  
                            l174 351A                              l511 38D6  
                            l503 2178                              l175 3504  
                            l424 2D54                              l504 2188  
                            l192 0D24                              l176 3540  
                            l425 2D3E                              l521 202A  
                            l177 350A                              l506 21A0  
                            l530 20BA                              l178 3514  
                            l427 2D7C                              l507 21B0  
                            l291 3420                              l523 20A2  
                            l187 0C3C                              l428 2D72  
                            l452 17BC                              l292 3414  
                            l532 20E2                              l524 2092  
                            l188 0BF4                              l381 32CE  
                            l461 184C                              l517 3746  
                            l382 32D8                              l374 3280  
                            l383 32E6                              l375 3290  
                            l199 0966                              l480 18F0  
                            l456 17E6                              l800 13A6  
                            l640 1C8A                              l377 32AE  
                            l529 20C6                              l641 1C7C  
                            l378 32A6                              l466 1842  
                            l802 13DE                              l475 1880  
                            l467 1838                              l811 25E0  
                            l803 1416                              l643 1CA2  
                            l476 1876                              l820 2FC4  
                            l812 25D2                              l804 1444  
                            l644 1D28                              l485 23FC  
                            l493 3060                              l805 156E  
                            l645 1D06                              l478 18A4  
                            l494 3090                              l814 25FA  
                            l806 1544                              l646 1DAE  
                            l487 2424                              l479 18C0  
                            l815 2676                              l488 2462  
                            l824 2AC8                              l489 2488  
                            l578 362A                              l850 2826  
                            l826 2B0E                              l842 1DD8  
                            l579 361E                              l851 27A6  
                            l828 2B3C                              l844 1DF8  
                            l829 2B30                              _PR2 000FCB  
                     i2_exp$1882 0060                              _exp 138C  
                            _log 1DBC                              _pow 1C42  
                            wreg 000FE8                     __CFG_LVP$OFF 000000  
                   ___ftdiv@cntr 0124                     ___ftdiv@sign 0129  
                   __CFG_WDT$OFF 000000                             l4037 2900  
                           l3513 1544                             l2645 30BC  
                           l3801 0D0C                             l3803 0D14  
                           l3821 0DD2                             l3775 0BF4  
                           l3839 091E                             l3785 0C52  
                           l3865 0A36                             l3849 097C  
                           l3867 0A3E                             ?_exp 0157  
                           l3885 0AFC                             ?_log 0142  
           __end_ofi2_wait_in_ms 2AAE                             ?_pow 0160  
                     i2_pow$1880 006C                       i2_pow$1881 006F  
                           u2320 2D08                             u2501 178E  
                           u3311 23E4                             u2360 2D86  
                           u4200 0974                             u2530 17AE  
                           u3410 25EC                             u3331 240C  
                           u4131 0BC0                             u4140 0C4A  
                           u4220 0A36                             u2701 2106  
                           u2630 1854                             u2560 17D8  
                           u4160 0D0C                             u4240 0AFC  
                           u4400 28EE                             u2721 212E  
                           u2810 2048                             u3450 2AE8  
                           u2491 177A                             u2660 1888  
                           u4180 0DD2                             u2590 1816  
                           u2815 2040                             u4191 08EA  
                           u2850 20CC                             u3458 2AEC  
                           u3730 141E                             u3740 1420  
                           u2791 200E                             u4375 286C  
                           u2880 2FEC                             u3930 1CF0  
                           u4555 3552                             u4556 3554  
                           _RCIF 007CF5                             u2888 2FF0  
                           u3980 32B2                             i2l53 2EAE  
                           i2l90 36B8                             i2l84 3688  
                           i2l86 369A                             i2l88 36A8  
         i2wait_in_ms@time_in_ms 0046                     config_ccp1@a 0175  
                   config_ccp2@a 0175                     config_ccp1@i 0198  
                   config_ccp1@j 01AA                     config_ccp2@i 0198  
                   config_ccp2@j 01AA                     config_ccp1@n 01A8  
                   config_ccp2@n 01A8                     config_ccp1@w 01A4  
                   config_ccp1@x 01A2                     config_ccp1@y 01A6  
                   config_ccp1@z 019A                     config_ccp2@w 01A4  
                   config_ccp2@x 01A2                     config_ccp2@y 01A6  
                   config_ccp2@z 019A                             _pr2g 01E9  
                           _main 2EFA                     ___ftpack@arg 0100  
                   i2___altoft@c 0046                     ___ftpack@exp 0103  
                           _test 01EE                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 005F  
                           exp@x 0157                             log@x 0142  
                   i2___ftadd@f1 000D                     i2___ftadd@f2 0010  
                   i2___ftge@ff1 0001                     i2___ftge@ff2 0004  
                           pow@x 0160                             pow@y 0163  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                  __end_ofi2_floor 2762  
                __end_ofi2_ldexp 2C3A                     i2___ftdiv@f1 0028  
                   i2___ftdiv@f2 002B                     i2___ftdiv@f3 0032  
                __end_ofi2_frexp 3150                     i2___ftneg@f1 0001  
                   i2___awtoft@c 0009                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0119                     i2___ftmul@f1 0019  
                   i2___ftmul@f2 001C                     ___param_bank 000000  
                   ___ftmul@sign 011A                     i2___ftsub@f1 0019  
                   i2___ftsub@f2 001C                     i2___fttol@f1 0037  
            i2_EstacionaminetoM1 3374                     ___fttol@exp1 0144  
                   i2___lltoft@c 0009                            ??_exp 015A  
                          ??_log 0145                     ___fttol@lval 0140  
          __size_ofi2_carroGirar 005E                            ??_pow 0166  
          __size_ofi2_carroMatar 0022                    __CFG_PLLDIV$2 000000  
                          ?_main 0001                  __end_of___awdiv 32F0  
                __end_of___ftadd 1916                  __end_of___ftdiv 24BA  
                __end_of___ftneg 38E4                  __end_of___ftmul 21EA  
                ___awdiv@divisor 0102                  __end_of___ftsub 3770  
                __end_of___fttol 20F4                            _INT0F 007F91  
                          i2l200 0EC6                            i2l202 0F34  
                          i2l204 0FF6                            i2l141 2A60  
                          i2l144 2A98                            i2l145 2AA0  
                          i2l402 37FE                            i2l500 2306  
                          i2l421 2DCE                            i2l422 2DC4  
                          i2l502 232E                            i2l190 1206  
                          i2l511 3920                            i2l503 2360  
                          i2l424 2E02                            i2l504 2370  
                          i2l192 12C8                            i2l425 2DEC  
                          i2l521 2216                            i2l506 2388  
                          i2l530 22A4                            i2l427 2E2A  
                          i2l507 2398                            i2l291 3498  
                          i2l523 228C                            i2l187 11E0  
                          i2l428 2E20                            i2l452 1968  
                          i2l292 348C                            i2l532 22CC  
                          i2l524 227C                            i2l188 1198  
                          i2l381 3352                            i2l461 19F8  
                          i2l517 3786                            i2l382 335C  
                          i2l374 3304                            i2l383 336A  
                          i2l375 3314                            i2l199 0F0E  
                          i2l480 1A9C                            i2l456 1992  
                          i2l800 1594                            i2l640 1B0C  
                          i2l377 3332                            i2l529 22B0  
                          i2l641 1AFC                            i2l378 332A  
                          i2l466 19EE                            i2l802 15CC  
                          i2l475 1A2C                            i2l467 19E4  
                          i2l811 26C0                            i2l803 1604  
                          i2l643 1B24                            i2l476 1A22  
                          i2l820 30E8                            i2l812 26B2  
                          i2l804 1634                            i2l644 1BAE  
                          i2l485 24E2                            i2l493 3180  
                          i2l805 175A                            i2l645 1B8C  
                          i2l478 1A50                            i2l494 31B0  
                          i2l814 26DA                            i2l806 1730  
                          i2l646 1C34                            i2l487 250A  
                          i2l479 1A6C                            i2l815 2754  
                          i2l488 2548                            i2l824 2B8C  
                          i2l489 256E                            i2l578 36E4  
                          i2l850 29CC                            i2l826 2BD2  
                          i2l842 1EFA                            i2l579 36D8  
                          i2l851 2950                            i2l828 2C02  
                          i2l844 1F1C                            i2l829 2BF6  
                ___awdiv@counter 0104                            _TMR0L 000FD6  
                          _PORTA 000F80                            _TRISD 000F95  
                          i2_exp 157C                            i2_log 1EDE  
                          i2_pow 1AC2                      i2_eval_poly 2910  
                   ___lltoft@exp 0110                   __CFG_FCMEN$OFF 000000  
           ?i2_EstacionaminetoM1 0001                    ___awtoft@sign 010B  
                          _floor 25A0                            _ldexp 2AAE  
                          _frexp 2F9A                            _errno 01EC  
                  ___ftpack@sign 0104                            pclath 000FFA  
                          tablat 000FF5                 __end_ofi2___ftge 31E0  
                          pow@yi 016D                 __end_ofi2___wmul 390A  
                          plusw1 000FE3                            plusw2 000FDB  
                          status 000FD8                  ??_config_timer2 0110  
                          wtemp6 0060                    i2___ftdiv@exp 0035  
             __size_ofi2___awdiv 0084               __size_ofi2___ftadd 01AC  
                   i2_carroGirar 3674               __size_ofi2___ftdiv 00E6  
                   i2_carroMatar 392E                      exp@exponent 015D  
             __size_ofi2___ftneg 0024               __size_ofi2___ftmul 00F4  
             __size_ofi2___ftsub 0040               __size_ofi2___fttol 00F4  
                    ldexp@newexp 0145                  __initialization 3972  
                    log@exponent 0145                     __end_of_main 2F9A  
                  i2___ftmul@exp 0022                      ?i2___altoft 0046  
                    ?i2___awtoft 0009                      ?i2___ftpack 0001  
                    ?i2___lltoft 0009                           ??_main 01AD  
                  ___fttol@sign1 013F                    __activetblptr 000002  
                         ?i2_exp 0058                           ?i2_log 0034  
                         ?i2_pow 0066            ??i2_EstacionaminetoM1 005F  
                         _ADCON0 000FC2                           ?_floor 014F  
                         ?_ldexp 0142                           ?_frexp 0100  
               __end_of___altoft 346A                           _CCPR1L 000FBE  
                         _CCPR2L 000FBB                           _T08BIT 007EAE  
               ___awdiv@dividend 0100               i2config_ccp1@duty1 005B  
                         _ADCint 0008                 __end_of___awtoft 37EA  
               __end_of___ftpack 2DA6                 __end_of___lbtoft 384A  
             i2config_ccp2@duty2 005B     __end_of_carroAvanzarEspecial 38BE  
               __end_of___lltoft 3674                           _INT0IF 007F91  
                         i2l4013 10A4                           i2l4115 2AA0  
               ??_coinfig_ccpcon 014B                           i2l2641 31DC  
                         i2l3567 1730                           i2l3903 1198  
                         i2l3913 11F6                           i2l3931 12B8  
                         i2l3929 12B0                           u321_41 21FA  
                         i2l3949 1376                           i2l3967 0EC6  
                      ??i2_floor 0053                           i2l3993 0FDE  
                         i2l3977 0F24                           i2l3995 0FE6  
                      ??i2_ldexp 0039                           u315_41 22EE  
                      ??i2_frexp 0006                           u317_41 2316  
                         u350_41 24CA                           u352_41 24F2  
                         u291_41 1926                           u292_41 193A  
                         _TMR0IF 007F92                           _TMR0ON 007EAF  
                    i2frexp@eptr 0004                           i2exp@x 0058  
                         i2log@x 0034                           i2pow@x 0066  
                         i2pow@y 0069             __size_of_configBoard 0060  
        ?i2_carroAvanzarEspecial 0001               config_timer2@onoff 010C  
             config_timer2@presc 010E                           ___ftge 302E  
           __size_of_config_ccp1 02D6             __size_of_config_ccp2 02D6  
                         ___wmul 384A                        ??___awdiv 0104  
                      ??___ftadd 0130                        ??___ftdiv 0121  
                      ??___ftneg 0103                        ??___ftmul 0112  
                      ??___ftsub 013C                        ??___fttol 013A  
                 i2___altoft@exp 004E                           clear_0 3978  
               ___awdiv@quotient 0106                           _prescg 01EF  
                 i2___awdiv@sign 0006                           floor@i 0152  
                         floor@x 014F            ___ftmul@f3_as_product 0116  
              __end_ofi2___awdiv 3374                __end_ofi2___ftadd 1AC2  
              __end_ofi2___ftdiv 25A0                   i2___ftadd@exp1 0018  
                 i2___ftadd@exp2 0017                __end_ofi2___ftneg 392E  
              __end_ofi2___ftmul 23D2                __end_ofi2___ftsub 37B0  
          __size_ofi2_wait_in_ms 00CC                __end_ofi2___fttol 22DE  
                 i2___ftadd@sign 0016                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8           __size_ofi2_config_ccp1 02D2  
         __size_ofi2_config_ccp2 02D2                 __end_ofexp@coeff 081F  
              i2wait_in_ms@count 004C                 __end_oflog@coeff 083A  
                 i2___ftdiv@cntr 0031                       __accesstop 0060  
        __end_of__initialization 397E                       ___altoft@c 0145  
            __size_ofi2___altoft 0078                   i2___ftdiv@sign 0036  
                     ___ftadd@f1 012A                       ___ftadd@f2 012D  
            __size_ofi2___awtoft 0038              __size_ofi2___ftpack 00AE  
                     ___ftge@ff1 0100                       ___ftge@ff2 0103  
            __size_ofi2___lltoft 005C                     eval_poly@res 013F  
                  ___rparam_used 000001                       ___ftdiv@f1 011B  
                     ___ftdiv@f2 011E                       ___ftdiv@f3 0125  
                 i2config_ccp1@a 0077                   i2config_ccp2@a 0077  
 __end_ofi2_carroAvanzarEspecial 3972                   i2config_ccp1@i 009A  
                 i2config_ccp1@j 00AC                   i2config_ccp2@i 009A  
                 i2config_ccp2@j 00AC                   i2config_ccp1@n 00AA  
                 i2config_ccp2@n 00AA                   i2config_ccp1@w 00A6  
                 i2config_ccp1@x 00A4                   i2config_ccp1@y 00A8  
                 i2config_ccp1@z 009C                   i2config_ccp2@w 00A6  
                 i2config_ccp2@x 00A4                   i2config_ccp2@y 00A8  
                 i2config_ccp2@z 009C                       ___ftneg@f1 0100  
                     ___awtoft@c 0108                   i2___ftpack@arg 0001  
                 i2___ftpack@exp 0004                       ___lbtoft@c 010B  
                  __end_ofi2_exp 1768                    __end_ofi2_log 1FFC  
                     ___ftmul@f1 010C                       ___ftmul@f2 010F  
                  __end_ofi2_pow 1C42                       ___ftsub@f1 0136  
                     ___ftsub@f2 0139                       ___fttol@f1 0136  
                 __pcstackCOMRAM 0001                       ___lltoft@c 0108  
                  __end_of_floor 2684                    __end_of_ldexp 2B74  
                  __end_of_frexp 302E                   i2___ftmul@cntr 0026  
                 i2___ftmul@sign 0027                     i2_wait_in_ms 29E2  
                 i2___fttol@exp1 0045                   i2___fttol@lval 0041  
                      ?i2___ftge 0001                        ?i2___wmul 0001  
                        ??i2_exp 005B                          ??i2_log 0037  
                        ??i2_pow 005B                          ??_floor 0152  
                        ??_ldexp 0147                          ??_frexp 0105  
                 i2___lltoft@exp 0011                          ?_ADCint 0001  
             coinfig_ccpcon@freq 0148               coinfig_ccpcon@fosc 0145  
               _config_ccp1$1657 0193                 _config_ccp1$1658 019C  
               _config_ccp1$1659 019F                 _config_ccp2$1660 0193  
               _config_ccp2$1661 019C                 _config_ccp2$1662 019F  
                     __pbssBANK1 01AD               __size_of_eval_poly 00DC  
                     _carroGirar 35B6                       _carroMatar 3872  
                  i2_config_ccp1 10BA                    i2_config_ccp2 0DE8  
                        ?___ftge 0100                          ?___wmul 0100  
                      ?___altoft 0145             _carroAvanzarEspecial 3898  
                      ?___awtoft 0108                        ?___ftpack 0100  
                      ?___lbtoft 0108                        ?___lltoft 0108  
                     ??i2___ftge 0007              i2config_ccp1@valreg 0098  
                     ??i2___wmul 0005              i2config_ccp2@valreg 0098  
                   i2floor@expon 0053                     ?i2_eval_poly 0028  
                   i2eval_poly@d 002B                     i2eval_poly@n 002D  
                   i2eval_poly@x 0028                     i2ldexp@value 0034  
              _EstacionaminetoM1 31E0                  __size_of_ADCint 2EF2  
             ?_EstacionaminetoM1 0001                          i2_floor 2684  
                        i2_ldexp 2B74                          i2_frexp 30C0  
                   i2frexp@value 0001                          i2pow@yi 0073  
            ??_EstacionaminetoM1 01AD                          __Hparam 0000  
                 ?i2_config_ccp1 005B                   ?i2_config_ccp2 005B  
                        __Lparam 0000                  __size_of___ftge 0092  
                        ___awdiv 326A                          ___ftadd 1768  
                        ___ftdiv 23D2                          ___ftneg 38BE  
                __size_of___wmul 0028                          ___ftmul 20F4  
                        ___ftsub 372E                          ___fttol 1FFC  
                   __psmallconst 0800            ?_carroAvanzarEspecial 0001  
                   ??i2___altoft 004A                       ??___altoft 0149  
                        __pcinit 3972                     ??i2___awtoft 000C  
                   ??i2___ftpack 0006                       ??___awtoft 010B  
                     ??___ftpack 0105                       ??___lbtoft 010B  
              __end_of_eval_poly 283E          i2___ftmul@f3_as_product 0023  
                        __ramtop 0800                     ??i2___lltoft 000D  
                     ??___lltoft 010C                          __ptext0 2EFA  
                        __ptext1 34E2                          __ptext2 3556  
                        __ptext3 2C3A                          __ptext4 3822  
                        __ptext5 31E0                          __ptext6 283E  
                        __ptext7 3872                          __ptext8 35B6  
                        __ptext9 3898                        _T0CONbits 000FD5  
                      _T2CONbits 000FCA                     __size_of_exp 01F0  
                   __size_of_log 0122                     __size_of_pow 017A  
                i2___altoft@sign 004F        __end_of_EstacionaminetoM1 326A  
                 __pintcode_body 2E54             end_of_initialization 397E  
                        exp@sign 015F                    __Lmediumconst 0000  
           wait_in_ms@time_in_ms 0145                          int_func 2E54  
            i2___wmul@multiplier 0001               __end_ofi2___altoft 34E2  
                    ?_carroGirar 0001                      ?_carroMatar 0001  
             __end_ofi2___awtoft 3822               __end_ofi2___ftpack 2E54  
          __end_of_config_timer2 3556               __end_ofi2___lltoft 372E  
                        pow@sign 016C                   i2eval_poly@res 0031  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                       _wait_in_ms 283E  
    __end_ofi2_EstacionaminetoM1 33F0                        _PORTAbits 000F80  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISEbits 000F96  
                      i2___awdiv 32F0                        i2___ftadd 1916  
                      i2___ftdiv 24BA                        i2___ftneg 390A  
                      i2___ftmul 22DE                        i2___ftsub 3770  
                      i2___fttol 21EA                   __end_of_ADCint 2EFA  
                    _CCP1CONbits 000FBD                      ___ftdiv@exp 0128  
                  ??_configBoard 0100                      _CCP2CONbits 000FBA  
                i2___awtoft@sign 000C                  ??i2_config_ccp1 005D  
                ??i2_config_ccp2 005D               i2___awdiv@dividend 0001  
                  ??_config_ccp1 0173                    ??_config_ccp2 0173  
                i2___ftpack@sign 0005                      ___ftmul@exp 0115  
         ??_carroAvanzarEspecial 01AC                   __end_of___ftge 30C0  
                      i2exp@sign 0065                   __end_of___wmul 3872  
                     floor@expon 0155                 i2___wmul@product 0005  
            __size_of_carroGirar 0060              __size_of_carroMatar 0026  
            start_initialization 3972       __size_of_EstacionaminetoM1 008A  
              __size_ofi2___ftge 0090                        i2pow@sign 0072  
                     eval_poly@d 0139                       eval_poly@n 013B  
                     eval_poly@x 0136               i2___awdiv@quotient 0007  
              __size_ofi2___wmul 0026                       ldexp@value 0142  
                    __end_of_exp 157C                      __end_of_log 1EDE  
                    __end_of_pow 1DBC             __size_ofi2_eval_poly 00D2  
                i2___fttol@sign1 0040                       ?i2___awdiv 0001  
                     ?i2___ftadd 000D                  wait_in_ms@count 014B  
                     ?i2___ftdiv 0028                       ?i2___ftneg 0001  
                     ?i2___ftmul 0019                       ?i2___ftsub 0019  
                     ?i2___fttol 0037                         ??_ADCint 00AF  
                     frexp@value 0100               wait_in_ms@count_ms 014D  
          i2carroGirar@direccion 00AE                         ??___ftge 0106  
        __size_of_coinfig_ccpcon 00BC                         ??___wmul 0104  
            __end_of_configBoard 35B6                      ?_wait_in_ms 0145  
            __end_of_config_ccp1 0DE8              __end_of_config_ccp2 0B12  
              __size_of___altoft 007A                 i2wait_in_ms@flag 004A  
              __size_of___awtoft 003A                __size_of___ftpack 00B0  
              __size_of___lbtoft 0028                __size_of___lltoft 005E  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
            _coinfig_ccpcon$1656 014B                         ?i2_floor 0050  
                       ?i2_ldexp 0034                         ?i2_frexp 0001  
              config_ccp1@valreg 0196                    ?i2_carroGirar 0001  
                      __pnvBANK1 01EF                config_ccp2@valreg 0196  
                  ?i2_carroMatar 0001               i2_config_ccp1$1874 0095  
             i2_config_ccp1$1875 009E               i2_config_ccp1$1876 00A1  
             i2_config_ccp2$1877 0095               i2_config_ccp2$1878 009E  
             i2_config_ccp2$1879 00A1                        __pintcode 0008  
                       ?___awdiv 0100                         ?___ftadd 012A  
                       ?___ftdiv 011B                         ?___ftneg 0100  
                       ?___ftmul 010C                         ?___ftsub 0136  
                       ?___fttol 0136                      __smallconst 0800  
                      _eval_poly 2762                   __size_ofi2_exp 01EC  
                 __size_ofi2_log 011E                   __size_ofi2_pow 0180  
                    ??i2___awdiv 0005                      ??i2___ftadd 0013  
                 __size_of_floor 00E4                   __size_of_ldexp 00C6  
                    ??i2___ftdiv 002E                   __size_of_frexp 0094  
                    ??i2___ftneg 0004                      ??i2___ftmul 001F  
                    ??i2___ftsub 001F                      ??i2___fttol 003B  
       ??i2_carroAvanzarEspecial 005F              __size_of_wait_in_ms 00D2  
                 ___wmul@product 0104                         _LATAbits 000F89  
                 ??i2_carroGirar 005F                   ??i2_carroMatar 005F  
                       _LATEbits 000F8D                     ??_carroGirar 01AC  
                   ??_carroMatar 01AC                      _configBoard 3556  
                       _PIE1bits 000F9D                      _config_ccp1 0B12  
                    _config_ccp2 083C                         i2u301_40 19C2  
                       i2u240_40 2DB6                         i2u305_40 1A00  
                       i2u330_40 3110                         i2u323_40 2234  
                       i2u330_48 3112                         i2u411_40 1B72  
                       i2u323_45 222C                         i2u404_40 3336  
                       i2u244_40 2E34                         i2u308_40 1A34  
                       i2u430_40 1376                         i2u327_40 22B6  
                  i2exp@exponent 0063                         i2u431_41 0E92  
                       i2u432_40 0F1C                         i2u425_41 1164  
                       _PIR1bits 000F9E                         i2u362_40 2BAC  
                       i2u426_40 11EE                         i2u434_40 0FDE  
                       i2u450_45 2A0E                         i2u362_48 2BAE  
                       i2u428_40 12B0                         i2u436_40 10A4  
                       i2u453_40 2A8E                         i2u382_40 160C  
                       i2u295_40 195A                         i2u359_40 26CC  
                       i2u383_40 160E                         i2u298_40 1984  
                  i2ldexp@newexp 0037                    i2log@exponent 0037  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
                     _ADCON2bits 000FC0                ___wmul@multiplier 0100  
                       i2___ftge 3150                         i2___wmul 38E4  
                     ?_eval_poly 0136                i2___awdiv@divisor 0003  
             __end_of_carroGirar 3616               __end_of_carroMatar 3898  
              i2___awdiv@counter 0005                         i2floor@i 0055  
                       i2floor@x 0050                      _INTCON2bits 000FF1  
               __size_ofi2_floor 00DE                 __size_ofi2_ldexp 00C6  
               __size_ofi2_frexp 0090                   wait_in_ms@flag 0149  
                      frexp@eptr 0103                         __Hrparam 0000  
                       __Lrparam 0000                   _coinfig_ccpcon 2C3A  
               config_ccp1@F3967 01CB                 config_ccp2@F3978 01AD  
            carroGirar@direccion 01AC                    ?i2_wait_in_ms 0046  
               __size_of___awdiv 0086                 __size_of___ftadd 01AE  
               __size_of___ftdiv 00E8                 __size_of___ftneg 0026  
          i2___wmul@multiplicand 0003                         ___altoft 33F0  
               __size_of___ftmul 00F6                 __size_of___ftsub 0042  
               __size_of___fttol 00F8                         ___awtoft 37B0  
                       ___ftpack 2CF6                         ___lbtoft 3822  
                       ___lltoft 3616                 config_ccp1@duty1 0171  
                       _exp$1665 015A                 config_ccp2@duty2 0171  
         __size_of_config_timer2 0074                         __ptext10 083C  
                       __ptext11 0B12                         __ptext20 33F0  
                       __ptext12 1C42                         __ptext21 2762  
                       __ptext13 1DBC                         __ptext30 2CF6  
                       __ptext22 384A                         __ptext14 138C  
                       __ptext31 326A                         __ptext23 20F4  
                       __ptext15 2AAE                         __ptext40 1AC2  
                       __ptext24 372E                         __ptext16 25A0  
                       __ptext41 1EDE                         __ptext33 3374  
                       __ptext25 1768                         __ptext17 2F9A  
                       __ptext50 38E4                         __ptext42 157C  
                       __ptext34 29E2                         __ptext26 38BE  
                       __ptext18 1FFC                         __ptext51 22DE  
                       __ptext43 2B74                         __ptext35 392E  
                       __ptext27 23D2                         __ptext19 302E  
                       __ptext52 3770                         __ptext44 2684  
                       __ptext36 3674                         __ptext28 37B0  
                       __ptext53 1916                         __ptext45 30C0  
                       __ptext37 3950                         __ptext29 3616  
                       __ptext54 390A                         __ptext46 21EA  
                       __ptext38 0DE8                         __ptext55 24BA  
                       __ptext47 3150                         __ptext39 10BA  
   __size_ofi2_EstacionaminetoM1 007C                         __ptext56 37EA  
                       __ptext48 346A                         __ptext57 36D2  
                       __ptext49 2910                         __ptext58 2DA6  
                       __ptext59 32F0                         _pow$1663 0166  
                       _pow$1664 0169  __size_ofi2_carroAvanzarEspecial 0022  
                  __size_of_main 00A0           __end_of_coinfig_ccpcon 2CF6  
          __end_ofi2_config_ccp1 138C            __end_ofi2_config_ccp2 10BA  
                       int$flags 005F                   ??i2_wait_in_ms 0048  
                   ??_wait_in_ms 0147    __size_of_carroAvanzarEspecial 0026  
          __CFG_CPUDIV$OSC1_PLL2 000000                         exp@coeff 0801  
                       log@coeff 081F             __end_ofi2_carroGirar 36D2  
           __end_ofi2_carroMatar 3950                    ??i2_eval_poly 002F  
                     _INTCONbits 000FF2                      ??_eval_poly 013D  
                       intlevel2 0000               __end_of_wait_in_ms 2910  
                ?_coinfig_ccpcon 0145                    _config_timer2 34E2  
         i2_carroAvanzarEspecial 3950              __end_ofi2_eval_poly 29E2  
             __CFG_FOSC$HSPLL_HS 000000                     ?_configBoard 0001  
           i2wait_in_ms@count_ms 004E                   ?_config_timer2 010C  
                   ?_config_ccp1 0171                     ?_config_ccp2 0171  
