

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 20:40:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTBbits	set	3969
    52  0000                     _TRISBbits	set	3987
    53  0000                     _TRISCbits	set	3988
    54  0000                     _PORTA	set	3968
    55  0000                     _TRISD	set	3989
    56  0000                     _PIR1bits	set	3998
    57  0000                     _PIE1bits	set	3997
    58  0000                     _TRISAbits	set	3986
    59  0000                     _ADCON2bits	set	4032
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON0	set	4034
    62  0000                     _ADCON1bits	set	4033
    63  0000                     _T0CONbits	set	4053
    64  0000                     _INTCONbits	set	4082
    65  0000                     _TMR0L	set	4054
    66  0000                     _TMR0IF	set	32658
    67  0000                     _TMR0ON	set	32431
    68  0000                     _RCIF	set	31989
    69  0000                     _T08BIT	set	32430
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  007BE0                     __pcinit:
    75                           	opt stack 0
    76  007BE0                     start_initialization:
    77                           	opt stack 0
    78  007BE0                     __initialization:
    79                           	opt stack 0
    80  007BE0                     end_of_initialization:
    81                           	opt stack 0
    82  007BE0                     __end_of__initialization:
    83                           	opt stack 0
    84  007BE0  0100               	movlb	0
    85  007BE2  EFF3  F03D         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMRAM
    88  000001                     __pcstackCOMRAM:
    89                           	opt stack 0
    90  000001                     ?___ftpack:
    91                           	opt stack 0
    92  000001                     ___ftpack@arg:
    93                           	opt stack 0
    94                           
    95                           ; 3 bytes @ 0x0
    96  000001                     	ds	3
    97  000004                     ___ftpack@exp:
    98                           	opt stack 0
    99                           
   100                           ; 1 bytes @ 0x3
   101  000004                     	ds	1
   102  000005                     ___ftpack@sign:
   103                           	opt stack 0
   104                           
   105                           ; 1 bytes @ 0x4
   106  000005                     	ds	1
   107  000006                     ??___ftpack:
   108                           
   109                           ; 1 bytes @ 0x5
   110  000006                     	ds	3
   111  000009                     ?___awtoft:
   112                           	opt stack 0
   113  000009                     ___awtoft@c:
   114                           	opt stack 0
   115                           
   116                           ; 2 bytes @ 0x8
   117  000009                     	ds	3
   118  00000C                     ___awtoft@sign:
   119                           	opt stack 0
   120                           
   121                           ; 1 bytes @ 0xB
   122  00000C                     	ds	1
   123  00000D                     ?___ftdiv:
   124                           	opt stack 0
   125  00000D                     ___ftdiv@f1:
   126                           	opt stack 0
   127                           
   128                           ; 3 bytes @ 0xC
   129  00000D                     	ds	3
   130  000010                     ___ftdiv@f2:
   131                           	opt stack 0
   132                           
   133                           ; 3 bytes @ 0xF
   134  000010                     	ds	3
   135  000013                     ??___ftdiv:
   136                           
   137                           ; 1 bytes @ 0x12
   138  000013                     	ds	3
   139  000016                     ___ftdiv@cntr:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x15
   143  000016                     	ds	1
   144  000017                     ___ftdiv@f3:
   145                           	opt stack 0
   146                           
   147                           ; 3 bytes @ 0x16
   148  000017                     	ds	3
   149  00001A                     ___ftdiv@exp:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x19
   153  00001A                     	ds	1
   154  00001B                     ___ftdiv@sign:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x1A
   158  00001B                     	ds	1
   159  00001C                     ?___fttol:
   160                           	opt stack 0
   161  00001C                     ___fttol@f1:
   162                           	opt stack 0
   163                           
   164                           ; 3 bytes @ 0x1B
   165  00001C                     	ds	4
   166  000020                     ??___fttol:
   167                           
   168                           ; 1 bytes @ 0x1F
   169  000020                     	ds	5
   170  000025                     ___fttol@sign1:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x24
   174  000025                     	ds	1
   175  000026                     ___fttol@lval:
   176                           	opt stack 0
   177                           
   178                           ; 4 bytes @ 0x25
   179  000026                     	ds	4
   180  00002A                     ___fttol@exp1:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x29
   184  00002A                     	ds	1
   185  00002B                     wait_in_ms@time_in_ms:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x2A
   189  00002B                     	ds	2
   190  00002D                     ??_wait_in_ms:
   191                           
   192                           ; 1 bytes @ 0x2C
   193  00002D                     	ds	2
   194  00002F                     wait_in_ms@flag:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x2E
   198  00002F                     	ds	2
   199  000031                     wait_in_ms@count:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x30
   203  000031                     	ds	2
   204  000033                     wait_in_ms@count_ms:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x32
   208  000033                     	ds	2
   209  000035                     
   210                           ; 1 bytes @ 0x34
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 29 in file "PruebaSensor.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called:    3
   236 ;; This function calls:
   237 ;;		_configBoard
   238 ;;		_wait_in_ms
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  007BE6                     __ptext0:
   246                           	opt stack 0
   247  007BE6                     _main:
   248                           	opt stack 28
   249                           
   250                           ;PruebaSensor.c: 31: configBoard();
   251                           
   252                           ;incstack = 0
   253  007BE6  EC26  F03E         	call	_configBoard	;wreg free
   254                           
   255                           ;PruebaSensor.c: 32: ADCON1bits.PCFG = 0b1111;
   256  007BEA  80C1               	bsf	4033,0,c	;volatile
   257  007BEC  82C1               	bsf	4033,1,c	;volatile
   258  007BEE  84C1               	bsf	4033,2,c	;volatile
   259  007BF0  86C1               	bsf	4033,3,c	;volatile
   260                           
   261                           ;PruebaSensor.c: 36: TRISCbits.RC2=0;
   262  007BF2  9494               	bcf	3988,2,c	;volatile
   263                           
   264                           ;PruebaSensor.c: 37: TRISBbits.RB4=0;
   265  007BF4  9893               	bcf	3987,4,c	;volatile
   266  007BF6                     
   267                           ;PruebaSensor.c: 48: PORTBbits.RB4=1;
   268  007BF6  8881               	bsf	3969,4,c	;volatile
   269                           
   270                           ;PruebaSensor.c: 49: wait_in_ms(100);
   271  007BF8  0E00               	movlw	0
   272  007BFA  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   273  007BFC  0E64               	movlw	100
   274  007BFE  6E2B               	movwf	wait_in_ms@time_in_ms,c
   275  007C00  ECAD  F03E         	call	_wait_in_ms	;wreg free
   276                           
   277                           ;PruebaSensor.c: 50: PORTBbits.RB4=0;
   278  007C04  9881               	bcf	3969,4,c	;volatile
   279                           
   280                           ;PruebaSensor.c: 51: wait_in_ms(50);
   281  007C06  0E00               	movlw	0
   282  007C08  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   283  007C0A  0E32               	movlw	50
   284  007C0C  6E2B               	movwf	wait_in_ms@time_in_ms,c
   285  007C0E  ECAD  F03E         	call	_wait_in_ms	;wreg free
   286  007C12  D7F1               	goto	l70
   287  007C14                     __end_of_main:
   288                           	opt stack 0
   289                           
   290 ;; *************** function _wait_in_ms *****************
   291 ;; Defined at:
   292 ;;		line 80 in file "config.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;  time_in_ms      2   42[COMRAM] int 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  count_ms        2   50[COMRAM] unsigned int 
   297 ;;  count           2   48[COMRAM] unsigned int 
   298 ;;  flag            2   46[COMRAM] unsigned int 
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   308 ;;      Params:         2       0       0       0       0       0       0       0       0
   309 ;;      Locals:         6       0       0       0       0       0       0       0       0
   310 ;;      Temps:          2       0       0       0       0       0       0       0       0
   311 ;;      Totals:        10       0       0       0       0       0       0       0       0
   312 ;;Total ram usage:       10 bytes
   313 ;; Hardware stack levels used:    1
   314 ;; Hardware stack levels required when called:    2
   315 ;; This function calls:
   316 ;;		___awtoft
   317 ;;		___ftdiv
   318 ;;		___fttol
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text1
   325  007D5A                     __ptext1:
   326                           	opt stack 0
   327  007D5A                     _wait_in_ms:
   328                           	opt stack 28
   329                           
   330                           ;config.c: 81: unsigned int count = 0;
   331                           
   332                           ;incstack = 0
   333  007D5A  0E00               	movlw	0
   334  007D5C  6E32               	movwf	wait_in_ms@count+1,c
   335  007D5E  0E00               	movlw	0
   336  007D60  6E31               	movwf	wait_in_ms@count,c
   337                           
   338                           ;config.c: 82: unsigned int count_ms = 0;
   339  007D62  0E00               	movlw	0
   340  007D64  6E34               	movwf	wait_in_ms@count_ms+1,c
   341  007D66  0E00               	movlw	0
   342  007D68  6E33               	movwf	wait_in_ms@count_ms,c
   343                           
   344                           ;config.c: 83: unsigned int flag = 0;
   345  007D6A  0E00               	movlw	0
   346  007D6C  6E30               	movwf	wait_in_ms@flag+1,c
   347  007D6E  0E00               	movlw	0
   348  007D70  6E2F               	movwf	wait_in_ms@flag,c
   349                           
   350                           ;config.c: 85: TMR0L = 131;
   351  007D72  0E83               	movlw	131
   352  007D74  6ED6               	movwf	4054,c	;volatile
   353                           
   354                           ;config.c: 88: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
   355  007D76  50D6               	movf	4054,w,c	;volatile
   356  007D78  6E2D               	movwf	??_wait_in_ms& (0+255),c
   357  007D7A  6A2E               	clrf	(??_wait_in_ms+1)& (0+255),c
   358  007D7C  1E2D               	comf	??_wait_in_ms,f,c
   359  007D7E  1E2E               	comf	??_wait_in_ms+1,f,c
   360  007D80  4A2D               	infsnz	??_wait_in_ms,f,c
   361  007D82  2A2E               	incf	??_wait_in_ms+1,f,c
   362  007D84  0E05               	movlw	5
   363  007D86                     u515:
   364  007D86  90D8               	bcf	status,0,c
   365  007D88  362D               	rlcf	??_wait_in_ms,f,c
   366  007D8A  362E               	rlcf	??_wait_in_ms+1,f,c
   367  007D8C  2EE8               	decfsz	wreg,f,c
   368  007D8E  D7FB               	goto	u515
   369  007D90  0E00               	movlw	0
   370  007D92  242D               	addwf	??_wait_in_ms,w,c
   371  007D94  6E09               	movwf	___awtoft@c,c
   372  007D96  0E20               	movlw	32
   373  007D98  202E               	addwfc	??_wait_in_ms+1,w,c
   374  007D9A  6E0A               	movwf	___awtoft@c+1,c
   375  007D9C  EC0A  F03E         	call	___awtoft	;wreg free
   376  007DA0  C009  F010         	movff	?___awtoft,___ftdiv@f2
   377  007DA4  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
   378  007DA8  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
   379  007DAC  0E00               	movlw	0
   380  007DAE  6E0D               	movwf	___ftdiv@f1,c
   381  007DB0  0EFA               	movlw	250
   382  007DB2  6E0E               	movwf	___ftdiv@f1+1,c
   383  007DB4  0E45               	movlw	69
   384  007DB6  6E0F               	movwf	___ftdiv@f1+2,c
   385  007DB8  EC13  F03F         	call	___ftdiv	;wreg free
   386  007DBC  C00D  F01C         	movff	?___ftdiv,___fttol@f1
   387  007DC0  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
   388  007DC4  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
   389  007DC8  EC86  F03F         	call	___fttol	;wreg free
   390  007DCC  C01C  F033         	movff	?___fttol,wait_in_ms@count_ms
   391  007DD0  C01D  F034         	movff	?___fttol+1,wait_in_ms@count_ms+1
   392                           
   393                           ;config.c: 90: TMR0ON = 1;
   394  007DD4  8ED5               	bsf	4053,7,c	;volatile
   395                           
   396                           ;config.c: 92: while (count < count_ms){
   397  007DD6  D020               	goto	l45
   398  007DD8                     l41:
   399                           
   400                           ;config.c: 93: if(TMR0IF == 1){
   401  007DD8  A4F2               	btfss	intcon,2,c	;volatile
   402  007DDA  D01E               	goto	l45
   403                           
   404                           ;config.c: 94: TMR0IF = 0;
   405  007DDC  94F2               	bcf	intcon,2,c	;volatile
   406                           
   407                           ;config.c: 95: TMR0L = 131;
   408  007DDE  0E83               	movlw	131
   409  007DE0  6ED6               	movwf	4054,c	;volatile
   410                           
   411                           ;config.c: 96: count ++;
   412  007DE2  4A31               	infsnz	wait_in_ms@count,f,c
   413  007DE4  2A32               	incf	wait_in_ms@count+1,f,c
   414                           
   415                           ;config.c: 97: if (count == count_ms){
   416  007DE6  5033               	movf	wait_in_ms@count_ms,w,c
   417  007DE8  1831               	xorwf	wait_in_ms@count,w,c
   418  007DEA  E116               	bnz	l1071
   419  007DEC  5034               	movf	wait_in_ms@count_ms+1,w,c
   420  007DEE  1832               	xorwf	wait_in_ms@count+1,w,c
   421  007DF0  A4D8               	btfss	status,2,c
   422  007DF2  D012               	goto	l45
   423                           
   424                           ;config.c: 98: flag++;
   425  007DF4  4A2F               	infsnz	wait_in_ms@flag,f,c
   426  007DF6  2A30               	incf	wait_in_ms@flag+1,f,c
   427                           
   428                           ;config.c: 99: if (flag != time_in_ms){
   429  007DF8  502F               	movf	wait_in_ms@flag,w,c
   430  007DFA  182B               	xorwf	wait_in_ms@time_in_ms,w,c
   431  007DFC  E104               	bnz	u540
   432  007DFE  5030               	movf	wait_in_ms@flag+1,w,c
   433  007E00  182C               	xorwf	wait_in_ms@time_in_ms+1,w,c
   434  007E02  B4D8               	btfsc	status,2,c
   435  007E04  D005               	goto	l44
   436  007E06                     u540:
   437                           
   438                           ;config.c: 100: count = 0;
   439  007E06  0E00               	movlw	0
   440  007E08  6E32               	movwf	wait_in_ms@count+1,c
   441  007E0A  0E00               	movlw	0
   442  007E0C  6E31               	movwf	wait_in_ms@count,c
   443                           
   444                           ;config.c: 101: }
   445  007E0E  D004               	goto	l45
   446  007E10                     l44:
   447                           
   448                           ;config.c: 102: else{
   449                           ;config.c: 103: count = count_ms;
   450  007E10  C033  F031         	movff	wait_in_ms@count_ms,wait_in_ms@count
   451  007E14  C034  F032         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
   452  007E18                     l45:
   453  007E18                     l1071:
   454  007E18  5033               	movf	wait_in_ms@count_ms,w,c
   455  007E1A  5C31               	subwf	wait_in_ms@count,w,c
   456  007E1C  5034               	movf	wait_in_ms@count_ms+1,w,c
   457  007E1E  5832               	subwfb	wait_in_ms@count+1,w,c
   458  007E20  B0D8               	btfsc	status,0,c
   459  007E22  0012               	return	
   460  007E24  D7D9               	goto	l41
   461  007E26                     __end_of_wait_in_ms:
   462                           	opt stack 0
   463                           intcon	equ	0xFF2
   464                           wreg	equ	0xFE8
   465                           status	equ	0xFD8
   466                           
   467 ;; *************** function ___fttol *****************
   468 ;; Defined at:
   469 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;  f1              3   27[COMRAM] float 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  lval            4   37[COMRAM] unsigned long 
   474 ;;  exp1            1   41[COMRAM] unsigned char 
   475 ;;  sign1           1   36[COMRAM] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  4   27[COMRAM] long 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   485 ;;      Params:         4       0       0       0       0       0       0       0       0
   486 ;;      Locals:         6       0       0       0       0       0       0       0       0
   487 ;;      Temps:          5       0       0       0       0       0       0       0       0
   488 ;;      Totals:        15       0       0       0       0       0       0       0       0
   489 ;;Total ram usage:       15 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_wait_in_ms
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text2
   499  007F0C                     __ptext2:
   500                           	opt stack 0
   501  007F0C                     ___fttol:
   502                           	opt stack 29
   503                           
   504                           ;incstack = 0
   505  007F0C  C01E  F020         	movff	___fttol@f1+2,??___fttol
   506  007F10  6A21               	clrf	(??___fttol+1)& (0+255),c
   507  007F12  6A22               	clrf	(??___fttol+2)& (0+255),c
   508  007F14  341D               	rlcf	___fttol@f1+1,w,c
   509  007F16  3620               	rlcf	??___fttol& (0+255),f,c
   510  007F18  E301               	bnc	u431
   511  007F1A  8021               	bsf	(??___fttol+1)& (0+255),0,c
   512  007F1C                     u431:
   513  007F1C  5020               	movf	??___fttol,w,c
   514  007F1E  6E2A               	movwf	___fttol@exp1,c
   515  007F20  502A               	movf	___fttol@exp1,w,c
   516  007F22  A4D8               	btfss	status,2,c
   517  007F24  D009               	goto	l388
   518  007F26  0E00               	movlw	0
   519  007F28  6E1C               	movwf	?___fttol,c
   520  007F2A  0E00               	movlw	0
   521  007F2C  6E1D               	movwf	?___fttol+1,c
   522  007F2E  0E00               	movlw	0
   523  007F30  6E1E               	movwf	?___fttol+2,c
   524  007F32  0E00               	movlw	0
   525  007F34  6E1F               	movwf	?___fttol+3,c
   526  007F36  0012               	return	
   527  007F38                     l388:
   528  007F38  0E17               	movlw	23
   529  007F3A  6E20               	movwf	??___fttol& (0+255),c
   530  007F3C  C01C  F021         	movff	___fttol@f1,??___fttol+1
   531  007F40  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
   532  007F44  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
   533  007F48  2820               	incf	??___fttol,w,c
   534  007F4A  6E24               	movwf	(??___fttol+4)& (0+255),c
   535  007F4C  D004               	goto	u450
   536  007F4E                     u455:
   537  007F4E  90D8               	bcf	status,0,c
   538  007F50  3223               	rrcf	??___fttol+3,f,c
   539  007F52  3222               	rrcf	??___fttol+2,f,c
   540  007F54  3221               	rrcf	??___fttol+1,f,c
   541  007F56                     u450:
   542  007F56  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
   543  007F58  D7FA               	goto	u455
   544  007F5A  5021               	movf	??___fttol+1,w,c
   545  007F5C  6E25               	movwf	___fttol@sign1,c
   546  007F5E  8E1D               	bsf	___fttol@f1+1,7,c
   547  007F60  0EFF               	movlw	255
   548  007F62  161C               	andwf	___fttol@f1,f,c
   549  007F64  0EFF               	movlw	255
   550  007F66  161D               	andwf	___fttol@f1+1,f,c
   551  007F68  0E00               	movlw	0
   552  007F6A  161E               	andwf	___fttol@f1+2,f,c
   553  007F6C  501C               	movf	___fttol@f1,w,c
   554  007F6E  6E26               	movwf	___fttol@lval,c
   555  007F70  501D               	movf	___fttol@f1+1,w,c
   556  007F72  6E27               	movwf	___fttol@lval+1,c
   557  007F74  501E               	movf	___fttol@f1+2,w,c
   558  007F76  6E28               	movwf	___fttol@lval+2,c
   559  007F78  6A29               	clrf	___fttol@lval+3,c
   560  007F7A  0E8E               	movlw	142
   561  007F7C  5E2A               	subwf	___fttol@exp1,f,c
   562  007F7E  AE2A               	btfss	___fttol@exp1,7,c
   563  007F80  D016               	goto	l390
   564  007F82  502A               	movf	___fttol@exp1,w,c
   565  007F84  0A80               	xorlw	128
   566  007F86  0F8F               	addlw	143
   567  007F88  B0D8               	btfsc	status,0,c
   568  007F8A  D009               	goto	l391
   569  007F8C  0E00               	movlw	0
   570  007F8E  6E1C               	movwf	?___fttol,c
   571  007F90  0E00               	movlw	0
   572  007F92  6E1D               	movwf	?___fttol+1,c
   573  007F94  0E00               	movlw	0
   574  007F96  6E1E               	movwf	?___fttol+2,c
   575  007F98  0E00               	movlw	0
   576  007F9A  6E1F               	movwf	?___fttol+3,c
   577  007F9C  0012               	return	
   578  007F9E                     l391:
   579  007F9E  90D8               	bcf	status,0,c
   580  007FA0  3229               	rrcf	___fttol@lval+3,f,c
   581  007FA2  3228               	rrcf	___fttol@lval+2,f,c
   582  007FA4  3227               	rrcf	___fttol@lval+1,f,c
   583  007FA6  3226               	rrcf	___fttol@lval,f,c
   584  007FA8  3E2A               	incfsz	___fttol@exp1,f,c
   585  007FAA  D7F9               	goto	l391
   586  007FAC  D015               	goto	u490
   587  007FAE                     l390:
   588  007FAE  0E17               	movlw	23
   589  007FB0  642A               	cpfsgt	___fttol@exp1,c
   590  007FB2  D00F               	goto	l396
   591  007FB4  0E00               	movlw	0
   592  007FB6  6E1C               	movwf	?___fttol,c
   593  007FB8  0E00               	movlw	0
   594  007FBA  6E1D               	movwf	?___fttol+1,c
   595  007FBC  0E00               	movlw	0
   596  007FBE  6E1E               	movwf	?___fttol+2,c
   597  007FC0  0E00               	movlw	0
   598  007FC2  6E1F               	movwf	?___fttol+3,c
   599  007FC4  0012               	return	
   600  007FC6  90D8               	bcf	status,0,c
   601  007FC8  3626               	rlcf	___fttol@lval,f,c
   602  007FCA  3627               	rlcf	___fttol@lval+1,f,c
   603  007FCC  3628               	rlcf	___fttol@lval+2,f,c
   604  007FCE  3629               	rlcf	___fttol@lval+3,f,c
   605  007FD0  062A               	decf	___fttol@exp1,f,c
   606  007FD2                     l396:
   607  007FD2  502A               	movf	___fttol@exp1,w,c
   608  007FD4  A4D8               	btfss	status,2,c
   609  007FD6  D7F7               	goto	l397
   610  007FD8                     u490:
   611  007FD8  5025               	movf	___fttol@sign1,w,c
   612  007FDA  B4D8               	btfsc	status,2,c
   613  007FDC  D008               	goto	l399
   614  007FDE  1E29               	comf	___fttol@lval+3,f,c
   615  007FE0  1E28               	comf	___fttol@lval+2,f,c
   616  007FE2  1E27               	comf	___fttol@lval+1,f,c
   617  007FE4  6C26               	negf	___fttol@lval,c
   618  007FE6  0E00               	movlw	0
   619  007FE8  2227               	addwfc	___fttol@lval+1,f,c
   620  007FEA  2228               	addwfc	___fttol@lval+2,f,c
   621  007FEC  2229               	addwfc	___fttol@lval+3,f,c
   622  007FEE                     l399:
   623  007FEE  C026  F01C         	movff	___fttol@lval,?___fttol
   624  007FF2  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
   625  007FF6  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
   626  007FFA  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
   627  007FFE  0012               	return	
   628  008000                     __end_of___fttol:
   629                           	opt stack 0
   630                           intcon	equ	0xFF2
   631                           wreg	equ	0xFE8
   632                           status	equ	0xFD8
   633                           
   634 ;; *************** function ___ftdiv *****************
   635 ;; Defined at:
   636 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  f1              3   12[COMRAM] float 
   639 ;;  f2              3   15[COMRAM] float 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  f3              3   22[COMRAM] float 
   642 ;;  sign            1   26[COMRAM] unsigned char 
   643 ;;  exp             1   25[COMRAM] unsigned char 
   644 ;;  cntr            1   21[COMRAM] unsigned char 
   645 ;; Return value:  Size  Location     Type
   646 ;;                  3   12[COMRAM] float 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   654 ;;      Params:         6       0       0       0       0       0       0       0       0
   655 ;;      Locals:         6       0       0       0       0       0       0       0       0
   656 ;;      Temps:          3       0       0       0       0       0       0       0       0
   657 ;;      Totals:        15       0       0       0       0       0       0       0       0
   658 ;;Total ram usage:       15 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    1
   661 ;; This function calls:
   662 ;;		___ftpack
   663 ;; This function is called by:
   664 ;;		_wait_in_ms
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  007E26                     __ptext3:
   670                           	opt stack 0
   671  007E26                     ___ftdiv:
   672                           	opt stack 28
   673                           
   674                           ;incstack = 0
   675  007E26  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
   676  007E2A  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   677  007E2C  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   678  007E2E  340E               	rlcf	___ftdiv@f1+1,w,c
   679  007E30  3613               	rlcf	??___ftdiv& (0+255),f,c
   680  007E32  E301               	bnc	u371
   681  007E34  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   682  007E36                     u371:
   683  007E36  5013               	movf	??___ftdiv,w,c
   684  007E38  6E1A               	movwf	___ftdiv@exp,c
   685  007E3A  501A               	movf	___ftdiv@exp,w,c
   686  007E3C  A4D8               	btfss	status,2,c
   687  007E3E  D007               	goto	l352
   688  007E40  0E00               	movlw	0
   689  007E42  6E0D               	movwf	?___ftdiv,c
   690  007E44  0E00               	movlw	0
   691  007E46  6E0E               	movwf	?___ftdiv+1,c
   692  007E48  0E00               	movlw	0
   693  007E4A  6E0F               	movwf	?___ftdiv+2,c
   694  007E4C  0012               	return	
   695  007E4E                     l352:
   696  007E4E  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
   697  007E52  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   698  007E54  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   699  007E56  3411               	rlcf	___ftdiv@f2+1,w,c
   700  007E58  3613               	rlcf	??___ftdiv& (0+255),f,c
   701  007E5A  E301               	bnc	u391
   702  007E5C  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   703  007E5E                     u391:
   704  007E5E  5013               	movf	??___ftdiv,w,c
   705  007E60  6E1B               	movwf	___ftdiv@sign,c
   706  007E62  501B               	movf	___ftdiv@sign,w,c
   707  007E64  A4D8               	btfss	status,2,c
   708  007E66  D007               	goto	l354
   709  007E68  0E00               	movlw	0
   710  007E6A  6E0D               	movwf	?___ftdiv,c
   711  007E6C  0E00               	movlw	0
   712  007E6E  6E0E               	movwf	?___ftdiv+1,c
   713  007E70  0E00               	movlw	0
   714  007E72  6E0F               	movwf	?___ftdiv+2,c
   715  007E74  0012               	return	
   716  007E76                     l354:
   717  007E76  0E00               	movlw	0
   718  007E78  6E17               	movwf	___ftdiv@f3,c
   719  007E7A  0E00               	movlw	0
   720  007E7C  6E18               	movwf	___ftdiv@f3+1,c
   721  007E7E  0E00               	movlw	0
   722  007E80  6E19               	movwf	___ftdiv@f3+2,c
   723  007E82  501B               	movf	___ftdiv@sign,w,c
   724  007E84  0F89               	addlw	137
   725  007E86  5E1A               	subwf	___ftdiv@exp,f,c
   726  007E88  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
   727  007E8C  5012               	movf	___ftdiv@f2+2,w,c
   728  007E8E  1A1B               	xorwf	___ftdiv@sign,f,c
   729  007E90  0E80               	movlw	128
   730  007E92  161B               	andwf	___ftdiv@sign,f,c
   731  007E94  8E0E               	bsf	___ftdiv@f1+1,7,c
   732  007E96  0EFF               	movlw	255
   733  007E98  160D               	andwf	___ftdiv@f1,f,c
   734  007E9A  0EFF               	movlw	255
   735  007E9C  160E               	andwf	___ftdiv@f1+1,f,c
   736  007E9E  0E00               	movlw	0
   737  007EA0  160F               	andwf	___ftdiv@f1+2,f,c
   738  007EA2  8E11               	bsf	___ftdiv@f2+1,7,c
   739  007EA4  0EFF               	movlw	255
   740  007EA6  1610               	andwf	___ftdiv@f2,f,c
   741  007EA8  0EFF               	movlw	255
   742  007EAA  1611               	andwf	___ftdiv@f2+1,f,c
   743  007EAC  0E00               	movlw	0
   744  007EAE  1612               	andwf	___ftdiv@f2+2,f,c
   745  007EB0  0E18               	movlw	24
   746  007EB2  6E16               	movwf	___ftdiv@cntr,c
   747  007EB4  90D8               	bcf	status,0,c
   748  007EB6  3617               	rlcf	___ftdiv@f3,f,c
   749  007EB8  3618               	rlcf	___ftdiv@f3+1,f,c
   750  007EBA  3619               	rlcf	___ftdiv@f3+2,f,c
   751  007EBC  5010               	movf	___ftdiv@f2,w,c
   752  007EBE  5C0D               	subwf	___ftdiv@f1,w,c
   753  007EC0  5011               	movf	___ftdiv@f2+1,w,c
   754  007EC2  580E               	subwfb	___ftdiv@f1+1,w,c
   755  007EC4  5012               	movf	___ftdiv@f2+2,w,c
   756  007EC6  580F               	subwfb	___ftdiv@f1+2,w,c
   757  007EC8  A0D8               	btfss	status,0,c
   758  007ECA  D007               	goto	l356
   759  007ECC  5010               	movf	___ftdiv@f2,w,c
   760  007ECE  5E0D               	subwf	___ftdiv@f1,f,c
   761  007ED0  5011               	movf	___ftdiv@f2+1,w,c
   762  007ED2  5A0E               	subwfb	___ftdiv@f1+1,f,c
   763  007ED4  5012               	movf	___ftdiv@f2+2,w,c
   764  007ED6  5A0F               	subwfb	___ftdiv@f1+2,f,c
   765  007ED8  8017               	bsf	___ftdiv@f3,0,c
   766  007EDA                     l356:
   767  007EDA  90D8               	bcf	status,0,c
   768  007EDC  360D               	rlcf	___ftdiv@f1,f,c
   769  007EDE  360E               	rlcf	___ftdiv@f1+1,f,c
   770  007EE0  360F               	rlcf	___ftdiv@f1+2,f,c
   771  007EE2  2E16               	decfsz	___ftdiv@cntr,f,c
   772  007EE4  D7E7               	goto	l355
   773  007EE6  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
   774  007EEA  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   775  007EEE  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   776  007EF2  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
   777  007EF6  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
   778  007EFA  EC56  F03E         	call	___ftpack	;wreg free
   779  007EFE  C001  F00D         	movff	?___ftpack,?___ftdiv
   780  007F02  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
   781  007F06  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
   782  007F0A  0012               	return	
   783  007F0C                     __end_of___ftdiv:
   784                           	opt stack 0
   785                           intcon	equ	0xFF2
   786                           wreg	equ	0xFE8
   787                           status	equ	0xFD8
   788                           
   789 ;; *************** function ___awtoft *****************
   790 ;; Defined at:
   791 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  c               2    8[COMRAM] int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  sign            1   11[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  3    8[COMRAM] float 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         3       0       0       0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         4       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        4 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    1
   812 ;; This function calls:
   813 ;;		___ftpack
   814 ;; This function is called by:
   815 ;;		_wait_in_ms
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text4
   820  007C14                     __ptext4:
   821                           	opt stack 0
   822  007C14                     ___awtoft:
   823                           	opt stack 28
   824                           
   825                           ;incstack = 0
   826  007C14  0E00               	movlw	0
   827  007C16  6E0C               	movwf	___awtoft@sign,c
   828  007C18  AE0A               	btfss	___awtoft@c+1,7,c
   829  007C1A  D006               	goto	l269
   830  007C1C  6C09               	negf	___awtoft@c,c
   831  007C1E  1E0A               	comf	___awtoft@c+1,f,c
   832  007C20  B0D8               	btfsc	status,0,c
   833  007C22  2A0A               	incf	___awtoft@c+1,f,c
   834  007C24  0E01               	movlw	1
   835  007C26  6E0C               	movwf	___awtoft@sign,c
   836  007C28                     l269:
   837  007C28  C009  F001         	movff	___awtoft@c,___ftpack@arg
   838  007C2C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   839  007C30  6A03               	clrf	___ftpack@arg+2,c
   840  007C32  0E8E               	movlw	142
   841  007C34  6E04               	movwf	___ftpack@exp,c
   842  007C36  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   843  007C3A  EC56  F03E         	call	___ftpack	;wreg free
   844  007C3E  C001  F009         	movff	?___ftpack,?___awtoft
   845  007C42  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   846  007C46  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   847  007C4A  0012               	return	
   848  007C4C                     __end_of___awtoft:
   849                           	opt stack 0
   850                           intcon	equ	0xFF2
   851                           wreg	equ	0xFE8
   852                           status	equ	0xFD8
   853                           
   854 ;; *************** function ___ftpack *****************
   855 ;; Defined at:
   856 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  arg             3    0[COMRAM] unsigned um
   859 ;;  exp             1    3[COMRAM] unsigned char 
   860 ;;  sign            1    4[COMRAM] unsigned char 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  3    0[COMRAM] float 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   872 ;;      Params:         5       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          3       0       0       0       0       0       0       0       0
   875 ;;      Totals:         8       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        8 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		___awtoft
   882 ;;		___ftdiv
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text5
   887  007CAC                     __ptext5:
   888                           	opt stack 0
   889  007CAC                     ___ftpack:
   890                           	opt stack 28
   891                           
   892                           ;incstack = 0
   893  007CAC  5004               	movf	___ftpack@exp,w,c
   894  007CAE  B4D8               	btfsc	status,2,c
   895  007CB0  D005               	goto	u300
   896  007CB2  5001               	movf	___ftpack@arg,w,c
   897  007CB4  1002               	iorwf	___ftpack@arg+1,w,c
   898  007CB6  1003               	iorwf	___ftpack@arg+2,w,c
   899  007CB8  A4D8               	btfss	status,2,c
   900  007CBA  D00C               	goto	l288
   901  007CBC                     u300:
   902  007CBC  0E00               	movlw	0
   903  007CBE  6E01               	movwf	?___ftpack,c
   904  007CC0  0E00               	movlw	0
   905  007CC2  6E02               	movwf	?___ftpack+1,c
   906  007CC4  0E00               	movlw	0
   907  007CC6  6E03               	movwf	?___ftpack+2,c
   908  007CC8  0012               	return	
   909  007CCA  2A04               	incf	___ftpack@exp,f,c
   910  007CCC  90D8               	bcf	status,0,c
   911  007CCE  3203               	rrcf	___ftpack@arg+2,f,c
   912  007CD0  3202               	rrcf	___ftpack@arg+1,f,c
   913  007CD2  3201               	rrcf	___ftpack@arg,f,c
   914  007CD4                     l288:
   915  007CD4  0E00               	movlw	0
   916  007CD6  1401               	andwf	___ftpack@arg,w,c
   917  007CD8  6E06               	movwf	??___ftpack& (0+255),c
   918  007CDA  0E00               	movlw	0
   919  007CDC  1402               	andwf	___ftpack@arg+1,w,c
   920  007CDE  6E07               	movwf	(??___ftpack+1)& (0+255),c
   921  007CE0  0EFE               	movlw	254
   922  007CE2  1403               	andwf	___ftpack@arg+2,w,c
   923  007CE4  6E08               	movwf	(??___ftpack+2)& (0+255),c
   924  007CE6  5006               	movf	??___ftpack,w,c
   925  007CE8  1007               	iorwf	??___ftpack+1,w,c
   926  007CEA  1008               	iorwf	??___ftpack+2,w,c
   927  007CEC  B4D8               	btfsc	status,2,c
   928  007CEE  D00C               	goto	l291
   929  007CF0  D7EC               	goto	l289
   930  007CF2  2A04               	incf	___ftpack@exp,f,c
   931  007CF4  0E01               	movlw	1
   932  007CF6  2601               	addwf	___ftpack@arg,f,c
   933  007CF8  0E00               	movlw	0
   934  007CFA  2202               	addwfc	___ftpack@arg+1,f,c
   935  007CFC  0E00               	movlw	0
   936  007CFE  2203               	addwfc	___ftpack@arg+2,f,c
   937  007D00  90D8               	bcf	status,0,c
   938  007D02  3203               	rrcf	___ftpack@arg+2,f,c
   939  007D04  3202               	rrcf	___ftpack@arg+1,f,c
   940  007D06  3201               	rrcf	___ftpack@arg,f,c
   941  007D08                     l291:
   942  007D08  0E00               	movlw	0
   943  007D0A  1401               	andwf	___ftpack@arg,w,c
   944  007D0C  6E06               	movwf	??___ftpack& (0+255),c
   945  007D0E  0E00               	movlw	0
   946  007D10  1402               	andwf	___ftpack@arg+1,w,c
   947  007D12  6E07               	movwf	(??___ftpack+1)& (0+255),c
   948  007D14  0EFF               	movlw	255
   949  007D16  1403               	andwf	___ftpack@arg+2,w,c
   950  007D18  6E08               	movwf	(??___ftpack+2)& (0+255),c
   951  007D1A  5006               	movf	??___ftpack,w,c
   952  007D1C  1007               	iorwf	??___ftpack+1,w,c
   953  007D1E  1008               	iorwf	??___ftpack+2,w,c
   954  007D20  B4D8               	btfsc	status,2,c
   955  007D22  D006               	goto	l294
   956  007D24  D7E6               	goto	l292
   957  007D26  0604               	decf	___ftpack@exp,f,c
   958  007D28  90D8               	bcf	status,0,c
   959  007D2A  3601               	rlcf	___ftpack@arg,f,c
   960  007D2C  3602               	rlcf	___ftpack@arg+1,f,c
   961  007D2E  3603               	rlcf	___ftpack@arg+2,f,c
   962  007D30                     l294:
   963  007D30  BE02               	btfsc	___ftpack@arg+1,7,c
   964  007D32  D003               	goto	u340
   965  007D34  0E02               	movlw	2
   966  007D36  6004               	cpfslt	___ftpack@exp,c
   967  007D38  D7F6               	goto	l295
   968  007D3A                     u340:
   969  007D3A  A004               	btfss	___ftpack@exp,0,c
   970  007D3C  9E02               	bcf	___ftpack@arg+1,7,c
   971  007D3E  90D8               	bcf	status,0,c
   972  007D40  3204               	rrcf	___ftpack@exp,f,c
   973  007D42  5004               	movf	___ftpack@exp,w,c
   974  007D44  1203               	iorwf	___ftpack@arg+2,f,c
   975  007D46  5005               	movf	___ftpack@sign,w,c
   976  007D48  A4D8               	btfss	status,2,c
   977  007D4A  8E03               	bsf	___ftpack@arg+2,7,c
   978  007D4C  C001  F001         	movff	___ftpack@arg,?___ftpack
   979  007D50  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   980  007D54  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   981  007D58  0012               	return	
   982  007D5A                     __end_of___ftpack:
   983                           	opt stack 0
   984                           intcon	equ	0xFF2
   985                           wreg	equ	0xFE8
   986                           status	equ	0xFD8
   987                           
   988 ;; *************** function _configBoard *****************
   989 ;; Defined at:
   990 ;;		line 11 in file "config.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;		None
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1004 ;;      Params:         0       0       0       0       0       0       0       0       0
  1005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1007 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1008 ;;Total ram usage:        0 bytes
  1009 ;; Hardware stack levels used:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text6
  1018  007C4C                     __ptext6:
  1019                           	opt stack 0
  1020  007C4C                     _configBoard:
  1021                           	opt stack 30
  1022                           
  1023                           ;config.c: 15: INTCONbits.GIE = 0;
  1024                           
  1025                           ;incstack = 0
  1026  007C4C  9EF2               	bcf	intcon,7,c	;volatile
  1027                           
  1028                           ;config.c: 16: INTCONbits.PEIE = 0;
  1029  007C4E  9CF2               	bcf	intcon,6,c	;volatile
  1030                           
  1031                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1032  007C50  8ED5               	bsf	4053,7,c	;volatile
  1033                           
  1034                           ;config.c: 26: T08BIT = 1;
  1035  007C52  8CD5               	bsf	4053,6,c	;volatile
  1036                           
  1037                           ;config.c: 27: T0CONbits.T0CS = 0;
  1038  007C54  9AD5               	bcf	4053,5,c	;volatile
  1039                           
  1040                           ;config.c: 29: T0CONbits.PSA = 0;
  1041  007C56  96D5               	bcf	4053,3,c	;volatile
  1042                           
  1043                           ;config.c: 30: T0CONbits.T0PS = 100;
  1044  007C58  50D5               	movf	4053,w,c	;volatile
  1045  007C5A  0BF8               	andlw	-8
  1046  007C5C  0904               	iorlw	4
  1047  007C5E  6ED5               	movwf	4053,c	;volatile
  1048                           
  1049                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1050  007C60  94F2               	bcf	intcon,2,c	;volatile
  1051                           
  1052                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1053  007C62  80C1               	bsf	4033,0,c	;volatile
  1054  007C64  82C1               	bsf	4033,1,c	;volatile
  1055  007C66  84C1               	bsf	4033,2,c	;volatile
  1056  007C68  86C1               	bsf	4033,3,c	;volatile
  1057                           
  1058                           ;config.c: 44: ADCON0 = 0b00000111;
  1059  007C6A  0E07               	movlw	7
  1060  007C6C  6EC2               	movwf	4034,c	;volatile
  1061                           
  1062                           ;config.c: 47: ADCON0bits.ADON = 0;
  1063  007C6E  90C2               	bcf	4034,0,c	;volatile
  1064                           
  1065                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1066  007C70  8EC0               	bsf	4032,7,c	;volatile
  1067                           
  1068                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1069  007C72  50C0               	movf	4032,w,c	;volatile
  1070  007C74  0BF8               	andlw	-8
  1071  007C76  0906               	iorlw	6
  1072  007C78  6EC0               	movwf	4032,c	;volatile
  1073                           
  1074                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1075  007C7A  50C0               	movf	4032,w,c	;volatile
  1076  007C7C  0BC7               	andlw	-57
  1077  007C7E  0928               	iorlw	40
  1078  007C80  6EC0               	movwf	4032,c	;volatile
  1079                           
  1080                           ;config.c: 55: TRISAbits.RA1=1;
  1081  007C82  8292               	bsf	3986,1,c	;volatile
  1082                           
  1083                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1084  007C84  50C0               	movf	4032,w,c	;volatile
  1085  007C86  0BF8               	andlw	-8
  1086  007C88  0906               	iorlw	6
  1087  007C8A  6EC0               	movwf	4032,c	;volatile
  1088                           
  1089                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1090  007C8C  9AC1               	bcf	4033,5,c	;volatile
  1091                           
  1092                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1093  007C8E  98C1               	bcf	4033,4,c	;volatile
  1094                           
  1095                           ;config.c: 60: ADCON2bits.ADFM=1;
  1096  007C90  8EC0               	bsf	4032,7,c	;volatile
  1097                           
  1098                           ;config.c: 64: ADCON0bits.ADON=0;
  1099  007C92  90C2               	bcf	4034,0,c	;volatile
  1100                           
  1101                           ;config.c: 66: PIE1bits.ADIE=0;
  1102  007C94  9C9D               	bcf	3997,6,c	;volatile
  1103                           
  1104                           ;config.c: 67: PIR1bits.ADIF=0;
  1105  007C96  9C9E               	bcf	3998,6,c	;volatile
  1106                           
  1107                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1108  007C98  86C0               	bsf	4032,3,c	;volatile
  1109  007C9A  88C0               	bsf	4032,4,c	;volatile
  1110  007C9C  8AC0               	bsf	4032,5,c	;volatile
  1111                           
  1112                           ;config.c: 70: ADCON0bits.GO=1;
  1113  007C9E  82C2               	bsf	4034,1,c	;volatile
  1114                           
  1115                           ;config.c: 72: RCIF=0;
  1116  007CA0  9A9E               	bcf	3998,5,c	;volatile
  1117                           
  1118                           ;config.c: 75: TRISD=0;
  1119  007CA2  0E00               	movlw	0
  1120  007CA4  6E95               	movwf	3989,c	;volatile
  1121                           
  1122                           ;config.c: 76: PORTA=0;
  1123  007CA6  0E00               	movlw	0
  1124  007CA8  6E80               	movwf	3968,c	;volatile
  1125  007CAA  0012               	return		;funcret
  1126  007CAC                     __end_of_configBoard:
  1127                           	opt stack 0
  1128  0000                     intcon	equ	0xFF2
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           intcon	equ	0xFF2
  1132                           wreg	equ	0xFE8
  1133                           status	equ	0xFD8
  1134                           
  1135                           	psect	rparam
  1136  0000                     intcon	equ	0xFF2
  1137                           wreg	equ	0xFE8
  1138                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_wait_in_ms
    _wait_in_ms->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6143
                        _configBoard
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _wait_in_ms                                          10     8      2    6143
                                             42 COMRAM    10     8      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2946
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2555
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configBoard
   _wait_in_ms
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     34      34       1       54.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 20:40:14 2018

                     l41 7DD8                       l44 7E10                       l45 7E18  
                     l70 7BF6              __CFG_BORV$3 000000                      l352 7E4E  
                    l354 7E76                      l291 7D08                      l355 7EB4  
                    l292 7CF2                      l356 7EDA                      l269 7C28  
                    l294 7D30                      l390 7FAE                      l295 7D26  
                    l391 7F9E                      l288 7CD4                      l289 7CCA  
                    l396 7FD2                      l388 7F38                      l397 7FC6  
                    l399 7FEE                      u300 7CBC                      u340 7D3A  
                    u431 7F1C                      u450 7F56                      u371 7E36  
                    u515 7D86                      u540 7E06                      u391 7E5E  
                    u455 7F4E                      u490 7FD8                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0016             ___ftdiv@sign 001B  
           __CFG_WDT$OFF 000000                     l1071 7E18                     _RCIF 007CF5  
                   _main 7BE6             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
           ___fttol@exp1 002A             ___fttol@lval 0026            __CFG_PLLDIV$2 000000  
                  ?_main 0001          __end_of___ftdiv 7F0C          __end_of___fttol 8000  
                  _TMR0L 000FD6                    _PORTA 000F80                    _TRISD 000F95  
         __CFG_FCMEN$OFF 000000            ___awtoft@sign 000C            ___ftpack@sign 0005  
                  status 000FD8          __initialization 7BE0             __end_of_main 7C14  
                 ??_main 0035            ___fttol@sign1 0025            __activetblptr 000000  
                 _ADCON0 000FC2                   _T08BIT 007EAE         __end_of___awtoft 7C4C  
       __end_of___ftpack 7D5A                   _TMR0IF 007F92                   _TMR0ON 007EAF  
   __size_of_configBoard 0060                ??___ftdiv 0013                ??___fttol 0020  
             __accesstop 0060  __end_of__initialization 7BE0            ___rparam_used 000001  
             ___ftdiv@f1 000D               ___ftdiv@f2 0010               ___ftdiv@f3 0017  
             ___awtoft@c 0009               ___fttol@f1 001C           __pcstackCOMRAM 0001  
              ?___awtoft 0009                ?___ftpack 0001                  __Hparam 0000  
                __Lparam 0000                  ___ftdiv 7E26                  ___fttol 7F0C  
                __pcinit 7BE0               ??___awtoft 000C               ??___ftpack 0006  
                __ramtop 0800                  __ptext0 7BE6                  __ptext1 7D5A  
                __ptext2 7F0C                  __ptext3 7E26                  __ptext4 7C14  
                __ptext5 7CAC                  __ptext6 7C4C                _T0CONbits 000FD5  
   end_of_initialization 7BE0     wait_in_ms@time_in_ms 002B               _wait_in_ms 7D5A  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94              ___ftdiv@exp 001A            ??_configBoard 0001  
    start_initialization 7BE0          wait_in_ms@count 0031       wait_in_ms@count_ms 0033  
    __end_of_configBoard 7CAC              ?_wait_in_ms 002B        __size_of___awtoft 0038  
      __size_of___ftpack 00AE                 ?___ftdiv 000D                 ?___fttol 001C  
    __size_of_wait_in_ms 00CC              _configBoard 7C4C                 _PIE1bits 000F9D  
               _PIR1bits 000F9E               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0           wait_in_ms@flag 002F                 __Hrparam 0000  
               __Lrparam 0000         __size_of___ftdiv 00E6         __size_of___fttol 00F4  
               ___awtoft 7C14                 ___ftpack 7CAC            __size_of_main 002E  
           ??_wait_in_ms 002D    __CFG_CPUDIV$OSC4_PLL6 000000               _INTCONbits 000FF2  
     __end_of_wait_in_ms 7E26       __CFG_FOSC$HSPLL_HS 000000             ?_configBoard 0001  
