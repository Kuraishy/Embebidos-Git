

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 14 02:00:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0013AC                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _nivel
    81  0013AC  07                 	db	7
    82  0000                     _PORTCbits	set	3970
    83  0000                     _TRISC	set	3988
    84  0000                     _OSCCON	set	4051
    85  0000                     _RCREG	set	4014
    86  0000                     _TXREG	set	4013
    87  0000                     _RCSTA	set	4011
    88  0000                     _TXSTA	set	4012
    89  0000                     _SPBRG	set	4015
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTDbits	set	3971
    92  0000                     _TRISDbits	set	3989
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADRESH	set	4036
    95  0000                     _PORTA	set	3968
    96  0000                     _TRISD	set	3989
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PIE1bits	set	3997
    99  0000                     _TRISAbits	set	3986
   100  0000                     _ADCON2bits	set	4032
   101  0000                     _ADCON0bits	set	4034
   102  0000                     _ADCON0	set	4034
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISA	set	3986
   105  0000                     _ADCON1bits	set	4033
   106  0000                     _T0CONbits	set	4053
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TMR0L	set	4054
   109  0000                     _RCIF	set	31989
   110  0000                     _TXIF	set	31988
   111  0000                     _TRISC7	set	31911
   112  0000                     _TRISC6	set	31910
   113  0000                     _TMR0IF	set	32658
   114  0000                     _TMR0ON	set	32431
   115  0000                     _T08BIT	set	32430
   116                           
   117                           	psect	smallconst
   118  000800                     __psmallconst:
   119                           	opt stack 0
   120  000800  00                 	db	0
   121  000801                     STR_1:
   122  000801  6F                 	db	111	;'o'
   123  000802  6E                 	db	110	;'n'
   124  000803  00                 	db	0
   125                           
   126                           ; #config settings
   127  000804  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  0012CC                     __pcinit:
   131                           	opt stack 0
   132  0012CC                     start_initialization:
   133                           	opt stack 0
   134  0012CC                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (1 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  0012CC  0EAC               	movlw	low __pidataCOMRAM
   140  0012CE  6EF6               	movwf	tblptrl,c
   141  0012D0  0E13               	movlw	high __pidataCOMRAM
   142  0012D2  6EF7               	movwf	tblptrh,c
   143  0012D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  0012D6  6EF8               	movwf	tblptru,c
   145  0012D8  0009               	tblrd		*+	;fetch initializer
   146  0012DA  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   147                           
   148                           ; Clear objects allocated to COMRAM (5 bytes)
   149  0012DE  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   150  0012E0  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   151  0012E2  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   152  0012E4  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   153  0012E6  6A47               	clrf	__pbssCOMRAM& (0+255),c
   154  0012E8                     end_of_initialization:
   155                           	opt stack 0
   156  0012E8                     __end_of__initialization:
   157                           	opt stack 0
   158  0012E8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  0012EA  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  0012EC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   161  0012EE  6EF8               	movwf	tblptru,c
   162  0012F0  0E08               	movlw	high __Lsmallconst
   163  0012F2  6EF7               	movwf	tblptrh,c
   164  0012F4  0100               	movlb	0
   165  0012F6  EFF0  F006         	goto	_main	;jump to C main() function
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           
   171                           	psect	bssCOMRAM
   172  000047                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000047                     _puntuacion:
   175                           	opt stack 0
   176  000047                     	ds	2
   177  000049                     _cantidadBotones:
   178                           	opt stack 0
   179  000049                     	ds	1
   180  00004A                     _presionoBoton:
   181                           	opt stack 0
   182  00004A                     	ds	1
   183  00004B                     _numTopos:
   184                           	opt stack 0
   185  00004B                     	ds	1
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           
   191                           	psect	dataCOMRAM
   192  00004C                     __pdataCOMRAM:
   193                           	opt stack 0
   194  00004C                     _nivel:
   195                           	opt stack 0
   196  00004C                     	ds	1
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           
   202                           	psect	cstackBANK0
   203  000060                     __pcstackBANK0:
   204                           	opt stack 0
   205  000060                     wait_in_ms@flag:
   206                           	opt stack 0
   207  000060                     USART_Init@temp:
   208                           	opt stack 0
   209                           
   210                           ; 3 bytes @ 0x0
   211  000060                     	ds	2
   212  000062                     wait_in_ms@count:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2
   216  000062                     	ds	2
   217  000064                     wait_in_ms@count_ms:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x4
   221  000064                     	ds	2
   222  000066                     lcd_orden@orden:
   223                           	opt stack 0
   224  000066                     lcd_caracter@caracter:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x6
   228  000066                     	ds	2
   229  000068                     ??_lcd_orden:
   230  000068                     ??_lcd_caracter:
   231                           
   232                           ; 1 bytes @ 0x8
   233  000068                     	ds	5
   234  00006D                     lcd_texto@cadena:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0xD
   238  00006D                     	ds	2
   239  00006F                     ??_lcd_texto:
   240                           
   241                           ; 1 bytes @ 0xF
   242  00006F                     	ds	1
   243  000070                     main@temp:
   244                           	opt stack 0
   245                           
   246                           ; 6 bytes @ 0x10
   247  000070                     	ds	6
   248                           tblptru	equ	0xFF8
   249                           tblptrh	equ	0xFF7
   250                           tblptrl	equ	0xFF6
   251                           tablat	equ	0xFF5
   252                           
   253                           	psect	cstackCOMRAM
   254  000001                     __pcstackCOMRAM:
   255                           	opt stack 0
   256  000001                     ??_ADCint:
   257  000001                     
   258                           ; 1 bytes @ 0x0
   259  000001                     	ds	18
   260  000013                     ?_strcmp:
   261                           	opt stack 0
   262  000013                     ?___ftpack:
   263                           	opt stack 0
   264  000013                     USART_TransmitChar@out:
   265                           	opt stack 0
   266  000013                     MSdelay@val:
   267                           	opt stack 0
   268  000013                     USART_ReceiveString@Input:
   269                           	opt stack 0
   270  000013                     memset@p1:
   271                           	opt stack 0
   272  000013                     strcmp@s1:
   273                           	opt stack 0
   274  000013                     ___ftpack@arg:
   275                           	opt stack 0
   276                           
   277                           ; 3 bytes @ 0x12
   278  000013                     	ds	1
   279  000014                     USART_SendString@out:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x13
   283  000014                     	ds	1
   284  000015                     USART_ReceiveString@length:
   285                           	opt stack 0
   286  000015                     MSdelay@i:
   287                           	opt stack 0
   288  000015                     memset@c:
   289                           	opt stack 0
   290  000015                     strcmp@s2:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x14
   294  000015                     	ds	1
   295  000016                     ??_USART_ReceiveString:
   296  000016                     ___ftpack@exp:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x15
   300  000016                     	ds	1
   301  000017                     ??_strcmp:
   302  000017                     ___ftpack@sign:
   303                           	opt stack 0
   304  000017                     MSdelay@j:
   305                           	opt stack 0
   306  000017                     memset@n:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x16
   310  000017                     	ds	1
   311  000018                     ??___ftpack:
   312  000018                     strcmp@r:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x17
   316  000018                     	ds	1
   317  000019                     memset@p:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x18
   321  000019                     	ds	2
   322  00001B                     ?___altoft:
   323                           	opt stack 0
   324  00001B                     ?___awtoft:
   325                           	opt stack 0
   326  00001B                     USART_ReceiveString@temp:
   327                           	opt stack 0
   328  00001B                     ___awtoft@c:
   329                           	opt stack 0
   330  00001B                     ___altoft@c:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x1A
   334  00001B                     	ds	1
   335  00001C                     USART_ReceiveString@i:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x1B
   339  00001C                     	ds	2
   340  00001E                     ___awtoft@sign:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x1D
   344  00001E                     	ds	1
   345  00001F                     ??___altoft:
   346                           
   347                           ; 1 bytes @ 0x1E
   348  00001F                     	ds	4
   349  000023                     ___altoft@exp:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x22
   353  000023                     	ds	1
   354  000024                     ___altoft@sign:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x23
   358  000024                     	ds	1
   359  000025                     ?___ftdiv:
   360                           	opt stack 0
   361  000025                     ___ftdiv@f1:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x24
   365  000025                     	ds	3
   366  000028                     ___ftdiv@f2:
   367                           	opt stack 0
   368                           
   369                           ; 3 bytes @ 0x27
   370  000028                     	ds	3
   371  00002B                     ??___ftdiv:
   372                           
   373                           ; 1 bytes @ 0x2A
   374  00002B                     	ds	3
   375  00002E                     ___ftdiv@cntr:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x2D
   379  00002E                     	ds	1
   380  00002F                     ___ftdiv@f3:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0x2E
   384  00002F                     	ds	3
   385  000032                     ___ftdiv@exp:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x31
   389  000032                     	ds	1
   390  000033                     ___ftdiv@sign:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x32
   394  000033                     	ds	1
   395  000034                     ?___ftadd:
   396                           	opt stack 0
   397  000034                     ?___fttol:
   398                           	opt stack 0
   399  000034                     ___ftadd@f1:
   400                           	opt stack 0
   401  000034                     ___fttol@f1:
   402                           	opt stack 0
   403                           
   404                           ; 3 bytes @ 0x33
   405  000034                     	ds	3
   406  000037                     ___ftadd@f2:
   407                           	opt stack 0
   408                           
   409                           ; 3 bytes @ 0x36
   410  000037                     	ds	1
   411  000038                     ??___fttol:
   412                           
   413                           ; 1 bytes @ 0x37
   414  000038                     	ds	2
   415  00003A                     ??___ftadd:
   416                           
   417                           ; 1 bytes @ 0x39
   418  00003A                     	ds	3
   419  00003D                     ___ftadd@sign:
   420                           	opt stack 0
   421  00003D                     ___fttol@sign1:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x3C
   425  00003D                     	ds	1
   426  00003E                     ___ftadd@exp2:
   427                           	opt stack 0
   428  00003E                     ___fttol@lval:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x3D
   432  00003E                     	ds	1
   433  00003F                     ___ftadd@exp1:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3E
   437  00003F                     	ds	3
   438  000042                     ___fttol@exp1:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x41
   442  000042                     	ds	1
   443  000043                     wait_in_ms@time_in_ms:
   444                           	opt stack 0
   445  000043                     USART_Init@baud_rate:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x42
   449  000043                     	ds	2
   450  000045                     ??_wait_in_ms:
   451                           
   452                           ; 1 bytes @ 0x44
   453  000045                     	ds	2
   454  000047                     tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           
   459                           ; 1 bytes @ 0x46
   460 ;;
   461 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   462 ;;
   463 ;; *************** function _main *****************
   464 ;; Defined at:
   465 ;;		line 33 in file "comuni.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  temp            6   16[BANK0 ] unsigned char [6]
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   479 ;;      Params:         0       0       0       0       0       0       0       0       0
   480 ;;      Locals:         0       6       0       0       0       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0       0       0
   482 ;;      Totals:         0       6       0       0       0       0       0       0       0
   483 ;;Total ram usage:        6 bytes
   484 ;; Hardware stack levels required when called:    7
   485 ;; This function calls:
   486 ;;		_MSdelay
   487 ;;		_USART_Init
   488 ;;		_USART_ReceiveString
   489 ;;		_USART_SendString
   490 ;;		_configBoard
   491 ;;		_lcd_iniciar
   492 ;;		_lcd_limpiar
   493 ;;		_lcd_origen
   494 ;;		_lcd_texto
   495 ;;		_memset
   496 ;;		_strcmp
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text0
   503  000DE0                     __ptext0:
   504                           	opt stack 0
   505  000DE0                     _main:
   506                           	opt stack 24
   507                           
   508                           ;comuni.c: 35: OSCCON=0x72;
   509                           
   510                           ;incstack = 0
   511  000DE0  0E72               	movlw	114
   512  000DE2  6ED3               	movwf	4051,c	;volatile
   513                           
   514                           ;comuni.c: 39: TRISC=0;
   515  000DE4  0E00               	movlw	0
   516  000DE6  6E94               	movwf	3988,c	;volatile
   517                           
   518                           ;comuni.c: 40: configBoard();
   519  000DE8  EC4F  F008         	call	_configBoard	;wreg free
   520                           
   521                           ;comuni.c: 41: lcd_iniciar();
   522  000DEC  ECC6  F005         	call	_lcd_iniciar	;wreg free
   523                           
   524                           ;comuni.c: 42: USART_Init(9600);
   525  000DF0  0E80               	movlw	128
   526  000DF2  6E43               	movwf	USART_Init@baud_rate,c
   527  000DF4  0E25               	movlw	37
   528  000DF6  6E44               	movwf	USART_Init@baud_rate+1,c
   529  000DF8  0E00               	movlw	0
   530  000DFA  6E45               	movwf	USART_Init@baud_rate+2,c
   531  000DFC  0E00               	movlw	0
   532  000DFE  6E46               	movwf	USART_Init@baud_rate+3,c
   533  000E00  ECD6  F007         	call	_USART_Init	;wreg free
   534                           
   535                           ;comuni.c: 43: MSdelay(50);
   536  000E04  0E00               	movlw	0
   537  000E06  6E14               	movwf	MSdelay@val+1,c
   538  000E08  0E32               	movlw	50
   539  000E0A  6E13               	movwf	MSdelay@val,c
   540  000E0C  EC33  F009         	call	_MSdelay	;wreg free
   541  000E10                     
   542                           ;comuni.c: 45: lcd_origen();
   543  000E10  ECB4  F009         	call	_lcd_origen	;wreg free
   544                           
   545                           ;comuni.c: 48: char temp[6];
   546                           ;comuni.c: 52: USART_ReceiveString(&temp, sizeof temp );
   547  000E14  0E70               	movlw	low main@temp
   548  000E16  6E13               	movwf	USART_ReceiveString@Input,c
   549  000E18  0E00               	movlw	high main@temp
   550  000E1A  6E14               	movwf	USART_ReceiveString@Input+1,c
   551  000E1C  0E06               	movlw	6
   552  000E1E  6E15               	movwf	USART_ReceiveString@length,c
   553  000E20  EC8E  F007         	call	_USART_ReceiveString	;wreg free
   554                           
   555                           ;comuni.c: 54: USART_SendString(temp);
   556  000E24  0E70               	movlw	low main@temp
   557  000E26  6E14               	movwf	USART_SendString@out,c
   558  000E28  0E00               	movlw	high main@temp
   559  000E2A  6E15               	movwf	USART_SendString@out+1,c
   560  000E2C  EC93  F009         	call	_USART_SendString	;wreg free
   561                           
   562                           ;comuni.c: 55: lcd_limpiar();
   563  000E30  ECC2  F009         	call	_lcd_limpiar	;wreg free
   564                           
   565                           ;comuni.c: 56: lcd_texto(temp);
   566  000E34  0E70               	movlw	low main@temp
   567  000E36  0100               	movlb	0	; () banked
   568  000E38  6F6D               	movwf	lcd_texto@cadena& (0+255),b
   569  000E3A  0E00               	movlw	high main@temp
   570  000E3C  6F6E               	movwf	(lcd_texto@cadena+1)& (0+255),b
   571  000E3E  EC4E  F009         	call	_lcd_texto	;wreg free
   572                           
   573                           ;comuni.c: 57: if(!strcmp("on",temp)){
   574  000E42  0E01               	movlw	low STR_1
   575  000E44  6E13               	movwf	strcmp@s1,c
   576  000E46  0E08               	movlw	high STR_1
   577  000E48  6E14               	movwf	strcmp@s1+1,c
   578  000E4A  0E70               	movlw	low main@temp
   579  000E4C  6E15               	movwf	strcmp@s2,c
   580  000E4E  0E00               	movlw	high main@temp
   581  000E50  6E16               	movwf	strcmp@s2+1,c
   582  000E52  ECF1  F008         	call	_strcmp	;wreg free
   583  000E56  5013               	movf	?_strcmp,w,c
   584  000E58  1014               	iorwf	?_strcmp+1,w,c
   585  000E5A  A4D8               	btfss	status,2,c
   586  000E5C  D002               	goto	l259
   587                           
   588                           ;comuni.c: 58: PORTCbits.RC2=1;
   589  000E5E  8482               	bsf	3970,2,c	;volatile
   590                           
   591                           ;comuni.c: 59: }
   592  000E60  D001               	goto	l260
   593  000E62                     l259:
   594                           
   595                           ;comuni.c: 60: else{
   596                           ;comuni.c: 61: PORTCbits.RC2=0;
   597  000E62  9482               	bcf	3970,2,c	;volatile
   598  000E64                     l260:
   599                           
   600                           ;comuni.c: 62: }
   601                           ;comuni.c: 63: memset(temp, 0, sizeof temp);
   602  000E64  0E70               	movlw	low main@temp
   603  000E66  6E13               	movwf	memset@p1,c
   604  000E68  0E00               	movlw	high main@temp
   605  000E6A  6E14               	movwf	memset@p1+1,c
   606  000E6C  0E00               	movlw	0
   607  000E6E  6E16               	movwf	memset@c+1,c
   608  000E70  0E00               	movlw	0
   609  000E72  6E15               	movwf	memset@c,c
   610  000E74  0E00               	movlw	0
   611  000E76  6E18               	movwf	memset@n+1,c
   612  000E78  0E06               	movlw	6
   613  000E7A  6E17               	movwf	memset@n,c
   614  000E7C  EC7D  F009         	call	_memset	;wreg free
   615  000E80  D7C7               	goto	l258
   616  000E82                     __end_of_main:
   617                           	opt stack 0
   618                           tblptru	equ	0xFF8
   619                           tblptrh	equ	0xFF7
   620                           tblptrl	equ	0xFF6
   621                           tablat	equ	0xFF5
   622                           status	equ	0xFD8
   623                           
   624 ;; *************** function _strcmp *****************
   625 ;; Defined at:
   626 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  s1              2   18[COMRAM] PTR const unsigned char 
   629 ;;		 -> STR_1(3), 
   630 ;;  s2              2   20[COMRAM] PTR const unsigned char 
   631 ;;		 -> main@temp(6), 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  r               1   23[COMRAM] char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  2   18[COMRAM] int 
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         4       0       0       0       0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0       0       0
   645 ;;      Temps:          1       0       0       0       0       0       0       0       0
   646 ;;      Totals:         6       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:        6 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text1
   658  0011E2                     __ptext1:
   659                           	opt stack 0
   660  0011E2                     _strcmp:
   661                           	opt stack 29
   662                           
   663                           ;incstack = 0
   664  0011E2  D004               	goto	l817
   665  0011E4  4A13               	infsnz	strcmp@s1,f,c
   666  0011E6  2A14               	incf	strcmp@s1+1,f,c
   667  0011E8  4A15               	infsnz	strcmp@s2,f,c
   668  0011EA  2A16               	incf	strcmp@s2+1,f,c
   669  0011EC                     l817:
   670  0011EC  C013  FFF6         	movff	strcmp@s1,tblptrl
   671  0011F0  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   672  0011F4                     	if	0	;tblptru may be non-zero
   673  0011F4                     	endif
   674  0011F4                     	if	0	;tblptru may be non-zero
   675  0011F4                     	endif
   676  0011F4  0008               	tblrd		*
   677  0011F6  CFF5 F017          	movff	tablat,??_strcmp
   678  0011FA  C015  FFD9         	movff	strcmp@s2,fsr2l
   679  0011FE  C016  FFDA         	movff	strcmp@s2+1,fsr2h
   680  001202  50DF               	movf	indf2,w,c
   681  001204  0800               	sublw	0
   682  001206  2417               	addwf	??_strcmp,w,c
   683  001208  6E18               	movwf	strcmp@r,c
   684  00120A  5018               	movf	strcmp@r,w,c
   685  00120C  A4D8               	btfss	status,2,c
   686  00120E  D009               	goto	u1550
   687  001210  C013  FFF6         	movff	strcmp@s1,tblptrl
   688  001214  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   689  001218                     	if	0	;tblptru may be non-zero
   690  001218                     	endif
   691  001218                     	if	0	;tblptru may be non-zero
   692  001218                     	endif
   693  001218  0008               	tblrd		*
   694  00121A  50F5               	movf	tablat,w,c
   695  00121C  0900               	iorlw	0
   696  00121E  A4D8               	btfss	status,2,c
   697  001220  D7E1               	goto	l818
   698  001222                     u1550:
   699  001222  5018               	movf	strcmp@r,w,c
   700  001224  6E13               	movwf	?_strcmp,c
   701  001226  6A14               	clrf	?_strcmp+1,c
   702  001228  BE13               	btfsc	?_strcmp,7,c
   703  00122A  0614               	decf	?_strcmp+1,f,c
   704  00122C  0012               	return	
   705  00122E                     __end_of_strcmp:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           indf2	equ	0xFDF
   712                           fsr2h	equ	0xFDA
   713                           fsr2l	equ	0xFD9
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function _memset *****************
   717 ;; Defined at:
   718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  p1              2   18[COMRAM] PTR void 
   721 ;;		 -> main@temp(6), 
   722 ;;  c               2   20[COMRAM] int 
   723 ;;  n               2   22[COMRAM] unsigned int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  p               2   24[COMRAM] PTR unsigned char 
   726 ;;		 -> main@temp(6), 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  2   18[COMRAM] PTR void 
   729 ;; Registers used:
   730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         6       0       0       0       0       0       0       0       0
   737 ;;      Locals:         2       0       0       0       0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0
   739 ;;      Totals:         8       0       0       0       0       0       0       0       0
   740 ;;Total ram usage:        8 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text2
   751  0012FA                     __ptext2:
   752                           	opt stack 0
   753  0012FA                     _memset:
   754                           	opt stack 29
   755                           
   756                           ;incstack = 0
   757  0012FA  C013  F019         	movff	memset@p1,memset@p
   758  0012FE  C014  F01A         	movff	memset@p1+1,memset@p+1
   759  001302  D008               	goto	l691
   760  001304                     l1873:
   761  001304  C019  FFD9         	movff	memset@p,fsr2l
   762  001308  C01A  FFDA         	movff	memset@p+1,fsr2h
   763  00130C  C015  FFDF         	movff	memset@c,indf2
   764  001310  4A19               	infsnz	memset@p,f,c
   765  001312  2A1A               	incf	memset@p+1,f,c
   766  001314                     l691:
   767  001314  0617               	decf	memset@n,f,c
   768  001316  A0D8               	btfss	status,0,c
   769  001318  0618               	decf	memset@n+1,f,c
   770  00131A  2817               	incf	memset@n,w,c
   771  00131C  E1F3               	bnz	l1873
   772  00131E  2818               	incf	memset@n+1,w,c
   773  001320  B4D8               	btfsc	status,2,c
   774  001322  0012               	return	
   775  001324  D7EF               	goto	l692
   776  001326                     __end_of_memset:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           indf2	equ	0xFDF
   783                           fsr2h	equ	0xFDA
   784                           fsr2l	equ	0xFD9
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _lcd_texto *****************
   788 ;; Defined at:
   789 ;;		line 296 in file "lcd.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  cadena          2   13[BANK0 ] PTR unsigned char 
   792 ;;		 -> main@temp(6), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         0       2       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          0       1       0       0       0       0       0       0       0
   807 ;;      Totals:         0       3       0       0       0       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    6
   811 ;; This function calls:
   812 ;;		_lcd_caracter
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text3
   819  00129C                     __ptext3:
   820                           	opt stack 0
   821  00129C                     _lcd_texto:
   822                           	opt stack 24
   823                           
   824                           ;lcd.c: 297: while(*cadena != 0x00){
   825                           
   826                           ;incstack = 0
   827  00129C  D00F               	goto	l127
   828  00129E                     
   829                           ;lcd.c: 298: lcd_caracter(*cadena);
   830  00129E  C06D  FFD9         	movff	lcd_texto@cadena,fsr2l
   831  0012A2  C06E  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   832  0012A6  50DF               	movf	indf2,w,c
   833  0012A8  0100               	movlb	0	; () banked
   834  0012AA  6F6F               	movwf	??_lcd_texto& (0+255),b
   835  0012AC  516F               	movf	??_lcd_texto& (0+255),w,b
   836  0012AE  6F66               	movwf	lcd_caracter@caracter& (0+255),b
   837  0012B0  6B67               	clrf	(lcd_caracter@caracter+1)& (0+255),b
   838  0012B2  EC86  F008         	call	_lcd_caracter	;wreg free
   839                           
   840                           ;lcd.c: 299: cadena++;
   841  0012B6  0100               	movlb	0	; () banked
   842  0012B8  4B6D               	infsnz	lcd_texto@cadena& (0+255),f,b
   843  0012BA  2B6E               	incf	(lcd_texto@cadena+1)& (0+255),f,b
   844  0012BC                     l127:
   845                           
   846                           ; BSR set to: 0
   847  0012BC  C06D  FFD9         	movff	lcd_texto@cadena,fsr2l
   848  0012C0  C06E  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   849  0012C4  50DF               	movf	indf2,w,c
   850  0012C6  B4D8               	btfsc	status,2,c
   851  0012C8  0012               	return	
   852  0012CA  D7E9               	goto	l128
   853  0012CC                     __end_of_lcd_texto:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           indf2	equ	0xFDF
   860                           fsr2h	equ	0xFDA
   861                           fsr2l	equ	0xFD9
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _lcd_caracter *****************
   865 ;; Defined at:
   866 ;;		line 286 in file "lcd.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  caracter        2    6[BANK0 ] unsigned int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   880 ;;      Params:         0       2       0       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0
   882 ;;      Temps:          0       5       0       0       0       0       0       0       0
   883 ;;      Totals:         0       7       0       0       0       0       0       0       0
   884 ;;Total ram usage:        7 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    5
   887 ;; This function calls:
   888 ;;		_lcd_pulso
   889 ;; This function is called by:
   890 ;;		_lcd_texto
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text4
   895  00110C                     __ptext4:
   896                           	opt stack 0
   897  00110C                     _lcd_caracter:
   898                           	opt stack 24
   899                           
   900                           ;lcd.c: 287: PORTDbits.RD1=1;
   901                           
   902                           ;incstack = 0
   903  00110C  8283               	bsf	3971,1,c	;volatile
   904                           
   905                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   906  00110E  CF83 F068          	movff	3971,??_lcd_caracter	;volatile
   907  001112  0E0F               	movlw	15
   908  001114  0100               	movlb	0	; () banked
   909  001116  1768               	andwf	??_lcd_caracter& (0+255),f,b
   910  001118  C066  F069         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   911  00111C  C067  F06A         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   912  001120  0E04               	movlw	4
   913  001122  6F6B               	movwf	(??_lcd_caracter+3)& (0+255),b
   914  001124                     u2045:
   915  001124  90D8               	bcf	status,0,c
   916  001126  336A               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
   917  001128  3369               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
   918  00112A  2F6B               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
   919  00112C  D7FB               	goto	u2045
   920  00112E  0E0F               	movlw	15
   921  001130  1769               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   922  001132  3883               	swapf	3971,w,c	;volatile
   923  001134  0B0F               	andlw	15
   924  001136  0B0F               	andlw	15
   925  001138  090F               	iorlw	15
   926  00113A  1569               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   927  00113C  6F6C               	movwf	(??_lcd_caracter+4)& (0+255),b
   928  00113E  396C               	swapf	(??_lcd_caracter+4)& (0+255),w,b
   929  001140  0BF0               	andlw	240
   930  001142  1168               	iorwf	??_lcd_caracter& (0+255),w,b
   931  001144  6E83               	movwf	3971,c	;volatile
   932                           
   933                           ; BSR set to: 0
   934                           ;lcd.c: 290: lcd_pulso();
   935  001146  ECA5  F009         	call	_lcd_pulso	;wreg free
   936                           
   937                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   938  00114A  CF83 F068          	movff	3971,??_lcd_caracter	;volatile
   939  00114E  0E0F               	movlw	15
   940  001150  0100               	movlb	0	; () banked
   941  001152  1768               	andwf	??_lcd_caracter& (0+255),f,b
   942  001154  C066  F069         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   943  001158  0E0F               	movlw	15
   944  00115A  1769               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   945  00115C  3883               	swapf	3971,w,c	;volatile
   946  00115E  0B0F               	andlw	15
   947  001160  0B0F               	andlw	15
   948  001162  090F               	iorlw	15
   949  001164  1569               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   950  001166  6F6A               	movwf	(??_lcd_caracter+2)& (0+255),b
   951  001168  396A               	swapf	(??_lcd_caracter+2)& (0+255),w,b
   952  00116A  0BF0               	andlw	240
   953  00116C  1168               	iorwf	??_lcd_caracter& (0+255),w,b
   954  00116E  6E83               	movwf	3971,c	;volatile
   955                           
   956                           ;lcd.c: 292: lcd_pulso();
   957  001170  ECA5  F009         	call	_lcd_pulso	;wreg free
   958                           
   959                           ;lcd.c: 293: PORTDbits.RD1=0;
   960  001174  9283               	bcf	3971,1,c	;volatile
   961  001176  0012               	return		;funcret
   962  001178                     __end_of_lcd_caracter:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           indf2	equ	0xFDF
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8
   972                           
   973 ;; *************** function _lcd_origen *****************
   974 ;; Defined at:
   975 ;;		line 308 in file "lcd.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         0       0       0       0       0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    6
   996 ;; This function calls:
   997 ;;		_lcd_orden
   998 ;;		_wait_in_ms
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;;		_lcd_ubicarXY
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text5
  1006  001368                     __ptext5:
  1007                           	opt stack 0
  1008  001368                     _lcd_origen:
  1009                           	opt stack 24
  1010                           
  1011                           ;lcd.c: 309: lcd_orden(0x02);
  1012                           
  1013                           ;incstack = 0
  1014  001368  0E00               	movlw	0
  1015  00136A  0100               	movlb	0	; () banked
  1016  00136C  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1017  00136E  0E02               	movlw	2
  1018  001370  6F66               	movwf	lcd_orden@orden& (0+255),b
  1019  001372  ECBC  F008         	call	_lcd_orden	;wreg free
  1020                           
  1021                           ;lcd.c: 310: wait_in_ms(4);
  1022  001376  0E00               	movlw	0
  1023  001378  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1024  00137A  0E04               	movlw	4
  1025  00137C  6E43               	movwf	wait_in_ms@time_in_ms,c
  1026  00137E  EC31  F006         	call	_wait_in_ms	;wreg free
  1027  001382  0012               	return		;funcret
  1028  001384                     __end_of_lcd_origen:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           indf2	equ	0xFDF
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _lcd_limpiar *****************
  1040 ;; Defined at:
  1041 ;;		line 303 in file "lcd.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0, cstack
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1055 ;;      Params:         0       0       0       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1059 ;;Total ram usage:        0 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    6
  1062 ;; This function calls:
  1063 ;;		_lcd_orden
  1064 ;;		_wait_in_ms
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text6
  1071  001384                     __ptext6:
  1072                           	opt stack 0
  1073  001384                     _lcd_limpiar:
  1074                           	opt stack 24
  1075                           
  1076                           ;lcd.c: 304: lcd_orden(0x01);
  1077                           
  1078                           ;incstack = 0
  1079  001384  0E00               	movlw	0
  1080  001386  0100               	movlb	0	; () banked
  1081  001388  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1082  00138A  0E01               	movlw	1
  1083  00138C  6F66               	movwf	lcd_orden@orden& (0+255),b
  1084  00138E  ECBC  F008         	call	_lcd_orden	;wreg free
  1085                           
  1086                           ;lcd.c: 305: wait_in_ms(2);
  1087  001392  0E00               	movlw	0
  1088  001394  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1089  001396  0E02               	movlw	2
  1090  001398  6E43               	movwf	wait_in_ms@time_in_ms,c
  1091  00139A  EC31  F006         	call	_wait_in_ms	;wreg free
  1092  00139E  0012               	return		;funcret
  1093  0013A0                     __end_of_lcd_limpiar:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           indf2	equ	0xFDF
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _lcd_iniciar *****************
  1105 ;; Defined at:
  1106 ;;		line 224 in file "lcd.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    6
  1127 ;; This function calls:
  1128 ;;		_lcd_orden
  1129 ;;		_lcd_pulso
  1130 ;;		_wait_in_ms
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137  000B8C                     __ptext7:
  1138                           	opt stack 0
  1139  000B8C                     _lcd_iniciar:
  1140                           	opt stack 24
  1141                           
  1142                           ;lcd.c: 225: TRISDbits.TRISD1=0;
  1143                           
  1144                           ;incstack = 0
  1145  000B8C  9295               	bcf	3989,1,c	;volatile
  1146                           
  1147                           ;lcd.c: 226: TRISDbits.TRISD2=0;
  1148  000B8E  9495               	bcf	3989,2,c	;volatile
  1149                           
  1150                           ;lcd.c: 227: TRISDbits.TRISD3=0;
  1151  000B90  9695               	bcf	3989,3,c	;volatile
  1152                           
  1153                           ;lcd.c: 228: TRISDbits.TRISD4=0;
  1154  000B92  9895               	bcf	3989,4,c	;volatile
  1155                           
  1156                           ;lcd.c: 229: TRISDbits.TRISD5=0;
  1157  000B94  9A95               	bcf	3989,5,c	;volatile
  1158                           
  1159                           ;lcd.c: 230: TRISDbits.TRISD6=0;
  1160  000B96  9C95               	bcf	3989,6,c	;volatile
  1161                           
  1162                           ;lcd.c: 231: TRISDbits.TRISD7=0;
  1163  000B98  9E95               	bcf	3989,7,c	;volatile
  1164                           
  1165                           ;lcd.c: 233: PORTDbits.RD1=0;
  1166  000B9A  9283               	bcf	3971,1,c	;volatile
  1167                           
  1168                           ;lcd.c: 234: PORTDbits.RD2=0;
  1169  000B9C  9483               	bcf	3971,2,c	;volatile
  1170                           
  1171                           ;lcd.c: 235: PORTDbits.RD3=0;
  1172  000B9E  9683               	bcf	3971,3,c	;volatile
  1173                           
  1174                           ;lcd.c: 236: PORTDbits.RD4=0;
  1175  000BA0  9883               	bcf	3971,4,c	;volatile
  1176                           
  1177                           ;lcd.c: 237: PORTDbits.RD5=0;
  1178  000BA2  9A83               	bcf	3971,5,c	;volatile
  1179                           
  1180                           ;lcd.c: 238: PORTDbits.RD6=0;
  1181  000BA4  9C83               	bcf	3971,6,c	;volatile
  1182                           
  1183                           ;lcd.c: 239: PORTDbits.RD7=0;
  1184  000BA6  9E83               	bcf	3971,7,c	;volatile
  1185                           
  1186                           ;lcd.c: 241: wait_in_ms(20);
  1187  000BA8  0E00               	movlw	0
  1188  000BAA  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1189  000BAC  0E14               	movlw	20
  1190  000BAE  6E43               	movwf	wait_in_ms@time_in_ms,c
  1191  000BB0  EC31  F006         	call	_wait_in_ms	;wreg free
  1192                           
  1193                           ;lcd.c: 242: PORTD=0X03<<4;
  1194  000BB4  0E30               	movlw	48
  1195  000BB6  6E83               	movwf	3971,c	;volatile
  1196                           
  1197                           ;lcd.c: 243: lcd_pulso();
  1198  000BB8  ECA5  F009         	call	_lcd_pulso	;wreg free
  1199                           
  1200                           ;lcd.c: 244: wait_in_ms(4);
  1201  000BBC  0E00               	movlw	0
  1202  000BBE  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1203  000BC0  0E04               	movlw	4
  1204  000BC2  6E43               	movwf	wait_in_ms@time_in_ms,c
  1205  000BC4  EC31  F006         	call	_wait_in_ms	;wreg free
  1206                           
  1207                           ;lcd.c: 246: PORTD=0X03<<4;
  1208  000BC8  0E30               	movlw	48
  1209  000BCA  6E83               	movwf	3971,c	;volatile
  1210                           
  1211                           ;lcd.c: 247: lcd_pulso();
  1212  000BCC  ECA5  F009         	call	_lcd_pulso	;wreg free
  1213                           
  1214                           ;lcd.c: 248: wait_in_ms(4);
  1215  000BD0  0E00               	movlw	0
  1216  000BD2  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1217  000BD4  0E04               	movlw	4
  1218  000BD6  6E43               	movwf	wait_in_ms@time_in_ms,c
  1219  000BD8  EC31  F006         	call	_wait_in_ms	;wreg free
  1220                           
  1221                           ;lcd.c: 250: PORTD=0X03<<4;
  1222  000BDC  0E30               	movlw	48
  1223  000BDE  6E83               	movwf	3971,c	;volatile
  1224                           
  1225                           ;lcd.c: 251: lcd_pulso();
  1226  000BE0  ECA5  F009         	call	_lcd_pulso	;wreg free
  1227                           
  1228                           ;lcd.c: 252: wait_in_ms(1);
  1229  000BE4  0E00               	movlw	0
  1230  000BE6  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1231  000BE8  0E01               	movlw	1
  1232  000BEA  6E43               	movwf	wait_in_ms@time_in_ms,c
  1233  000BEC  EC31  F006         	call	_wait_in_ms	;wreg free
  1234                           
  1235                           ;lcd.c: 254: PORTD=0X02<<4;
  1236  000BF0  0E20               	movlw	32
  1237  000BF2  6E83               	movwf	3971,c	;volatile
  1238                           
  1239                           ;lcd.c: 255: lcd_pulso();
  1240  000BF4  ECA5  F009         	call	_lcd_pulso	;wreg free
  1241                           
  1242                           ;lcd.c: 257: lcd_orden(0x28);
  1243  000BF8  0E00               	movlw	0
  1244  000BFA  0100               	movlb	0	; () banked
  1245  000BFC  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1246  000BFE  0E28               	movlw	40
  1247  000C00  6F66               	movwf	lcd_orden@orden& (0+255),b
  1248  000C02  ECBC  F008         	call	_lcd_orden	;wreg free
  1249                           
  1250                           ;lcd.c: 258: wait_in_ms(8);
  1251  000C06  0E00               	movlw	0
  1252  000C08  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1253  000C0A  0E08               	movlw	8
  1254  000C0C  6E43               	movwf	wait_in_ms@time_in_ms,c
  1255  000C0E  EC31  F006         	call	_wait_in_ms	;wreg free
  1256                           
  1257                           ;lcd.c: 260: lcd_orden(0x0c);
  1258  000C12  0E00               	movlw	0
  1259  000C14  0100               	movlb	0	; () banked
  1260  000C16  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1261  000C18  0E0C               	movlw	12
  1262  000C1A  6F66               	movwf	lcd_orden@orden& (0+255),b
  1263  000C1C  ECBC  F008         	call	_lcd_orden	;wreg free
  1264                           
  1265                           ;lcd.c: 261: wait_in_ms(8);
  1266  000C20  0E00               	movlw	0
  1267  000C22  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1268  000C24  0E08               	movlw	8
  1269  000C26  6E43               	movwf	wait_in_ms@time_in_ms,c
  1270  000C28  EC31  F006         	call	_wait_in_ms	;wreg free
  1271                           
  1272                           ;lcd.c: 263: lcd_orden(0x01);
  1273  000C2C  0E00               	movlw	0
  1274  000C2E  0100               	movlb	0	; () banked
  1275  000C30  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1276  000C32  0E01               	movlw	1
  1277  000C34  6F66               	movwf	lcd_orden@orden& (0+255),b
  1278  000C36  ECBC  F008         	call	_lcd_orden	;wreg free
  1279                           
  1280                           ;lcd.c: 264: wait_in_ms(2);
  1281  000C3A  0E00               	movlw	0
  1282  000C3C  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1283  000C3E  0E02               	movlw	2
  1284  000C40  6E43               	movwf	wait_in_ms@time_in_ms,c
  1285  000C42  EC31  F006         	call	_wait_in_ms	;wreg free
  1286                           
  1287                           ;lcd.c: 266: lcd_orden(0x06);
  1288  000C46  0E00               	movlw	0
  1289  000C48  0100               	movlb	0	; () banked
  1290  000C4A  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
  1291  000C4C  0E06               	movlw	6
  1292  000C4E  6F66               	movwf	lcd_orden@orden& (0+255),b
  1293  000C50  ECBC  F008         	call	_lcd_orden	;wreg free
  1294                           
  1295                           ;lcd.c: 267: wait_in_ms(8);
  1296  000C54  0E00               	movlw	0
  1297  000C56  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1298  000C58  0E08               	movlw	8
  1299  000C5A  6E43               	movwf	wait_in_ms@time_in_ms,c
  1300  000C5C  EC31  F006         	call	_wait_in_ms	;wreg free
  1301  000C60  0012               	return		;funcret
  1302  000C62                     __end_of_lcd_iniciar:
  1303                           	opt stack 0
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           indf2	equ	0xFDF
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           status	equ	0xFD8
  1312                           
  1313 ;; *************** function _lcd_orden *****************
  1314 ;; Defined at:
  1315 ;;		line 277 in file "lcd.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  orden           2    6[BANK0 ] unsigned int 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         0       2       0       0       0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1332 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        7 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    5
  1336 ;; This function calls:
  1337 ;;		_lcd_pulso
  1338 ;; This function is called by:
  1339 ;;		_lcd_iniciar
  1340 ;;		_lcd_limpiar
  1341 ;;		_lcd_origen
  1342 ;;		_lcd_ubicarXY
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text8
  1347  001178                     __ptext8:
  1348                           	opt stack 0
  1349  001178                     _lcd_orden:
  1350                           	opt stack 24
  1351                           
  1352                           ;lcd.c: 278: PORTDbits.RD1=0;
  1353                           
  1354                           ;incstack = 0
  1355  001178  9283               	bcf	3971,1,c	;volatile
  1356                           
  1357                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  1358  00117A  CF83 F068          	movff	3971,??_lcd_orden	;volatile
  1359  00117E  0E0F               	movlw	15
  1360  001180  0100               	movlb	0	; () banked
  1361  001182  1768               	andwf	??_lcd_orden& (0+255),f,b
  1362  001184  C066  F069         	movff	lcd_orden@orden,??_lcd_orden+1
  1363  001188  C067  F06A         	movff	lcd_orden@orden+1,??_lcd_orden+2
  1364  00118C  0E04               	movlw	4
  1365  00118E  6F6B               	movwf	(??_lcd_orden+3)& (0+255),b
  1366  001190                     u2035:
  1367  001190  90D8               	bcf	status,0,c
  1368  001192  336A               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  1369  001194  3369               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  1370  001196  2F6B               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  1371  001198  D7FB               	goto	u2035
  1372  00119A  0E0F               	movlw	15
  1373  00119C  1769               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1374  00119E  3883               	swapf	3971,w,c	;volatile
  1375  0011A0  0B0F               	andlw	15
  1376  0011A2  0B0F               	andlw	15
  1377  0011A4  090F               	iorlw	15
  1378  0011A6  1569               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1379  0011A8  6F6C               	movwf	(??_lcd_orden+4)& (0+255),b
  1380  0011AA  396C               	swapf	(??_lcd_orden+4)& (0+255),w,b
  1381  0011AC  0BF0               	andlw	240
  1382  0011AE  1168               	iorwf	??_lcd_orden& (0+255),w,b
  1383  0011B0  6E83               	movwf	3971,c	;volatile
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;lcd.c: 281: lcd_pulso();
  1387  0011B2  ECA5  F009         	call	_lcd_pulso	;wreg free
  1388                           
  1389                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  1390  0011B6  CF83 F068          	movff	3971,??_lcd_orden	;volatile
  1391  0011BA  0E0F               	movlw	15
  1392  0011BC  0100               	movlb	0	; () banked
  1393  0011BE  1768               	andwf	??_lcd_orden& (0+255),f,b
  1394  0011C0  C066  F069         	movff	lcd_orden@orden,??_lcd_orden+1
  1395  0011C4  0E0F               	movlw	15
  1396  0011C6  1769               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1397  0011C8  3883               	swapf	3971,w,c	;volatile
  1398  0011CA  0B0F               	andlw	15
  1399  0011CC  0B0F               	andlw	15
  1400  0011CE  090F               	iorlw	15
  1401  0011D0  1569               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1402  0011D2  6F6A               	movwf	(??_lcd_orden+2)& (0+255),b
  1403  0011D4  396A               	swapf	(??_lcd_orden+2)& (0+255),w,b
  1404  0011D6  0BF0               	andlw	240
  1405  0011D8  1168               	iorwf	??_lcd_orden& (0+255),w,b
  1406  0011DA  6E83               	movwf	3971,c	;volatile
  1407                           
  1408                           ;lcd.c: 283: lcd_pulso();
  1409  0011DC  ECA5  F009         	call	_lcd_pulso	;wreg free
  1410  0011E0  0012               	return		;funcret
  1411  0011E2                     __end_of_lcd_orden:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           indf2	equ	0xFDF
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _lcd_pulso *****************
  1423 ;; Defined at:
  1424 ;;		line 270 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    4
  1445 ;; This function calls:
  1446 ;;		_wait_in_ms
  1447 ;; This function is called by:
  1448 ;;		_lcd_iniciar
  1449 ;;		_lcd_orden
  1450 ;;		_lcd_caracter
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text9
  1455  00134A                     __ptext9:
  1456                           	opt stack 0
  1457  00134A                     _lcd_pulso:
  1458                           	opt stack 24
  1459                           
  1460                           ;lcd.c: 271: PORTDbits.RD3=1;
  1461                           
  1462                           ;incstack = 0
  1463  00134A  8683               	bsf	3971,3,c	;volatile
  1464                           
  1465                           ;lcd.c: 272: wait_in_ms(2);
  1466  00134C  0E00               	movlw	0
  1467  00134E  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1468  001350  0E02               	movlw	2
  1469  001352  6E43               	movwf	wait_in_ms@time_in_ms,c
  1470  001354  EC31  F006         	call	_wait_in_ms	;wreg free
  1471                           
  1472                           ;lcd.c: 273: PORTDbits.RD3=0;
  1473  001358  9683               	bcf	3971,3,c	;volatile
  1474                           
  1475                           ;lcd.c: 274: wait_in_ms(2);
  1476  00135A  0E00               	movlw	0
  1477  00135C  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1478  00135E  0E02               	movlw	2
  1479  001360  6E43               	movwf	wait_in_ms@time_in_ms,c
  1480  001362  EC31  F006         	call	_wait_in_ms	;wreg free
  1481  001366  0012               	return		;funcret
  1482  001368                     __end_of_lcd_pulso:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           indf2	equ	0xFDF
  1489                           fsr2h	equ	0xFDA
  1490                           fsr2l	equ	0xFD9
  1491                           status	equ	0xFD8
  1492                           
  1493 ;; *************** function _wait_in_ms *****************
  1494 ;; Defined at:
  1495 ;;		line 79 in file "config.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  time_in_ms      2   66[COMRAM] int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  count_ms        2    4[BANK0 ] unsigned int 
  1500 ;;  count           2    2[BANK0 ] unsigned int 
  1501 ;;  flag            2    0[BANK0 ] unsigned int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         2       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1513 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1514 ;;      Totals:         4       6       0       0       0       0       0       0       0
  1515 ;;Total ram usage:       10 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		___awtoft
  1520 ;;		___ftdiv
  1521 ;;		___fttol
  1522 ;; This function is called by:
  1523 ;;		_lcd_iniciar
  1524 ;;		_lcd_pulso
  1525 ;;		_lcd_limpiar
  1526 ;;		_lcd_origen
  1527 ;;		_ADC_Read
  1528 ;;		_Lcd_Cmd
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text10
  1533  000C62                     __ptext10:
  1534                           	opt stack 0
  1535  000C62                     _wait_in_ms:
  1536                           	opt stack 24
  1537                           
  1538                           ;config.c: 80: unsigned int count = 0;
  1539                           
  1540                           ;incstack = 0
  1541  000C62  0E00               	movlw	0
  1542  000C64  0100               	movlb	0	; () banked
  1543  000C66  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  1544  000C68  0E00               	movlw	0
  1545  000C6A  6F62               	movwf	wait_in_ms@count& (0+255),b
  1546                           
  1547                           ;config.c: 81: unsigned int count_ms = 0;
  1548  000C6C  0E00               	movlw	0
  1549  000C6E  6F65               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  1550  000C70  0E00               	movlw	0
  1551  000C72  6F64               	movwf	wait_in_ms@count_ms& (0+255),b
  1552                           
  1553                           ;config.c: 82: unsigned int flag = 0;
  1554  000C74  0E00               	movlw	0
  1555  000C76  6F61               	movwf	(wait_in_ms@flag+1)& (0+255),b
  1556  000C78  0E00               	movlw	0
  1557  000C7A  6F60               	movwf	wait_in_ms@flag& (0+255),b
  1558                           
  1559                           ;config.c: 84: TMR0L = 131;
  1560  000C7C  0E83               	movlw	131
  1561  000C7E  6ED6               	movwf	4054,c	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;config.c: 87: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1565  000C80  50D6               	movf	4054,w,c	;volatile
  1566  000C82  6E45               	movwf	??_wait_in_ms& (0+255),c
  1567  000C84  6A46               	clrf	(??_wait_in_ms+1)& (0+255),c
  1568  000C86  1E45               	comf	??_wait_in_ms,f,c
  1569  000C88  1E46               	comf	??_wait_in_ms+1,f,c
  1570  000C8A  4A45               	infsnz	??_wait_in_ms,f,c
  1571  000C8C  2A46               	incf	??_wait_in_ms+1,f,c
  1572  000C8E  0E05               	movlw	5
  1573  000C90                     u1985:
  1574  000C90  90D8               	bcf	status,0,c
  1575  000C92  3645               	rlcf	??_wait_in_ms,f,c
  1576  000C94  3646               	rlcf	??_wait_in_ms+1,f,c
  1577  000C96  2EE8               	decfsz	wreg,f,c
  1578  000C98  D7FB               	goto	u1985
  1579  000C9A  0E00               	movlw	0
  1580  000C9C  2445               	addwf	??_wait_in_ms,w,c
  1581  000C9E  6E1B               	movwf	___awtoft@c,c
  1582  000CA0  0E20               	movlw	32
  1583  000CA2  2046               	addwfc	??_wait_in_ms+1,w,c
  1584  000CA4  6E1C               	movwf	___awtoft@c+1,c
  1585  000CA6  EC17  F009         	call	___awtoft	;wreg free
  1586  000CAA  C01B  F028         	movff	?___awtoft,___ftdiv@f2
  1587  000CAE  C01C  F029         	movff	?___awtoft+1,___ftdiv@f2+1
  1588  000CB2  C01D  F02A         	movff	?___awtoft+2,___ftdiv@f2+2
  1589  000CB6  0E00               	movlw	0
  1590  000CB8  6E25               	movwf	___ftdiv@f1,c
  1591  000CBA  0EFA               	movlw	250
  1592  000CBC  6E26               	movwf	___ftdiv@f1+1,c
  1593  000CBE  0E45               	movlw	69
  1594  000CC0  6E27               	movwf	___ftdiv@f1+2,c
  1595  000CC2  EC53  F005         	call	___ftdiv	;wreg free
  1596  000CC6  C025  F034         	movff	?___ftdiv,___fttol@f1
  1597  000CCA  C026  F035         	movff	?___ftdiv+1,___fttol@f1+1
  1598  000CCE  C027  F036         	movff	?___ftdiv+2,___fttol@f1+2
  1599  000CD2  ECD9  F004         	call	___fttol	;wreg free
  1600  000CD6  C034  F064         	movff	?___fttol,wait_in_ms@count_ms
  1601  000CDA  C035  F065         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1602                           
  1603                           ;config.c: 89: TMR0ON = 1;
  1604  000CDE  8ED5               	bsf	4053,7,c	;volatile
  1605                           
  1606                           ;config.c: 91: while (count < count_ms){
  1607  000CE0  D020               	goto	l47
  1608  000CE2                     l43:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;config.c: 92: if(TMR0IF == 1){
  1612  000CE2  A4F2               	btfss	intcon,2,c	;volatile
  1613  000CE4  D01E               	goto	l47
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;config.c: 93: TMR0IF = 0;
  1617  000CE6  94F2               	bcf	intcon,2,c	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;config.c: 94: TMR0L = 131;
  1621  000CE8  0E83               	movlw	131
  1622  000CEA  6ED6               	movwf	4054,c	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;config.c: 95: count ++;
  1626  000CEC  4B62               	infsnz	wait_in_ms@count& (0+255),f,b
  1627  000CEE  2B63               	incf	(wait_in_ms@count+1)& (0+255),f,b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;config.c: 96: if (count == count_ms){
  1631  000CF0  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  1632  000CF2  1962               	xorwf	wait_in_ms@count& (0+255),w,b
  1633  000CF4  E116               	bnz	l2151
  1634  000CF6  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1635  000CF8  1963               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  1636  000CFA  A4D8               	btfss	status,2,c
  1637  000CFC  D012               	goto	l47
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;config.c: 97: flag++;
  1641  000CFE  4B60               	infsnz	wait_in_ms@flag& (0+255),f,b
  1642  000D00  2B61               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;config.c: 98: if (flag != time_in_ms){
  1646  000D02  5160               	movf	wait_in_ms@flag& (0+255),w,b
  1647  000D04  1843               	xorwf	wait_in_ms@time_in_ms,w,c
  1648  000D06  E104               	bnz	u2010
  1649  000D08  5161               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  1650  000D0A  1844               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1651  000D0C  B4D8               	btfsc	status,2,c
  1652  000D0E  D005               	goto	l46
  1653  000D10                     u2010:
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;config.c: 99: count = 0;
  1657  000D10  0E00               	movlw	0
  1658  000D12  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  1659  000D14  0E00               	movlw	0
  1660  000D16  6F62               	movwf	wait_in_ms@count& (0+255),b
  1661                           
  1662                           ;config.c: 100: }
  1663  000D18  D004               	goto	l47
  1664  000D1A                     l46:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;config.c: 101: else{
  1668                           ;config.c: 102: count = count_ms;
  1669  000D1A  C064  F062         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1670  000D1E  C065  F063         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1671  000D22                     l47:
  1672  000D22                     l2151:
  1673  000D22  0100               	movlb	0	; () banked
  1674  000D24  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  1675  000D26  5D62               	subwf	wait_in_ms@count& (0+255),w,b
  1676  000D28  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1677  000D2A  5963               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  1678  000D2C  B0D8               	btfsc	status,0,c
  1679  000D2E  0012               	return	
  1680  000D30  D7D8               	goto	l43
  1681  000D32                     __end_of_wait_in_ms:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           intcon	equ	0xFF2
  1688                           wreg	equ	0xFE8
  1689                           indf2	equ	0xFDF
  1690                           fsr2h	equ	0xFDA
  1691                           fsr2l	equ	0xFD9
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function ___awtoft *****************
  1695 ;; Defined at:
  1696 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  c               2   26[COMRAM] int 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  sign            1   29[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  3   26[COMRAM] float 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1710 ;;      Params:         3       0       0       0       0       0       0       0       0
  1711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1713 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1714 ;;Total ram usage:        4 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    2
  1717 ;; This function calls:
  1718 ;;		___ftpack
  1719 ;; This function is called by:
  1720 ;;		_wait_in_ms
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text11
  1725  00122E                     __ptext11:
  1726                           	opt stack 0
  1727  00122E                     ___awtoft:
  1728                           	opt stack 24
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;incstack = 0
  1732  00122E  0E00               	movlw	0
  1733  001230  6E1E               	movwf	___awtoft@sign,c
  1734  001232  AE1C               	btfss	___awtoft@c+1,7,c
  1735  001234  D006               	goto	l459
  1736  001236  6C1B               	negf	___awtoft@c,c
  1737  001238  1E1C               	comf	___awtoft@c+1,f,c
  1738  00123A  B0D8               	btfsc	status,0,c
  1739  00123C  2A1C               	incf	___awtoft@c+1,f,c
  1740  00123E  0E01               	movlw	1
  1741  001240  6E1E               	movwf	___awtoft@sign,c
  1742  001242                     l459:
  1743  001242  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  1744  001246  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  1745  00124A  6A15               	clrf	___ftpack@arg+2,c
  1746  00124C  0E8E               	movlw	142
  1747  00124E  6E16               	movwf	___ftpack@exp,c
  1748  001250  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  1749  001254  EC99  F006         	call	___ftpack	;wreg free
  1750  001258  C013  F01B         	movff	?___ftpack,?___awtoft
  1751  00125C  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  1752  001260  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  1753  001264  0012               	return	
  1754  001266                     __end_of___awtoft:
  1755                           	opt stack 0
  1756                           tblptru	equ	0xFF8
  1757                           tblptrh	equ	0xFF7
  1758                           tblptrl	equ	0xFF6
  1759                           tablat	equ	0xFF5
  1760                           intcon	equ	0xFF2
  1761                           wreg	equ	0xFE8
  1762                           indf2	equ	0xFDF
  1763                           fsr2h	equ	0xFDA
  1764                           fsr2l	equ	0xFD9
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function _configBoard *****************
  1768 ;; Defined at:
  1769 ;;		line 11 in file "config.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text12
  1798  00109E                     __ptext12:
  1799                           	opt stack 0
  1800  00109E                     _configBoard:
  1801                           	opt stack 29
  1802                           
  1803                           ;config.c: 15: INTCONbits.GIE = 1;
  1804                           
  1805                           ;incstack = 0
  1806  00109E  8EF2               	bsf	intcon,7,c	;volatile
  1807                           
  1808                           ;config.c: 16: INTCONbits.PEIE = 1;
  1809  0010A0  8CF2               	bsf	intcon,6,c	;volatile
  1810                           
  1811                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1812  0010A2  8ED5               	bsf	4053,7,c	;volatile
  1813                           
  1814                           ;config.c: 26: T08BIT = 1;
  1815  0010A4  8CD5               	bsf	4053,6,c	;volatile
  1816                           
  1817                           ;config.c: 27: T0CONbits.T0CS = 0;
  1818  0010A6  9AD5               	bcf	4053,5,c	;volatile
  1819                           
  1820                           ;config.c: 29: T0CONbits.PSA = 0;
  1821  0010A8  96D5               	bcf	4053,3,c	;volatile
  1822                           
  1823                           ;config.c: 30: T0CONbits.T0PS = 100;
  1824  0010AA  50D5               	movf	4053,w,c	;volatile
  1825  0010AC  0BF8               	andlw	-8
  1826  0010AE  0904               	iorlw	4
  1827  0010B0  6ED5               	movwf	4053,c	;volatile
  1828                           
  1829                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1830  0010B2  94F2               	bcf	intcon,2,c	;volatile
  1831                           
  1832                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1833  0010B4  80C1               	bsf	4033,0,c	;volatile
  1834  0010B6  82C1               	bsf	4033,1,c	;volatile
  1835  0010B8  84C1               	bsf	4033,2,c	;volatile
  1836  0010BA  86C1               	bsf	4033,3,c	;volatile
  1837                           
  1838                           ;config.c: 36: TRISA=0b00000000;
  1839  0010BC  0E00               	movlw	0
  1840  0010BE  6E92               	movwf	3986,c	;volatile
  1841                           
  1842                           ;config.c: 37: TRISB=0b00000000;
  1843  0010C0  0E00               	movlw	0
  1844  0010C2  6E93               	movwf	3987,c	;volatile
  1845                           
  1846                           ;config.c: 44: ADCON0 = 0b00000111;
  1847  0010C4  0E07               	movlw	7
  1848  0010C6  6EC2               	movwf	4034,c	;volatile
  1849                           
  1850                           ;config.c: 47: ADCON0bits.ADON = 0;
  1851  0010C8  90C2               	bcf	4034,0,c	;volatile
  1852                           
  1853                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1854  0010CA  8EC0               	bsf	4032,7,c	;volatile
  1855                           
  1856                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1857  0010CC  50C0               	movf	4032,w,c	;volatile
  1858  0010CE  0BF8               	andlw	-8
  1859  0010D0  0906               	iorlw	6
  1860  0010D2  6EC0               	movwf	4032,c	;volatile
  1861                           
  1862                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1863  0010D4  50C0               	movf	4032,w,c	;volatile
  1864  0010D6  0BC7               	andlw	-57
  1865  0010D8  0928               	iorlw	40
  1866  0010DA  6EC0               	movwf	4032,c	;volatile
  1867                           
  1868                           ;config.c: 54: ADCON1bits.PCFG=0b1101;
  1869  0010DC  50C1               	movf	4033,w,c	;volatile
  1870  0010DE  0BF0               	andlw	-16
  1871  0010E0  090D               	iorlw	13
  1872  0010E2  6EC1               	movwf	4033,c	;volatile
  1873                           
  1874                           ;config.c: 55: TRISAbits.RA1=1;
  1875  0010E4  8292               	bsf	3986,1,c	;volatile
  1876                           
  1877                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1878  0010E6  50C0               	movf	4032,w,c	;volatile
  1879  0010E8  0BF8               	andlw	-8
  1880  0010EA  0906               	iorlw	6
  1881  0010EC  6EC0               	movwf	4032,c	;volatile
  1882                           
  1883                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1884  0010EE  9AC1               	bcf	4033,5,c	;volatile
  1885                           
  1886                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1887  0010F0  98C1               	bcf	4033,4,c	;volatile
  1888                           
  1889                           ;config.c: 60: ADCON2bits.ADFM=1;
  1890  0010F2  8EC0               	bsf	4032,7,c	;volatile
  1891                           
  1892                           ;config.c: 64: ADCON0bits.ADON=1;
  1893  0010F4  80C2               	bsf	4034,0,c	;volatile
  1894                           
  1895                           ;config.c: 66: PIE1bits.ADIE=1;
  1896  0010F6  8C9D               	bsf	3997,6,c	;volatile
  1897                           
  1898                           ;config.c: 67: PIR1bits.ADIF=0;
  1899  0010F8  9C9E               	bcf	3998,6,c	;volatile
  1900                           
  1901                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1902  0010FA  86C0               	bsf	4032,3,c	;volatile
  1903  0010FC  88C0               	bsf	4032,4,c	;volatile
  1904  0010FE  8AC0               	bsf	4032,5,c	;volatile
  1905                           
  1906                           ;config.c: 70: ADCON0bits.GO=1;
  1907  001100  82C2               	bsf	4034,1,c	;volatile
  1908                           
  1909                           ;config.c: 74: TRISD=0;
  1910  001102  0E00               	movlw	0
  1911  001104  6E95               	movwf	3989,c	;volatile
  1912                           
  1913                           ;config.c: 75: PORTA=0;
  1914  001106  0E00               	movlw	0
  1915  001108  6E80               	movwf	3968,c	;volatile
  1916  00110A  0012               	return		;funcret
  1917  00110C                     __end_of_configBoard:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           intcon	equ	0xFF2
  1924                           wreg	equ	0xFE8
  1925                           indf2	equ	0xFDF
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function _USART_SendString *****************
  1931 ;; Defined at:
  1932 ;;		line 40 in file "USART_Source_File.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  out             2   19[COMRAM] PTR const unsigned char 
  1935 ;;		 -> main@temp(6), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1947 ;;      Params:         2       0       0       0       0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1950 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1951 ;;Total ram usage:        2 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    2
  1954 ;; This function calls:
  1955 ;;		_USART_TransmitChar
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text13
  1962  001326                     __ptext13:
  1963                           	opt stack 0
  1964  001326                     _USART_SendString:
  1965                           	opt stack 28
  1966                           
  1967                           ;USART_Source_File.c: 42: while(*out!='\0')
  1968                           
  1969                           ;incstack = 0
  1970  001326  D009               	goto	l203
  1971  001328                     
  1972                           ;USART_Source_File.c: 43: {
  1973                           ;USART_Source_File.c: 44: USART_TransmitChar(*out);
  1974  001328  C014  FFD9         	movff	USART_SendString@out,fsr2l
  1975  00132C  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  1976  001330  50DF               	movf	indf2,w,c
  1977  001332  ECD0  F009         	call	_USART_TransmitChar
  1978                           
  1979                           ;USART_Source_File.c: 45: out++;
  1980  001336  4A14               	infsnz	USART_SendString@out,f,c
  1981  001338  2A15               	incf	USART_SendString@out+1,f,c
  1982  00133A                     l203:
  1983  00133A  C014  FFD9         	movff	USART_SendString@out,fsr2l
  1984  00133E  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  1985  001342  50DF               	movf	indf2,w,c
  1986  001344  B4D8               	btfsc	status,2,c
  1987  001346  0012               	return	
  1988  001348  D7EF               	goto	l204
  1989  00134A                     __end_of_USART_SendString:
  1990                           	opt stack 0
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           intcon	equ	0xFF2
  1996                           wreg	equ	0xFE8
  1997                           indf2	equ	0xFDF
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _USART_TransmitChar *****************
  2003 ;; Defined at:
  2004 ;;		line 22 in file "USART_Source_File.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  out             1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  out             1   18[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    1
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_USART_SendString
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text14
  2033  0013A0                     __ptext14:
  2034                           	opt stack 0
  2035  0013A0                     _USART_TransmitChar:
  2036                           	opt stack 28
  2037                           
  2038                           ;incstack = 0
  2039                           ;USART_TransmitChar@out stored from wreg
  2040  0013A0  6E13               	movwf	USART_TransmitChar@out,c
  2041  0013A2                     
  2042                           ;USART_Source_File.c: 24: while(TXIF==0);
  2043  0013A2  A89E               	btfss	3998,4,c	;volatile
  2044  0013A4  D7FE               	goto	l1647
  2045                           
  2046                           ;USART_Source_File.c: 25: TXREG=out;
  2047  0013A6  C013  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2048  0013AA  0012               	return		;funcret
  2049  0013AC                     __end_of_USART_TransmitChar:
  2050                           	opt stack 0
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           intcon	equ	0xFF2
  2056                           wreg	equ	0xFE8
  2057                           indf2	equ	0xFDF
  2058                           fsr2h	equ	0xFDA
  2059                           fsr2l	equ	0xFD9
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _USART_ReceiveString *****************
  2063 ;; Defined at:
  2064 ;;		line 57 in file "USART_Source_File.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  Input           2   18[COMRAM] PTR unsigned char 
  2067 ;;		 -> main@temp(6), 
  2068 ;;  length          1   20[COMRAM] unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  temp            1   26[COMRAM] unsigned char 
  2071 ;;  i               2   27[COMRAM] int 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         3       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2084 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:       11 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text15
  2096  000F1C                     __ptext15:
  2097                           	opt stack 0
  2098  000F1C                     _USART_ReceiveString:
  2099                           	opt stack 29
  2100                           
  2101                           ;USART_Source_File.c: 60: for(int i=0;i<=length-2;i++) {
  2102                           
  2103                           ;incstack = 0
  2104  000F1C  0E00               	movlw	0
  2105  000F1E  6E1D               	movwf	USART_ReceiveString@i+1,c
  2106  000F20  0E00               	movlw	0
  2107  000F22  6E1C               	movwf	USART_ReceiveString@i,c
  2108  000F24  D02D               	goto	l217
  2109  000F26                     
  2110                           ;USART_Source_File.c: 61: Input[i]=0;
  2111  000F26  501C               	movf	USART_ReceiveString@i,w,c
  2112  000F28  2413               	addwf	USART_ReceiveString@Input,w,c
  2113  000F2A  6ED9               	movwf	fsr2l,c
  2114  000F2C  501D               	movf	USART_ReceiveString@i+1,w,c
  2115  000F2E  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2116  000F30  6EDA               	movwf	fsr2h,c
  2117  000F32  0E00               	movlw	0
  2118  000F34  6EDF               	movwf	indf2,c
  2119                           
  2120                           ;USART_Source_File.c: 62: RCREG=0;
  2121  000F36  0E00               	movlw	0
  2122  000F38  6EAE               	movwf	4014,c	;volatile
  2123  000F3A  AA9E               	btfss	3998,5,c	;volatile
  2124  000F3C  D7FE               	goto	l220
  2125                           
  2126                           ;USART_Source_File.c: 65: char temp=RCREG;
  2127  000F3E  CFAE F01B          	movff	4014,USART_ReceiveString@temp	;volatile
  2128                           
  2129                           ;USART_Source_File.c: 66: if(temp>=97 && temp <=122){
  2130  000F42  0E60               	movlw	96
  2131  000F44  641B               	cpfsgt	USART_ReceiveString@temp,c
  2132  000F46  D00C               	goto	l222
  2133  000F48  0E7B               	movlw	123
  2134  000F4A  601B               	cpfslt	USART_ReceiveString@temp,c
  2135  000F4C  D009               	goto	l222
  2136                           
  2137                           ;USART_Source_File.c: 67: Input[i] =temp;
  2138  000F4E  501C               	movf	USART_ReceiveString@i,w,c
  2139  000F50  2413               	addwf	USART_ReceiveString@Input,w,c
  2140  000F52  6ED9               	movwf	fsr2l,c
  2141  000F54  501D               	movf	USART_ReceiveString@i+1,w,c
  2142  000F56  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2143  000F58  6EDA               	movwf	fsr2h,c
  2144  000F5A  C01B  FFDF         	movff	USART_ReceiveString@temp,indf2
  2145                           
  2146                           ;USART_Source_File.c: 68: }else
  2147  000F5E  D00E               	goto	l223
  2148  000F60                     l222:
  2149                           
  2150                           ;USART_Source_File.c: 69: Input[i+1]=0;
  2151  000F60  0E01               	movlw	1
  2152  000F62  241C               	addwf	USART_ReceiveString@i,w,c
  2153  000F64  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2154  000F66  0E00               	movlw	0
  2155  000F68  201D               	addwfc	USART_ReceiveString@i+1,w,c
  2156  000F6A  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2157  000F6C  5016               	movf	??_USART_ReceiveString,w,c
  2158  000F6E  2413               	addwf	USART_ReceiveString@Input,w,c
  2159  000F70  6ED9               	movwf	fsr2l,c
  2160  000F72  5017               	movf	??_USART_ReceiveString+1,w,c
  2161  000F74  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2162  000F76  6EDA               	movwf	fsr2h,c
  2163  000F78  0E00               	movlw	0
  2164  000F7A  6EDF               	movwf	indf2,c
  2165  000F7C                     l223:
  2166  000F7C  4A1C               	infsnz	USART_ReceiveString@i,f,c
  2167  000F7E  2A1D               	incf	USART_ReceiveString@i+1,f,c
  2168  000F80                     l217:
  2169  000F80  0EFE               	movlw	254
  2170  000F82  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2171  000F84  0EFF               	movlw	255
  2172  000F86  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2173  000F88  5015               	movf	USART_ReceiveString@length,w,c
  2174  000F8A  6E18               	movwf	(??_USART_ReceiveString+2)& (0+255),c
  2175  000F8C  6A19               	clrf	(??_USART_ReceiveString+3)& (0+255),c
  2176  000F8E  5016               	movf	??_USART_ReceiveString,w,c
  2177  000F90  2618               	addwf	??_USART_ReceiveString+2,f,c
  2178  000F92  5017               	movf	??_USART_ReceiveString+1,w,c
  2179  000F94  2219               	addwfc	??_USART_ReceiveString+3,f,c
  2180  000F96  501C               	movf	USART_ReceiveString@i,w,c
  2181  000F98  5C18               	subwf	??_USART_ReceiveString+2,w,c
  2182  000F9A  5019               	movf	??_USART_ReceiveString+3,w,c
  2183  000F9C  0A80               	xorlw	128
  2184  000F9E  6E1A               	movwf	(??_USART_ReceiveString+4)& (0+255),c
  2185  000FA0  501D               	movf	USART_ReceiveString@i+1,w,c
  2186  000FA2  0A80               	xorlw	128
  2187  000FA4  581A               	subwfb	(??_USART_ReceiveString+4)& (0+255),w,c
  2188  000FA6  A0D8               	btfss	status,0,c
  2189  000FA8  0012               	return	
  2190  000FAA  D7BD               	goto	l218
  2191  000FAC                     __end_of_USART_ReceiveString:
  2192                           	opt stack 0
  2193                           tblptru	equ	0xFF8
  2194                           tblptrh	equ	0xFF7
  2195                           tblptrl	equ	0xFF6
  2196                           tablat	equ	0xFF5
  2197                           intcon	equ	0xFF2
  2198                           wreg	equ	0xFE8
  2199                           indf2	equ	0xFDF
  2200                           fsr2h	equ	0xFDA
  2201                           fsr2l	equ	0xFD9
  2202                           status	equ	0xFD8
  2203                           
  2204 ;; *************** function _USART_Init *****************
  2205 ;; Defined at:
  2206 ;;		line 10 in file "USART_Source_File.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  baud_rate       4   66[COMRAM] long 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  temp            3    0[BANK0 ] float 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2220 ;;      Params:         4       0       0       0       0       0       0       0       0
  2221 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2223 ;;      Totals:         4       3       0       0       0       0       0       0       0
  2224 ;;Total ram usage:        7 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    3
  2227 ;; This function calls:
  2228 ;;		___altoft
  2229 ;;		___ftadd
  2230 ;;		___ftdiv
  2231 ;;		___fttol
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text16
  2238  000FAC                     __ptext16:
  2239                           	opt stack 0
  2240  000FAC                     _USART_Init:
  2241                           	opt stack 27
  2242                           
  2243                           ;USART_Source_File.c: 12: float temp;
  2244                           ;USART_Source_File.c: 13: TRISC6=0;
  2245                           
  2246                           ;incstack = 0
  2247  000FAC  9C94               	bcf	3988,6,c	;volatile
  2248                           
  2249                           ;USART_Source_File.c: 14: TRISC7=1;
  2250  000FAE  8E94               	bsf	3988,7,c	;volatile
  2251                           
  2252                           ;USART_Source_File.c: 15: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  2253  000FB0  C043  F01B         	movff	USART_Init@baud_rate,___altoft@c
  2254  000FB4  C044  F01C         	movff	USART_Init@baud_rate+1,___altoft@c+1
  2255  000FB8  C045  F01D         	movff	USART_Init@baud_rate+2,___altoft@c+2
  2256  000FBC  C046  F01E         	movff	USART_Init@baud_rate+3,___altoft@c+3
  2257  000FC0  EC13  F008         	call	___altoft	;wreg free
  2258  000FC4  C01B  F028         	movff	?___altoft,___ftdiv@f2
  2259  000FC8  C01C  F029         	movff	?___altoft+1,___ftdiv@f2+1
  2260  000FCC  C01D  F02A         	movff	?___altoft+2,___ftdiv@f2+2
  2261  000FD0  0E24               	movlw	36
  2262  000FD2  6E25               	movwf	___ftdiv@f1,c
  2263  000FD4  0EF4               	movlw	244
  2264  000FD6  6E26               	movwf	___ftdiv@f1+1,c
  2265  000FD8  0E47               	movlw	71
  2266  000FDA  6E27               	movwf	___ftdiv@f1+2,c
  2267  000FDC  EC53  F005         	call	___ftdiv	;wreg free
  2268  000FE0  C025  F034         	movff	?___ftdiv,___ftadd@f1
  2269  000FE4  C026  F035         	movff	?___ftdiv+1,___ftadd@f1+1
  2270  000FE8  C027  F036         	movff	?___ftdiv+2,___ftadd@f1+2
  2271  000FEC  0E00               	movlw	0
  2272  000FEE  6E37               	movwf	___ftadd@f2,c
  2273  000FF0  0E80               	movlw	128
  2274  000FF2  6E38               	movwf	___ftadd@f2+1,c
  2275  000FF4  0EBF               	movlw	191
  2276  000FF6  6E39               	movwf	___ftadd@f2+2,c
  2277  000FF8  EC03  F004         	call	___ftadd	;wreg free
  2278  000FFC  C034  F060         	movff	?___ftadd,USART_Init@temp
  2279  001000  C035  F061         	movff	?___ftadd+1,USART_Init@temp+1
  2280  001004  C036  F062         	movff	?___ftadd+2,USART_Init@temp+2
  2281                           
  2282                           ;USART_Source_File.c: 16: SPBRG=(int)temp;
  2283  001008  C060  F034         	movff	USART_Init@temp,___fttol@f1
  2284  00100C  C061  F035         	movff	USART_Init@temp+1,___fttol@f1+1
  2285  001010  C062  F036         	movff	USART_Init@temp+2,___fttol@f1+2
  2286  001014  ECD9  F004         	call	___fttol	;wreg free
  2287  001018  5034               	movf	?___fttol,w,c
  2288  00101A  6EAF               	movwf	4015,c	;volatile
  2289                           
  2290                           ;USART_Source_File.c: 17: TXSTA=0x20;
  2291  00101C  0E20               	movlw	32
  2292  00101E  6EAC               	movwf	4012,c	;volatile
  2293                           
  2294                           ;USART_Source_File.c: 19: RCSTA=0x94;
  2295  001020  0E94               	movlw	148
  2296  001022  6EAB               	movwf	4011,c	;volatile
  2297  001024  0012               	return		;funcret
  2298  001026                     __end_of_USART_Init:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           intcon	equ	0xFF2
  2305                           wreg	equ	0xFE8
  2306                           indf2	equ	0xFDF
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function ___fttol *****************
  2312 ;; Defined at:
  2313 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  f1              3   51[COMRAM] float 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  lval            4   61[COMRAM] unsigned long 
  2318 ;;  exp1            1   65[COMRAM] unsigned char 
  2319 ;;  sign1           1   60[COMRAM] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  4   51[COMRAM] long 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2329 ;;      Params:         4       0       0       0       0       0       0       0       0
  2330 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2331 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2332 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2333 ;;Total ram usage:       15 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_wait_in_ms
  2340 ;;		_USART_Init
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text17
  2345  0009B2                     __ptext17:
  2346                           	opt stack 0
  2347  0009B2                     ___fttol:
  2348                           	opt stack 25
  2349                           
  2350                           ;incstack = 0
  2351  0009B2  C036  F038         	movff	___fttol@f1+2,??___fttol
  2352  0009B6  6A39               	clrf	(??___fttol+1)& (0+255),c
  2353  0009B8  6A3A               	clrf	(??___fttol+2)& (0+255),c
  2354  0009BA  3435               	rlcf	___fttol@f1+1,w,c
  2355  0009BC  3638               	rlcf	??___fttol& (0+255),f,c
  2356  0009BE  E301               	bnc	u1901
  2357  0009C0  8039               	bsf	(??___fttol+1)& (0+255),0,c
  2358  0009C2                     u1901:
  2359  0009C2  5038               	movf	??___fttol,w,c
  2360  0009C4  6E42               	movwf	___fttol@exp1,c
  2361  0009C6  5042               	movf	___fttol@exp1,w,c
  2362  0009C8  A4D8               	btfss	status,2,c
  2363  0009CA  D009               	goto	l578
  2364  0009CC  0E00               	movlw	0
  2365  0009CE  6E34               	movwf	?___fttol,c
  2366  0009D0  0E00               	movlw	0
  2367  0009D2  6E35               	movwf	?___fttol+1,c
  2368  0009D4  0E00               	movlw	0
  2369  0009D6  6E36               	movwf	?___fttol+2,c
  2370  0009D8  0E00               	movlw	0
  2371  0009DA  6E37               	movwf	?___fttol+3,c
  2372  0009DC  0012               	return	
  2373  0009DE                     l578:
  2374  0009DE  0E17               	movlw	23
  2375  0009E0  6E38               	movwf	??___fttol& (0+255),c
  2376  0009E2  C034  F039         	movff	___fttol@f1,??___fttol+1
  2377  0009E6  C035  F03A         	movff	___fttol@f1+1,??___fttol+2
  2378  0009EA  C036  F03B         	movff	___fttol@f1+2,??___fttol+3
  2379  0009EE  2838               	incf	??___fttol,w,c
  2380  0009F0  6E3C               	movwf	(??___fttol+4)& (0+255),c
  2381  0009F2  D004               	goto	u1920
  2382  0009F4                     u1925:
  2383  0009F4  90D8               	bcf	status,0,c
  2384  0009F6  323B               	rrcf	??___fttol+3,f,c
  2385  0009F8  323A               	rrcf	??___fttol+2,f,c
  2386  0009FA  3239               	rrcf	??___fttol+1,f,c
  2387  0009FC                     u1920:
  2388  0009FC  2E3C               	decfsz	(??___fttol+4)& (0+255),f,c
  2389  0009FE  D7FA               	goto	u1925
  2390  000A00  5039               	movf	??___fttol+1,w,c
  2391  000A02  6E3D               	movwf	___fttol@sign1,c
  2392  000A04  8E35               	bsf	___fttol@f1+1,7,c
  2393  000A06  0EFF               	movlw	255
  2394  000A08  1634               	andwf	___fttol@f1,f,c
  2395  000A0A  0EFF               	movlw	255
  2396  000A0C  1635               	andwf	___fttol@f1+1,f,c
  2397  000A0E  0E00               	movlw	0
  2398  000A10  1636               	andwf	___fttol@f1+2,f,c
  2399  000A12  5034               	movf	___fttol@f1,w,c
  2400  000A14  6E3E               	movwf	___fttol@lval,c
  2401  000A16  5035               	movf	___fttol@f1+1,w,c
  2402  000A18  6E3F               	movwf	___fttol@lval+1,c
  2403  000A1A  5036               	movf	___fttol@f1+2,w,c
  2404  000A1C  6E40               	movwf	___fttol@lval+2,c
  2405  000A1E  6A41               	clrf	___fttol@lval+3,c
  2406  000A20  0E8E               	movlw	142
  2407  000A22  5E42               	subwf	___fttol@exp1,f,c
  2408  000A24  AE42               	btfss	___fttol@exp1,7,c
  2409  000A26  D016               	goto	l580
  2410  000A28  5042               	movf	___fttol@exp1,w,c
  2411  000A2A  0A80               	xorlw	128
  2412  000A2C  0F8F               	addlw	143
  2413  000A2E  B0D8               	btfsc	status,0,c
  2414  000A30  D009               	goto	l581
  2415  000A32  0E00               	movlw	0
  2416  000A34  6E34               	movwf	?___fttol,c
  2417  000A36  0E00               	movlw	0
  2418  000A38  6E35               	movwf	?___fttol+1,c
  2419  000A3A  0E00               	movlw	0
  2420  000A3C  6E36               	movwf	?___fttol+2,c
  2421  000A3E  0E00               	movlw	0
  2422  000A40  6E37               	movwf	?___fttol+3,c
  2423  000A42  0012               	return	
  2424  000A44                     l581:
  2425  000A44  90D8               	bcf	status,0,c
  2426  000A46  3241               	rrcf	___fttol@lval+3,f,c
  2427  000A48  3240               	rrcf	___fttol@lval+2,f,c
  2428  000A4A  323F               	rrcf	___fttol@lval+1,f,c
  2429  000A4C  323E               	rrcf	___fttol@lval,f,c
  2430  000A4E  3E42               	incfsz	___fttol@exp1,f,c
  2431  000A50  D7F9               	goto	l581
  2432  000A52  D015               	goto	u1960
  2433  000A54                     l580:
  2434  000A54  0E17               	movlw	23
  2435  000A56  6442               	cpfsgt	___fttol@exp1,c
  2436  000A58  D00F               	goto	l586
  2437  000A5A  0E00               	movlw	0
  2438  000A5C  6E34               	movwf	?___fttol,c
  2439  000A5E  0E00               	movlw	0
  2440  000A60  6E35               	movwf	?___fttol+1,c
  2441  000A62  0E00               	movlw	0
  2442  000A64  6E36               	movwf	?___fttol+2,c
  2443  000A66  0E00               	movlw	0
  2444  000A68  6E37               	movwf	?___fttol+3,c
  2445  000A6A  0012               	return	
  2446  000A6C  90D8               	bcf	status,0,c
  2447  000A6E  363E               	rlcf	___fttol@lval,f,c
  2448  000A70  363F               	rlcf	___fttol@lval+1,f,c
  2449  000A72  3640               	rlcf	___fttol@lval+2,f,c
  2450  000A74  3641               	rlcf	___fttol@lval+3,f,c
  2451  000A76  0642               	decf	___fttol@exp1,f,c
  2452  000A78                     l586:
  2453  000A78  5042               	movf	___fttol@exp1,w,c
  2454  000A7A  A4D8               	btfss	status,2,c
  2455  000A7C  D7F7               	goto	l587
  2456  000A7E                     u1960:
  2457  000A7E  503D               	movf	___fttol@sign1,w,c
  2458  000A80  B4D8               	btfsc	status,2,c
  2459  000A82  D008               	goto	l589
  2460  000A84  1E41               	comf	___fttol@lval+3,f,c
  2461  000A86  1E40               	comf	___fttol@lval+2,f,c
  2462  000A88  1E3F               	comf	___fttol@lval+1,f,c
  2463  000A8A  6C3E               	negf	___fttol@lval,c
  2464  000A8C  0E00               	movlw	0
  2465  000A8E  223F               	addwfc	___fttol@lval+1,f,c
  2466  000A90  2240               	addwfc	___fttol@lval+2,f,c
  2467  000A92  2241               	addwfc	___fttol@lval+3,f,c
  2468  000A94                     l589:
  2469  000A94  C03E  F034         	movff	___fttol@lval,?___fttol
  2470  000A98  C03F  F035         	movff	___fttol@lval+1,?___fttol+1
  2471  000A9C  C040  F036         	movff	___fttol@lval+2,?___fttol+2
  2472  000AA0  C041  F037         	movff	___fttol@lval+3,?___fttol+3
  2473  000AA4  0012               	return	
  2474  000AA6                     __end_of___fttol:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           intcon	equ	0xFF2
  2481                           wreg	equ	0xFE8
  2482                           indf2	equ	0xFDF
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function ___ftdiv *****************
  2488 ;; Defined at:
  2489 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  f1              3   36[COMRAM] float 
  2492 ;;  f2              3   39[COMRAM] float 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  f3              3   46[COMRAM] float 
  2495 ;;  sign            1   50[COMRAM] unsigned char 
  2496 ;;  exp             1   49[COMRAM] unsigned char 
  2497 ;;  cntr            1   45[COMRAM] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  3   36[COMRAM] float 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         6       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2510 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:       15 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		___ftpack
  2516 ;; This function is called by:
  2517 ;;		_wait_in_ms
  2518 ;;		_USART_Init
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text18
  2523  000AA6                     __ptext18:
  2524                           	opt stack 0
  2525  000AA6                     ___ftdiv:
  2526                           	opt stack 24
  2527                           
  2528                           ;incstack = 0
  2529  000AA6  C027  F02B         	movff	___ftdiv@f1+2,??___ftdiv
  2530  000AAA  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2531  000AAC  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2532  000AAE  3426               	rlcf	___ftdiv@f1+1,w,c
  2533  000AB0  362B               	rlcf	??___ftdiv& (0+255),f,c
  2534  000AB2  E301               	bnc	u1841
  2535  000AB4  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2536  000AB6                     u1841:
  2537  000AB6  502B               	movf	??___ftdiv,w,c
  2538  000AB8  6E32               	movwf	___ftdiv@exp,c
  2539  000ABA  5032               	movf	___ftdiv@exp,w,c
  2540  000ABC  A4D8               	btfss	status,2,c
  2541  000ABE  D007               	goto	l542
  2542  000AC0  0E00               	movlw	0
  2543  000AC2  6E25               	movwf	?___ftdiv,c
  2544  000AC4  0E00               	movlw	0
  2545  000AC6  6E26               	movwf	?___ftdiv+1,c
  2546  000AC8  0E00               	movlw	0
  2547  000ACA  6E27               	movwf	?___ftdiv+2,c
  2548  000ACC  0012               	return	
  2549  000ACE                     l542:
  2550  000ACE  C02A  F02B         	movff	___ftdiv@f2+2,??___ftdiv
  2551  000AD2  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2552  000AD4  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2553  000AD6  3429               	rlcf	___ftdiv@f2+1,w,c
  2554  000AD8  362B               	rlcf	??___ftdiv& (0+255),f,c
  2555  000ADA  E301               	bnc	u1861
  2556  000ADC  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2557  000ADE                     u1861:
  2558  000ADE  502B               	movf	??___ftdiv,w,c
  2559  000AE0  6E33               	movwf	___ftdiv@sign,c
  2560  000AE2  5033               	movf	___ftdiv@sign,w,c
  2561  000AE4  A4D8               	btfss	status,2,c
  2562  000AE6  D007               	goto	l544
  2563  000AE8  0E00               	movlw	0
  2564  000AEA  6E25               	movwf	?___ftdiv,c
  2565  000AEC  0E00               	movlw	0
  2566  000AEE  6E26               	movwf	?___ftdiv+1,c
  2567  000AF0  0E00               	movlw	0
  2568  000AF2  6E27               	movwf	?___ftdiv+2,c
  2569  000AF4  0012               	return	
  2570  000AF6                     l544:
  2571  000AF6  0E00               	movlw	0
  2572  000AF8  6E2F               	movwf	___ftdiv@f3,c
  2573  000AFA  0E00               	movlw	0
  2574  000AFC  6E30               	movwf	___ftdiv@f3+1,c
  2575  000AFE  0E00               	movlw	0
  2576  000B00  6E31               	movwf	___ftdiv@f3+2,c
  2577  000B02  5033               	movf	___ftdiv@sign,w,c
  2578  000B04  0F89               	addlw	137
  2579  000B06  5E32               	subwf	___ftdiv@exp,f,c
  2580  000B08  C027  F033         	movff	___ftdiv@f1+2,___ftdiv@sign
  2581  000B0C  502A               	movf	___ftdiv@f2+2,w,c
  2582  000B0E  1A33               	xorwf	___ftdiv@sign,f,c
  2583  000B10  0E80               	movlw	128
  2584  000B12  1633               	andwf	___ftdiv@sign,f,c
  2585  000B14  8E26               	bsf	___ftdiv@f1+1,7,c
  2586  000B16  0EFF               	movlw	255
  2587  000B18  1625               	andwf	___ftdiv@f1,f,c
  2588  000B1A  0EFF               	movlw	255
  2589  000B1C  1626               	andwf	___ftdiv@f1+1,f,c
  2590  000B1E  0E00               	movlw	0
  2591  000B20  1627               	andwf	___ftdiv@f1+2,f,c
  2592  000B22  8E29               	bsf	___ftdiv@f2+1,7,c
  2593  000B24  0EFF               	movlw	255
  2594  000B26  1628               	andwf	___ftdiv@f2,f,c
  2595  000B28  0EFF               	movlw	255
  2596  000B2A  1629               	andwf	___ftdiv@f2+1,f,c
  2597  000B2C  0E00               	movlw	0
  2598  000B2E  162A               	andwf	___ftdiv@f2+2,f,c
  2599  000B30  0E18               	movlw	24
  2600  000B32  6E2E               	movwf	___ftdiv@cntr,c
  2601  000B34  90D8               	bcf	status,0,c
  2602  000B36  362F               	rlcf	___ftdiv@f3,f,c
  2603  000B38  3630               	rlcf	___ftdiv@f3+1,f,c
  2604  000B3A  3631               	rlcf	___ftdiv@f3+2,f,c
  2605  000B3C  5028               	movf	___ftdiv@f2,w,c
  2606  000B3E  5C25               	subwf	___ftdiv@f1,w,c
  2607  000B40  5029               	movf	___ftdiv@f2+1,w,c
  2608  000B42  5826               	subwfb	___ftdiv@f1+1,w,c
  2609  000B44  502A               	movf	___ftdiv@f2+2,w,c
  2610  000B46  5827               	subwfb	___ftdiv@f1+2,w,c
  2611  000B48  A0D8               	btfss	status,0,c
  2612  000B4A  D007               	goto	l546
  2613  000B4C  5028               	movf	___ftdiv@f2,w,c
  2614  000B4E  5E25               	subwf	___ftdiv@f1,f,c
  2615  000B50  5029               	movf	___ftdiv@f2+1,w,c
  2616  000B52  5A26               	subwfb	___ftdiv@f1+1,f,c
  2617  000B54  502A               	movf	___ftdiv@f2+2,w,c
  2618  000B56  5A27               	subwfb	___ftdiv@f1+2,f,c
  2619  000B58  802F               	bsf	___ftdiv@f3,0,c
  2620  000B5A                     l546:
  2621  000B5A  90D8               	bcf	status,0,c
  2622  000B5C  3625               	rlcf	___ftdiv@f1,f,c
  2623  000B5E  3626               	rlcf	___ftdiv@f1+1,f,c
  2624  000B60  3627               	rlcf	___ftdiv@f1+2,f,c
  2625  000B62  2E2E               	decfsz	___ftdiv@cntr,f,c
  2626  000B64  D7E7               	goto	l545
  2627  000B66  C02F  F013         	movff	___ftdiv@f3,___ftpack@arg
  2628  000B6A  C030  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2629  000B6E  C031  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2630  000B72  C032  F016         	movff	___ftdiv@exp,___ftpack@exp
  2631  000B76  C033  F017         	movff	___ftdiv@sign,___ftpack@sign
  2632  000B7A  EC99  F006         	call	___ftpack	;wreg free
  2633  000B7E  C013  F025         	movff	?___ftpack,?___ftdiv
  2634  000B82  C014  F026         	movff	?___ftpack+1,?___ftdiv+1
  2635  000B86  C015  F027         	movff	?___ftpack+2,?___ftdiv+2
  2636  000B8A  0012               	return	
  2637  000B8C                     __end_of___ftdiv:
  2638                           	opt stack 0
  2639                           tblptru	equ	0xFF8
  2640                           tblptrh	equ	0xFF7
  2641                           tblptrl	equ	0xFF6
  2642                           tablat	equ	0xFF5
  2643                           intcon	equ	0xFF2
  2644                           wreg	equ	0xFE8
  2645                           indf2	equ	0xFDF
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function ___ftadd *****************
  2651 ;; Defined at:
  2652 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  f1              3   51[COMRAM] float 
  2655 ;;  f2              3   54[COMRAM] float 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  exp1            1   62[COMRAM] unsigned char 
  2658 ;;  exp2            1   61[COMRAM] unsigned char 
  2659 ;;  sign            1   60[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  3   51[COMRAM] float 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2669 ;;      Params:         6       0       0       0       0       0       0       0       0
  2670 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2671 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2672 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2673 ;;Total ram usage:       12 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    2
  2676 ;; This function calls:
  2677 ;;		___ftpack
  2678 ;; This function is called by:
  2679 ;;		_USART_Init
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text19
  2684  000806                     __ptext19:
  2685                           	opt stack 0
  2686  000806                     ___ftadd:
  2687                           	opt stack 27
  2688                           
  2689                           ;incstack = 0
  2690  000806  C036  F03A         	movff	___ftadd@f1+2,??___ftadd
  2691  00080A  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2692  00080C  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2693  00080E  3435               	rlcf	___ftadd@f1+1,w,c
  2694  000810  363A               	rlcf	??___ftadd& (0+255),f,c
  2695  000812  E301               	bnc	u2071
  2696  000814  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2697  000816                     u2071:
  2698  000816  503A               	movf	??___ftadd,w,c
  2699  000818  6E3F               	movwf	___ftadd@exp1,c
  2700  00081A  C039  F03A         	movff	___ftadd@f2+2,??___ftadd
  2701  00081E  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2702  000820  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2703  000822  3438               	rlcf	___ftadd@f2+1,w,c
  2704  000824  363A               	rlcf	??___ftadd& (0+255),f,c
  2705  000826  E301               	bnc	u2081
  2706  000828  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2707  00082A                     u2081:
  2708  00082A  503A               	movf	??___ftadd,w,c
  2709  00082C  6E3E               	movwf	___ftadd@exp2,c
  2710  00082E  503F               	movf	___ftadd@exp1,w,c
  2711  000830  B4D8               	btfsc	status,2,c
  2712  000832  D00B               	goto	u2110
  2713  000834  503E               	movf	___ftadd@exp2,w,c
  2714  000836  5C3F               	subwf	___ftadd@exp1,w,c
  2715  000838  B0D8               	btfsc	status,0,c
  2716  00083A  D00E               	goto	l509
  2717  00083C  503F               	movf	___ftadd@exp1,w,c
  2718  00083E  0800               	sublw	0
  2719  000840  243E               	addwf	___ftadd@exp2,w,c
  2720  000842  6E3A               	movwf	??___ftadd& (0+255),c
  2721  000844  0E18               	movlw	24
  2722  000846  643A               	cpfsgt	??___ftadd,c
  2723  000848  D007               	goto	l509
  2724  00084A                     u2110:
  2725  00084A  C037  F034         	movff	___ftadd@f2,?___ftadd
  2726  00084E  C038  F035         	movff	___ftadd@f2+1,?___ftadd+1
  2727  000852  C039  F036         	movff	___ftadd@f2+2,?___ftadd+2
  2728  000856  0012               	return	
  2729  000858                     l509:
  2730  000858  503E               	movf	___ftadd@exp2,w,c
  2731  00085A  B4D8               	btfsc	status,2,c
  2732  00085C  D00B               	goto	u2140
  2733  00085E  503F               	movf	___ftadd@exp1,w,c
  2734  000860  5C3E               	subwf	___ftadd@exp2,w,c
  2735  000862  B0D8               	btfsc	status,0,c
  2736  000864  D00E               	goto	l513
  2737  000866  503E               	movf	___ftadd@exp2,w,c
  2738  000868  0800               	sublw	0
  2739  00086A  243F               	addwf	___ftadd@exp1,w,c
  2740  00086C  6E3A               	movwf	??___ftadd& (0+255),c
  2741  00086E  0E18               	movlw	24
  2742  000870  643A               	cpfsgt	??___ftadd,c
  2743  000872  D007               	goto	l513
  2744  000874                     u2140:
  2745  000874  C034  F034         	movff	___ftadd@f1,?___ftadd
  2746  000878  C035  F035         	movff	___ftadd@f1+1,?___ftadd+1
  2747  00087C  C036  F036         	movff	___ftadd@f1+2,?___ftadd+2
  2748  000880  0012               	return	
  2749  000882                     l513:
  2750  000882  0E06               	movlw	6
  2751  000884  6E3D               	movwf	___ftadd@sign,c
  2752  000886  BE36               	btfsc	___ftadd@f1+2,7,c
  2753  000888  8E3D               	bsf	___ftadd@sign,7,c
  2754  00088A  BE39               	btfsc	___ftadd@f2+2,7,c
  2755  00088C  8C3D               	bsf	___ftadd@sign,6,c
  2756  00088E  8E35               	bsf	___ftadd@f1+1,7,c
  2757  000890  0EFF               	movlw	255
  2758  000892  1634               	andwf	___ftadd@f1,f,c
  2759  000894  0EFF               	movlw	255
  2760  000896  1635               	andwf	___ftadd@f1+1,f,c
  2761  000898  0E00               	movlw	0
  2762  00089A  1636               	andwf	___ftadd@f1+2,f,c
  2763  00089C  8E38               	bsf	___ftadd@f2+1,7,c
  2764  00089E  0EFF               	movlw	255
  2765  0008A0  1637               	andwf	___ftadd@f2,f,c
  2766  0008A2  0EFF               	movlw	255
  2767  0008A4  1638               	andwf	___ftadd@f2+1,f,c
  2768  0008A6  0E00               	movlw	0
  2769  0008A8  1639               	andwf	___ftadd@f2+2,f,c
  2770  0008AA  503E               	movf	___ftadd@exp2,w,c
  2771  0008AC  5C3F               	subwf	___ftadd@exp1,w,c
  2772  0008AE  B0D8               	btfsc	status,0,c
  2773  0008B0  D01B               	goto	l518
  2774  0008B2                     u2170:
  2775  0008B2  90D8               	bcf	status,0,c
  2776  0008B4  3637               	rlcf	___ftadd@f2,f,c
  2777  0008B6  3638               	rlcf	___ftadd@f2+1,f,c
  2778  0008B8  3639               	rlcf	___ftadd@f2+2,f,c
  2779  0008BA  063E               	decf	___ftadd@exp2,f,c
  2780  0008BC  503F               	movf	___ftadd@exp1,w,c
  2781  0008BE  183E               	xorwf	___ftadd@exp2,w,c
  2782  0008C0  B4D8               	btfsc	status,2,c
  2783  0008C2  D00D               	goto	l523
  2784  0008C4  063D               	decf	___ftadd@sign,f,c
  2785  0008C6  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  2786  0008CA  0E07               	movlw	7
  2787  0008CC  163A               	andwf	??___ftadd,f,c
  2788  0008CE  B4D8               	btfsc	status,2,c
  2789  0008D0  D006               	goto	l523
  2790  0008D2  D7EF               	goto	u2170
  2791  0008D4  90D8               	bcf	status,0,c
  2792  0008D6  3236               	rrcf	___ftadd@f1+2,f,c
  2793  0008D8  3235               	rrcf	___ftadd@f1+1,f,c
  2794  0008DA  3234               	rrcf	___ftadd@f1,f,c
  2795  0008DC  2A3F               	incf	___ftadd@exp1,f,c
  2796  0008DE                     l523:
  2797  0008DE  503E               	movf	___ftadd@exp2,w,c
  2798  0008E0  183F               	xorwf	___ftadd@exp1,w,c
  2799  0008E2  B4D8               	btfsc	status,2,c
  2800  0008E4  D01F               	goto	u2240
  2801  0008E6  D7F6               	goto	l524
  2802  0008E8                     l518:
  2803  0008E8  503F               	movf	___ftadd@exp1,w,c
  2804  0008EA  5C3E               	subwf	___ftadd@exp2,w,c
  2805  0008EC  B0D8               	btfsc	status,0,c
  2806  0008EE  D01A               	goto	u2240
  2807  0008F0                     u2210:
  2808  0008F0  90D8               	bcf	status,0,c
  2809  0008F2  3634               	rlcf	___ftadd@f1,f,c
  2810  0008F4  3635               	rlcf	___ftadd@f1+1,f,c
  2811  0008F6  3636               	rlcf	___ftadd@f1+2,f,c
  2812  0008F8  063F               	decf	___ftadd@exp1,f,c
  2813  0008FA  503F               	movf	___ftadd@exp1,w,c
  2814  0008FC  183E               	xorwf	___ftadd@exp2,w,c
  2815  0008FE  B4D8               	btfsc	status,2,c
  2816  000900  D00D               	goto	l532
  2817  000902  063D               	decf	___ftadd@sign,f,c
  2818  000904  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  2819  000908  0E07               	movlw	7
  2820  00090A  163A               	andwf	??___ftadd,f,c
  2821  00090C  B4D8               	btfsc	status,2,c
  2822  00090E  D006               	goto	l532
  2823  000910  D7EF               	goto	u2210
  2824  000912  90D8               	bcf	status,0,c
  2825  000914  3239               	rrcf	___ftadd@f2+2,f,c
  2826  000916  3238               	rrcf	___ftadd@f2+1,f,c
  2827  000918  3237               	rrcf	___ftadd@f2,f,c
  2828  00091A  2A3E               	incf	___ftadd@exp2,f,c
  2829  00091C                     l532:
  2830  00091C  503E               	movf	___ftadd@exp2,w,c
  2831  00091E  183F               	xorwf	___ftadd@exp1,w,c
  2832  000920  A4D8               	btfss	status,2,c
  2833  000922  D7F7               	goto	l533
  2834  000924                     u2240:
  2835  000924  AE3D               	btfss	___ftadd@sign,7,c
  2836  000926  D00C               	goto	l535
  2837  000928  0EFF               	movlw	255
  2838  00092A  1A34               	xorwf	___ftadd@f1,f,c
  2839  00092C  0EFF               	movlw	255
  2840  00092E  1A35               	xorwf	___ftadd@f1+1,f,c
  2841  000930  0EFF               	movlw	255
  2842  000932  1A36               	xorwf	___ftadd@f1+2,f,c
  2843  000934  0E01               	movlw	1
  2844  000936  2634               	addwf	___ftadd@f1,f,c
  2845  000938  0E00               	movlw	0
  2846  00093A  2235               	addwfc	___ftadd@f1+1,f,c
  2847  00093C  0E00               	movlw	0
  2848  00093E  2236               	addwfc	___ftadd@f1+2,f,c
  2849  000940                     l535:
  2850  000940  AC3D               	btfss	___ftadd@sign,6,c
  2851  000942  D00C               	goto	l536
  2852  000944  0EFF               	movlw	255
  2853  000946  1A37               	xorwf	___ftadd@f2,f,c
  2854  000948  0EFF               	movlw	255
  2855  00094A  1A38               	xorwf	___ftadd@f2+1,f,c
  2856  00094C  0EFF               	movlw	255
  2857  00094E  1A39               	xorwf	___ftadd@f2+2,f,c
  2858  000950  0E01               	movlw	1
  2859  000952  2637               	addwf	___ftadd@f2,f,c
  2860  000954  0E00               	movlw	0
  2861  000956  2238               	addwfc	___ftadd@f2+1,f,c
  2862  000958  0E00               	movlw	0
  2863  00095A  2239               	addwfc	___ftadd@f2+2,f,c
  2864  00095C                     l536:
  2865  00095C  0E00               	movlw	0
  2866  00095E  6E3D               	movwf	___ftadd@sign,c
  2867  000960  5034               	movf	___ftadd@f1,w,c
  2868  000962  2637               	addwf	___ftadd@f2,f,c
  2869  000964  5035               	movf	___ftadd@f1+1,w,c
  2870  000966  2238               	addwfc	___ftadd@f2+1,f,c
  2871  000968  5036               	movf	___ftadd@f1+2,w,c
  2872  00096A  2239               	addwfc	___ftadd@f2+2,f,c
  2873  00096C  AE39               	btfss	___ftadd@f2+2,7,c
  2874  00096E  D00E               	goto	l537
  2875  000970  0EFF               	movlw	255
  2876  000972  1A37               	xorwf	___ftadd@f2,f,c
  2877  000974  0EFF               	movlw	255
  2878  000976  1A38               	xorwf	___ftadd@f2+1,f,c
  2879  000978  0EFF               	movlw	255
  2880  00097A  1A39               	xorwf	___ftadd@f2+2,f,c
  2881  00097C  0E01               	movlw	1
  2882  00097E  2637               	addwf	___ftadd@f2,f,c
  2883  000980  0E00               	movlw	0
  2884  000982  2238               	addwfc	___ftadd@f2+1,f,c
  2885  000984  0E00               	movlw	0
  2886  000986  2239               	addwfc	___ftadd@f2+2,f,c
  2887  000988  0E01               	movlw	1
  2888  00098A  6E3D               	movwf	___ftadd@sign,c
  2889  00098C                     l537:
  2890  00098C  C037  F013         	movff	___ftadd@f2,___ftpack@arg
  2891  000990  C038  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  2892  000994  C039  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  2893  000998  C03F  F016         	movff	___ftadd@exp1,___ftpack@exp
  2894  00099C  C03D  F017         	movff	___ftadd@sign,___ftpack@sign
  2895  0009A0  EC99  F006         	call	___ftpack	;wreg free
  2896  0009A4  C013  F034         	movff	?___ftpack,?___ftadd
  2897  0009A8  C014  F035         	movff	?___ftpack+1,?___ftadd+1
  2898  0009AC  C015  F036         	movff	?___ftpack+2,?___ftadd+2
  2899  0009B0  0012               	return	
  2900  0009B2                     __end_of___ftadd:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           intcon	equ	0xFF2
  2907                           wreg	equ	0xFE8
  2908                           indf2	equ	0xFDF
  2909                           fsr2h	equ	0xFDA
  2910                           fsr2l	equ	0xFD9
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function ___altoft *****************
  2914 ;; Defined at:
  2915 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  c               4   26[COMRAM] long 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  sign            1   35[COMRAM] unsigned char 
  2920 ;;  exp             1   34[COMRAM] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  3   26[COMRAM] float 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         4       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2933 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:       10 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    2
  2937 ;; This function calls:
  2938 ;;		___ftpack
  2939 ;; This function is called by:
  2940 ;;		_USART_Init
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text20
  2945  001026                     __ptext20:
  2946                           	opt stack 0
  2947  001026                     ___altoft:
  2948                           	opt stack 27
  2949                           
  2950                           ;incstack = 0
  2951  001026  0E00               	movlw	0
  2952  001028  6E24               	movwf	___altoft@sign,c
  2953  00102A  0E8E               	movlw	142
  2954  00102C  6E23               	movwf	___altoft@exp,c
  2955  00102E  AE1E               	btfss	___altoft@c+3,7,c
  2956  001030  D011               	goto	l348
  2957  001032  1E1E               	comf	___altoft@c+3,f,c
  2958  001034  1E1D               	comf	___altoft@c+2,f,c
  2959  001036  1E1C               	comf	___altoft@c+1,f,c
  2960  001038  6C1B               	negf	___altoft@c,c
  2961  00103A  0E00               	movlw	0
  2962  00103C  221C               	addwfc	___altoft@c+1,f,c
  2963  00103E  221D               	addwfc	___altoft@c+2,f,c
  2964  001040  221E               	addwfc	___altoft@c+3,f,c
  2965  001042  0E01               	movlw	1
  2966  001044  6E24               	movwf	___altoft@sign,c
  2967  001046  D006               	goto	l348
  2968  001048  90D8               	bcf	status,0,c
  2969  00104A  321E               	rrcf	___altoft@c+3,f,c
  2970  00104C  321D               	rrcf	___altoft@c+2,f,c
  2971  00104E  321C               	rrcf	___altoft@c+1,f,c
  2972  001050  321B               	rrcf	___altoft@c,f,c
  2973  001052  2A23               	incf	___altoft@exp,f,c
  2974  001054                     l348:
  2975  001054  0E00               	movlw	0
  2976  001056  141B               	andwf	___altoft@c,w,c
  2977  001058  6E1F               	movwf	??___altoft& (0+255),c
  2978  00105A  0E00               	movlw	0
  2979  00105C  141C               	andwf	___altoft@c+1,w,c
  2980  00105E  6E20               	movwf	(??___altoft+1)& (0+255),c
  2981  001060  0E00               	movlw	0
  2982  001062  141D               	andwf	___altoft@c+2,w,c
  2983  001064  6E21               	movwf	(??___altoft+2)& (0+255),c
  2984  001066  0EFF               	movlw	255
  2985  001068  141E               	andwf	___altoft@c+3,w,c
  2986  00106A  6E22               	movwf	(??___altoft+3)& (0+255),c
  2987  00106C  501F               	movf	??___altoft,w,c
  2988  00106E  1020               	iorwf	??___altoft+1,w,c
  2989  001070  1021               	iorwf	??___altoft+2,w,c
  2990  001072  1022               	iorwf	??___altoft+3,w,c
  2991  001074  A4D8               	btfss	status,2,c
  2992  001076  D7E8               	goto	l349
  2993  001078  C01B  F013         	movff	___altoft@c,___ftpack@arg
  2994  00107C  C01C  F014         	movff	___altoft@c+1,___ftpack@arg+1
  2995  001080  C01D  F015         	movff	___altoft@c+2,___ftpack@arg+2
  2996  001084  C023  F016         	movff	___altoft@exp,___ftpack@exp
  2997  001088  C024  F017         	movff	___altoft@sign,___ftpack@sign
  2998  00108C  EC99  F006         	call	___ftpack	;wreg free
  2999  001090  C013  F01B         	movff	?___ftpack,?___altoft
  3000  001094  C014  F01C         	movff	?___ftpack+1,?___altoft+1
  3001  001098  C015  F01D         	movff	?___ftpack+2,?___altoft+2
  3002  00109C  0012               	return	
  3003  00109E                     __end_of___altoft:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           intcon	equ	0xFF2
  3010                           wreg	equ	0xFE8
  3011                           indf2	equ	0xFDF
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function ___ftpack *****************
  3017 ;; Defined at:
  3018 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  arg             3   18[COMRAM] unsigned um
  3021 ;;  exp             1   21[COMRAM] unsigned char 
  3022 ;;  sign            1   22[COMRAM] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  3   18[COMRAM] float 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3034 ;;      Params:         5       0       0       0       0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3036 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3037 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		___altoft
  3045 ;;		___awtoft
  3046 ;;		___ftadd
  3047 ;;		___ftdiv
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text21
  3052  000D32                     __ptext21:
  3053                           	opt stack 0
  3054  000D32                     ___ftpack:
  3055                           	opt stack 24
  3056                           
  3057                           ;incstack = 0
  3058  000D32  5016               	movf	___ftpack@exp,w,c
  3059  000D34  B4D8               	btfsc	status,2,c
  3060  000D36  D005               	goto	u1770
  3061  000D38  5013               	movf	___ftpack@arg,w,c
  3062  000D3A  1014               	iorwf	___ftpack@arg+1,w,c
  3063  000D3C  1015               	iorwf	___ftpack@arg+2,w,c
  3064  000D3E  A4D8               	btfss	status,2,c
  3065  000D40  D00C               	goto	l478
  3066  000D42                     u1770:
  3067  000D42  0E00               	movlw	0
  3068  000D44  6E13               	movwf	?___ftpack,c
  3069  000D46  0E00               	movlw	0
  3070  000D48  6E14               	movwf	?___ftpack+1,c
  3071  000D4A  0E00               	movlw	0
  3072  000D4C  6E15               	movwf	?___ftpack+2,c
  3073  000D4E  0012               	return	
  3074  000D50  2A16               	incf	___ftpack@exp,f,c
  3075  000D52  90D8               	bcf	status,0,c
  3076  000D54  3215               	rrcf	___ftpack@arg+2,f,c
  3077  000D56  3214               	rrcf	___ftpack@arg+1,f,c
  3078  000D58  3213               	rrcf	___ftpack@arg,f,c
  3079  000D5A                     l478:
  3080  000D5A  0E00               	movlw	0
  3081  000D5C  1413               	andwf	___ftpack@arg,w,c
  3082  000D5E  6E18               	movwf	??___ftpack& (0+255),c
  3083  000D60  0E00               	movlw	0
  3084  000D62  1414               	andwf	___ftpack@arg+1,w,c
  3085  000D64  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3086  000D66  0EFE               	movlw	254
  3087  000D68  1415               	andwf	___ftpack@arg+2,w,c
  3088  000D6A  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3089  000D6C  5018               	movf	??___ftpack,w,c
  3090  000D6E  1019               	iorwf	??___ftpack+1,w,c
  3091  000D70  101A               	iorwf	??___ftpack+2,w,c
  3092  000D72  B4D8               	btfsc	status,2,c
  3093  000D74  D00C               	goto	l481
  3094  000D76  D7EC               	goto	l479
  3095  000D78  2A16               	incf	___ftpack@exp,f,c
  3096  000D7A  0E01               	movlw	1
  3097  000D7C  2613               	addwf	___ftpack@arg,f,c
  3098  000D7E  0E00               	movlw	0
  3099  000D80  2214               	addwfc	___ftpack@arg+1,f,c
  3100  000D82  0E00               	movlw	0
  3101  000D84  2215               	addwfc	___ftpack@arg+2,f,c
  3102  000D86  90D8               	bcf	status,0,c
  3103  000D88  3215               	rrcf	___ftpack@arg+2,f,c
  3104  000D8A  3214               	rrcf	___ftpack@arg+1,f,c
  3105  000D8C  3213               	rrcf	___ftpack@arg,f,c
  3106  000D8E                     l481:
  3107  000D8E  0E00               	movlw	0
  3108  000D90  1413               	andwf	___ftpack@arg,w,c
  3109  000D92  6E18               	movwf	??___ftpack& (0+255),c
  3110  000D94  0E00               	movlw	0
  3111  000D96  1414               	andwf	___ftpack@arg+1,w,c
  3112  000D98  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3113  000D9A  0EFF               	movlw	255
  3114  000D9C  1415               	andwf	___ftpack@arg+2,w,c
  3115  000D9E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3116  000DA0  5018               	movf	??___ftpack,w,c
  3117  000DA2  1019               	iorwf	??___ftpack+1,w,c
  3118  000DA4  101A               	iorwf	??___ftpack+2,w,c
  3119  000DA6  B4D8               	btfsc	status,2,c
  3120  000DA8  D006               	goto	l484
  3121  000DAA  D7E6               	goto	l482
  3122  000DAC  0616               	decf	___ftpack@exp,f,c
  3123  000DAE  90D8               	bcf	status,0,c
  3124  000DB0  3613               	rlcf	___ftpack@arg,f,c
  3125  000DB2  3614               	rlcf	___ftpack@arg+1,f,c
  3126  000DB4  3615               	rlcf	___ftpack@arg+2,f,c
  3127  000DB6                     l484:
  3128  000DB6  BE14               	btfsc	___ftpack@arg+1,7,c
  3129  000DB8  D003               	goto	u1810
  3130  000DBA  0E02               	movlw	2
  3131  000DBC  6016               	cpfslt	___ftpack@exp,c
  3132  000DBE  D7F6               	goto	l485
  3133  000DC0                     u1810:
  3134  000DC0  A016               	btfss	___ftpack@exp,0,c
  3135  000DC2  9E14               	bcf	___ftpack@arg+1,7,c
  3136  000DC4  90D8               	bcf	status,0,c
  3137  000DC6  3216               	rrcf	___ftpack@exp,f,c
  3138  000DC8  5016               	movf	___ftpack@exp,w,c
  3139  000DCA  1215               	iorwf	___ftpack@arg+2,f,c
  3140  000DCC  5017               	movf	___ftpack@sign,w,c
  3141  000DCE  A4D8               	btfss	status,2,c
  3142  000DD0  8E15               	bsf	___ftpack@arg+2,7,c
  3143  000DD2  C013  F013         	movff	___ftpack@arg,?___ftpack
  3144  000DD6  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3145  000DDA  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3146  000DDE  0012               	return	
  3147  000DE0                     __end_of___ftpack:
  3148                           	opt stack 0
  3149                           tblptru	equ	0xFF8
  3150                           tblptrh	equ	0xFF7
  3151                           tblptrl	equ	0xFF6
  3152                           tablat	equ	0xFF5
  3153                           intcon	equ	0xFF2
  3154                           wreg	equ	0xFE8
  3155                           indf2	equ	0xFDF
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _MSdelay *****************
  3161 ;; Defined at:
  3162 ;;		line 49 in file "USART_Source_File.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  val             2   18[COMRAM] unsigned int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  j               2   22[COMRAM] unsigned int 
  3167 ;;  i               2   20[COMRAM] unsigned int 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3177 ;;      Params:         2       0       0       0       0       0       0       0       0
  3178 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3180 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        6 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text22
  3192  001266                     __ptext22:
  3193                           	opt stack 0
  3194  001266                     _MSdelay:
  3195                           	opt stack 29
  3196                           
  3197                           ;USART_Source_File.c: 51: unsigned int i,j;
  3198                           ;USART_Source_File.c: 52: for(i=0;i<=val;i++)
  3199                           
  3200                           ;incstack = 0
  3201  001266  0E00               	movlw	0
  3202  001268  6E16               	movwf	MSdelay@i+1,c
  3203  00126A  0E00               	movlw	0
  3204  00126C  6E15               	movwf	MSdelay@i,c
  3205  00126E  D00F               	goto	l209
  3206  001270                     
  3207                           ;USART_Source_File.c: 53: for(j=0;j<81;j++);
  3208  001270  0E00               	movlw	0
  3209  001272  6E18               	movwf	MSdelay@j+1,c
  3210  001274  0E00               	movlw	0
  3211  001276  6E17               	movwf	MSdelay@j,c
  3212  001278                     l1829:
  3213  001278  5018               	movf	MSdelay@j+1,w,c
  3214  00127A  E107               	bnz	l1837
  3215  00127C  0E51               	movlw	81
  3216  00127E  5C17               	subwf	MSdelay@j,w,c
  3217  001280  B0D8               	btfsc	status,0,c
  3218  001282  D003               	goto	u1480
  3219  001284  4A17               	infsnz	MSdelay@j,f,c
  3220  001286  2A18               	incf	MSdelay@j+1,f,c
  3221  001288  D7F7               	goto	l1829
  3222  00128A                     u1480:
  3223  00128A                     l1837:
  3224  00128A  4A15               	infsnz	MSdelay@i,f,c
  3225  00128C  2A16               	incf	MSdelay@i+1,f,c
  3226  00128E                     l209:
  3227  00128E  5015               	movf	MSdelay@i,w,c
  3228  001290  5C13               	subwf	MSdelay@val,w,c
  3229  001292  5016               	movf	MSdelay@i+1,w,c
  3230  001294  5814               	subwfb	MSdelay@val+1,w,c
  3231  001296  A0D8               	btfss	status,0,c
  3232  001298  0012               	return	
  3233  00129A  D7EA               	goto	l210
  3234  00129C                     __end_of_MSdelay:
  3235                           	opt stack 0
  3236                           tblptru	equ	0xFF8
  3237                           tblptrh	equ	0xFF7
  3238                           tblptrl	equ	0xFF6
  3239                           tablat	equ	0xFF5
  3240                           intcon	equ	0xFF2
  3241                           wreg	equ	0xFE8
  3242                           indf2	equ	0xFDF
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _ADCint *****************
  3248 ;; Defined at:
  3249 ;;		line 28 in file "funciones.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		None
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3263 ;;      Params:         0       0       0       0       0       0       0       0       0
  3264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3265 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3266 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3267 ;;Total ram usage:       18 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		Interrupt level 2
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	intcode
  3277  000008                     __pintcode:
  3278                           	opt stack 0
  3279  000008                     _ADCint:
  3280                           	opt stack 24
  3281                           
  3282                           ;incstack = 0
  3283  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3284  00000A  ED41  F007         	call	int_func,f	;refresh shadow registers
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           intcon	equ	0xFF2
  3290                           wreg	equ	0xFE8
  3291                           indf2	equ	0xFDF
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8
  3295                           
  3296                           	psect	intcode_body
  3297  000E82                     __pintcode_body:
  3298                           	opt stack 24
  3299  000E82                     int_func:
  3300                           	opt stack 24
  3301  000E82  0006               	pop		; remove dummy address from shadow register refresh
  3302  000E84  CFFA F001          	movff	pclath,??_ADCint
  3303  000E88  CFFB F002          	movff	pclatu,??_ADCint+1
  3304  000E8C  CFE9 F003          	movff	fsr0l,??_ADCint+2
  3305  000E90  CFEA F004          	movff	fsr0h,??_ADCint+3
  3306  000E94  CFE1 F005          	movff	fsr1l,??_ADCint+4
  3307  000E98  CFE2 F006          	movff	fsr1h,??_ADCint+5
  3308  000E9C  CFD9 F007          	movff	fsr2l,??_ADCint+6
  3309  000EA0  CFDA F008          	movff	fsr2h,??_ADCint+7
  3310  000EA4  CFF3 F009          	movff	prodl,??_ADCint+8
  3311  000EA8  CFF4 F00A          	movff	prodh,??_ADCint+9
  3312  000EAC  CFF6 F00B          	movff	tblptrl,??_ADCint+10
  3313  000EB0  CFF7 F00C          	movff	tblptrh,??_ADCint+11
  3314  000EB4  CFF8 F00D          	movff	tblptru,??_ADCint+12
  3315  000EB8  CFF5 F00E          	movff	tablat,??_ADCint+13
  3316  000EBC  C04D  F00F         	movff	btemp,??_ADCint+14
  3317  000EC0  C04E  F010         	movff	btemp+1,??_ADCint+15
  3318  000EC4  C04F  F011         	movff	btemp+2,??_ADCint+16
  3319  000EC8  C050  F012         	movff	btemp+3,??_ADCint+17
  3320                           
  3321                           ;funciones.c: 30: if(PIR1bits.ADIF == 1)
  3322  000ECC  BC9E               	btfsc	3998,6,c	;volatile
  3323                           
  3324                           ;funciones.c: 31: {
  3325                           ;funciones.c: 32: PIR1bits.ADIF = 0;
  3326  000ECE  9C9E               	bcf	3998,6,c	;volatile
  3327  000ED0  C012  F050         	movff	??_ADCint+17,btemp+3
  3328  000ED4  C011  F04F         	movff	??_ADCint+16,btemp+2
  3329  000ED8  C010  F04E         	movff	??_ADCint+15,btemp+1
  3330  000EDC  C00F  F04D         	movff	??_ADCint+14,btemp
  3331  000EE0  C00E  FFF5         	movff	??_ADCint+13,tablat
  3332  000EE4  C00D  FFF8         	movff	??_ADCint+12,tblptru
  3333  000EE8  C00C  FFF7         	movff	??_ADCint+11,tblptrh
  3334  000EEC  C00B  FFF6         	movff	??_ADCint+10,tblptrl
  3335  000EF0  C00A  FFF4         	movff	??_ADCint+9,prodh
  3336  000EF4  C009  FFF3         	movff	??_ADCint+8,prodl
  3337  000EF8  C008  FFDA         	movff	??_ADCint+7,fsr2h
  3338  000EFC  C007  FFD9         	movff	??_ADCint+6,fsr2l
  3339  000F00  C006  FFE2         	movff	??_ADCint+5,fsr1h
  3340  000F04  C005  FFE1         	movff	??_ADCint+4,fsr1l
  3341  000F08  C004  FFEA         	movff	??_ADCint+3,fsr0h
  3342  000F0C  C003  FFE9         	movff	??_ADCint+2,fsr0l
  3343  000F10  C002  FFFB         	movff	??_ADCint+1,pclatu
  3344  000F14  C001  FFFA         	movff	??_ADCint,pclath
  3345  000F18  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3346  000F1A  0011               	retfie		f
  3347  000F1C                     __end_of_ADCint:
  3348                           	opt stack 0
  3349                           pclatu	equ	0xFFB
  3350                           pclath	equ	0xFFA
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           fsr0h	equ	0xFEA
  3359                           fsr0l	equ	0xFE9
  3360                           wreg	equ	0xFE8
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           pclatu	equ	0xFFB
  3368                           pclath	equ	0xFFA
  3369                           tblptru	equ	0xFF8
  3370                           tblptrh	equ	0xFF7
  3371                           tblptrl	equ	0xFF6
  3372                           tablat	equ	0xFF5
  3373                           prodh	equ	0xFF4
  3374                           prodl	equ	0xFF3
  3375                           intcon	equ	0xFF2
  3376                           fsr0h	equ	0xFEA
  3377                           fsr0l	equ	0xFE9
  3378                           wreg	equ	0xFE8
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           fsr2h	equ	0xFDA
  3383                           fsr2l	equ	0xFD9
  3384                           status	equ	0xFD8
  3385                           
  3386                           	psect	rparam
  3387  0000                     pclatu	equ	0xFFB
  3388                           pclath	equ	0xFFA
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           intcon	equ	0xFF2
  3396                           fsr0h	equ	0xFEA
  3397                           fsr0l	equ	0xFE9
  3398                           wreg	equ	0xFE8
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406                           	psect	temp
  3407  00004D                     btemp:
  3408                           	opt stack 0
  3409  00004D                     	ds	1
  3410  0000                     int$flags	set	btemp
  3411  0000                     wtemp6	set	btemp+1
  3412                           pclatu	equ	0xFFB
  3413                           pclath	equ	0xFFA
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           fsr0h	equ	0xFEA
  3422                           fsr0l	equ	0xFE9
  3423                           wreg	equ	0xFE8
  3424                           fsr1h	equ	0xFE2
  3425                           fsr1l	equ	0xFE1
  3426                           indf2	equ	0xFDF
  3427                           fsr2h	equ	0xFDA
  3428                           fsr2l	equ	0xFD9
  3429                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      76
    BANK0           160     22      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    memset@p1	PTR void  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    memset@p	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    sp__memset	PTR void  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    USART_ReceiveString@Input	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 6
		 -> main@temp(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _lcd_origen->_wait_in_ms
    _lcd_limpiar->_wait_in_ms
    _lcd_iniciar->_wait_in_ms
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___awtoft->___ftpack
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _ADCint in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_limpiar->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms

Critical Paths under _ADCint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ADCint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   88254
                                             16 BANK0      6     6      0
                            _MSdelay
                         _USART_Init
                _USART_ReceiveString
                   _USART_SendString
                        _configBoard
                        _lcd_iniciar
                        _lcd_limpiar
                         _lcd_origen
                          _lcd_texto
                             _memset
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     243
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     324
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            3     1      2    9288
                                             13 BANK0      3     1      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    9133
                                              6 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_limpiar                                          0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   27725
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    9763
                                              6 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    8981
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (4) _wait_in_ms                                          10     8      2    8981
                                             66 COMRAM     4     2      2
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3116
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     143
                                             19 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveString                                 11     8      3     397
                                             18 COMRAM    11     8      3
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4   12284
                                             66 COMRAM     4     0      4
                                              0 BANK0      3     3      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             51 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3813
                                             36 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4578
                                             51 COMRAM    12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3187
                                             26 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ADCint                                              18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _USART_ReceiveString
   _USART_SendString
     _USART_TransmitChar
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_limpiar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _memset
   _strcmp

 _ADCint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      16       5       13.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      20        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 14 02:00:56 2018

                ___altoft@exp 0023                 ___altoft@sign 0024                            l43 0CE2  
                          l46 0D1A                            l47 0D22                   __CFG_BORV$3 000000  
                ___ftadd@exp1 003F                  ___ftadd@exp2 003E                  ___ftadd@sign 003D  
                         l210 1270                           l203 133A                           l220 0F3A  
                         l204 1328                           l222 0F60                           l223 0F7C  
                         l127 12BC                           l128 129E                           l209 128E  
                         l217 0F80                           l218 0F26                           l260 0E64  
                         l513 0882                           l258 0E10                           l523 08DE  
                         l259 0E62                           l348 1054                           l532 091C  
                         l524 08D4                           l349 1048                           l533 0912  
                         l509 0858                           l518 08E8                           l542 0ACE  
                         l535 0940                           l536 095C                           l544 0AF6  
                         l481 0D8E                           l537 098C                           l545 0B34  
                         l482 0D78                           l546 0B5A                           l459 1242  
                         l484 0DB6                           l580 0A54                           l485 0DAC  
                         l581 0A44                           l478 0D5A                           l479 0D50  
                         l817 11EC                           l586 0A78                           l578 09DE  
                         l818 11E4                           l587 0A6C                           l691 1314  
                         l692 1304                           l589 0A94                           wreg 000FE8  
              ??_lcd_caracter 0068                  __CFG_LVP$OFF 000000                  ___ftdiv@cntr 002E  
                ___ftdiv@sign 0033                  __CFG_WDT$OFF 000000                          l2151 0D22  
                        l1647 13A2                          l1837 128A                          l1829 1278  
                        l1873 1304                          STR_1 0801                          u2010 0D10  
                        u2110 084A                          u2210 08F0                          u2035 1190  
                        u2140 0874                          u2045 1124                          u2071 0816  
                        u2240 0924                          u2081 082A                          u2170 08B2  
                        u1550 1222                          u1480 128A                          u1810 0DC0  
                        u1901 09C2                          u1920 09FC                          u1841 0AB6  
                        u1770 0D42                          u1861 0ADE                          u1925 09F4  
                        u1960 0A7E                          u1985 0C90                          _RCIF 007CF5  
                        _TXIF 007CF4                          _main 0DE0                  ___ftpack@arg 0013  
                ___ftpack@exp 0016                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 004D  
    __end_of_USART_SendString 134A                          prodh 000FF4                          prodl 000FF3  
                        start 000E               __end_of_MSdelay 129C                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000          lcd_caracter@caracter 0066                  ___fttol@exp1 0042  
                ___fttol@lval 003E                 __CFG_PLLDIV$2 000000                         ?_main 0001  
             __end_of___ftadd 09B2               __end_of___ftdiv 0B8C               __end_of___fttol 0AA6  
                       _RCREG 000FAE                         _RCSTA 000FAB                         _TMR0L 000FD6  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TXREG 000FAD                         _TXSTA 000FAC  
              __CFG_FCMEN$OFF 000000                 ___awtoft@sign 001E                         _nivel 004C  
               ___ftpack@sign 0017                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 004E                   ?_USART_Init 0043  
             __initialization 12CC                  __end_of_main 0E82                        ??_main 0047  
               ___fttol@sign1 003D                 __activetblptr 000001  __size_of_USART_ReceiveString 0090  
        USART_ReceiveString@i 001C                        _ADCON0 000FC2              __end_of___altoft 109E  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _T08BIT 007EAE  
                      _ADCint 0008              __end_of___awtoft 1266              __end_of___ftpack 0DE0  
                   ??_MSdelay 0015                        _OSCCON 000FD3                        _TMR0IF 007F92  
                      _TMR0ON 007EAF                        _TRISC6 007CA6                        _TRISC7 007CA7  
        __size_of_configBoard 006E          __end_of_lcd_caracter 1178          __size_of_lcd_iniciar 00D6  
                   ??___ftadd 003A                     ??___ftdiv 002B                     ??___fttol 0038  
        __size_of_lcd_limpiar 001C                        _memset 12FA               _cantidadBotones 0049  
                      _strcmp 11E2                  __pdataCOMRAM 004C    __end_of_USART_TransmitChar 13AC  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8           __size_of_USART_Init 007A                    __accesstop 0060  
     __end_of__initialization 12E8                    ___altoft@c 001B                    ___ftadd@f1 0034  
                  ___ftadd@f2 0037                 ___rparam_used 000001                    ___ftdiv@f1 0025  
                  ___ftdiv@f2 0028                    ___ftdiv@f3 002F                    ___awtoft@c 001B  
                  ___fttol@f1 0034                __pcstackCOMRAM 0001            __size_of_lcd_orden 006A  
          __size_of_lcd_texto 0030            __size_of_lcd_pulso 001E                       ?_ADCint 0001  
           ?_USART_SendString 0014       USART_ReceiveString@temp 001B            ??_USART_SendString 0016  
              lcd_orden@orden 0066                     ?___altoft 001B                       ?_memset 0013  
                   ?___awtoft 001B                     ?___ftpack 0013                       ?_strcmp 0013  
                  _lcd_origen 1368               __size_of_ADCint 0F14                       _MSdelay 1266  
       __size_of_lcd_caracter 006C                  ??_USART_Init 0047                       __Hparam 0000  
                     __Lparam 0000           _USART_ReceiveString 0F1C             __end_of_lcd_orden 11E2  
           __end_of_lcd_texto 12CC             __end_of_lcd_pulso 1368                       ___ftadd 0806  
                     ___ftdiv 0AA6                       ___fttol 09B2                  __psmallconst 0800  
                  ??___altoft 001F                       __pcinit 12CC                    ??___awtoft 001E  
                  ??___ftpack 0018               __size_of_memset 002C                       __ramtop 0800  
                     __ptext0 0DE0                       __ptext1 11E2                       __ptext2 12FA  
                     __ptext3 129C                       __ptext4 110C                       __ptext5 1368  
                     __ptext6 1384                       __ptext7 0B8C                       __ptext8 1178  
                     __ptext9 134A           USART_SendString@out 0014                     _T0CONbits 000FD5  
             __size_of_strcmp 004C                USART_Init@temp 0060          ?_USART_ReceiveString 0013  
          __end_of_USART_Init 1026                  _lcd_caracter 110C                __pintcode_body 0E82  
        end_of_initialization 12E8                       memset@c 0015                       memset@n 0017  
                     memset@p 0019          wait_in_ms@time_in_ms 0043                       int_func 0E82  
                  _wait_in_ms 0C62                       strcmp@r 0018                     _PORTCbits 000F82  
                   _PORTDbits 000F83         ??_USART_ReceiveString 0016                     _TRISAbits 000F92  
                   _TRISDbits 000F95                   ?_lcd_origen 0001           USART_Init@baud_rate 0043  
       USART_TransmitChar@out 0013                __end_of_ADCint 0F1C                   ___ftdiv@exp 0032  
               ??_configBoard 0013                    _puntuacion 0047            _USART_TransmitChar 13A0  
               ??_lcd_iniciar 0047                 ??_lcd_limpiar 0047           ?_USART_TransmitChar 0001  
               __pidataCOMRAM 13AC                __end_of_memset 1326                __end_of_strcmp 122E  
         start_initialization 12CC          ??_USART_TransmitChar 0013               wait_in_ms@count 0062  
                    ??_ADCint 0001            wait_in_ms@count_ms 0064           __end_of_configBoard 110C  
         __size_of_lcd_origen 001C                   ?_wait_in_ms 0043           __end_of_lcd_iniciar 0C62  
                    ??_memset 0019           __end_of_lcd_limpiar 13A0                      ??_strcmp 0017  
   __size_of_USART_SendString 0024             __size_of___altoft 0078             __size_of___awtoft 0038  
           __size_of___ftpack 00AE                   __pbssCOMRAM 0047                 __pcstackBANK0 0060  
                    ?_MSdelay 0013      USART_ReceiveString@Input 0013                     __pintcode 0008  
                    ?___ftadd 0034                      ?___ftdiv 0025                      ?___fttol 0034  
                   _lcd_orden 1178                     _lcd_texto 129C                     _lcd_pulso 134A  
                 __smallconst 0800           __size_of_wait_in_ms 00D0                      MSdelay@i 0015  
                    MSdelay@j 0017                   _configBoard 109E                      _PIE1bits 000F9D  
                 _lcd_iniciar 0B8C                      _PIR1bits 000F9E                   _lcd_limpiar 1384  
                  ?_lcd_orden 0066                    ?_lcd_texto 006D                    ?_lcd_pulso 0001  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1                    _ADCON2bits 000FC0  
                ??_lcd_origen 0047              __size_of_MSdelay 0036                wait_in_ms@flag 0060  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 0800  
          __end_of_lcd_origen 1384              __size_of___ftadd 01AC              __size_of___ftdiv 00E6  
                    ___altoft 1026              __size_of___fttol 00F4   __end_of_USART_ReceiveString 0FAC  
                    ___awtoft 122E                      ___ftpack 0D32              _USART_SendString 1326  
                    __ptext10 0C62                      __ptext11 122E                      __ptext20 1026  
                    __ptext12 109E                      __ptext21 0D32                      __ptext13 1326  
                    __ptext22 1266                      __ptext14 13A0                      __ptext15 0F1C  
                    __ptext16 0FAC                      __ptext17 09B2                      __ptext18 0AA6  
                    __ptext19 0806               lcd_texto@cadena 006D                 __size_of_main 00A2  
                  MSdelay@val 0013                      _numTopos 004B                      int$flags 004D  
                ??_wait_in_ms 0045                      main@temp 0070                   ??_lcd_orden 0068  
                 ??_lcd_texto 006F                   ??_lcd_pulso 0047         __CFG_CPUDIV$OSC1_PLL2 000000  
               _presionoBoton 004A                    _INTCONbits 000FF2                      memset@p1 0013  
 __size_of_USART_TransmitChar 000C     USART_ReceiveString@length 0015                      intlevel2 0000  
          __end_of_wait_in_ms 0D32                      strcmp@s1 0013                      strcmp@s2 0015  
               ?_lcd_caracter 0066            __CFG_FOSC$HSPLL_HS 000000                  ?_configBoard 0001  
                ?_lcd_iniciar 0001                    _USART_Init 0FAC                  ?_lcd_limpiar 0001  
