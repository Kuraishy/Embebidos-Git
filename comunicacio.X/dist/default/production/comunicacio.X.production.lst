

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Mar 16 20:04:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001386                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _nivel
    81  001386  07                 	db	7
    82  0000                     _PORTCbits	set	3970
    83  0000                     _TRISC	set	3988
    84  0000                     _OSCCON	set	4051
    85  0000                     _RCREG	set	4014
    86  0000                     _TXREG	set	4013
    87  0000                     _RCSTA	set	4011
    88  0000                     _TXSTA	set	4012
    89  0000                     _SPBRG	set	4015
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTDbits	set	3971
    92  0000                     _TRISDbits	set	3989
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADRESH	set	4036
    95  0000                     _PORTA	set	3968
    96  0000                     _TRISD	set	3989
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PIE1bits	set	3997
    99  0000                     _TRISAbits	set	3986
   100  0000                     _ADCON2bits	set	4032
   101  0000                     _ADCON0bits	set	4034
   102  0000                     _ADCON0	set	4034
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISA	set	3986
   105  0000                     _ADCON1bits	set	4033
   106  0000                     _T0CONbits	set	4053
   107  0000                     _INTCONbits	set	4082
   108  0000                     _TMR0L	set	4054
   109  0000                     _TXIF	set	31988
   110  0000                     _TRISC7	set	31911
   111  0000                     _TRISC6	set	31910
   112  0000                     _TMR0IF	set	32658
   113  0000                     _TMR0ON	set	32431
   114  0000                     _RCIF	set	31989
   115  0000                     _T08BIT	set	32430
   116                           
   117                           	psect	smallconst
   118  000800                     __psmallconst:
   119                           	opt stack 0
   120  000800  00                 	db	0
   121  000801                     STR_2:
   122  000801  6F                 	db	111	;'o'
   123  000802  66                 	db	102	;'f'
   124  000803  66                 	db	102	;'f'
   125  000804  00                 	db	0
   126  000805                     STR_1:
   127  000805  6F                 	db	111	;'o'
   128  000806  6E                 	db	110	;'n'
   129  000807  00                 	db	0
   130                           
   131                           ; #config settings
   132  000808  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  0011FA                     __pcinit:
   136                           	opt stack 0
   137  0011FA                     start_initialization:
   138                           	opt stack 0
   139  0011FA                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (1 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144  0011FA  0E86               	movlw	low __pidataCOMRAM
   145  0011FC  6EF6               	movwf	tblptrl,c
   146  0011FE  0E13               	movlw	high __pidataCOMRAM
   147  001200  6EF7               	movwf	tblptrh,c
   148  001202  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149  001204  6EF8               	movwf	tblptru,c
   150  001206  0009               	tblrd		*+	;fetch initializer
   151  001208  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   152                           
   153                           ; Clear objects allocated to BANK0 (22 bytes)
   154  00120C  EE00  F078         	lfsr	0,__pbssBANK0
   155  001210  0E16               	movlw	22
   156  001212                     clear_0:
   157  001212  6AEE               	clrf	postinc0,c
   158  001214  06E8               	decf	wreg,f,c
   159  001216  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to COMRAM (11 bytes)
   162  001218  EE00  F040         	lfsr	0,__pbssCOMRAM
   163  00121C  0E0B               	movlw	11
   164  00121E                     clear_1:
   165  00121E  6AEE               	clrf	postinc0,c
   166  001220  06E8               	decf	wreg,f,c
   167  001222  E1FD               	bnz	clear_1
   168  001224                     end_of_initialization:
   169                           	opt stack 0
   170  001224                     __end_of__initialization:
   171                           	opt stack 0
   172  001224  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173  001226  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174  001228  0E00               	movlw	low (__Lsmallconst shr (0+16))
   175  00122A  6EF8               	movwf	tblptru,c
   176  00122C  0E08               	movlw	high __Lsmallconst
   177  00122E  6EF7               	movwf	tblptrh,c
   178  001230  0100               	movlb	0
   179  001232  EF06  F007         	goto	_main	;jump to C main() function
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	bssCOMRAM
   188  000040                     __pbssCOMRAM:
   189                           	opt stack 0
   190  000040                     _memoriaAnterior:
   191                           	opt stack 0
   192  000040                     	ds	2
   193  000042                     _i:
   194                           	opt stack 0
   195  000042                     	ds	2
   196  000044                     _puntuacion:
   197                           	opt stack 0
   198  000044                     	ds	2
   199  000046                     _banderaSerial:
   200                           	opt stack 0
   201  000046                     	ds	1
   202  000047                     	ds	1
   203  000048                     _cantidadBotones:
   204                           	opt stack 0
   205  000048                     	ds	1
   206  000049                     _presionoBoton:
   207                           	opt stack 0
   208  000049                     	ds	1
   209  00004A                     _numTopos:
   210                           	opt stack 0
   211  00004A                     	ds	1
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	dataCOMRAM
   220  00004B                     __pdataCOMRAM:
   221                           	opt stack 0
   222  00004B                     _nivel:
   223                           	opt stack 0
   224  00004B                     	ds	1
   225                           tblptru	equ	0xFF8
   226                           tblptrh	equ	0xFF7
   227                           tblptrl	equ	0xFF6
   228                           tablat	equ	0xFF5
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           
   232                           	psect	bssBANK0
   233  000078                     __pbssBANK0:
   234                           	opt stack 0
   235  000078                     _Input:
   236                           	opt stack 0
   237  000078                     	ds	22
   238                           tblptru	equ	0xFF8
   239                           tblptrh	equ	0xFF7
   240                           tblptrl	equ	0xFF6
   241                           tablat	equ	0xFF5
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           
   245                           	psect	cstackBANK0
   246  000060                     __pcstackBANK0:
   247                           	opt stack 0
   248  000060                     ___ftadd@sign:
   249                           	opt stack 0
   250  000060                     ___fttol@sign1:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x0
   254  000060                     	ds	1
   255  000061                     ___ftadd@exp2:
   256                           	opt stack 0
   257  000061                     ___fttol@lval:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0x1
   261  000061                     	ds	1
   262  000062                     ___ftadd@exp1:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x2
   266  000062                     	ds	3
   267  000065                     ___fttol@exp1:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x5
   271  000065                     	ds	1
   272  000066                     ??_wait_in_ms:
   273  000066                     USART_Init@baud_rate:
   274                           	opt stack 0
   275                           
   276                           ; 4 bytes @ 0x6
   277  000066                     	ds	2
   278  000068                     wait_in_ms@flag:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x8
   282  000068                     	ds	2
   283  00006A                     wait_in_ms@count:
   284                           	opt stack 0
   285  00006A                     USART_Init@temp:
   286                           	opt stack 0
   287                           
   288                           ; 3 bytes @ 0xA
   289  00006A                     	ds	2
   290  00006C                     wait_in_ms@count_ms:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294  00006C                     	ds	2
   295  00006E                     lcd_orden@orden:
   296                           	opt stack 0
   297  00006E                     lcd_caracter@caracter:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0xE
   301  00006E                     	ds	2
   302  000070                     ??_lcd_orden:
   303  000070                     ??_lcd_caracter:
   304                           
   305                           ; 1 bytes @ 0x10
   306  000070                     	ds	5
   307  000075                     lcd_texto@cadena:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x15
   311  000075                     	ds	2
   312  000077                     ??_lcd_texto:
   313                           
   314                           ; 1 bytes @ 0x17
   315  000077                     	ds	1
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt stack 0
   326  000001                     ??_test:
   327                           
   328                           ; 1 bytes @ 0x0
   329  000001                     	ds	18
   330  000013                     test@temp:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x12
   334  000013                     	ds	1
   335  000014                     ?_strcmp:
   336                           	opt stack 0
   337  000014                     ?___ftpack:
   338                           	opt stack 0
   339  000014                     USART_TransmitChar@out:
   340                           	opt stack 0
   341  000014                     MSdelay@val:
   342                           	opt stack 0
   343  000014                     memset@p1:
   344                           	opt stack 0
   345  000014                     strcmp@s1:
   346                           	opt stack 0
   347  000014                     ___ftpack@arg:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x13
   351  000014                     	ds	1
   352  000015                     USART_SendString@out:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x14
   356  000015                     	ds	1
   357  000016                     MSdelay@i:
   358                           	opt stack 0
   359  000016                     memset@c:
   360                           	opt stack 0
   361  000016                     strcmp@s2:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x15
   365  000016                     	ds	1
   366  000017                     ___ftpack@exp:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x16
   370  000017                     	ds	1
   371  000018                     ??_strcmp:
   372  000018                     ___ftpack@sign:
   373                           	opt stack 0
   374  000018                     MSdelay@j:
   375                           	opt stack 0
   376  000018                     memset@n:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	1
   381  000019                     ??___ftpack:
   382  000019                     strcmp@r:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x18
   386  000019                     	ds	1
   387  00001A                     memset@p:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x19
   391  00001A                     	ds	2
   392  00001C                     ?___altoft:
   393                           	opt stack 0
   394  00001C                     ?___awtoft:
   395                           	opt stack 0
   396  00001C                     ___awtoft@c:
   397                           	opt stack 0
   398  00001C                     ___altoft@c:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0x1B
   402  00001C                     	ds	3
   403  00001F                     ___awtoft@sign:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1E
   407  00001F                     	ds	1
   408  000020                     ??___altoft:
   409                           
   410                           ; 1 bytes @ 0x1F
   411  000020                     	ds	4
   412  000024                     ___altoft@exp:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x23
   416  000024                     	ds	1
   417  000025                     ___altoft@sign:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x24
   421  000025                     	ds	1
   422  000026                     ?___ftdiv:
   423                           	opt stack 0
   424  000026                     ___ftdiv@f1:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x25
   428  000026                     	ds	3
   429  000029                     ___ftdiv@f2:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x28
   433  000029                     	ds	3
   434  00002C                     ??___ftdiv:
   435                           
   436                           ; 1 bytes @ 0x2B
   437  00002C                     	ds	3
   438  00002F                     ___ftdiv@cntr:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x2E
   442  00002F                     	ds	1
   443  000030                     ___ftdiv@f3:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0x2F
   447  000030                     	ds	3
   448  000033                     ___ftdiv@exp:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x32
   452  000033                     	ds	1
   453  000034                     ___ftdiv@sign:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x33
   457  000034                     	ds	1
   458  000035                     ?___ftadd:
   459                           	opt stack 0
   460  000035                     ?___fttol:
   461                           	opt stack 0
   462  000035                     ___ftadd@f1:
   463                           	opt stack 0
   464  000035                     ___fttol@f1:
   465                           	opt stack 0
   466                           
   467                           ; 3 bytes @ 0x34
   468  000035                     	ds	3
   469  000038                     ___ftadd@f2:
   470                           	opt stack 0
   471                           
   472                           ; 3 bytes @ 0x37
   473  000038                     	ds	1
   474  000039                     ??___fttol:
   475                           
   476                           ; 1 bytes @ 0x38
   477  000039                     	ds	2
   478  00003B                     ??___ftadd:
   479                           
   480                           ; 1 bytes @ 0x3A
   481  00003B                     	ds	3
   482  00003E                     wait_in_ms@time_in_ms:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x3D
   486  00003E                     	ds	2
   487  000040                     tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           
   494                           ; 1 bytes @ 0x3F
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 35 in file "comuni.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  text            1    0        unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         0       0       0       0       0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels required when called:    7
   520 ;; This function calls:
   521 ;;		_MSdelay
   522 ;;		_USART_Init
   523 ;;		_USART_SendString
   524 ;;		_configBoard
   525 ;;		_lcd_iniciar
   526 ;;		_lcd_limpiar
   527 ;;		_lcd_origen
   528 ;;		_lcd_texto
   529 ;;		_memset
   530 ;;		_strcmp
   531 ;;		_wait_in_ms
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  000E0C                     __ptext0:
   539                           	opt stack 0
   540  000E0C                     _main:
   541                           	opt stack 24
   542                           
   543                           ;comuni.c: 37: OSCCON=0x72;
   544                           
   545                           ;incstack = 0
   546  000E0C  0E72               	movlw	114
   547  000E0E  6ED3               	movwf	4051,c	;volatile
   548                           
   549                           ;comuni.c: 38: TRISC=0;
   550  000E10  0E00               	movlw	0
   551  000E12  6E94               	movwf	3988,c	;volatile
   552                           
   553                           ;comuni.c: 39: configBoard();
   554  000E14  EC34  F008         	call	_configBoard	;wreg free
   555                           
   556                           ;comuni.c: 40: lcd_iniciar();
   557  000E18  ECCB  F005         	call	_lcd_iniciar	;wreg free
   558                           
   559                           ;comuni.c: 41: USART_Init(9600);
   560  000E1C  0E80               	movlw	128
   561  000E1E  0100               	movlb	0	; () banked
   562  000E20  6F66               	movwf	USART_Init@baud_rate& (0+255),b
   563  000E22  0E25               	movlw	37
   564  000E24  6F67               	movwf	(USART_Init@baud_rate+1)& (0+255),b
   565  000E26  0E00               	movlw	0
   566  000E28  6F68               	movwf	(USART_Init@baud_rate+2)& (0+255),b
   567  000E2A  0E00               	movlw	0
   568  000E2C  6F69               	movwf	(USART_Init@baud_rate+3)& (0+255),b
   569  000E2E  ECBB  F007         	call	_USART_Init	;wreg free
   570                           
   571                           ;comuni.c: 42: MSdelay(50);
   572  000E32  0E00               	movlw	0
   573  000E34  6E15               	movwf	MSdelay@val+1,c
   574  000E36  0E32               	movlw	50
   575  000E38  6E14               	movwf	MSdelay@val,c
   576  000E3A  EC37  F009         	call	_MSdelay	;wreg free
   577                           
   578                           ;comuni.c: 43: PIE1bits.RCIE=1;
   579  000E3E  8A9D               	bsf	3997,5,c	;volatile
   580  000E40                     
   581                           ;comuni.c: 46: lcd_origen();
   582  000E40  ECA1  F009         	call	_lcd_origen	;wreg free
   583                           
   584                           ;comuni.c: 51: char text;
   585                           ;comuni.c: 52: lcd_limpiar();
   586  000E44  ECAF  F009         	call	_lcd_limpiar	;wreg free
   587                           
   588                           ;comuni.c: 53: lcd_texto(Input);
   589  000E48  0E78               	movlw	low _Input
   590  000E4A  0100               	movlb	0	; () banked
   591  000E4C  6F75               	movwf	lcd_texto@cadena& (0+255),b
   592  000E4E  0E00               	movlw	high _Input
   593  000E50  6F76               	movwf	(lcd_texto@cadena+1)& (0+255),b
   594  000E52  EC52  F009         	call	_lcd_texto	;wreg free
   595                           
   596                           ;comuni.c: 55: USART_SendString(Input);
   597  000E56  0E78               	movlw	low _Input
   598  000E58  6E15               	movwf	USART_SendString@out,c
   599  000E5A  0E00               	movlw	high _Input
   600  000E5C  6E16               	movwf	USART_SendString@out+1,c
   601  000E5E  EC80  F009         	call	_USART_SendString	;wreg free
   602                           
   603                           ;comuni.c: 56: if(!strcmp("on",Input)){
   604  000E62  0E05               	movlw	low STR_1
   605  000E64  6E14               	movwf	strcmp@s1,c
   606  000E66  0E08               	movlw	high STR_1
   607  000E68  6E15               	movwf	strcmp@s1+1,c
   608  000E6A  0E78               	movlw	low _Input
   609  000E6C  6E16               	movwf	strcmp@s2,c
   610  000E6E  0E00               	movlw	high _Input
   611  000E70  6E17               	movwf	strcmp@s2+1,c
   612  000E72  ECD7  F008         	call	_strcmp	;wreg free
   613  000E76  5014               	movf	?_strcmp,w,c
   614  000E78  1015               	iorwf	?_strcmp+1,w,c
   615  000E7A  A4D8               	btfss	status,2,c
   616  000E7C  D002               	goto	l270
   617                           
   618                           ;comuni.c: 57: PORTCbits.RC2=1;
   619  000E7E  8482               	bsf	3970,2,c	;volatile
   620                           
   621                           ;comuni.c: 58: }
   622  000E80  D00E               	goto	l272
   623  000E82                     l270:
   624                           
   625                           ;comuni.c: 59: else if(!strcmp("off",Input)){
   626  000E82  0E01               	movlw	low STR_2
   627  000E84  6E14               	movwf	strcmp@s1,c
   628  000E86  0E08               	movlw	high STR_2
   629  000E88  6E15               	movwf	strcmp@s1+1,c
   630  000E8A  0E78               	movlw	low _Input
   631  000E8C  6E16               	movwf	strcmp@s2,c
   632  000E8E  0E00               	movlw	high _Input
   633  000E90  6E17               	movwf	strcmp@s2+1,c
   634  000E92  ECD7  F008         	call	_strcmp	;wreg free
   635  000E96  5014               	movf	?_strcmp,w,c
   636  000E98  1015               	iorwf	?_strcmp+1,w,c
   637  000E9A  B4D8               	btfsc	status,2,c
   638                           
   639                           ;comuni.c: 60: PORTCbits.RC2=0;
   640  000E9C  9482               	bcf	3970,2,c	;volatile
   641  000E9E                     l272:
   642                           
   643                           ;comuni.c: 61: }
   644                           ;comuni.c: 62: memset(Input, 0, sizeof Input);
   645  000E9E  0E78               	movlw	low _Input
   646  000EA0  6E14               	movwf	memset@p1,c
   647  000EA2  0E00               	movlw	high _Input
   648  000EA4  6E15               	movwf	memset@p1+1,c
   649  000EA6  0E00               	movlw	0
   650  000EA8  6E17               	movwf	memset@c+1,c
   651  000EAA  0E00               	movlw	0
   652  000EAC  6E16               	movwf	memset@c,c
   653  000EAE  0E00               	movlw	0
   654  000EB0  6E19               	movwf	memset@n+1,c
   655  000EB2  0E16               	movlw	22
   656  000EB4  6E18               	movwf	memset@n,c
   657  000EB6  EC6A  F009         	call	_memset	;wreg free
   658                           
   659                           ;comuni.c: 63: wait_in_ms(500);
   660  000EBA  0E01               	movlw	1
   661  000EBC  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
   662  000EBE  0EF4               	movlw	244
   663  000EC0  6E3E               	movwf	wait_in_ms@time_in_ms,c
   664  000EC2  EC36  F006         	call	_wait_in_ms	;wreg free
   665  000EC6  D7BC               	goto	l269
   666  000EC8                     __end_of_main:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           postinc0	equ	0xFEE
   673                           wreg	equ	0xFE8
   674                           status	equ	0xFD8
   675                           
   676 ;; *************** function _strcmp *****************
   677 ;; Defined at:
   678 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  s1              2   19[COMRAM] PTR const unsigned char 
   681 ;;		 -> STR_2(4), STR_1(3), 
   682 ;;  s2              2   21[COMRAM] PTR const unsigned char 
   683 ;;		 -> Input(22), 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  r               1   24[COMRAM] char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  2   19[COMRAM] int 
   688 ;; Registers used:
   689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         4       0       0       0       0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0       0       0       0       0
   697 ;;      Temps:          1       0       0       0       0       0       0       0       0
   698 ;;      Totals:         6       0       0       0       0       0       0       0       0
   699 ;;Total ram usage:        6 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text1
   710  0011AE                     __ptext1:
   711                           	opt stack 0
   712  0011AE                     _strcmp:
   713                           	opt stack 29
   714                           
   715                           ;incstack = 0
   716  0011AE  D004               	goto	l841
   717  0011B0  4A14               	infsnz	strcmp@s1,f,c
   718  0011B2  2A15               	incf	strcmp@s1+1,f,c
   719  0011B4  4A16               	infsnz	strcmp@s2,f,c
   720  0011B6  2A17               	incf	strcmp@s2+1,f,c
   721  0011B8                     l841:
   722  0011B8  C014  FFF6         	movff	strcmp@s1,tblptrl
   723  0011BC  C015  FFF7         	movff	strcmp@s1+1,tblptrh
   724  0011C0                     	if	0	;tblptru may be non-zero
   725  0011C0                     	endif
   726  0011C0                     	if	0	;tblptru may be non-zero
   727  0011C0                     	endif
   728  0011C0  0008               	tblrd		*
   729  0011C2  CFF5 F018          	movff	tablat,??_strcmp
   730  0011C6  C016  FFD9         	movff	strcmp@s2,fsr2l
   731  0011CA  C017  FFDA         	movff	strcmp@s2+1,fsr2h
   732  0011CE  50DF               	movf	indf2,w,c
   733  0011D0  0800               	sublw	0
   734  0011D2  2418               	addwf	??_strcmp,w,c
   735  0011D4  6E19               	movwf	strcmp@r,c
   736  0011D6  5019               	movf	strcmp@r,w,c
   737  0011D8  A4D8               	btfss	status,2,c
   738  0011DA  D009               	goto	u1550
   739  0011DC  C014  FFF6         	movff	strcmp@s1,tblptrl
   740  0011E0  C015  FFF7         	movff	strcmp@s1+1,tblptrh
   741  0011E4                     	if	0	;tblptru may be non-zero
   742  0011E4                     	endif
   743  0011E4                     	if	0	;tblptru may be non-zero
   744  0011E4                     	endif
   745  0011E4  0008               	tblrd		*
   746  0011E6  50F5               	movf	tablat,w,c
   747  0011E8  0900               	iorlw	0
   748  0011EA  A4D8               	btfss	status,2,c
   749  0011EC  D7E1               	goto	l842
   750  0011EE                     u1550:
   751  0011EE  5019               	movf	strcmp@r,w,c
   752  0011F0  6E14               	movwf	?_strcmp,c
   753  0011F2  6A15               	clrf	?_strcmp+1,c
   754  0011F4  BE14               	btfsc	?_strcmp,7,c
   755  0011F6  0615               	decf	?_strcmp+1,f,c
   756  0011F8  0012               	return	
   757  0011FA                     __end_of_strcmp:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           indf2	equ	0xFDF
   766                           fsr2h	equ	0xFDA
   767                           fsr2l	equ	0xFD9
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _memset *****************
   771 ;; Defined at:
   772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  p1              2   19[COMRAM] PTR void 
   775 ;;		 -> Input(22), 
   776 ;;  c               2   21[COMRAM] int 
   777 ;;  n               2   23[COMRAM] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  p               2   25[COMRAM] PTR unsigned char 
   780 ;;		 -> Input(22), 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  2   19[COMRAM] PTR void 
   783 ;; Registers used:
   784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         6       0       0       0       0       0       0       0       0
   791 ;;      Locals:         2       0       0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0
   793 ;;      Totals:         8       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        8 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text2
   805  0012D4                     __ptext2:
   806                           	opt stack 0
   807  0012D4                     _memset:
   808                           	opt stack 29
   809                           
   810                           ;incstack = 0
   811  0012D4  C014  F01A         	movff	memset@p1,memset@p
   812  0012D8  C015  F01B         	movff	memset@p1+1,memset@p+1
   813  0012DC  D008               	goto	l715
   814  0012DE                     l1903:
   815  0012DE  C01A  FFD9         	movff	memset@p,fsr2l
   816  0012E2  C01B  FFDA         	movff	memset@p+1,fsr2h
   817  0012E6  C016  FFDF         	movff	memset@c,indf2
   818  0012EA  4A1A               	infsnz	memset@p,f,c
   819  0012EC  2A1B               	incf	memset@p+1,f,c
   820  0012EE                     l715:
   821  0012EE  0618               	decf	memset@n,f,c
   822  0012F0  A0D8               	btfss	status,0,c
   823  0012F2  0619               	decf	memset@n+1,f,c
   824  0012F4  2818               	incf	memset@n,w,c
   825  0012F6  E1F3               	bnz	l1903
   826  0012F8  2819               	incf	memset@n+1,w,c
   827  0012FA  B4D8               	btfsc	status,2,c
   828  0012FC  0012               	return	
   829  0012FE  D7EF               	goto	l716
   830  001300                     __end_of_memset:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           indf2	equ	0xFDF
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _lcd_texto *****************
   844 ;; Defined at:
   845 ;;		line 296 in file "lcd.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  cadena          2   21[BANK0 ] PTR unsigned char 
   848 ;;		 -> Input(22), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       2       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       1       0       0       0       0       0       0       0
   863 ;;      Totals:         0       3       0       0       0       0       0       0       0
   864 ;;Total ram usage:        3 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    6
   867 ;; This function calls:
   868 ;;		_lcd_caracter
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text3
   875  0012A4                     __ptext3:
   876                           	opt stack 0
   877  0012A4                     _lcd_texto:
   878                           	opt stack 24
   879                           
   880                           ;lcd.c: 297: while(*cadena != 0x00){
   881                           
   882                           ;incstack = 0
   883  0012A4  D00F               	goto	l121
   884  0012A6                     
   885                           ;lcd.c: 298: lcd_caracter(*cadena);
   886  0012A6  C075  FFD9         	movff	lcd_texto@cadena,fsr2l
   887  0012AA  C076  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   888  0012AE  50DF               	movf	indf2,w,c
   889  0012B0  0100               	movlb	0	; () banked
   890  0012B2  6F77               	movwf	??_lcd_texto& (0+255),b
   891  0012B4  5177               	movf	??_lcd_texto& (0+255),w,b
   892  0012B6  6F6E               	movwf	lcd_caracter@caracter& (0+255),b
   893  0012B8  6B6F               	clrf	(lcd_caracter@caracter+1)& (0+255),b
   894  0012BA  EC6C  F008         	call	_lcd_caracter	;wreg free
   895                           
   896                           ;lcd.c: 299: cadena++;
   897  0012BE  0100               	movlb	0	; () banked
   898  0012C0  4B75               	infsnz	lcd_texto@cadena& (0+255),f,b
   899  0012C2  2B76               	incf	(lcd_texto@cadena+1)& (0+255),f,b
   900  0012C4                     l121:
   901                           
   902                           ; BSR set to: 0
   903  0012C4  C075  FFD9         	movff	lcd_texto@cadena,fsr2l
   904  0012C8  C076  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   905  0012CC  50DF               	movf	indf2,w,c
   906  0012CE  B4D8               	btfsc	status,2,c
   907  0012D0  0012               	return	
   908  0012D2  D7E9               	goto	l122
   909  0012D4                     __end_of_lcd_texto:
   910                           	opt stack 0
   911                           tblptru	equ	0xFF8
   912                           tblptrh	equ	0xFF7
   913                           tblptrl	equ	0xFF6
   914                           tablat	equ	0xFF5
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           indf2	equ	0xFDF
   918                           fsr2h	equ	0xFDA
   919                           fsr2l	equ	0xFD9
   920                           status	equ	0xFD8
   921                           
   922 ;; *************** function _lcd_caracter *****************
   923 ;; Defined at:
   924 ;;		line 286 in file "lcd.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  caracter        2   14[BANK0 ] unsigned int 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       2       0       0       0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0       0       0       0       0
   940 ;;      Temps:          0       5       0       0       0       0       0       0       0
   941 ;;      Totals:         0       7       0       0       0       0       0       0       0
   942 ;;Total ram usage:        7 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    5
   945 ;; This function calls:
   946 ;;		_lcd_pulso
   947 ;; This function is called by:
   948 ;;		_lcd_texto
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text4
   953  0010D8                     __ptext4:
   954                           	opt stack 0
   955  0010D8                     _lcd_caracter:
   956                           	opt stack 24
   957                           
   958                           ;lcd.c: 287: PORTDbits.RD1=1;
   959                           
   960                           ;incstack = 0
   961  0010D8  8283               	bsf	3971,1,c	;volatile
   962                           
   963                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   964  0010DA  CF83 F070          	movff	3971,??_lcd_caracter	;volatile
   965  0010DE  0E0F               	movlw	15
   966  0010E0  0100               	movlb	0	; () banked
   967  0010E2  1770               	andwf	??_lcd_caracter& (0+255),f,b
   968  0010E4  C06E  F071         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   969  0010E8  C06F  F072         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   970  0010EC  0E04               	movlw	4
   971  0010EE  6F73               	movwf	(??_lcd_caracter+3)& (0+255),b
   972  0010F0                     u2095:
   973  0010F0  90D8               	bcf	status,0,c
   974  0010F2  3372               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
   975  0010F4  3371               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
   976  0010F6  2F73               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
   977  0010F8  D7FB               	goto	u2095
   978  0010FA  0E0F               	movlw	15
   979  0010FC  1771               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   980  0010FE  3883               	swapf	3971,w,c	;volatile
   981  001100  0B0F               	andlw	15
   982  001102  0B0F               	andlw	15
   983  001104  090F               	iorlw	15
   984  001106  1571               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   985  001108  6F74               	movwf	(??_lcd_caracter+4)& (0+255),b
   986  00110A  3974               	swapf	(??_lcd_caracter+4)& (0+255),w,b
   987  00110C  0BF0               	andlw	240
   988  00110E  1170               	iorwf	??_lcd_caracter& (0+255),w,b
   989  001110  6E83               	movwf	3971,c	;volatile
   990                           
   991                           ; BSR set to: 0
   992                           ;lcd.c: 290: lcd_pulso();
   993  001112  EC92  F009         	call	_lcd_pulso	;wreg free
   994                           
   995                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   996  001116  CF83 F070          	movff	3971,??_lcd_caracter	;volatile
   997  00111A  0E0F               	movlw	15
   998  00111C  0100               	movlb	0	; () banked
   999  00111E  1770               	andwf	??_lcd_caracter& (0+255),f,b
  1000  001120  C06E  F071         	movff	lcd_caracter@caracter,??_lcd_caracter+1
  1001  001124  0E0F               	movlw	15
  1002  001126  1771               	andwf	(??_lcd_caracter+1)& (0+255),f,b
  1003  001128  3883               	swapf	3971,w,c	;volatile
  1004  00112A  0B0F               	andlw	15
  1005  00112C  0B0F               	andlw	15
  1006  00112E  090F               	iorlw	15
  1007  001130  1571               	andwf	(??_lcd_caracter+1)& (0+255),w,b
  1008  001132  6F72               	movwf	(??_lcd_caracter+2)& (0+255),b
  1009  001134  3972               	swapf	(??_lcd_caracter+2)& (0+255),w,b
  1010  001136  0BF0               	andlw	240
  1011  001138  1170               	iorwf	??_lcd_caracter& (0+255),w,b
  1012  00113A  6E83               	movwf	3971,c	;volatile
  1013                           
  1014                           ;lcd.c: 292: lcd_pulso();
  1015  00113C  EC92  F009         	call	_lcd_pulso	;wreg free
  1016                           
  1017                           ;lcd.c: 293: PORTDbits.RD1=0;
  1018  001140  9283               	bcf	3971,1,c	;volatile
  1019  001142  0012               	return		;funcret
  1020  001144                     __end_of_lcd_caracter:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           indf2	equ	0xFDF
  1029                           fsr2h	equ	0xFDA
  1030                           fsr2l	equ	0xFD9
  1031                           status	equ	0xFD8
  1032                           
  1033 ;; *************** function _lcd_origen *****************
  1034 ;; Defined at:
  1035 ;;		line 308 in file "lcd.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    6
  1056 ;; This function calls:
  1057 ;;		_lcd_orden
  1058 ;;		_wait_in_ms
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;;		_lcd_ubicarXY
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text5
  1066  001342                     __ptext5:
  1067                           	opt stack 0
  1068  001342                     _lcd_origen:
  1069                           	opt stack 24
  1070                           
  1071                           ;lcd.c: 309: lcd_orden(0x02);
  1072                           
  1073                           ;incstack = 0
  1074  001342  0E00               	movlw	0
  1075  001344  0100               	movlb	0	; () banked
  1076  001346  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1077  001348  0E02               	movlw	2
  1078  00134A  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1079  00134C  ECA2  F008         	call	_lcd_orden	;wreg free
  1080                           
  1081                           ;lcd.c: 310: wait_in_ms(4);
  1082  001350  0E00               	movlw	0
  1083  001352  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1084  001354  0E04               	movlw	4
  1085  001356  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1086  001358  EC36  F006         	call	_wait_in_ms	;wreg free
  1087  00135C  0012               	return		;funcret
  1088  00135E                     __end_of_lcd_origen:
  1089                           	opt stack 0
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           indf2	equ	0xFDF
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function _lcd_limpiar *****************
  1102 ;; Defined at:
  1103 ;;		line 303 in file "lcd.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    6
  1124 ;; This function calls:
  1125 ;;		_lcd_orden
  1126 ;;		_wait_in_ms
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text6
  1133  00135E                     __ptext6:
  1134                           	opt stack 0
  1135  00135E                     _lcd_limpiar:
  1136                           	opt stack 24
  1137                           
  1138                           ;lcd.c: 304: lcd_orden(0x01);
  1139                           
  1140                           ;incstack = 0
  1141  00135E  0E00               	movlw	0
  1142  001360  0100               	movlb	0	; () banked
  1143  001362  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1144  001364  0E01               	movlw	1
  1145  001366  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1146  001368  ECA2  F008         	call	_lcd_orden	;wreg free
  1147                           
  1148                           ;lcd.c: 305: wait_in_ms(2);
  1149  00136C  0E00               	movlw	0
  1150  00136E  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1151  001370  0E02               	movlw	2
  1152  001372  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1153  001374  EC36  F006         	call	_wait_in_ms	;wreg free
  1154  001378  0012               	return		;funcret
  1155  00137A                     __end_of_lcd_limpiar:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           indf2	equ	0xFDF
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _lcd_iniciar *****************
  1169 ;; Defined at:
  1170 ;;		line 224 in file "lcd.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    6
  1191 ;; This function calls:
  1192 ;;		_lcd_orden
  1193 ;;		_lcd_pulso
  1194 ;;		_wait_in_ms
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text7
  1201  000B96                     __ptext7:
  1202                           	opt stack 0
  1203  000B96                     _lcd_iniciar:
  1204                           	opt stack 24
  1205                           
  1206                           ;lcd.c: 225: TRISDbits.TRISD1=0;
  1207                           
  1208                           ;incstack = 0
  1209  000B96  9295               	bcf	3989,1,c	;volatile
  1210                           
  1211                           ;lcd.c: 226: TRISDbits.TRISD2=0;
  1212  000B98  9495               	bcf	3989,2,c	;volatile
  1213                           
  1214                           ;lcd.c: 227: TRISDbits.TRISD3=0;
  1215  000B9A  9695               	bcf	3989,3,c	;volatile
  1216                           
  1217                           ;lcd.c: 228: TRISDbits.TRISD4=0;
  1218  000B9C  9895               	bcf	3989,4,c	;volatile
  1219                           
  1220                           ;lcd.c: 229: TRISDbits.TRISD5=0;
  1221  000B9E  9A95               	bcf	3989,5,c	;volatile
  1222                           
  1223                           ;lcd.c: 230: TRISDbits.TRISD6=0;
  1224  000BA0  9C95               	bcf	3989,6,c	;volatile
  1225                           
  1226                           ;lcd.c: 231: TRISDbits.TRISD7=0;
  1227  000BA2  9E95               	bcf	3989,7,c	;volatile
  1228                           
  1229                           ;lcd.c: 233: PORTDbits.RD1=0;
  1230  000BA4  9283               	bcf	3971,1,c	;volatile
  1231                           
  1232                           ;lcd.c: 234: PORTDbits.RD2=0;
  1233  000BA6  9483               	bcf	3971,2,c	;volatile
  1234                           
  1235                           ;lcd.c: 235: PORTDbits.RD3=0;
  1236  000BA8  9683               	bcf	3971,3,c	;volatile
  1237                           
  1238                           ;lcd.c: 236: PORTDbits.RD4=0;
  1239  000BAA  9883               	bcf	3971,4,c	;volatile
  1240                           
  1241                           ;lcd.c: 237: PORTDbits.RD5=0;
  1242  000BAC  9A83               	bcf	3971,5,c	;volatile
  1243                           
  1244                           ;lcd.c: 238: PORTDbits.RD6=0;
  1245  000BAE  9C83               	bcf	3971,6,c	;volatile
  1246                           
  1247                           ;lcd.c: 239: PORTDbits.RD7=0;
  1248  000BB0  9E83               	bcf	3971,7,c	;volatile
  1249                           
  1250                           ;lcd.c: 241: wait_in_ms(20);
  1251  000BB2  0E00               	movlw	0
  1252  000BB4  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1253  000BB6  0E14               	movlw	20
  1254  000BB8  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1255  000BBA  EC36  F006         	call	_wait_in_ms	;wreg free
  1256                           
  1257                           ;lcd.c: 242: PORTD=0X03<<4;
  1258  000BBE  0E30               	movlw	48
  1259  000BC0  6E83               	movwf	3971,c	;volatile
  1260                           
  1261                           ;lcd.c: 243: lcd_pulso();
  1262  000BC2  EC92  F009         	call	_lcd_pulso	;wreg free
  1263                           
  1264                           ;lcd.c: 244: wait_in_ms(4);
  1265  000BC6  0E00               	movlw	0
  1266  000BC8  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1267  000BCA  0E04               	movlw	4
  1268  000BCC  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1269  000BCE  EC36  F006         	call	_wait_in_ms	;wreg free
  1270                           
  1271                           ;lcd.c: 246: PORTD=0X03<<4;
  1272  000BD2  0E30               	movlw	48
  1273  000BD4  6E83               	movwf	3971,c	;volatile
  1274                           
  1275                           ;lcd.c: 247: lcd_pulso();
  1276  000BD6  EC92  F009         	call	_lcd_pulso	;wreg free
  1277                           
  1278                           ;lcd.c: 248: wait_in_ms(4);
  1279  000BDA  0E00               	movlw	0
  1280  000BDC  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1281  000BDE  0E04               	movlw	4
  1282  000BE0  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1283  000BE2  EC36  F006         	call	_wait_in_ms	;wreg free
  1284                           
  1285                           ;lcd.c: 250: PORTD=0X03<<4;
  1286  000BE6  0E30               	movlw	48
  1287  000BE8  6E83               	movwf	3971,c	;volatile
  1288                           
  1289                           ;lcd.c: 251: lcd_pulso();
  1290  000BEA  EC92  F009         	call	_lcd_pulso	;wreg free
  1291                           
  1292                           ;lcd.c: 252: wait_in_ms(1);
  1293  000BEE  0E00               	movlw	0
  1294  000BF0  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1295  000BF2  0E01               	movlw	1
  1296  000BF4  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1297  000BF6  EC36  F006         	call	_wait_in_ms	;wreg free
  1298                           
  1299                           ;lcd.c: 254: PORTD=0X02<<4;
  1300  000BFA  0E20               	movlw	32
  1301  000BFC  6E83               	movwf	3971,c	;volatile
  1302                           
  1303                           ;lcd.c: 255: lcd_pulso();
  1304  000BFE  EC92  F009         	call	_lcd_pulso	;wreg free
  1305                           
  1306                           ;lcd.c: 257: lcd_orden(0x28);
  1307  000C02  0E00               	movlw	0
  1308  000C04  0100               	movlb	0	; () banked
  1309  000C06  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1310  000C08  0E28               	movlw	40
  1311  000C0A  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1312  000C0C  ECA2  F008         	call	_lcd_orden	;wreg free
  1313                           
  1314                           ;lcd.c: 258: wait_in_ms(8);
  1315  000C10  0E00               	movlw	0
  1316  000C12  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1317  000C14  0E08               	movlw	8
  1318  000C16  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1319  000C18  EC36  F006         	call	_wait_in_ms	;wreg free
  1320                           
  1321                           ;lcd.c: 260: lcd_orden(0x0c);
  1322  000C1C  0E00               	movlw	0
  1323  000C1E  0100               	movlb	0	; () banked
  1324  000C20  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1325  000C22  0E0C               	movlw	12
  1326  000C24  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1327  000C26  ECA2  F008         	call	_lcd_orden	;wreg free
  1328                           
  1329                           ;lcd.c: 261: wait_in_ms(8);
  1330  000C2A  0E00               	movlw	0
  1331  000C2C  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1332  000C2E  0E08               	movlw	8
  1333  000C30  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1334  000C32  EC36  F006         	call	_wait_in_ms	;wreg free
  1335                           
  1336                           ;lcd.c: 263: lcd_orden(0x01);
  1337  000C36  0E00               	movlw	0
  1338  000C38  0100               	movlb	0	; () banked
  1339  000C3A  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1340  000C3C  0E01               	movlw	1
  1341  000C3E  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1342  000C40  ECA2  F008         	call	_lcd_orden	;wreg free
  1343                           
  1344                           ;lcd.c: 264: wait_in_ms(2);
  1345  000C44  0E00               	movlw	0
  1346  000C46  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1347  000C48  0E02               	movlw	2
  1348  000C4A  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1349  000C4C  EC36  F006         	call	_wait_in_ms	;wreg free
  1350                           
  1351                           ;lcd.c: 266: lcd_orden(0x06);
  1352  000C50  0E00               	movlw	0
  1353  000C52  0100               	movlb	0	; () banked
  1354  000C54  6F6F               	movwf	(lcd_orden@orden+1)& (0+255),b
  1355  000C56  0E06               	movlw	6
  1356  000C58  6F6E               	movwf	lcd_orden@orden& (0+255),b
  1357  000C5A  ECA2  F008         	call	_lcd_orden	;wreg free
  1358                           
  1359                           ;lcd.c: 267: wait_in_ms(8);
  1360  000C5E  0E00               	movlw	0
  1361  000C60  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1362  000C62  0E08               	movlw	8
  1363  000C64  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1364  000C66  EC36  F006         	call	_wait_in_ms	;wreg free
  1365  000C6A  0012               	return		;funcret
  1366  000C6C                     __end_of_lcd_iniciar:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _lcd_orden *****************
  1380 ;; Defined at:
  1381 ;;		line 277 in file "lcd.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  orden           2   14[BANK0 ] unsigned int 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       2       0       0       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1398 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        7 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    5
  1402 ;; This function calls:
  1403 ;;		_lcd_pulso
  1404 ;; This function is called by:
  1405 ;;		_lcd_iniciar
  1406 ;;		_lcd_limpiar
  1407 ;;		_lcd_origen
  1408 ;;		_lcd_ubicarXY
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text8
  1413  001144                     __ptext8:
  1414                           	opt stack 0
  1415  001144                     _lcd_orden:
  1416                           	opt stack 24
  1417                           
  1418                           ;lcd.c: 278: PORTDbits.RD1=0;
  1419                           
  1420                           ;incstack = 0
  1421  001144  9283               	bcf	3971,1,c	;volatile
  1422                           
  1423                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  1424  001146  CF83 F070          	movff	3971,??_lcd_orden	;volatile
  1425  00114A  0E0F               	movlw	15
  1426  00114C  0100               	movlb	0	; () banked
  1427  00114E  1770               	andwf	??_lcd_orden& (0+255),f,b
  1428  001150  C06E  F071         	movff	lcd_orden@orden,??_lcd_orden+1
  1429  001154  C06F  F072         	movff	lcd_orden@orden+1,??_lcd_orden+2
  1430  001158  0E04               	movlw	4
  1431  00115A  6F73               	movwf	(??_lcd_orden+3)& (0+255),b
  1432  00115C                     u2085:
  1433  00115C  90D8               	bcf	status,0,c
  1434  00115E  3372               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  1435  001160  3371               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  1436  001162  2F73               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  1437  001164  D7FB               	goto	u2085
  1438  001166  0E0F               	movlw	15
  1439  001168  1771               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1440  00116A  3883               	swapf	3971,w,c	;volatile
  1441  00116C  0B0F               	andlw	15
  1442  00116E  0B0F               	andlw	15
  1443  001170  090F               	iorlw	15
  1444  001172  1571               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1445  001174  6F74               	movwf	(??_lcd_orden+4)& (0+255),b
  1446  001176  3974               	swapf	(??_lcd_orden+4)& (0+255),w,b
  1447  001178  0BF0               	andlw	240
  1448  00117A  1170               	iorwf	??_lcd_orden& (0+255),w,b
  1449  00117C  6E83               	movwf	3971,c	;volatile
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;lcd.c: 281: lcd_pulso();
  1453  00117E  EC92  F009         	call	_lcd_pulso	;wreg free
  1454                           
  1455                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  1456  001182  CF83 F070          	movff	3971,??_lcd_orden	;volatile
  1457  001186  0E0F               	movlw	15
  1458  001188  0100               	movlb	0	; () banked
  1459  00118A  1770               	andwf	??_lcd_orden& (0+255),f,b
  1460  00118C  C06E  F071         	movff	lcd_orden@orden,??_lcd_orden+1
  1461  001190  0E0F               	movlw	15
  1462  001192  1771               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1463  001194  3883               	swapf	3971,w,c	;volatile
  1464  001196  0B0F               	andlw	15
  1465  001198  0B0F               	andlw	15
  1466  00119A  090F               	iorlw	15
  1467  00119C  1571               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1468  00119E  6F72               	movwf	(??_lcd_orden+2)& (0+255),b
  1469  0011A0  3972               	swapf	(??_lcd_orden+2)& (0+255),w,b
  1470  0011A2  0BF0               	andlw	240
  1471  0011A4  1170               	iorwf	??_lcd_orden& (0+255),w,b
  1472  0011A6  6E83               	movwf	3971,c	;volatile
  1473                           
  1474                           ;lcd.c: 283: lcd_pulso();
  1475  0011A8  EC92  F009         	call	_lcd_pulso	;wreg free
  1476  0011AC  0012               	return		;funcret
  1477  0011AE                     __end_of_lcd_orden:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           postinc0	equ	0xFEE
  1484                           wreg	equ	0xFE8
  1485                           indf2	equ	0xFDF
  1486                           fsr2h	equ	0xFDA
  1487                           fsr2l	equ	0xFD9
  1488                           status	equ	0xFD8
  1489                           
  1490 ;; *************** function _lcd_pulso *****************
  1491 ;; Defined at:
  1492 ;;		line 270 in file "lcd.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1506 ;;      Params:         0       0       0       0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    4
  1513 ;; This function calls:
  1514 ;;		_wait_in_ms
  1515 ;; This function is called by:
  1516 ;;		_lcd_iniciar
  1517 ;;		_lcd_orden
  1518 ;;		_lcd_caracter
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text9
  1523  001324                     __ptext9:
  1524                           	opt stack 0
  1525  001324                     _lcd_pulso:
  1526                           	opt stack 24
  1527                           
  1528                           ;lcd.c: 271: PORTDbits.RD3=1;
  1529                           
  1530                           ;incstack = 0
  1531  001324  8683               	bsf	3971,3,c	;volatile
  1532                           
  1533                           ;lcd.c: 272: wait_in_ms(2);
  1534  001326  0E00               	movlw	0
  1535  001328  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1536  00132A  0E02               	movlw	2
  1537  00132C  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1538  00132E  EC36  F006         	call	_wait_in_ms	;wreg free
  1539                           
  1540                           ;lcd.c: 273: PORTDbits.RD3=0;
  1541  001332  9683               	bcf	3971,3,c	;volatile
  1542                           
  1543                           ;lcd.c: 274: wait_in_ms(2);
  1544  001334  0E00               	movlw	0
  1545  001336  6E3F               	movwf	wait_in_ms@time_in_ms+1,c
  1546  001338  0E02               	movlw	2
  1547  00133A  6E3E               	movwf	wait_in_ms@time_in_ms,c
  1548  00133C  EC36  F006         	call	_wait_in_ms	;wreg free
  1549  001340  0012               	return		;funcret
  1550  001342                     __end_of_lcd_pulso:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           indf2	equ	0xFDF
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _wait_in_ms *****************
  1564 ;; Defined at:
  1565 ;;		line 80 in file "config.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  time_in_ms      2   61[COMRAM] int 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  count_ms        2   12[BANK0 ] unsigned int 
  1570 ;;  count           2   10[BANK0 ] unsigned int 
  1571 ;;  flag            2    8[BANK0 ] unsigned int 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         2       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1584 ;;      Totals:         2       8       0       0       0       0       0       0       0
  1585 ;;Total ram usage:       10 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		___awtoft
  1590 ;;		___ftdiv
  1591 ;;		___fttol
  1592 ;; This function is called by:
  1593 ;;		_lcd_iniciar
  1594 ;;		_lcd_pulso
  1595 ;;		_lcd_limpiar
  1596 ;;		_lcd_origen
  1597 ;;		_main
  1598 ;;		_ADC_Read
  1599 ;;		_Lcd_Cmd
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text10
  1604  000C6C                     __ptext10:
  1605                           	opt stack 0
  1606  000C6C                     _wait_in_ms:
  1607                           	opt stack 27
  1608                           
  1609                           ;config.c: 81: unsigned int count = 0;
  1610                           
  1611                           ;incstack = 0
  1612  000C6C  0E00               	movlw	0
  1613  000C6E  0100               	movlb	0	; () banked
  1614  000C70  6F6B               	movwf	(wait_in_ms@count+1)& (0+255),b
  1615  000C72  0E00               	movlw	0
  1616  000C74  6F6A               	movwf	wait_in_ms@count& (0+255),b
  1617                           
  1618                           ;config.c: 82: unsigned int count_ms = 0;
  1619  000C76  0E00               	movlw	0
  1620  000C78  6F6D               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  1621  000C7A  0E00               	movlw	0
  1622  000C7C  6F6C               	movwf	wait_in_ms@count_ms& (0+255),b
  1623                           
  1624                           ;config.c: 83: unsigned int flag = 0;
  1625  000C7E  0E00               	movlw	0
  1626  000C80  6F69               	movwf	(wait_in_ms@flag+1)& (0+255),b
  1627  000C82  0E00               	movlw	0
  1628  000C84  6F68               	movwf	wait_in_ms@flag& (0+255),b
  1629                           
  1630                           ;config.c: 85: TMR0L = 131;
  1631  000C86  0E83               	movlw	131
  1632  000C88  6ED6               	movwf	4054,c	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;config.c: 88: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1636  000C8A  50D6               	movf	4054,w,c	;volatile
  1637  000C8C  6F66               	movwf	??_wait_in_ms& (0+255),b
  1638  000C8E  6B67               	clrf	(??_wait_in_ms+1)& (0+255),b
  1639  000C90  1F66               	comf	??_wait_in_ms& (0+255),f,b
  1640  000C92  1F67               	comf	(??_wait_in_ms+1)& (0+255),f,b
  1641  000C94  4B66               	infsnz	??_wait_in_ms& (0+255),f,b
  1642  000C96  2B67               	incf	(??_wait_in_ms+1)& (0+255),f,b
  1643  000C98  0E05               	movlw	5
  1644  000C9A                     u2035:
  1645  000C9A  90D8               	bcf	status,0,c
  1646  000C9C  3766               	rlcf	??_wait_in_ms& (0+255),f,b
  1647  000C9E  3767               	rlcf	(??_wait_in_ms+1)& (0+255),f,b
  1648  000CA0  2EE8               	decfsz	wreg,f,c
  1649  000CA2  D7FB               	goto	u2035
  1650  000CA4  0E00               	movlw	0
  1651  000CA6  2566               	addwf	??_wait_in_ms& (0+255),w,b
  1652  000CA8  6E1C               	movwf	___awtoft@c,c
  1653  000CAA  0E20               	movlw	32
  1654  000CAC  2167               	addwfc	(??_wait_in_ms+1)& (0+255),w,b
  1655  000CAE  6E1D               	movwf	___awtoft@c+1,c
  1656  000CB0  EC1B  F009         	call	___awtoft	;wreg free
  1657  000CB4  C01C  F029         	movff	?___awtoft,___ftdiv@f2
  1658  000CB8  C01D  F02A         	movff	?___awtoft+1,___ftdiv@f2+1
  1659  000CBC  C01E  F02B         	movff	?___awtoft+2,___ftdiv@f2+2
  1660  000CC0  0E00               	movlw	0
  1661  000CC2  6E26               	movwf	___ftdiv@f1,c
  1662  000CC4  0EFA               	movlw	250
  1663  000CC6  6E27               	movwf	___ftdiv@f1+1,c
  1664  000CC8  0E45               	movlw	69
  1665  000CCA  6E28               	movwf	___ftdiv@f1+2,c
  1666  000CCC  EC58  F005         	call	___ftdiv	;wreg free
  1667  000CD0  C026  F035         	movff	?___ftdiv,___fttol@f1
  1668  000CD4  C027  F036         	movff	?___ftdiv+1,___fttol@f1+1
  1669  000CD8  C028  F037         	movff	?___ftdiv+2,___fttol@f1+2
  1670  000CDC  ECDC  F004         	call	___fttol	;wreg free
  1671  000CE0  C035  F06C         	movff	?___fttol,wait_in_ms@count_ms
  1672  000CE4  C036  F06D         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1673                           
  1674                           ;config.c: 90: TMR0ON = 1;
  1675  000CE8  8ED5               	bsf	4053,7,c	;volatile
  1676                           
  1677                           ;config.c: 92: while (count < count_ms){
  1678  000CEA  D020               	goto	l49
  1679  000CEC                     l45:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;config.c: 93: if(TMR0IF == 1){
  1683  000CEC  A4F2               	btfss	intcon,2,c	;volatile
  1684  000CEE  D01E               	goto	l49
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;config.c: 94: TMR0IF = 0;
  1688  000CF0  94F2               	bcf	intcon,2,c	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;config.c: 95: TMR0L = 131;
  1692  000CF2  0E83               	movlw	131
  1693  000CF4  6ED6               	movwf	4054,c	;volatile
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;config.c: 96: count ++;
  1697  000CF6  4B6A               	infsnz	wait_in_ms@count& (0+255),f,b
  1698  000CF8  2B6B               	incf	(wait_in_ms@count+1)& (0+255),f,b
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;config.c: 97: if (count == count_ms){
  1702  000CFA  516C               	movf	wait_in_ms@count_ms& (0+255),w,b
  1703  000CFC  196A               	xorwf	wait_in_ms@count& (0+255),w,b
  1704  000CFE  E116               	bnz	l2203
  1705  000D00  516D               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1706  000D02  196B               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  1707  000D04  A4D8               	btfss	status,2,c
  1708  000D06  D012               	goto	l49
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;config.c: 98: flag++;
  1712  000D08  4B68               	infsnz	wait_in_ms@flag& (0+255),f,b
  1713  000D0A  2B69               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;config.c: 99: if (flag != time_in_ms){
  1717  000D0C  5168               	movf	wait_in_ms@flag& (0+255),w,b
  1718  000D0E  183E               	xorwf	wait_in_ms@time_in_ms,w,c
  1719  000D10  E104               	bnz	u2060
  1720  000D12  5169               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  1721  000D14  183F               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1722  000D16  B4D8               	btfsc	status,2,c
  1723  000D18  D005               	goto	l48
  1724  000D1A                     u2060:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;config.c: 100: count = 0;
  1728  000D1A  0E00               	movlw	0
  1729  000D1C  6F6B               	movwf	(wait_in_ms@count+1)& (0+255),b
  1730  000D1E  0E00               	movlw	0
  1731  000D20  6F6A               	movwf	wait_in_ms@count& (0+255),b
  1732                           
  1733                           ;config.c: 101: }
  1734  000D22  D004               	goto	l49
  1735  000D24                     l48:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;config.c: 102: else{
  1739                           ;config.c: 103: count = count_ms;
  1740  000D24  C06C  F06A         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1741  000D28  C06D  F06B         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1742  000D2C                     l49:
  1743  000D2C                     l2203:
  1744  000D2C  0100               	movlb	0	; () banked
  1745  000D2E  516C               	movf	wait_in_ms@count_ms& (0+255),w,b
  1746  000D30  5D6A               	subwf	wait_in_ms@count& (0+255),w,b
  1747  000D32  516D               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1748  000D34  596B               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  1749  000D36  B0D8               	btfsc	status,0,c
  1750  000D38  0012               	return	
  1751  000D3A  D7D8               	goto	l45
  1752  000D3C                     __end_of_wait_in_ms:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           intcon	equ	0xFF2
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           indf2	equ	0xFDF
  1762                           fsr2h	equ	0xFDA
  1763                           fsr2l	equ	0xFD9
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function ___awtoft *****************
  1767 ;; Defined at:
  1768 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  c               2   27[COMRAM] int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  sign            1   30[COMRAM] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  3   27[COMRAM] float 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         3       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        4 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    2
  1789 ;; This function calls:
  1790 ;;		___ftpack
  1791 ;; This function is called by:
  1792 ;;		_wait_in_ms
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text11
  1797  001236                     __ptext11:
  1798                           	opt stack 0
  1799  001236                     ___awtoft:
  1800                           	opt stack 27
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;incstack = 0
  1804  001236  0E00               	movlw	0
  1805  001238  6E1F               	movwf	___awtoft@sign,c
  1806  00123A  AE1D               	btfss	___awtoft@c+1,7,c
  1807  00123C  D006               	goto	l483
  1808  00123E  6C1C               	negf	___awtoft@c,c
  1809  001240  1E1D               	comf	___awtoft@c+1,f,c
  1810  001242  B0D8               	btfsc	status,0,c
  1811  001244  2A1D               	incf	___awtoft@c+1,f,c
  1812  001246  0E01               	movlw	1
  1813  001248  6E1F               	movwf	___awtoft@sign,c
  1814  00124A                     l483:
  1815  00124A  C01C  F014         	movff	___awtoft@c,___ftpack@arg
  1816  00124E  C01D  F015         	movff	___awtoft@c+1,___ftpack@arg+1
  1817  001252  6A16               	clrf	___ftpack@arg+2,c
  1818  001254  0E8E               	movlw	142
  1819  001256  6E17               	movwf	___ftpack@exp,c
  1820  001258  C01F  F018         	movff	___awtoft@sign,___ftpack@sign
  1821  00125C  EC64  F007         	call	___ftpack	;wreg free
  1822  001260  C014  F01C         	movff	?___ftpack,?___awtoft
  1823  001264  C015  F01D         	movff	?___ftpack+1,?___awtoft+1
  1824  001268  C016  F01E         	movff	?___ftpack+2,?___awtoft+2
  1825  00126C  0012               	return	
  1826  00126E                     __end_of___awtoft:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           indf2	equ	0xFDF
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _configBoard *****************
  1841 ;; Defined at:
  1842 ;;		line 11 in file "config.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text12
  1871  001068                     __ptext12:
  1872                           	opt stack 0
  1873  001068                     _configBoard:
  1874                           	opt stack 29
  1875                           
  1876                           ;config.c: 15: INTCONbits.GIE = 1;
  1877                           
  1878                           ;incstack = 0
  1879  001068  8EF2               	bsf	intcon,7,c	;volatile
  1880                           
  1881                           ;config.c: 16: INTCONbits.PEIE = 1;
  1882  00106A  8CF2               	bsf	intcon,6,c	;volatile
  1883                           
  1884                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1885  00106C  8ED5               	bsf	4053,7,c	;volatile
  1886                           
  1887                           ;config.c: 26: T08BIT = 1;
  1888  00106E  8CD5               	bsf	4053,6,c	;volatile
  1889                           
  1890                           ;config.c: 27: T0CONbits.T0CS = 0;
  1891  001070  9AD5               	bcf	4053,5,c	;volatile
  1892                           
  1893                           ;config.c: 29: T0CONbits.PSA = 0;
  1894  001072  96D5               	bcf	4053,3,c	;volatile
  1895                           
  1896                           ;config.c: 30: T0CONbits.T0PS = 100;
  1897  001074  50D5               	movf	4053,w,c	;volatile
  1898  001076  0BF8               	andlw	-8
  1899  001078  0904               	iorlw	4
  1900  00107A  6ED5               	movwf	4053,c	;volatile
  1901                           
  1902                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1903  00107C  94F2               	bcf	intcon,2,c	;volatile
  1904                           
  1905                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1906  00107E  80C1               	bsf	4033,0,c	;volatile
  1907  001080  82C1               	bsf	4033,1,c	;volatile
  1908  001082  84C1               	bsf	4033,2,c	;volatile
  1909  001084  86C1               	bsf	4033,3,c	;volatile
  1910                           
  1911                           ;config.c: 36: TRISA=0b00000000;
  1912  001086  0E00               	movlw	0
  1913  001088  6E92               	movwf	3986,c	;volatile
  1914                           
  1915                           ;config.c: 37: TRISB=0b00000000;
  1916  00108A  0E00               	movlw	0
  1917  00108C  6E93               	movwf	3987,c	;volatile
  1918                           
  1919                           ;config.c: 44: ADCON0 = 0b00000111;
  1920  00108E  0E07               	movlw	7
  1921  001090  6EC2               	movwf	4034,c	;volatile
  1922                           
  1923                           ;config.c: 47: ADCON0bits.ADON = 0;
  1924  001092  90C2               	bcf	4034,0,c	;volatile
  1925                           
  1926                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1927  001094  8EC0               	bsf	4032,7,c	;volatile
  1928                           
  1929                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1930  001096  50C0               	movf	4032,w,c	;volatile
  1931  001098  0BF8               	andlw	-8
  1932  00109A  0906               	iorlw	6
  1933  00109C  6EC0               	movwf	4032,c	;volatile
  1934                           
  1935                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1936  00109E  50C0               	movf	4032,w,c	;volatile
  1937  0010A0  0BC7               	andlw	-57
  1938  0010A2  0928               	iorlw	40
  1939  0010A4  6EC0               	movwf	4032,c	;volatile
  1940                           
  1941                           ;config.c: 54: ADCON1bits.PCFG=0b1101;
  1942  0010A6  50C1               	movf	4033,w,c	;volatile
  1943  0010A8  0BF0               	andlw	-16
  1944  0010AA  090D               	iorlw	13
  1945  0010AC  6EC1               	movwf	4033,c	;volatile
  1946                           
  1947                           ;config.c: 55: TRISAbits.RA1=1;
  1948  0010AE  8292               	bsf	3986,1,c	;volatile
  1949                           
  1950                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1951  0010B0  50C0               	movf	4032,w,c	;volatile
  1952  0010B2  0BF8               	andlw	-8
  1953  0010B4  0906               	iorlw	6
  1954  0010B6  6EC0               	movwf	4032,c	;volatile
  1955                           
  1956                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1957  0010B8  9AC1               	bcf	4033,5,c	;volatile
  1958                           
  1959                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1960  0010BA  98C1               	bcf	4033,4,c	;volatile
  1961                           
  1962                           ;config.c: 60: ADCON2bits.ADFM=1;
  1963  0010BC  8EC0               	bsf	4032,7,c	;volatile
  1964                           
  1965                           ;config.c: 64: ADCON0bits.ADON=0;
  1966  0010BE  90C2               	bcf	4034,0,c	;volatile
  1967                           
  1968                           ;config.c: 66: PIE1bits.ADIE=1;
  1969  0010C0  8C9D               	bsf	3997,6,c	;volatile
  1970                           
  1971                           ;config.c: 67: PIR1bits.ADIF=0;
  1972  0010C2  9C9E               	bcf	3998,6,c	;volatile
  1973                           
  1974                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1975  0010C4  86C0               	bsf	4032,3,c	;volatile
  1976  0010C6  88C0               	bsf	4032,4,c	;volatile
  1977  0010C8  8AC0               	bsf	4032,5,c	;volatile
  1978                           
  1979                           ;config.c: 70: ADCON0bits.GO=1;
  1980  0010CA  82C2               	bsf	4034,1,c	;volatile
  1981                           
  1982                           ;config.c: 72: RCIF=0;
  1983  0010CC  9A9E               	bcf	3998,5,c	;volatile
  1984                           
  1985                           ;config.c: 75: TRISD=0;
  1986  0010CE  0E00               	movlw	0
  1987  0010D0  6E95               	movwf	3989,c	;volatile
  1988                           
  1989                           ;config.c: 76: PORTA=0;
  1990  0010D2  0E00               	movlw	0
  1991  0010D4  6E80               	movwf	3968,c	;volatile
  1992  0010D6  0012               	return		;funcret
  1993  0010D8                     __end_of_configBoard:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           indf2	equ	0xFDF
  2003                           fsr2h	equ	0xFDA
  2004                           fsr2l	equ	0xFD9
  2005                           status	equ	0xFD8
  2006                           
  2007 ;; *************** function _USART_SendString *****************
  2008 ;; Defined at:
  2009 ;;		line 40 in file "USART_Source_File.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  out             2   20[COMRAM] PTR const unsigned char 
  2012 ;;		 -> Input(22), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         2       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		_USART_TransmitChar
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text13
  2039  001300                     __ptext13:
  2040                           	opt stack 0
  2041  001300                     _USART_SendString:
  2042                           	opt stack 28
  2043                           
  2044                           ;USART_Source_File.c: 42: while(*out!='\0')
  2045                           
  2046                           ;incstack = 0
  2047  001300  D009               	goto	l197
  2048  001302                     
  2049                           ;USART_Source_File.c: 43: {
  2050                           ;USART_Source_File.c: 44: USART_TransmitChar(*out);
  2051  001302  C015  FFD9         	movff	USART_SendString@out,fsr2l
  2052  001306  C016  FFDA         	movff	USART_SendString@out+1,fsr2h
  2053  00130A  50DF               	movf	indf2,w,c
  2054  00130C  ECBD  F009         	call	_USART_TransmitChar
  2055                           
  2056                           ;USART_Source_File.c: 45: out++;
  2057  001310  4A15               	infsnz	USART_SendString@out,f,c
  2058  001312  2A16               	incf	USART_SendString@out+1,f,c
  2059  001314                     l197:
  2060  001314  C015  FFD9         	movff	USART_SendString@out,fsr2l
  2061  001318  C016  FFDA         	movff	USART_SendString@out+1,fsr2h
  2062  00131C  50DF               	movf	indf2,w,c
  2063  00131E  B4D8               	btfsc	status,2,c
  2064  001320  0012               	return	
  2065  001322  D7EF               	goto	l198
  2066  001324                     __end_of_USART_SendString:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           intcon	equ	0xFF2
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           indf2	equ	0xFDF
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _USART_TransmitChar *****************
  2081 ;; Defined at:
  2082 ;;		line 22 in file "USART_Source_File.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  out             1    wreg     unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  out             1   19[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2096 ;;      Params:         0       0       0       0       0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_USART_SendString
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text14
  2111  00137A                     __ptext14:
  2112                           	opt stack 0
  2113  00137A                     _USART_TransmitChar:
  2114                           	opt stack 28
  2115                           
  2116                           ;incstack = 0
  2117                           ;USART_TransmitChar@out stored from wreg
  2118  00137A  6E14               	movwf	USART_TransmitChar@out,c
  2119  00137C                     
  2120                           ;USART_Source_File.c: 24: while(TXIF==0);
  2121  00137C  A89E               	btfss	3998,4,c	;volatile
  2122  00137E  D7FE               	goto	l1693
  2123                           
  2124                           ;USART_Source_File.c: 25: TXREG=out;
  2125  001380  C014  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2126  001384  0012               	return		;funcret
  2127  001386                     __end_of_USART_TransmitChar:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           intcon	equ	0xFF2
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           indf2	equ	0xFDF
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _USART_Init *****************
  2142 ;; Defined at:
  2143 ;;		line 10 in file "USART_Source_File.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  baud_rate       4    6[BANK0 ] long 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  temp            3   10[BANK0 ] float 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2157 ;;      Params:         0       4       0       0       0       0       0       0       0
  2158 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2160 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2161 ;;Total ram usage:        7 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    3
  2164 ;; This function calls:
  2165 ;;		___altoft
  2166 ;;		___ftadd
  2167 ;;		___ftdiv
  2168 ;;		___fttol
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text15
  2175  000F76                     __ptext15:
  2176                           	opt stack 0
  2177  000F76                     _USART_Init:
  2178                           	opt stack 27
  2179                           
  2180                           ;USART_Source_File.c: 12: float temp;
  2181                           ;USART_Source_File.c: 13: TRISC6=0;
  2182                           
  2183                           ;incstack = 0
  2184  000F76  9C94               	bcf	3988,6,c	;volatile
  2185                           
  2186                           ;USART_Source_File.c: 14: TRISC7=1;
  2187  000F78  8E94               	bsf	3988,7,c	;volatile
  2188                           
  2189                           ;USART_Source_File.c: 15: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  2190  000F7A  C066  F01C         	movff	USART_Init@baud_rate,___altoft@c
  2191  000F7E  C067  F01D         	movff	USART_Init@baud_rate+1,___altoft@c+1
  2192  000F82  C068  F01E         	movff	USART_Init@baud_rate+2,___altoft@c+2
  2193  000F86  C069  F01F         	movff	USART_Init@baud_rate+3,___altoft@c+3
  2194  000F8A  ECF8  F007         	call	___altoft	;wreg free
  2195  000F8E  C01C  F029         	movff	?___altoft,___ftdiv@f2
  2196  000F92  C01D  F02A         	movff	?___altoft+1,___ftdiv@f2+1
  2197  000F96  C01E  F02B         	movff	?___altoft+2,___ftdiv@f2+2
  2198  000F9A  0E24               	movlw	36
  2199  000F9C  6E26               	movwf	___ftdiv@f1,c
  2200  000F9E  0EF4               	movlw	244
  2201  000FA0  6E27               	movwf	___ftdiv@f1+1,c
  2202  000FA2  0E47               	movlw	71
  2203  000FA4  6E28               	movwf	___ftdiv@f1+2,c
  2204  000FA6  EC58  F005         	call	___ftdiv	;wreg free
  2205  000FAA  C026  F035         	movff	?___ftdiv,___ftadd@f1
  2206  000FAE  C027  F036         	movff	?___ftdiv+1,___ftadd@f1+1
  2207  000FB2  C028  F037         	movff	?___ftdiv+2,___ftadd@f1+2
  2208  000FB6  0E00               	movlw	0
  2209  000FB8  6E38               	movwf	___ftadd@f2,c
  2210  000FBA  0E80               	movlw	128
  2211  000FBC  6E39               	movwf	___ftadd@f2+1,c
  2212  000FBE  0EBF               	movlw	191
  2213  000FC0  6E3A               	movwf	___ftadd@f2+2,c
  2214  000FC2  EC05  F004         	call	___ftadd	;wreg free
  2215  000FC6  C035  F06A         	movff	?___ftadd,USART_Init@temp
  2216  000FCA  C036  F06B         	movff	?___ftadd+1,USART_Init@temp+1
  2217  000FCE  C037  F06C         	movff	?___ftadd+2,USART_Init@temp+2
  2218                           
  2219                           ;USART_Source_File.c: 16: SPBRG=(int)temp;
  2220  000FD2  C06A  F035         	movff	USART_Init@temp,___fttol@f1
  2221  000FD6  C06B  F036         	movff	USART_Init@temp+1,___fttol@f1+1
  2222  000FDA  C06C  F037         	movff	USART_Init@temp+2,___fttol@f1+2
  2223  000FDE  ECDC  F004         	call	___fttol	;wreg free
  2224  000FE2  5035               	movf	?___fttol,w,c
  2225  000FE4  6EAF               	movwf	4015,c	;volatile
  2226                           
  2227                           ;USART_Source_File.c: 17: TXSTA=0x20;
  2228  000FE6  0E20               	movlw	32
  2229  000FE8  6EAC               	movwf	4012,c	;volatile
  2230                           
  2231                           ;USART_Source_File.c: 19: RCSTA=0x94;
  2232  000FEA  0E94               	movlw	148
  2233  000FEC  6EAB               	movwf	4011,c	;volatile
  2234  000FEE  0012               	return		;funcret
  2235  000FF0                     __end_of_USART_Init:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           intcon	equ	0xFF2
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           indf2	equ	0xFDF
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function ___fttol *****************
  2250 ;; Defined at:
  2251 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  f1              3   52[COMRAM] float 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  lval            4    1[BANK0 ] unsigned long 
  2256 ;;  exp1            1    5[BANK0 ] unsigned char 
  2257 ;;  sign1           1    0[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  4   52[COMRAM] long 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2267 ;;      Params:         4       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2269 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         9       6       0       0       0       0       0       0       0
  2271 ;;Total ram usage:       15 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_wait_in_ms
  2278 ;;		_USART_Init
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text16
  2283  0009B8                     __ptext16:
  2284                           	opt stack 0
  2285  0009B8                     ___fttol:
  2286                           	opt stack 28
  2287                           
  2288                           ;incstack = 0
  2289  0009B8  C037  F039         	movff	___fttol@f1+2,??___fttol
  2290  0009BC  6A3A               	clrf	(??___fttol+1)& (0+255),c
  2291  0009BE  6A3B               	clrf	(??___fttol+2)& (0+255),c
  2292  0009C0  3436               	rlcf	___fttol@f1+1,w,c
  2293  0009C2  3639               	rlcf	??___fttol& (0+255),f,c
  2294  0009C4  E301               	bnc	u1951
  2295  0009C6  803A               	bsf	(??___fttol+1)& (0+255),0,c
  2296  0009C8                     u1951:
  2297  0009C8  5039               	movf	??___fttol,w,c
  2298  0009CA  0100               	movlb	0	; () banked
  2299  0009CC  6F65               	movwf	___fttol@exp1& (0+255),b
  2300  0009CE  5165               	movf	___fttol@exp1& (0+255),w,b
  2301  0009D0  A4D8               	btfss	status,2,c
  2302  0009D2  D009               	goto	l602
  2303                           
  2304                           ; BSR set to: 0
  2305  0009D4  0E00               	movlw	0
  2306  0009D6  6E35               	movwf	?___fttol,c
  2307  0009D8  0E00               	movlw	0
  2308  0009DA  6E36               	movwf	?___fttol+1,c
  2309  0009DC  0E00               	movlw	0
  2310  0009DE  6E37               	movwf	?___fttol+2,c
  2311  0009E0  0E00               	movlw	0
  2312  0009E2  6E38               	movwf	?___fttol+3,c
  2313                           
  2314                           ; BSR set to: 0
  2315  0009E4  0012               	return	
  2316  0009E6                     l602:
  2317                           
  2318                           ; BSR set to: 0
  2319                           
  2320                           ; BSR set to: 0
  2321  0009E6  0E17               	movlw	23
  2322  0009E8  6E39               	movwf	??___fttol& (0+255),c
  2323  0009EA  C035  F03A         	movff	___fttol@f1,??___fttol+1
  2324  0009EE  C036  F03B         	movff	___fttol@f1+1,??___fttol+2
  2325  0009F2  C037  F03C         	movff	___fttol@f1+2,??___fttol+3
  2326  0009F6  2839               	incf	??___fttol,w,c
  2327  0009F8  6E3D               	movwf	(??___fttol+4)& (0+255),c
  2328  0009FA  D004               	goto	u1970
  2329  0009FC                     u1975:
  2330  0009FC  90D8               	bcf	status,0,c
  2331  0009FE  323C               	rrcf	??___fttol+3,f,c
  2332  000A00  323B               	rrcf	??___fttol+2,f,c
  2333  000A02  323A               	rrcf	??___fttol+1,f,c
  2334  000A04                     u1970:
  2335  000A04  2E3D               	decfsz	(??___fttol+4)& (0+255),f,c
  2336  000A06  D7FA               	goto	u1975
  2337  000A08  503A               	movf	??___fttol+1,w,c
  2338  000A0A  0100               	movlb	0	; () banked
  2339  000A0C  6F60               	movwf	___fttol@sign1& (0+255),b
  2340                           
  2341                           ; BSR set to: 0
  2342  000A0E  8E36               	bsf	___fttol@f1+1,7,c
  2343                           
  2344                           ; BSR set to: 0
  2345  000A10  0EFF               	movlw	255
  2346  000A12  1635               	andwf	___fttol@f1,f,c
  2347  000A14  0EFF               	movlw	255
  2348  000A16  1636               	andwf	___fttol@f1+1,f,c
  2349  000A18  0E00               	movlw	0
  2350  000A1A  1637               	andwf	___fttol@f1+2,f,c
  2351                           
  2352                           ; BSR set to: 0
  2353  000A1C  5035               	movf	___fttol@f1,w,c
  2354  000A1E  6F61               	movwf	___fttol@lval& (0+255),b
  2355  000A20  5036               	movf	___fttol@f1+1,w,c
  2356  000A22  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  2357  000A24  5037               	movf	___fttol@f1+2,w,c
  2358  000A26  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  2359  000A28  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  2360                           
  2361                           ; BSR set to: 0
  2362  000A2A  0E8E               	movlw	142
  2363  000A2C  5F65               	subwf	___fttol@exp1& (0+255),f,b
  2364                           
  2365                           ; BSR set to: 0
  2366  000A2E  AF65               	btfss	___fttol@exp1& (0+255),7,b
  2367  000A30  D016               	goto	l604
  2368                           
  2369                           ; BSR set to: 0
  2370  000A32  5165               	movf	___fttol@exp1& (0+255),w,b
  2371  000A34  0A80               	xorlw	128
  2372  000A36  0F8F               	addlw	143
  2373  000A38  B0D8               	btfsc	status,0,c
  2374  000A3A  D009               	goto	l605
  2375                           
  2376                           ; BSR set to: 0
  2377  000A3C  0E00               	movlw	0
  2378  000A3E  6E35               	movwf	?___fttol,c
  2379  000A40  0E00               	movlw	0
  2380  000A42  6E36               	movwf	?___fttol+1,c
  2381  000A44  0E00               	movlw	0
  2382  000A46  6E37               	movwf	?___fttol+2,c
  2383  000A48  0E00               	movlw	0
  2384  000A4A  6E38               	movwf	?___fttol+3,c
  2385                           
  2386                           ; BSR set to: 0
  2387  000A4C  0012               	return	
  2388  000A4E                     l605:
  2389                           
  2390                           ; BSR set to: 0
  2391                           
  2392                           ; BSR set to: 0
  2393                           
  2394                           ; BSR set to: 0
  2395  000A4E  90D8               	bcf	status,0,c
  2396  000A50  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2397  000A52  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2398  000A54  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2399  000A56  3361               	rrcf	___fttol@lval& (0+255),f,b
  2400                           
  2401                           ; BSR set to: 0
  2402  000A58  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  2403  000A5A  D7F9               	goto	l605
  2404                           
  2405                           ; BSR set to: 0
  2406  000A5C  D015               	goto	u2010
  2407  000A5E                     l604:
  2408                           
  2409                           ; BSR set to: 0
  2410                           
  2411                           ; BSR set to: 0
  2412  000A5E  0E17               	movlw	23
  2413  000A60  6565               	cpfsgt	___fttol@exp1& (0+255),b
  2414  000A62  D00F               	goto	l610
  2415                           
  2416                           ; BSR set to: 0
  2417  000A64  0E00               	movlw	0
  2418  000A66  6E35               	movwf	?___fttol,c
  2419  000A68  0E00               	movlw	0
  2420  000A6A  6E36               	movwf	?___fttol+1,c
  2421  000A6C  0E00               	movlw	0
  2422  000A6E  6E37               	movwf	?___fttol+2,c
  2423  000A70  0E00               	movlw	0
  2424  000A72  6E38               	movwf	?___fttol+3,c
  2425                           
  2426                           ; BSR set to: 0
  2427  000A74  0012               	return	
  2428  000A76                     
  2429                           ; BSR set to: 0
  2430                           
  2431                           ; BSR set to: 0
  2432  000A76  90D8               	bcf	status,0,c
  2433  000A78  3761               	rlcf	___fttol@lval& (0+255),f,b
  2434  000A7A  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2435  000A7C  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2436  000A7E  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2437  000A80  0765               	decf	___fttol@exp1& (0+255),f,b
  2438  000A82                     l610:
  2439                           
  2440                           ; BSR set to: 0
  2441                           
  2442                           ; BSR set to: 0
  2443  000A82  5165               	movf	___fttol@exp1& (0+255),w,b
  2444  000A84  A4D8               	btfss	status,2,c
  2445  000A86  D7F7               	goto	l611
  2446  000A88                     u2010:
  2447                           
  2448                           ; BSR set to: 0
  2449                           
  2450                           ; BSR set to: 0
  2451                           
  2452                           ; BSR set to: 0
  2453  000A88  5160               	movf	___fttol@sign1& (0+255),w,b
  2454  000A8A  B4D8               	btfsc	status,2,c
  2455  000A8C  D008               	goto	l613
  2456                           
  2457                           ; BSR set to: 0
  2458  000A8E  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  2459  000A90  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  2460  000A92  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  2461  000A94  6D61               	negf	___fttol@lval& (0+255),b
  2462  000A96  0E00               	movlw	0
  2463  000A98  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2464  000A9A  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2465  000A9C  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2466  000A9E                     l613:
  2467                           
  2468                           ; BSR set to: 0
  2469                           
  2470                           ; BSR set to: 0
  2471  000A9E  C061  F035         	movff	___fttol@lval,?___fttol
  2472  000AA2  C062  F036         	movff	___fttol@lval+1,?___fttol+1
  2473  000AA6  C063  F037         	movff	___fttol@lval+2,?___fttol+2
  2474  000AAA  C064  F038         	movff	___fttol@lval+3,?___fttol+3
  2475  000AAE  0012               	return	
  2476  000AB0                     __end_of___fttol:
  2477                           	opt stack 0
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           intcon	equ	0xFF2
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           indf2	equ	0xFDF
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function ___ftdiv *****************
  2491 ;; Defined at:
  2492 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  f1              3   37[COMRAM] float 
  2495 ;;  f2              3   40[COMRAM] float 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  f3              3   47[COMRAM] float 
  2498 ;;  sign            1   51[COMRAM] unsigned char 
  2499 ;;  exp             1   50[COMRAM] unsigned char 
  2500 ;;  cntr            1   46[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  3   37[COMRAM] float 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:         6       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2513 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:       15 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    2
  2517 ;; This function calls:
  2518 ;;		___ftpack
  2519 ;; This function is called by:
  2520 ;;		_wait_in_ms
  2521 ;;		_USART_Init
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text17
  2526  000AB0                     __ptext17:
  2527                           	opt stack 0
  2528  000AB0                     ___ftdiv:
  2529                           	opt stack 27
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;incstack = 0
  2533  000AB0  C028  F02C         	movff	___ftdiv@f1+2,??___ftdiv
  2534  000AB4  6A2D               	clrf	(??___ftdiv+1)& (0+255),c
  2535  000AB6  6A2E               	clrf	(??___ftdiv+2)& (0+255),c
  2536  000AB8  3427               	rlcf	___ftdiv@f1+1,w,c
  2537  000ABA  362C               	rlcf	??___ftdiv& (0+255),f,c
  2538  000ABC  E301               	bnc	u1891
  2539  000ABE  802D               	bsf	(??___ftdiv+1)& (0+255),0,c
  2540  000AC0                     u1891:
  2541  000AC0  502C               	movf	??___ftdiv,w,c
  2542  000AC2  6E33               	movwf	___ftdiv@exp,c
  2543  000AC4  5033               	movf	___ftdiv@exp,w,c
  2544  000AC6  A4D8               	btfss	status,2,c
  2545  000AC8  D007               	goto	l566
  2546  000ACA  0E00               	movlw	0
  2547  000ACC  6E26               	movwf	?___ftdiv,c
  2548  000ACE  0E00               	movlw	0
  2549  000AD0  6E27               	movwf	?___ftdiv+1,c
  2550  000AD2  0E00               	movlw	0
  2551  000AD4  6E28               	movwf	?___ftdiv+2,c
  2552  000AD6  0012               	return	
  2553  000AD8                     l566:
  2554  000AD8  C02B  F02C         	movff	___ftdiv@f2+2,??___ftdiv
  2555  000ADC  6A2D               	clrf	(??___ftdiv+1)& (0+255),c
  2556  000ADE  6A2E               	clrf	(??___ftdiv+2)& (0+255),c
  2557  000AE0  342A               	rlcf	___ftdiv@f2+1,w,c
  2558  000AE2  362C               	rlcf	??___ftdiv& (0+255),f,c
  2559  000AE4  E301               	bnc	u1911
  2560  000AE6  802D               	bsf	(??___ftdiv+1)& (0+255),0,c
  2561  000AE8                     u1911:
  2562  000AE8  502C               	movf	??___ftdiv,w,c
  2563  000AEA  6E34               	movwf	___ftdiv@sign,c
  2564  000AEC  5034               	movf	___ftdiv@sign,w,c
  2565  000AEE  A4D8               	btfss	status,2,c
  2566  000AF0  D007               	goto	l568
  2567  000AF2  0E00               	movlw	0
  2568  000AF4  6E26               	movwf	?___ftdiv,c
  2569  000AF6  0E00               	movlw	0
  2570  000AF8  6E27               	movwf	?___ftdiv+1,c
  2571  000AFA  0E00               	movlw	0
  2572  000AFC  6E28               	movwf	?___ftdiv+2,c
  2573  000AFE  0012               	return	
  2574  000B00                     l568:
  2575  000B00  0E00               	movlw	0
  2576  000B02  6E30               	movwf	___ftdiv@f3,c
  2577  000B04  0E00               	movlw	0
  2578  000B06  6E31               	movwf	___ftdiv@f3+1,c
  2579  000B08  0E00               	movlw	0
  2580  000B0A  6E32               	movwf	___ftdiv@f3+2,c
  2581  000B0C  5034               	movf	___ftdiv@sign,w,c
  2582  000B0E  0F89               	addlw	137
  2583  000B10  5E33               	subwf	___ftdiv@exp,f,c
  2584  000B12  C028  F034         	movff	___ftdiv@f1+2,___ftdiv@sign
  2585  000B16  502B               	movf	___ftdiv@f2+2,w,c
  2586  000B18  1A34               	xorwf	___ftdiv@sign,f,c
  2587  000B1A  0E80               	movlw	128
  2588  000B1C  1634               	andwf	___ftdiv@sign,f,c
  2589  000B1E  8E27               	bsf	___ftdiv@f1+1,7,c
  2590  000B20  0EFF               	movlw	255
  2591  000B22  1626               	andwf	___ftdiv@f1,f,c
  2592  000B24  0EFF               	movlw	255
  2593  000B26  1627               	andwf	___ftdiv@f1+1,f,c
  2594  000B28  0E00               	movlw	0
  2595  000B2A  1628               	andwf	___ftdiv@f1+2,f,c
  2596  000B2C  8E2A               	bsf	___ftdiv@f2+1,7,c
  2597  000B2E  0EFF               	movlw	255
  2598  000B30  1629               	andwf	___ftdiv@f2,f,c
  2599  000B32  0EFF               	movlw	255
  2600  000B34  162A               	andwf	___ftdiv@f2+1,f,c
  2601  000B36  0E00               	movlw	0
  2602  000B38  162B               	andwf	___ftdiv@f2+2,f,c
  2603  000B3A  0E18               	movlw	24
  2604  000B3C  6E2F               	movwf	___ftdiv@cntr,c
  2605  000B3E  90D8               	bcf	status,0,c
  2606  000B40  3630               	rlcf	___ftdiv@f3,f,c
  2607  000B42  3631               	rlcf	___ftdiv@f3+1,f,c
  2608  000B44  3632               	rlcf	___ftdiv@f3+2,f,c
  2609  000B46  5029               	movf	___ftdiv@f2,w,c
  2610  000B48  5C26               	subwf	___ftdiv@f1,w,c
  2611  000B4A  502A               	movf	___ftdiv@f2+1,w,c
  2612  000B4C  5827               	subwfb	___ftdiv@f1+1,w,c
  2613  000B4E  502B               	movf	___ftdiv@f2+2,w,c
  2614  000B50  5828               	subwfb	___ftdiv@f1+2,w,c
  2615  000B52  A0D8               	btfss	status,0,c
  2616  000B54  D007               	goto	l570
  2617  000B56  5029               	movf	___ftdiv@f2,w,c
  2618  000B58  5E26               	subwf	___ftdiv@f1,f,c
  2619  000B5A  502A               	movf	___ftdiv@f2+1,w,c
  2620  000B5C  5A27               	subwfb	___ftdiv@f1+1,f,c
  2621  000B5E  502B               	movf	___ftdiv@f2+2,w,c
  2622  000B60  5A28               	subwfb	___ftdiv@f1+2,f,c
  2623  000B62  8030               	bsf	___ftdiv@f3,0,c
  2624  000B64                     l570:
  2625  000B64  90D8               	bcf	status,0,c
  2626  000B66  3626               	rlcf	___ftdiv@f1,f,c
  2627  000B68  3627               	rlcf	___ftdiv@f1+1,f,c
  2628  000B6A  3628               	rlcf	___ftdiv@f1+2,f,c
  2629  000B6C  2E2F               	decfsz	___ftdiv@cntr,f,c
  2630  000B6E  D7E7               	goto	l569
  2631  000B70  C030  F014         	movff	___ftdiv@f3,___ftpack@arg
  2632  000B74  C031  F015         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2633  000B78  C032  F016         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2634  000B7C  C033  F017         	movff	___ftdiv@exp,___ftpack@exp
  2635  000B80  C034  F018         	movff	___ftdiv@sign,___ftpack@sign
  2636  000B84  EC64  F007         	call	___ftpack	;wreg free
  2637  000B88  C014  F026         	movff	?___ftpack,?___ftdiv
  2638  000B8C  C015  F027         	movff	?___ftpack+1,?___ftdiv+1
  2639  000B90  C016  F028         	movff	?___ftpack+2,?___ftdiv+2
  2640  000B94  0012               	return	
  2641  000B96                     __end_of___ftdiv:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           intcon	equ	0xFF2
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           indf2	equ	0xFDF
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function ___ftadd *****************
  2656 ;; Defined at:
  2657 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  f1              3   52[COMRAM] float 
  2660 ;;  f2              3   55[COMRAM] float 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  exp1            1    2[BANK0 ] unsigned char 
  2663 ;;  exp2            1    1[BANK0 ] unsigned char 
  2664 ;;  sign            1    0[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  3   52[COMRAM] float 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2674 ;;      Params:         6       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2676 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         9       3       0       0       0       0       0       0       0
  2678 ;;Total ram usage:       12 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    2
  2681 ;; This function calls:
  2682 ;;		___ftpack
  2683 ;; This function is called by:
  2684 ;;		_USART_Init
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text18
  2689  00080A                     __ptext18:
  2690                           	opt stack 0
  2691  00080A                     ___ftadd:
  2692                           	opt stack 27
  2693                           
  2694                           ;incstack = 0
  2695  00080A  C037  F03B         	movff	___ftadd@f1+2,??___ftadd
  2696  00080E  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  2697  000810  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  2698  000812  3436               	rlcf	___ftadd@f1+1,w,c
  2699  000814  363B               	rlcf	??___ftadd& (0+255),f,c
  2700  000816  E301               	bnc	u2121
  2701  000818  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  2702  00081A                     u2121:
  2703  00081A  503B               	movf	??___ftadd,w,c
  2704  00081C  0100               	movlb	0	; () banked
  2705  00081E  6F62               	movwf	___ftadd@exp1& (0+255),b
  2706  000820  C03A  F03B         	movff	___ftadd@f2+2,??___ftadd
  2707  000824  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  2708  000826  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  2709  000828  3439               	rlcf	___ftadd@f2+1,w,c
  2710  00082A  363B               	rlcf	??___ftadd& (0+255),f,c
  2711  00082C  E301               	bnc	u2131
  2712  00082E  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  2713  000830                     u2131:
  2714  000830  503B               	movf	??___ftadd,w,c
  2715  000832  6F61               	movwf	___ftadd@exp2& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718  000834  5162               	movf	___ftadd@exp1& (0+255),w,b
  2719  000836  B4D8               	btfsc	status,2,c
  2720  000838  D00B               	goto	u2160
  2721                           
  2722                           ; BSR set to: 0
  2723  00083A  5161               	movf	___ftadd@exp2& (0+255),w,b
  2724  00083C  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  2725  00083E  B0D8               	btfsc	status,0,c
  2726  000840  D00E               	goto	l533
  2727                           
  2728                           ; BSR set to: 0
  2729  000842  5162               	movf	___ftadd@exp1& (0+255),w,b
  2730  000844  0800               	sublw	0
  2731  000846  2561               	addwf	___ftadd@exp2& (0+255),w,b
  2732  000848  6E3B               	movwf	??___ftadd& (0+255),c
  2733  00084A  0E18               	movlw	24
  2734  00084C  643B               	cpfsgt	??___ftadd,c
  2735  00084E  D007               	goto	l533
  2736  000850                     u2160:
  2737                           
  2738                           ; BSR set to: 0
  2739  000850  C038  F035         	movff	___ftadd@f2,?___ftadd
  2740  000854  C039  F036         	movff	___ftadd@f2+1,?___ftadd+1
  2741  000858  C03A  F037         	movff	___ftadd@f2+2,?___ftadd+2
  2742  00085C  0012               	return	
  2743  00085E                     l533:
  2744                           
  2745                           ; BSR set to: 0
  2746                           
  2747                           ; BSR set to: 0
  2748  00085E  5161               	movf	___ftadd@exp2& (0+255),w,b
  2749  000860  B4D8               	btfsc	status,2,c
  2750  000862  D00B               	goto	u2190
  2751                           
  2752                           ; BSR set to: 0
  2753  000864  5162               	movf	___ftadd@exp1& (0+255),w,b
  2754  000866  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  2755  000868  B0D8               	btfsc	status,0,c
  2756  00086A  D00E               	goto	l537
  2757                           
  2758                           ; BSR set to: 0
  2759  00086C  5161               	movf	___ftadd@exp2& (0+255),w,b
  2760  00086E  0800               	sublw	0
  2761  000870  2562               	addwf	___ftadd@exp1& (0+255),w,b
  2762  000872  6E3B               	movwf	??___ftadd& (0+255),c
  2763  000874  0E18               	movlw	24
  2764  000876  643B               	cpfsgt	??___ftadd,c
  2765  000878  D007               	goto	l537
  2766  00087A                     u2190:
  2767                           
  2768                           ; BSR set to: 0
  2769  00087A  C035  F035         	movff	___ftadd@f1,?___ftadd
  2770  00087E  C036  F036         	movff	___ftadd@f1+1,?___ftadd+1
  2771  000882  C037  F037         	movff	___ftadd@f1+2,?___ftadd+2
  2772  000886  0012               	return	
  2773  000888                     l537:
  2774                           
  2775                           ; BSR set to: 0
  2776                           
  2777                           ; BSR set to: 0
  2778  000888  0E06               	movlw	6
  2779  00088A  6F60               	movwf	___ftadd@sign& (0+255),b
  2780                           
  2781                           ; BSR set to: 0
  2782  00088C  BE37               	btfsc	___ftadd@f1+2,7,c
  2783                           
  2784                           ; BSR set to: 0
  2785  00088E  8F60               	bsf	___ftadd@sign& (0+255),7,b
  2786                           
  2787                           ; BSR set to: 0
  2788                           
  2789                           ; BSR set to: 0
  2790  000890  BE3A               	btfsc	___ftadd@f2+2,7,c
  2791                           
  2792                           ; BSR set to: 0
  2793  000892  8D60               	bsf	___ftadd@sign& (0+255),6,b
  2794                           
  2795                           ; BSR set to: 0
  2796  000894  8E36               	bsf	___ftadd@f1+1,7,c
  2797                           
  2798                           ; BSR set to: 0
  2799  000896  0EFF               	movlw	255
  2800  000898  1635               	andwf	___ftadd@f1,f,c
  2801  00089A  0EFF               	movlw	255
  2802  00089C  1636               	andwf	___ftadd@f1+1,f,c
  2803  00089E  0E00               	movlw	0
  2804  0008A0  1637               	andwf	___ftadd@f1+2,f,c
  2805  0008A2  8E39               	bsf	___ftadd@f2+1,7,c
  2806                           
  2807                           ; BSR set to: 0
  2808  0008A4  0EFF               	movlw	255
  2809  0008A6  1638               	andwf	___ftadd@f2,f,c
  2810  0008A8  0EFF               	movlw	255
  2811  0008AA  1639               	andwf	___ftadd@f2+1,f,c
  2812  0008AC  0E00               	movlw	0
  2813  0008AE  163A               	andwf	___ftadd@f2+2,f,c
  2814                           
  2815                           ; BSR set to: 0
  2816  0008B0  5161               	movf	___ftadd@exp2& (0+255),w,b
  2817  0008B2  5D62               	subwf	___ftadd@exp1& (0+255),w,b
  2818  0008B4  B0D8               	btfsc	status,0,c
  2819  0008B6  D01B               	goto	l542
  2820  0008B8                     u2220:
  2821                           
  2822                           ; BSR set to: 0
  2823                           
  2824                           ; BSR set to: 0
  2825  0008B8  90D8               	bcf	status,0,c
  2826  0008BA  3638               	rlcf	___ftadd@f2,f,c
  2827  0008BC  3639               	rlcf	___ftadd@f2+1,f,c
  2828  0008BE  363A               	rlcf	___ftadd@f2+2,f,c
  2829  0008C0  0761               	decf	___ftadd@exp2& (0+255),f,b
  2830                           
  2831                           ; BSR set to: 0
  2832  0008C2  5162               	movf	___ftadd@exp1& (0+255),w,b
  2833  0008C4  1961               	xorwf	___ftadd@exp2& (0+255),w,b
  2834  0008C6  B4D8               	btfsc	status,2,c
  2835  0008C8  D00D               	goto	l547
  2836                           
  2837                           ; BSR set to: 0
  2838  0008CA  0760               	decf	___ftadd@sign& (0+255),f,b
  2839  0008CC  C060  F03B         	movff	___ftadd@sign,??___ftadd
  2840  0008D0  0E07               	movlw	7
  2841  0008D2  163B               	andwf	??___ftadd,f,c
  2842  0008D4  B4D8               	btfsc	status,2,c
  2843  0008D6  D006               	goto	l547
  2844  0008D8  D7EF               	goto	u2220
  2845  0008DA                     
  2846                           ; BSR set to: 0
  2847                           
  2848                           ; BSR set to: 0
  2849  0008DA  90D8               	bcf	status,0,c
  2850  0008DC  3237               	rrcf	___ftadd@f1+2,f,c
  2851  0008DE  3236               	rrcf	___ftadd@f1+1,f,c
  2852  0008E0  3235               	rrcf	___ftadd@f1,f,c
  2853  0008E2  2B62               	incf	___ftadd@exp1& (0+255),f,b
  2854  0008E4                     l547:
  2855                           
  2856                           ; BSR set to: 0
  2857                           
  2858                           ; BSR set to: 0
  2859  0008E4  5161               	movf	___ftadd@exp2& (0+255),w,b
  2860  0008E6  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  2861  0008E8  B4D8               	btfsc	status,2,c
  2862  0008EA  D01F               	goto	u2290
  2863  0008EC  D7F6               	goto	l548
  2864  0008EE                     l542:
  2865                           
  2866                           ; BSR set to: 0
  2867                           
  2868                           ; BSR set to: 0
  2869  0008EE  5162               	movf	___ftadd@exp1& (0+255),w,b
  2870  0008F0  5D61               	subwf	___ftadd@exp2& (0+255),w,b
  2871  0008F2  B0D8               	btfsc	status,0,c
  2872  0008F4  D01A               	goto	u2290
  2873  0008F6                     u2260:
  2874                           
  2875                           ; BSR set to: 0
  2876                           
  2877                           ; BSR set to: 0
  2878  0008F6  90D8               	bcf	status,0,c
  2879  0008F8  3635               	rlcf	___ftadd@f1,f,c
  2880  0008FA  3636               	rlcf	___ftadd@f1+1,f,c
  2881  0008FC  3637               	rlcf	___ftadd@f1+2,f,c
  2882  0008FE  0762               	decf	___ftadd@exp1& (0+255),f,b
  2883                           
  2884                           ; BSR set to: 0
  2885  000900  5162               	movf	___ftadd@exp1& (0+255),w,b
  2886  000902  1961               	xorwf	___ftadd@exp2& (0+255),w,b
  2887  000904  B4D8               	btfsc	status,2,c
  2888  000906  D00D               	goto	l556
  2889                           
  2890                           ; BSR set to: 0
  2891  000908  0760               	decf	___ftadd@sign& (0+255),f,b
  2892  00090A  C060  F03B         	movff	___ftadd@sign,??___ftadd
  2893  00090E  0E07               	movlw	7
  2894  000910  163B               	andwf	??___ftadd,f,c
  2895  000912  B4D8               	btfsc	status,2,c
  2896  000914  D006               	goto	l556
  2897  000916  D7EF               	goto	u2260
  2898  000918                     
  2899                           ; BSR set to: 0
  2900                           
  2901                           ; BSR set to: 0
  2902  000918  90D8               	bcf	status,0,c
  2903  00091A  323A               	rrcf	___ftadd@f2+2,f,c
  2904  00091C  3239               	rrcf	___ftadd@f2+1,f,c
  2905  00091E  3238               	rrcf	___ftadd@f2,f,c
  2906  000920  2B61               	incf	___ftadd@exp2& (0+255),f,b
  2907  000922                     l556:
  2908                           
  2909                           ; BSR set to: 0
  2910                           
  2911                           ; BSR set to: 0
  2912  000922  5161               	movf	___ftadd@exp2& (0+255),w,b
  2913  000924  1962               	xorwf	___ftadd@exp1& (0+255),w,b
  2914  000926  A4D8               	btfss	status,2,c
  2915  000928  D7F7               	goto	l557
  2916  00092A                     u2290:
  2917                           
  2918                           ; BSR set to: 0
  2919                           
  2920                           ; BSR set to: 0
  2921                           
  2922                           ; BSR set to: 0
  2923  00092A  AF60               	btfss	___ftadd@sign& (0+255),7,b
  2924  00092C  D00C               	goto	l559
  2925                           
  2926                           ; BSR set to: 0
  2927  00092E  0EFF               	movlw	255
  2928  000930  1A35               	xorwf	___ftadd@f1,f,c
  2929  000932  0EFF               	movlw	255
  2930  000934  1A36               	xorwf	___ftadd@f1+1,f,c
  2931  000936  0EFF               	movlw	255
  2932  000938  1A37               	xorwf	___ftadd@f1+2,f,c
  2933  00093A  0E01               	movlw	1
  2934  00093C  2635               	addwf	___ftadd@f1,f,c
  2935  00093E  0E00               	movlw	0
  2936  000940  2236               	addwfc	___ftadd@f1+1,f,c
  2937  000942  0E00               	movlw	0
  2938  000944  2237               	addwfc	___ftadd@f1+2,f,c
  2939  000946                     l559:
  2940                           
  2941                           ; BSR set to: 0
  2942  000946  AD60               	btfss	___ftadd@sign& (0+255),6,b
  2943  000948  D00C               	goto	l560
  2944                           
  2945                           ; BSR set to: 0
  2946  00094A  0EFF               	movlw	255
  2947  00094C  1A38               	xorwf	___ftadd@f2,f,c
  2948  00094E  0EFF               	movlw	255
  2949  000950  1A39               	xorwf	___ftadd@f2+1,f,c
  2950  000952  0EFF               	movlw	255
  2951  000954  1A3A               	xorwf	___ftadd@f2+2,f,c
  2952  000956  0E01               	movlw	1
  2953  000958  2638               	addwf	___ftadd@f2,f,c
  2954  00095A  0E00               	movlw	0
  2955  00095C  2239               	addwfc	___ftadd@f2+1,f,c
  2956  00095E  0E00               	movlw	0
  2957  000960  223A               	addwfc	___ftadd@f2+2,f,c
  2958  000962                     l560:
  2959                           
  2960                           ; BSR set to: 0
  2961                           
  2962                           ; BSR set to: 0
  2963  000962  0E00               	movlw	0
  2964  000964  6F60               	movwf	___ftadd@sign& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967  000966  5035               	movf	___ftadd@f1,w,c
  2968  000968  2638               	addwf	___ftadd@f2,f,c
  2969  00096A  5036               	movf	___ftadd@f1+1,w,c
  2970  00096C  2239               	addwfc	___ftadd@f2+1,f,c
  2971  00096E  5037               	movf	___ftadd@f1+2,w,c
  2972  000970  223A               	addwfc	___ftadd@f2+2,f,c
  2973                           
  2974                           ; BSR set to: 0
  2975  000972  AE3A               	btfss	___ftadd@f2+2,7,c
  2976  000974  D00E               	goto	l561
  2977                           
  2978                           ; BSR set to: 0
  2979  000976  0EFF               	movlw	255
  2980  000978  1A38               	xorwf	___ftadd@f2,f,c
  2981  00097A  0EFF               	movlw	255
  2982  00097C  1A39               	xorwf	___ftadd@f2+1,f,c
  2983  00097E  0EFF               	movlw	255
  2984  000980  1A3A               	xorwf	___ftadd@f2+2,f,c
  2985  000982  0E01               	movlw	1
  2986  000984  2638               	addwf	___ftadd@f2,f,c
  2987  000986  0E00               	movlw	0
  2988  000988  2239               	addwfc	___ftadd@f2+1,f,c
  2989  00098A  0E00               	movlw	0
  2990  00098C  223A               	addwfc	___ftadd@f2+2,f,c
  2991                           
  2992                           ; BSR set to: 0
  2993  00098E  0E01               	movlw	1
  2994  000990  6F60               	movwf	___ftadd@sign& (0+255),b
  2995  000992                     l561:
  2996                           
  2997                           ; BSR set to: 0
  2998                           
  2999                           ; BSR set to: 0
  3000  000992  C038  F014         	movff	___ftadd@f2,___ftpack@arg
  3001  000996  C039  F015         	movff	___ftadd@f2+1,___ftpack@arg+1
  3002  00099A  C03A  F016         	movff	___ftadd@f2+2,___ftpack@arg+2
  3003  00099E  C062  F017         	movff	___ftadd@exp1,___ftpack@exp
  3004  0009A2  C060  F018         	movff	___ftadd@sign,___ftpack@sign
  3005  0009A6  EC64  F007         	call	___ftpack	;wreg free
  3006  0009AA  C014  F035         	movff	?___ftpack,?___ftadd
  3007  0009AE  C015  F036         	movff	?___ftpack+1,?___ftadd+1
  3008  0009B2  C016  F037         	movff	?___ftpack+2,?___ftadd+2
  3009  0009B6  0012               	return	
  3010  0009B8                     __end_of___ftadd:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           intcon	equ	0xFF2
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           indf2	equ	0xFDF
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function ___altoft *****************
  3025 ;; Defined at:
  3026 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  c               4   27[COMRAM] long 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  sign            1   36[COMRAM] unsigned char 
  3031 ;;  exp             1   35[COMRAM] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  3   27[COMRAM] float 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3041 ;;      Params:         4       0       0       0       0       0       0       0       0
  3042 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3043 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3044 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3045 ;;Total ram usage:       10 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    2
  3048 ;; This function calls:
  3049 ;;		___ftpack
  3050 ;; This function is called by:
  3051 ;;		_USART_Init
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text19
  3056  000FF0                     __ptext19:
  3057                           	opt stack 0
  3058  000FF0                     ___altoft:
  3059                           	opt stack 27
  3060                           
  3061                           ;incstack = 0
  3062  000FF0  0E00               	movlw	0
  3063  000FF2  6E25               	movwf	___altoft@sign,c
  3064  000FF4  0E8E               	movlw	142
  3065  000FF6  6E24               	movwf	___altoft@exp,c
  3066  000FF8  AE1F               	btfss	___altoft@c+3,7,c
  3067  000FFA  D011               	goto	l372
  3068  000FFC  1E1F               	comf	___altoft@c+3,f,c
  3069  000FFE  1E1E               	comf	___altoft@c+2,f,c
  3070  001000  1E1D               	comf	___altoft@c+1,f,c
  3071  001002  6C1C               	negf	___altoft@c,c
  3072  001004  0E00               	movlw	0
  3073  001006  221D               	addwfc	___altoft@c+1,f,c
  3074  001008  221E               	addwfc	___altoft@c+2,f,c
  3075  00100A  221F               	addwfc	___altoft@c+3,f,c
  3076  00100C  0E01               	movlw	1
  3077  00100E  6E25               	movwf	___altoft@sign,c
  3078  001010  D006               	goto	l372
  3079  001012  90D8               	bcf	status,0,c
  3080  001014  321F               	rrcf	___altoft@c+3,f,c
  3081  001016  321E               	rrcf	___altoft@c+2,f,c
  3082  001018  321D               	rrcf	___altoft@c+1,f,c
  3083  00101A  321C               	rrcf	___altoft@c,f,c
  3084  00101C  2A24               	incf	___altoft@exp,f,c
  3085  00101E                     l372:
  3086  00101E  0E00               	movlw	0
  3087  001020  141C               	andwf	___altoft@c,w,c
  3088  001022  6E20               	movwf	??___altoft& (0+255),c
  3089  001024  0E00               	movlw	0
  3090  001026  141D               	andwf	___altoft@c+1,w,c
  3091  001028  6E21               	movwf	(??___altoft+1)& (0+255),c
  3092  00102A  0E00               	movlw	0
  3093  00102C  141E               	andwf	___altoft@c+2,w,c
  3094  00102E  6E22               	movwf	(??___altoft+2)& (0+255),c
  3095  001030  0EFF               	movlw	255
  3096  001032  141F               	andwf	___altoft@c+3,w,c
  3097  001034  6E23               	movwf	(??___altoft+3)& (0+255),c
  3098  001036  5020               	movf	??___altoft,w,c
  3099  001038  1021               	iorwf	??___altoft+1,w,c
  3100  00103A  1022               	iorwf	??___altoft+2,w,c
  3101  00103C  1023               	iorwf	??___altoft+3,w,c
  3102  00103E  A4D8               	btfss	status,2,c
  3103  001040  D7E8               	goto	l373
  3104  001042  C01C  F014         	movff	___altoft@c,___ftpack@arg
  3105  001046  C01D  F015         	movff	___altoft@c+1,___ftpack@arg+1
  3106  00104A  C01E  F016         	movff	___altoft@c+2,___ftpack@arg+2
  3107  00104E  C024  F017         	movff	___altoft@exp,___ftpack@exp
  3108  001052  C025  F018         	movff	___altoft@sign,___ftpack@sign
  3109  001056  EC64  F007         	call	___ftpack	;wreg free
  3110  00105A  C014  F01C         	movff	?___ftpack,?___altoft
  3111  00105E  C015  F01D         	movff	?___ftpack+1,?___altoft+1
  3112  001062  C016  F01E         	movff	?___ftpack+2,?___altoft+2
  3113  001066  0012               	return	
  3114  001068                     __end_of___altoft:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           intcon	equ	0xFF2
  3121                           postinc0	equ	0xFEE
  3122                           wreg	equ	0xFE8
  3123                           indf2	equ	0xFDF
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function ___ftpack *****************
  3129 ;; Defined at:
  3130 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  arg             3   19[COMRAM] unsigned um
  3133 ;;  exp             1   22[COMRAM] unsigned char 
  3134 ;;  sign            1   23[COMRAM] unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  3   19[COMRAM] float 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         5       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3149 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		___altoft
  3157 ;;		___awtoft
  3158 ;;		___ftadd
  3159 ;;		___ftdiv
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text20
  3164  000EC8                     __ptext20:
  3165                           	opt stack 0
  3166  000EC8                     ___ftpack:
  3167                           	opt stack 27
  3168                           
  3169                           ;incstack = 0
  3170  000EC8  5017               	movf	___ftpack@exp,w,c
  3171  000ECA  B4D8               	btfsc	status,2,c
  3172  000ECC  D005               	goto	u1820
  3173  000ECE  5014               	movf	___ftpack@arg,w,c
  3174  000ED0  1015               	iorwf	___ftpack@arg+1,w,c
  3175  000ED2  1016               	iorwf	___ftpack@arg+2,w,c
  3176  000ED4  A4D8               	btfss	status,2,c
  3177  000ED6  D00C               	goto	l502
  3178  000ED8                     u1820:
  3179  000ED8  0E00               	movlw	0
  3180  000EDA  6E14               	movwf	?___ftpack,c
  3181  000EDC  0E00               	movlw	0
  3182  000EDE  6E15               	movwf	?___ftpack+1,c
  3183  000EE0  0E00               	movlw	0
  3184  000EE2  6E16               	movwf	?___ftpack+2,c
  3185  000EE4  0012               	return	
  3186  000EE6  2A17               	incf	___ftpack@exp,f,c
  3187  000EE8  90D8               	bcf	status,0,c
  3188  000EEA  3216               	rrcf	___ftpack@arg+2,f,c
  3189  000EEC  3215               	rrcf	___ftpack@arg+1,f,c
  3190  000EEE  3214               	rrcf	___ftpack@arg,f,c
  3191  000EF0                     l502:
  3192  000EF0  0E00               	movlw	0
  3193  000EF2  1414               	andwf	___ftpack@arg,w,c
  3194  000EF4  6E19               	movwf	??___ftpack& (0+255),c
  3195  000EF6  0E00               	movlw	0
  3196  000EF8  1415               	andwf	___ftpack@arg+1,w,c
  3197  000EFA  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  3198  000EFC  0EFE               	movlw	254
  3199  000EFE  1416               	andwf	___ftpack@arg+2,w,c
  3200  000F00  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  3201  000F02  5019               	movf	??___ftpack,w,c
  3202  000F04  101A               	iorwf	??___ftpack+1,w,c
  3203  000F06  101B               	iorwf	??___ftpack+2,w,c
  3204  000F08  B4D8               	btfsc	status,2,c
  3205  000F0A  D00C               	goto	l505
  3206  000F0C  D7EC               	goto	l503
  3207  000F0E  2A17               	incf	___ftpack@exp,f,c
  3208  000F10  0E01               	movlw	1
  3209  000F12  2614               	addwf	___ftpack@arg,f,c
  3210  000F14  0E00               	movlw	0
  3211  000F16  2215               	addwfc	___ftpack@arg+1,f,c
  3212  000F18  0E00               	movlw	0
  3213  000F1A  2216               	addwfc	___ftpack@arg+2,f,c
  3214  000F1C  90D8               	bcf	status,0,c
  3215  000F1E  3216               	rrcf	___ftpack@arg+2,f,c
  3216  000F20  3215               	rrcf	___ftpack@arg+1,f,c
  3217  000F22  3214               	rrcf	___ftpack@arg,f,c
  3218  000F24                     l505:
  3219  000F24  0E00               	movlw	0
  3220  000F26  1414               	andwf	___ftpack@arg,w,c
  3221  000F28  6E19               	movwf	??___ftpack& (0+255),c
  3222  000F2A  0E00               	movlw	0
  3223  000F2C  1415               	andwf	___ftpack@arg+1,w,c
  3224  000F2E  6E1A               	movwf	(??___ftpack+1)& (0+255),c
  3225  000F30  0EFF               	movlw	255
  3226  000F32  1416               	andwf	___ftpack@arg+2,w,c
  3227  000F34  6E1B               	movwf	(??___ftpack+2)& (0+255),c
  3228  000F36  5019               	movf	??___ftpack,w,c
  3229  000F38  101A               	iorwf	??___ftpack+1,w,c
  3230  000F3A  101B               	iorwf	??___ftpack+2,w,c
  3231  000F3C  B4D8               	btfsc	status,2,c
  3232  000F3E  D006               	goto	l508
  3233  000F40  D7E6               	goto	l506
  3234  000F42  0617               	decf	___ftpack@exp,f,c
  3235  000F44  90D8               	bcf	status,0,c
  3236  000F46  3614               	rlcf	___ftpack@arg,f,c
  3237  000F48  3615               	rlcf	___ftpack@arg+1,f,c
  3238  000F4A  3616               	rlcf	___ftpack@arg+2,f,c
  3239  000F4C                     l508:
  3240  000F4C  BE15               	btfsc	___ftpack@arg+1,7,c
  3241  000F4E  D003               	goto	u1860
  3242  000F50  0E02               	movlw	2
  3243  000F52  6017               	cpfslt	___ftpack@exp,c
  3244  000F54  D7F6               	goto	l509
  3245  000F56                     u1860:
  3246  000F56  A017               	btfss	___ftpack@exp,0,c
  3247  000F58  9E15               	bcf	___ftpack@arg+1,7,c
  3248  000F5A  90D8               	bcf	status,0,c
  3249  000F5C  3217               	rrcf	___ftpack@exp,f,c
  3250  000F5E  5017               	movf	___ftpack@exp,w,c
  3251  000F60  1216               	iorwf	___ftpack@arg+2,f,c
  3252  000F62  5018               	movf	___ftpack@sign,w,c
  3253  000F64  A4D8               	btfss	status,2,c
  3254  000F66  8E16               	bsf	___ftpack@arg+2,7,c
  3255  000F68  C014  F014         	movff	___ftpack@arg,?___ftpack
  3256  000F6C  C015  F015         	movff	___ftpack@arg+1,?___ftpack+1
  3257  000F70  C016  F016         	movff	___ftpack@arg+2,?___ftpack+2
  3258  000F74  0012               	return	
  3259  000F76                     __end_of___ftpack:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           indf2	equ	0xFDF
  3269                           fsr2h	equ	0xFDA
  3270                           fsr2l	equ	0xFD9
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _MSdelay *****************
  3274 ;; Defined at:
  3275 ;;		line 50 in file "USART_Source_File.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  val             2   19[COMRAM] unsigned int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  j               2   23[COMRAM] unsigned int 
  3280 ;;  i               2   21[COMRAM] unsigned int 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         2       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3293 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:        6 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text21
  3305  00126E                     __ptext21:
  3306                           	opt stack 0
  3307  00126E                     _MSdelay:
  3308                           	opt stack 29
  3309                           
  3310                           ;USART_Source_File.c: 52: unsigned int i,j;
  3311                           ;USART_Source_File.c: 53: for(i=0;i<=val;i++)
  3312                           
  3313                           ;incstack = 0
  3314  00126E  0E00               	movlw	0
  3315  001270  6E17               	movwf	MSdelay@i+1,c
  3316  001272  0E00               	movlw	0
  3317  001274  6E16               	movwf	MSdelay@i,c
  3318  001276  D00F               	goto	l203
  3319  001278                     
  3320                           ;USART_Source_File.c: 54: for(j=0;j<81;j++);
  3321  001278  0E00               	movlw	0
  3322  00127A  6E19               	movwf	MSdelay@j+1,c
  3323  00127C  0E00               	movlw	0
  3324  00127E  6E18               	movwf	MSdelay@j,c
  3325  001280                     l1877:
  3326  001280  5019               	movf	MSdelay@j+1,w,c
  3327  001282  E107               	bnz	l1885
  3328  001284  0E51               	movlw	81
  3329  001286  5C18               	subwf	MSdelay@j,w,c
  3330  001288  B0D8               	btfsc	status,0,c
  3331  00128A  D003               	goto	u1520
  3332  00128C  4A18               	infsnz	MSdelay@j,f,c
  3333  00128E  2A19               	incf	MSdelay@j+1,f,c
  3334  001290  D7F7               	goto	l1877
  3335  001292                     u1520:
  3336  001292                     l1885:
  3337  001292  4A16               	infsnz	MSdelay@i,f,c
  3338  001294  2A17               	incf	MSdelay@i+1,f,c
  3339  001296                     l203:
  3340  001296  5016               	movf	MSdelay@i,w,c
  3341  001298  5C14               	subwf	MSdelay@val,w,c
  3342  00129A  5017               	movf	MSdelay@i+1,w,c
  3343  00129C  5815               	subwfb	MSdelay@val+1,w,c
  3344  00129E  A0D8               	btfss	status,0,c
  3345  0012A0  0012               	return	
  3346  0012A2  D7EA               	goto	l204
  3347  0012A4                     __end_of_MSdelay:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           intcon	equ	0xFF2
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           indf2	equ	0xFDF
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _test *****************
  3362 ;; Defined at:
  3363 ;;		line 69 in file "comuni.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  temp            1   18[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0
  3378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3379 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3380 ;;      Totals:        19       0       0       0       0       0       0       0       0
  3381 ;;Total ram usage:       19 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		Interrupt level 2
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	intcode
  3391  000008                     __pintcode:
  3392                           	opt stack 0
  3393  000008                     _test:
  3394                           	opt stack 24
  3395                           
  3396                           ;incstack = 0
  3397  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3398  00000A  ED9E  F006         	call	int_func,f	;refresh shadow registers
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           intcon	equ	0xFF2
  3404                           postinc0	equ	0xFEE
  3405                           wreg	equ	0xFE8
  3406                           indf2	equ	0xFDF
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411                           	psect	intcode_body
  3412  000D3C                     __pintcode_body:
  3413                           	opt stack 24
  3414  000D3C                     int_func:
  3415                           	opt stack 24
  3416  000D3C  0006               	pop		; remove dummy address from shadow register refresh
  3417  000D3E  CFFA F001          	movff	pclath,??_test
  3418  000D42  CFFB F002          	movff	pclatu,??_test+1
  3419  000D46  CFE9 F003          	movff	fsr0l,??_test+2
  3420  000D4A  CFEA F004          	movff	fsr0h,??_test+3
  3421  000D4E  CFE1 F005          	movff	fsr1l,??_test+4
  3422  000D52  CFE2 F006          	movff	fsr1h,??_test+5
  3423  000D56  CFD9 F007          	movff	fsr2l,??_test+6
  3424  000D5A  CFDA F008          	movff	fsr2h,??_test+7
  3425  000D5E  CFF3 F009          	movff	prodl,??_test+8
  3426  000D62  CFF4 F00A          	movff	prodh,??_test+9
  3427  000D66  CFF6 F00B          	movff	tblptrl,??_test+10
  3428  000D6A  CFF7 F00C          	movff	tblptrh,??_test+11
  3429  000D6E  CFF8 F00D          	movff	tblptru,??_test+12
  3430  000D72  CFF5 F00E          	movff	tablat,??_test+13
  3431  000D76  C04C  F00F         	movff	btemp,??_test+14
  3432  000D7A  C04D  F010         	movff	btemp+1,??_test+15
  3433  000D7E  C04E  F011         	movff	btemp+2,??_test+16
  3434  000D82  C04F  F012         	movff	btemp+3,??_test+17
  3435                           
  3436                           ;comuni.c: 71: if(RCIF){
  3437  000D86  AA9E               	btfss	3998,5,c	;volatile
  3438  000D88  D01B               	goto	i2l286
  3439                           
  3440                           ;comuni.c: 72: char temp=RCREG;
  3441  000D8A  CFAE F013          	movff	4014,test@temp	;volatile
  3442                           
  3443                           ;comuni.c: 74: if(temp>=97 && temp <=122 || temp==32){
  3444  000D8E  0E60               	movlw	96
  3445  000D90  6413               	cpfsgt	test@temp,c
  3446  000D92  D003               	goto	i2u179_40
  3447  000D94  0E7A               	movlw	122
  3448  000D96  6413               	cpfsgt	test@temp,c
  3449  000D98  D004               	goto	i2u180_40
  3450  000D9A                     i2u179_40:
  3451  000D9A  0E20               	movlw	32
  3452  000D9C  1813               	xorwf	test@temp,w,c
  3453  000D9E  A4D8               	btfss	status,2,c
  3454  000DA0  D00B               	goto	i2l281
  3455  000DA2                     i2u180_40:
  3456                           
  3457                           ;comuni.c: 75: Input[i]=temp;
  3458  000DA2  0E78               	movlw	low _Input
  3459  000DA4  2442               	addwf	_i,w,c
  3460  000DA6  6ED9               	movwf	fsr2l,c
  3461  000DA8  0E00               	movlw	high _Input
  3462  000DAA  2043               	addwfc	_i+1,w,c
  3463  000DAC  6EDA               	movwf	fsr2h,c
  3464  000DAE  C013  FFDF         	movff	test@temp,indf2
  3465                           
  3466                           ;comuni.c: 76: i++;
  3467  000DB2  4A42               	infsnz	_i,f,c
  3468  000DB4  2A43               	incf	_i+1,f,c
  3469                           
  3470                           ;comuni.c: 77: }
  3471  000DB6  D004               	goto	i2l286
  3472  000DB8                     i2l281:
  3473                           
  3474                           ;comuni.c: 78: else{
  3475                           ;comuni.c: 82: i=0;
  3476  000DB8  0E00               	movlw	0
  3477  000DBA  6E43               	movwf	_i+1,c
  3478  000DBC  0E00               	movlw	0
  3479  000DBE  6E42               	movwf	_i,c
  3480  000DC0                     i2l286:
  3481  000DC0  C012  F04F         	movff	??_test+17,btemp+3
  3482  000DC4  C011  F04E         	movff	??_test+16,btemp+2
  3483  000DC8  C010  F04D         	movff	??_test+15,btemp+1
  3484  000DCC  C00F  F04C         	movff	??_test+14,btemp
  3485  000DD0  C00E  FFF5         	movff	??_test+13,tablat
  3486  000DD4  C00D  FFF8         	movff	??_test+12,tblptru
  3487  000DD8  C00C  FFF7         	movff	??_test+11,tblptrh
  3488  000DDC  C00B  FFF6         	movff	??_test+10,tblptrl
  3489  000DE0  C00A  FFF4         	movff	??_test+9,prodh
  3490  000DE4  C009  FFF3         	movff	??_test+8,prodl
  3491  000DE8  C008  FFDA         	movff	??_test+7,fsr2h
  3492  000DEC  C007  FFD9         	movff	??_test+6,fsr2l
  3493  000DF0  C006  FFE2         	movff	??_test+5,fsr1h
  3494  000DF4  C005  FFE1         	movff	??_test+4,fsr1l
  3495  000DF8  C004  FFEA         	movff	??_test+3,fsr0h
  3496  000DFC  C003  FFE9         	movff	??_test+2,fsr0l
  3497  000E00  C002  FFFB         	movff	??_test+1,pclatu
  3498  000E04  C001  FFFA         	movff	??_test,pclath
  3499  000E08  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3500  000E0A  0011               	retfie		f
  3501  000E0C                     __end_of_test:
  3502                           	opt stack 0
  3503                           pclatu	equ	0xFFB
  3504                           pclath	equ	0xFFA
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           postinc0	equ	0xFEE
  3513                           fsr0h	equ	0xFEA
  3514                           fsr0l	equ	0xFE9
  3515                           wreg	equ	0xFE8
  3516                           fsr1h	equ	0xFE2
  3517                           fsr1l	equ	0xFE1
  3518                           indf2	equ	0xFDF
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           status	equ	0xFD8
  3522                           pclatu	equ	0xFFB
  3523                           pclath	equ	0xFFA
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           intcon	equ	0xFF2
  3531                           postinc0	equ	0xFEE
  3532                           fsr0h	equ	0xFEA
  3533                           fsr0l	equ	0xFE9
  3534                           wreg	equ	0xFE8
  3535                           fsr1h	equ	0xFE2
  3536                           fsr1l	equ	0xFE1
  3537                           indf2	equ	0xFDF
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542                           	psect	rparam
  3543  0000                     pclatu	equ	0xFFB
  3544                           pclath	equ	0xFFA
  3545                           tblptru	equ	0xFF8
  3546                           tblptrh	equ	0xFF7
  3547                           tblptrl	equ	0xFF6
  3548                           tablat	equ	0xFF5
  3549                           prodh	equ	0xFF4
  3550                           prodl	equ	0xFF3
  3551                           intcon	equ	0xFF2
  3552                           postinc0	equ	0xFEE
  3553                           fsr0h	equ	0xFEA
  3554                           fsr0l	equ	0xFE9
  3555                           wreg	equ	0xFE8
  3556                           fsr1h	equ	0xFE2
  3557                           fsr1l	equ	0xFE1
  3558                           indf2	equ	0xFDF
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563                           	psect	temp
  3564  00004C                     btemp:
  3565                           	opt stack 0
  3566  00004C                     	ds	1
  3567  0000                     int$flags	set	btemp
  3568  0000                     wtemp6	set	btemp+1
  3569                           pclatu	equ	0xFFB
  3570                           pclath	equ	0xFFA
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           prodh	equ	0xFF4
  3576                           prodl	equ	0xFF3
  3577                           intcon	equ	0xFF2
  3578                           postinc0	equ	0xFEE
  3579                           fsr0h	equ	0xFEA
  3580                           fsr0l	equ	0xFE9
  3581                           wreg	equ	0xFE8
  3582                           fsr1h	equ	0xFE2
  3583                           fsr1l	equ	0xFE1
  3584                           indf2	equ	0xFDF
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        1
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      75
    BANK0           160     24      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 22
		 -> Input(BANK0[22]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    memset@p1	PTR void  size(2) Largest target is 22
		 -> Input(BANK0[22]), 

    memset@p	PTR unsigned char  size(2) Largest target is 22
		 -> Input(BANK0[22]), 

    sp__memset	PTR void  size(2) Largest target is 22
		 -> Input(BANK0[22]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 22
		 -> Input(BANK0[22]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 22
		 -> Input(BANK0[22]), 


Critical Paths under _main in COMRAM

    _main->_wait_in_ms
    _lcd_origen->_wait_in_ms
    _lcd_limpiar->_wait_in_ms
    _lcd_iniciar->_wait_in_ms
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___awtoft->___ftpack
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___ftadd
    _USART_Init->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _test in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_limpiar->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    _USART_Init->___fttol

Critical Paths under _test in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _test in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _test in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _test in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _test in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _test in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _test in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _test in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   97606
                            _MSdelay
                         _USART_Init
                   _USART_SendString
                        _configBoard
                        _lcd_iniciar
                        _lcd_limpiar
                         _lcd_origen
                          _lcd_texto
                             _memset
                             _strcmp
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     395
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     324
                                             19 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            3     1      2    9378
                                             21 BANK0      3     1      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    9223
                                             14 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   18924
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_limpiar                                          0     0      0   18924
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   27995
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    9853
                                             14 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    9071
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _wait_in_ms                                          10     8      2    9071
                                             61 COMRAM     2     0      2
                                              6 BANK0      8     8      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3116
                                             27 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     143
                                             20 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4   12284
                                              6 BANK0      7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     551
                                             52 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3813
                                             37 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4578
                                             52 COMRAM     9     3      6
                                              0 BANK0      3     3      0
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3187
                                             27 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2893
                                             19 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _test                                                19    19      0      89
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _USART_SendString
     _USART_TransmitChar
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_limpiar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _memset
   _strcmp
   _wait_in_ms
     ___awtoft
       ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)

 _test (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      2E       5       28.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      4B       1       79.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79      20        0.0%
DATA                 0      0      79       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Mar 16 20:04:07 2018

               ___altoft@exp 0024                            _i 0042                ___altoft@sign 0025  
                         l45 0CEC                           l48 0D24                           l49 0D2C  
                __CFG_BORV$3 000000                 ___ftadd@exp1 0062                 ___ftadd@exp2 0061  
               ___ftadd@sign 0060                          l121 12C4                          l122 12A6  
                        l203 1296                          l204 1278                          l502 0EF0  
                        l270 0E82                          l503 0EE6                          l272 0E9E  
                        l505 0F24                          l506 0F0E                          l610 0A82  
                        l602 09E6                          l611 0A76                          l508 0F4C  
                        l372 101E                          l604 0A5E                          l509 0F42  
                        l373 1012                          l533 085E                          l613 0A9E  
                        l605 0A4E                          l197 1314                          l269 0E40  
                        l542 08EE                          l198 1302                          l560 0962  
                        l561 0992                          l537 0888                          l570 0B64  
                        l547 08E4                          l483 124A                          l715 12EE  
                        l556 0922                          l548 08DA                          l716 12DE  
                        l557 0918                          l566 0AD8                          l559 0946  
                        l568 0B00                          l569 0B3E                          l841 11B8  
                        l842 11B0                          wreg 000FE8               ??_lcd_caracter 0070  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 002F                 ___ftdiv@sign 0034  
               __CFG_WDT$OFF 000000                         l2203 0D2C                         l1903 12DE  
                       l1693 137C                         l1885 1292                         l1877 1280  
                       STR_1 0805                         STR_2 0801                         u2010 0A88  
                       u2121 081A                         u2131 0830                         u2035 0C9A  
                       u2220 08B8                         u2060 0D1A                         u1520 1292  
                       u2160 0850                         u2260 08F6                         u2085 115C  
                       u2190 087A                         u1550 11EE                         u2095 10F0  
                       u2290 092A                         u1820 0ED8                         u1911 0AE8  
                       u1860 0F56                         u1951 09C8                         u1970 0A04  
                       u1891 0AC0                         u1975 09FC                         _RCIF 007CF5  
                       _TXIF 007CF4                         _main 0E0C                 ___ftpack@arg 0014  
               ___ftpack@exp 0017                         _test 0008                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr2h 000FDA                         fsr0l 000FE9  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 004C     __end_of_USART_SendString 1324                         prodh 000FF4  
                       prodl 000FF3                         start 000E              __end_of_MSdelay 12A4  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000         lcd_caracter@caracter 006E  
               ___fttol@exp1 0065                 ___fttol@lval 0061                __CFG_PLLDIV$2 000000  
                      ?_main 0001              __end_of___ftadd 09B8                        ?_test 0001  
            __end_of___ftdiv 0B96              __end_of___fttol 0AB0                        i2l281 0DB8  
                      i2l286 0DC0                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _TMR0L 000FD6                        _SPBRG 000FAF                        _PORTA 000F80  
                      _PORTD 000F83                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TXREG 000FAD  
                      _TXSTA 000FAC               __CFG_FCMEN$OFF 000000                        _Input 0078  
              ___awtoft@sign 001F                        _nivel 004B                ___ftpack@sign 0018  
                      pclath 000FFA                        tablat 000FF5                        status 000FD8  
                      wtemp6 004D                  ?_USART_Init 0066              __initialization 11FA  
               __end_of_main 0EC8                 __end_of_test 0E0C                       ??_main 0040  
              ___fttol@sign1 0060                       ??_test 0001                __activetblptr 000001  
                     _ADCON0 000FC2             __end_of___altoft 1068                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _T08BIT 007EAE             __end_of___awtoft 126E  
           __end_of___ftpack 0F76                    ??_MSdelay 0016                       _OSCCON 000FD3  
                     _TMR0IF 007F92                       _TMR0ON 007EAF                       _TRISC6 007CA6  
                     _TRISC7 007CA7                       _Input2 0047         __size_of_configBoard 0070  
       __end_of_lcd_caracter 1144         __size_of_lcd_iniciar 00D6                    ??___ftadd 003B  
                  ??___ftdiv 002C                    ??___fttol 0039         __size_of_lcd_limpiar 001C  
                     _memset 12D4                       clear_0 1212                       clear_1 121E  
            _cantidadBotones 0048                       _strcmp 11AE                 __pdataCOMRAM 004B  
 __end_of_USART_TransmitChar 1386                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8          __size_of_USART_Init 007A  
                 __accesstop 0060      __end_of__initialization 1224                   ___altoft@c 001C  
                 ___ftadd@f1 0035                   ___ftadd@f2 0038                ___rparam_used 000001  
                 ___ftdiv@f1 0026                   ___ftdiv@f2 0029                   ___ftdiv@f3 0030  
                 ___awtoft@c 001C                   ___fttol@f1 0035               __pcstackCOMRAM 0001  
         __size_of_lcd_orden 006A           __size_of_lcd_texto 0030           __size_of_lcd_pulso 001E  
                 __pbssBANK0 0078            ?_USART_SendString 0015           ??_USART_SendString 0017  
             lcd_orden@orden 006E                    ?___altoft 001C                      ?_memset 0014  
                  ?___awtoft 001C                    ?___ftpack 0014                      ?_strcmp 0014  
              _banderaSerial 0046                   _lcd_origen 1342                      _MSdelay 126E  
      __size_of_lcd_caracter 006C                 ??_USART_Init 003E                      __Hparam 0000  
            _memoriaAnterior 0040                      __Lparam 0000            __end_of_lcd_orden 11AE  
          __end_of_lcd_texto 12D4            __end_of_lcd_pulso 1342                      ___ftadd 080A  
                    ___ftdiv 0AB0                      ___fttol 09B8                 __psmallconst 0800  
                 ??___altoft 0020                      __pcinit 11FA                   ??___awtoft 001F  
                 ??___ftpack 0019              __size_of_memset 002C                      __ramtop 0800  
                    __ptext0 0E0C                      __ptext1 11AE                      __ptext2 12D4  
                    __ptext3 12A4                      __ptext4 10D8                      __ptext5 1342  
                    __ptext6 135E                      __ptext7 0B96                      __ptext8 1144  
                    __ptext9 1324          USART_SendString@out 0015                    _T0CONbits 000FD5  
            __size_of_strcmp 004C               USART_Init@temp 006A           __end_of_USART_Init 0FF0  
               _lcd_caracter 10D8               __pintcode_body 0D3C         end_of_initialization 1224  
                    memset@c 0016                      memset@n 0018                      memset@p 001A  
       wait_in_ms@time_in_ms 003E                      int_func 0D3C                      postinc0 000FEE  
                 _wait_in_ms 0C6C                      strcmp@r 0019                    _PORTCbits 000F82  
                  _PORTDbits 000F83                    _TRISAbits 000F92                    _TRISDbits 000F95  
                ?_lcd_origen 0001          USART_Init@baud_rate 0066        USART_TransmitChar@out 0014  
                ___ftdiv@exp 0033                ??_configBoard 0014                   _puntuacion 0044  
         _USART_TransmitChar 137A                ??_lcd_iniciar 0040                ??_lcd_limpiar 0040  
        ?_USART_TransmitChar 0001                __pidataCOMRAM 1386               __end_of_memset 1300  
             __end_of_strcmp 11FA          start_initialization 11FA         ??_USART_TransmitChar 0014  
            wait_in_ms@count 006A           wait_in_ms@count_ms 006C          __end_of_configBoard 10D8  
        __size_of_lcd_origen 001C                  ?_wait_in_ms 003E          __end_of_lcd_iniciar 0C6C  
                   ??_memset 001A          __end_of_lcd_limpiar 137A                     ??_strcmp 0018  
  __size_of_USART_SendString 0024            __size_of___altoft 0078            __size_of___awtoft 0038  
          __size_of___ftpack 00AE                  __pbssCOMRAM 0040                __pcstackBANK0 0060  
                   ?_MSdelay 0014                    __pintcode 0008                     ?___ftadd 0035  
                   ?___ftdiv 0026                     ?___fttol 0035                    _lcd_orden 1144  
                  _lcd_texto 12A4                    _lcd_pulso 1324                  __smallconst 0800  
        __size_of_wait_in_ms 00D0                     MSdelay@i 0016                     MSdelay@j 0018  
                _configBoard 1068                     _PIE1bits 000F9D                  _lcd_iniciar 0B96  
                   i2u180_40 0DA2                     _PIR1bits 000F9E                     i2u179_40 0D9A  
                _lcd_limpiar 135E                   ?_lcd_orden 006E                   ?_lcd_texto 0075  
                 ?_lcd_pulso 0001                   _ADCON0bits 000FC2                   _ADCON1bits 000FC1  
                 _ADCON2bits 000FC0                 ??_lcd_origen 0040             __size_of_MSdelay 0036  
             wait_in_ms@flag 0068                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 0800           __end_of_lcd_origen 135E             __size_of___ftadd 01AE  
           __size_of___ftdiv 00E6                     ___altoft 0FF0             __size_of___fttol 00F8  
                   ___awtoft 1236                     ___ftpack 0EC8             _USART_SendString 1300  
                   __ptext10 0C6C                     __ptext11 1236                     __ptext20 0EC8  
                   __ptext12 1068                     __ptext21 126E                     __ptext13 1300  
                   __ptext14 137A                     __ptext15 0F76                     __ptext16 09B8  
                   __ptext17 0AB0                     __ptext18 080A                     __ptext19 0FF0  
            lcd_texto@cadena 0075                __size_of_main 00BC                __size_of_test 0E04  
                 MSdelay@val 0014                     _numTopos 004A                     int$flags 004C  
               ??_wait_in_ms 0066                  ??_lcd_orden 0070                  ??_lcd_texto 0077  
                ??_lcd_pulso 0040        __CFG_CPUDIV$OSC1_PLL2 000000                _presionoBoton 0049  
                 _INTCONbits 000FF2                     memset@p1 0014  __size_of_USART_TransmitChar 000C  
                   intlevel2 0000           __end_of_wait_in_ms 0D3C                     test@temp 0013  
                   strcmp@s1 0014                     strcmp@s2 0016                ?_lcd_caracter 006E  
         __CFG_FOSC$HSPLL_HS 000000                 ?_configBoard 0001                 ?_lcd_iniciar 0001  
                 _USART_Init 0F76                 ?_lcd_limpiar 0001  
