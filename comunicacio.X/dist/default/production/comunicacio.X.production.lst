

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 12 16:59:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000A36                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _nivel
    76  000A36  07                 	db	7
    77  0000                     _OSCCON	set	4051
    78  0000                     _RCSTAbits	set	4011
    79  0000                     _RCREG	set	4014
    80  0000                     _TXREG	set	4013
    81  0000                     _RCSTA	set	4011
    82  0000                     _TXSTA	set	4012
    83  0000                     _SPBRG	set	4015
    84  0000                     _PORTD	set	3971
    85  0000                     _PORTDbits	set	3971
    86  0000                     _TRISDbits	set	3989
    87  0000                     _ADRESL	set	4035
    88  0000                     _ADRESH	set	4036
    89  0000                     _PORTA	set	3968
    90  0000                     _TRISD	set	3989
    91  0000                     _PIR1bits	set	3998
    92  0000                     _PIE1bits	set	3997
    93  0000                     _TRISAbits	set	3986
    94  0000                     _ADCON2bits	set	4032
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON0	set	4034
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISA	set	3986
    99  0000                     _ADCON1bits	set	4033
   100  0000                     _T0CONbits	set	4053
   101  0000                     _INTCONbits	set	4082
   102  0000                     _TMR0L	set	4054
   103  0000                     _CREN	set	32092
   104  0000                     _RCIF	set	31989
   105  0000                     _TXIF	set	31988
   106  0000                     _TRISC7	set	31911
   107  0000                     _TRISC6	set	31910
   108  0000                     _TMR0IF	set	32658
   109  0000                     _TMR0ON	set	32431
   110  0000                     _T08BIT	set	32430
   111                           
   112                           ; #config settings
   113  0000                     
   114                           	psect	cinit
   115  0009A6                     __pcinit:
   116                           	opt stack 0
   117  0009A6                     start_initialization:
   118                           	opt stack 0
   119  0009A6                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Initialize objects allocated to COMRAM (1 bytes)
   123                           ; load TBLPTR registers with __pidataCOMRAM
   124  0009A6  0E36               	movlw	low __pidataCOMRAM
   125  0009A8  6EF6               	movwf	tblptrl,c
   126  0009AA  0E0A               	movlw	high __pidataCOMRAM
   127  0009AC  6EF7               	movwf	tblptrh,c
   128  0009AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   129  0009B0  6EF8               	movwf	tblptru,c
   130  0009B2  0009               	tblrd		*+	;fetch initializer
   131  0009B4  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   132                           
   133                           ; Clear objects allocated to COMRAM (5 bytes)
   134  0009B8  6A4B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   135  0009BA  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   136  0009BC  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   137  0009BE  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   138  0009C0  6A47               	clrf	__pbssCOMRAM& (0+255),c
   139  0009C2                     end_of_initialization:
   140                           	opt stack 0
   141  0009C2                     __end_of__initialization:
   142                           	opt stack 0
   143  0009C2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   144  0009C4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   145  0009C6  0100               	movlb	0
   146  0009C8  EF5E  F004         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           
   152                           	psect	bssCOMRAM
   153  000047                     __pbssCOMRAM:
   154                           	opt stack 0
   155  000047                     _puntuacion:
   156                           	opt stack 0
   157  000047                     	ds	2
   158  000049                     _cantidadBotones:
   159                           	opt stack 0
   160  000049                     	ds	1
   161  00004A                     _presionoBoton:
   162                           	opt stack 0
   163  00004A                     	ds	1
   164  00004B                     _numTopos:
   165                           	opt stack 0
   166  00004B                     	ds	1
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           
   172                           	psect	dataCOMRAM
   173  00004C                     __pdataCOMRAM:
   174                           	opt stack 0
   175  00004C                     _nivel:
   176                           	opt stack 0
   177  00004C                     	ds	1
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           
   183                           	psect	cstackBANK0
   184  000060                     __pcstackBANK0:
   185                           	opt stack 0
   186  000060                     wait_in_ms@flag:
   187                           	opt stack 0
   188  000060                     USART_Init@temp:
   189                           	opt stack 0
   190                           
   191                           ; 3 bytes @ 0x0
   192  000060                     	ds	2
   193  000062                     wait_in_ms@count:
   194                           	opt stack 0
   195                           
   196                           ; 2 bytes @ 0x2
   197  000062                     	ds	2
   198  000064                     wait_in_ms@count_ms:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x4
   202  000064                     	ds	2
   203  000066                     lcd_orden@orden:
   204                           	opt stack 0
   205  000066                     lcd_caracter@caracter:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x6
   209  000066                     	ds	2
   210  000068                     ??_lcd_orden:
   211  000068                     ??_lcd_caracter:
   212                           
   213                           ; 1 bytes @ 0x8
   214  000068                     	ds	5
   215  00006D                     lcd_texto@cadena:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0xD
   219  00006D                     	ds	2
   220  00006F                     ??_lcd_texto:
   221                           
   222                           ; 1 bytes @ 0xF
   223  00006F                     	ds	1
   224  000070                     main@temp:
   225                           	opt stack 0
   226                           
   227                           ; 5 bytes @ 0x10
   228  000070                     	ds	5
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	opt stack 0
   237  000001                     ??_ADCint:
   238  000001                     
   239                           ; 1 bytes @ 0x0
   240  000001                     	ds	18
   241  000013                     ?___ftpack:
   242                           	opt stack 0
   243  000013                     USART_TransmitChar@out:
   244                           	opt stack 0
   245  000013                     MSdelay@val:
   246                           	opt stack 0
   247  000013                     ___ftpack@arg:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x12
   251  000013                     	ds	1
   252  000014                     USART_SendString@out:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x13
   256  000014                     	ds	1
   257  000015                     MSdelay@i:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x14
   261  000015                     	ds	1
   262  000016                     ___ftpack@exp:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x15
   266  000016                     	ds	1
   267  000017                     ___ftpack@sign:
   268                           	opt stack 0
   269  000017                     MSdelay@j:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x16
   273  000017                     	ds	1
   274  000018                     ??___ftpack:
   275                           
   276                           ; 1 bytes @ 0x17
   277  000018                     	ds	3
   278  00001B                     ?___altoft:
   279                           	opt stack 0
   280  00001B                     ?___awtoft:
   281                           	opt stack 0
   282  00001B                     ___awtoft@c:
   283                           	opt stack 0
   284  00001B                     ___altoft@c:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x1A
   288  00001B                     	ds	3
   289  00001E                     ___awtoft@sign:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x1D
   293  00001E                     	ds	1
   294  00001F                     ??___altoft:
   295                           
   296                           ; 1 bytes @ 0x1E
   297  00001F                     	ds	4
   298  000023                     ___altoft@exp:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x22
   302  000023                     	ds	1
   303  000024                     ___altoft@sign:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x23
   307  000024                     	ds	1
   308  000025                     ?___ftdiv:
   309                           	opt stack 0
   310  000025                     ___ftdiv@f1:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x24
   314  000025                     	ds	3
   315  000028                     ___ftdiv@f2:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x27
   319  000028                     	ds	3
   320  00002B                     ??___ftdiv:
   321                           
   322                           ; 1 bytes @ 0x2A
   323  00002B                     	ds	3
   324  00002E                     ___ftdiv@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2D
   328  00002E                     	ds	1
   329  00002F                     ___ftdiv@f3:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x2E
   333  00002F                     	ds	3
   334  000032                     ___ftdiv@exp:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x31
   338  000032                     	ds	1
   339  000033                     ___ftdiv@sign:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x32
   343  000033                     	ds	1
   344  000034                     ?___ftadd:
   345                           	opt stack 0
   346  000034                     ?___fttol:
   347                           	opt stack 0
   348  000034                     ___ftadd@f1:
   349                           	opt stack 0
   350  000034                     ___fttol@f1:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x33
   354  000034                     	ds	3
   355  000037                     ___ftadd@f2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x36
   359  000037                     	ds	1
   360  000038                     ??___fttol:
   361                           
   362                           ; 1 bytes @ 0x37
   363  000038                     	ds	2
   364  00003A                     ??___ftadd:
   365                           
   366                           ; 1 bytes @ 0x39
   367  00003A                     	ds	3
   368  00003D                     ___ftadd@sign:
   369                           	opt stack 0
   370  00003D                     ___fttol@sign1:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x3C
   374  00003D                     	ds	1
   375  00003E                     ___ftadd@exp2:
   376                           	opt stack 0
   377  00003E                     ___fttol@lval:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x3D
   381  00003E                     	ds	1
   382  00003F                     ___ftadd@exp1:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3E
   386  00003F                     	ds	3
   387  000042                     ___fttol@exp1:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x41
   391  000042                     	ds	1
   392  000043                     wait_in_ms@time_in_ms:
   393                           	opt stack 0
   394  000043                     USART_Init@baud_rate:
   395                           	opt stack 0
   396                           
   397                           ; 4 bytes @ 0x42
   398  000043                     	ds	2
   399  000045                     ??_wait_in_ms:
   400                           
   401                           ; 1 bytes @ 0x44
   402  000045                     	ds	2
   403  000047                     tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           
   408                           ; 1 bytes @ 0x46
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 27 in file "comuni.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  temp            5   16[BANK0 ] unsigned char [5]
   419 ;;  test3           1    0        unsigned char 
   420 ;;  data_in         1    0        unsigned char 
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       5       0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0
   433 ;;      Totals:         0       5       0       0       0       0       0       0       0
   434 ;;Total ram usage:        5 bytes
   435 ;; Hardware stack levels required when called:    7
   436 ;; This function calls:
   437 ;;		_MSdelay
   438 ;;		_USART_Init
   439 ;;		_USART_SendString
   440 ;;		_configBoard
   441 ;;		_lcd_iniciar
   442 ;;		_lcd_origen
   443 ;;		_lcd_texto
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text0
   450  0008BC                     __ptext0:
   451                           	opt stack 0
   452  0008BC                     _main:
   453                           	opt stack 24
   454                           
   455                           ;comuni.c: 29: OSCCON=0x72;
   456                           
   457                           ;incstack = 0
   458  0008BC  0E72               	movlw	114
   459  0008BE  6ED3               	movwf	4051,c	;volatile
   460                           
   461                           ;comuni.c: 31: char data_in;
   462                           ;comuni.c: 33: char test3;
   463                           ;comuni.c: 34: configBoard();
   464  0008C0  ECBC  F003         	call	_configBoard	;wreg free
   465                           
   466                           ;comuni.c: 35: lcd_iniciar();
   467  0008C4  ECCC  F001         	call	_lcd_iniciar	;wreg free
   468                           
   469                           ;comuni.c: 36: USART_Init(9600);
   470  0008C8  0E80               	movlw	128
   471  0008CA  6E43               	movwf	USART_Init@baud_rate,c
   472  0008CC  0E25               	movlw	37
   473  0008CE  6E44               	movwf	USART_Init@baud_rate+1,c
   474  0008D0  0E00               	movlw	0
   475  0008D2  6E45               	movwf	USART_Init@baud_rate+2,c
   476  0008D4  0E00               	movlw	0
   477  0008D6  6E46               	movwf	USART_Init@baud_rate+3,c
   478  0008D8  EC43  F003         	call	_USART_Init	;wreg free
   479                           
   480                           ;comuni.c: 37: MSdelay(50);
   481  0008DC  0E00               	movlw	0
   482  0008DE  6E14               	movwf	MSdelay@val+1,c
   483  0008E0  0E32               	movlw	50
   484  0008E2  6E13               	movwf	MSdelay@val,c
   485  0008E4  ECA0  F004         	call	_MSdelay	;wreg free
   486  0008E8                     
   487                           ;comuni.c: 39: lcd_origen();
   488  0008E8  EC07  F005         	call	_lcd_origen	;wreg free
   489                           
   490                           ;comuni.c: 102: char temp[5];
   491                           ;comuni.c: 107: USART_SendString(temp);
   492  0008EC  0E70               	movlw	low main@temp
   493  0008EE  6E14               	movwf	USART_SendString@out,c
   494  0008F0  0E00               	movlw	high main@temp
   495  0008F2  6E15               	movwf	USART_SendString@out+1,c
   496  0008F4  ECE6  F004         	call	_USART_SendString	;wreg free
   497                           
   498                           ;comuni.c: 108: lcd_texto(temp);
   499  0008F8  0E70               	movlw	low main@temp
   500  0008FA  0100               	movlb	0	; () banked
   501  0008FC  6F6D               	movwf	lcd_texto@cadena& (0+255),b
   502  0008FE  0E00               	movlw	high main@temp
   503  000900  6F6E               	movwf	(lcd_texto@cadena+1)& (0+255),b
   504  000902  ECBB  F004         	call	_lcd_texto	;wreg free
   505  000906  D7F0               	goto	l248
   506  000908                     __end_of_main:
   507                           	opt stack 0
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           
   513 ;; *************** function _lcd_texto *****************
   514 ;; Defined at:
   515 ;;		line 296 in file "lcd.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  cadena          2   13[BANK0 ] PTR unsigned char 
   518 ;;		 -> main@temp(5), 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       2       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       1       0       0       0       0       0       0       0
   533 ;;      Totals:         0       3       0       0       0       0       0       0       0
   534 ;;Total ram usage:        3 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; Hardware stack levels required when called:    6
   537 ;; This function calls:
   538 ;;		_lcd_caracter
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text1
   545  000976                     __ptext1:
   546                           	opt stack 0
   547  000976                     _lcd_texto:
   548                           	opt stack 24
   549                           
   550                           ;lcd.c: 297: while(*cadena != 0x00){
   551                           
   552                           ;incstack = 0
   553  000976  D00F               	goto	l127
   554  000978                     
   555                           ;lcd.c: 298: lcd_caracter(*cadena);
   556  000978  C06D  FFD9         	movff	lcd_texto@cadena,fsr2l
   557  00097C  C06E  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   558  000980  50DF               	movf	indf2,w,c
   559  000982  0100               	movlb	0	; () banked
   560  000984  6F6F               	movwf	??_lcd_texto& (0+255),b
   561  000986  516F               	movf	??_lcd_texto& (0+255),w,b
   562  000988  6F66               	movwf	lcd_caracter@caracter& (0+255),b
   563  00098A  6B67               	clrf	(lcd_caracter@caracter+1)& (0+255),b
   564  00098C  ECF3  F003         	call	_lcd_caracter	;wreg free
   565                           
   566                           ;lcd.c: 299: cadena++;
   567  000990  0100               	movlb	0	; () banked
   568  000992  4B6D               	infsnz	lcd_texto@cadena& (0+255),f,b
   569  000994  2B6E               	incf	(lcd_texto@cadena+1)& (0+255),f,b
   570  000996                     l127:
   571                           
   572                           ; BSR set to: 0
   573  000996  C06D  FFD9         	movff	lcd_texto@cadena,fsr2l
   574  00099A  C06E  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   575  00099E  50DF               	movf	indf2,w,c
   576  0009A0  B4D8               	btfsc	status,2,c
   577  0009A2  0012               	return	
   578  0009A4  D7E9               	goto	l128
   579  0009A6                     __end_of_lcd_texto:
   580                           	opt stack 0
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           indf2	equ	0xFDF
   586                           fsr2h	equ	0xFDA
   587                           fsr2l	equ	0xFD9
   588                           status	equ	0xFD8
   589                           
   590 ;; *************** function _lcd_caracter *****************
   591 ;; Defined at:
   592 ;;		line 286 in file "lcd.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;  caracter        2    6[BANK0 ] unsigned int 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   606 ;;      Params:         0       2       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          0       5       0       0       0       0       0       0       0
   609 ;;      Totals:         0       7       0       0       0       0       0       0       0
   610 ;;Total ram usage:        7 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    5
   613 ;; This function calls:
   614 ;;		_lcd_pulso
   615 ;; This function is called by:
   616 ;;		_lcd_texto
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text2
   621  0007E6                     __ptext2:
   622                           	opt stack 0
   623  0007E6                     _lcd_caracter:
   624                           	opt stack 24
   625                           
   626                           ;lcd.c: 287: PORTDbits.RD1=1;
   627                           
   628                           ;incstack = 0
   629  0007E6  8283               	bsf	3971,1,c	;volatile
   630                           
   631                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   632  0007E8  CF83 F068          	movff	3971,??_lcd_caracter	;volatile
   633  0007EC  0E0F               	movlw	15
   634  0007EE  0100               	movlb	0	; () banked
   635  0007F0  1768               	andwf	??_lcd_caracter& (0+255),f,b
   636  0007F2  C066  F069         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   637  0007F6  C067  F06A         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   638  0007FA  0E04               	movlw	4
   639  0007FC  6F6B               	movwf	(??_lcd_caracter+3)& (0+255),b
   640  0007FE                     u1905:
   641  0007FE  90D8               	bcf	status,0,c
   642  000800  336A               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
   643  000802  3369               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
   644  000804  2F6B               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
   645  000806  D7FB               	goto	u1905
   646  000808  0E0F               	movlw	15
   647  00080A  1769               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   648  00080C  3883               	swapf	3971,w,c	;volatile
   649  00080E  0B0F               	andlw	15
   650  000810  0B0F               	andlw	15
   651  000812  090F               	iorlw	15
   652  000814  1569               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   653  000816  6F6C               	movwf	(??_lcd_caracter+4)& (0+255),b
   654  000818  396C               	swapf	(??_lcd_caracter+4)& (0+255),w,b
   655  00081A  0BF0               	andlw	240
   656  00081C  1168               	iorwf	??_lcd_caracter& (0+255),w,b
   657  00081E  6E83               	movwf	3971,c	;volatile
   658                           
   659                           ; BSR set to: 0
   660                           ;lcd.c: 290: lcd_pulso();
   661  000820  ECF8  F004         	call	_lcd_pulso	;wreg free
   662                           
   663                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   664  000824  CF83 F068          	movff	3971,??_lcd_caracter	;volatile
   665  000828  0E0F               	movlw	15
   666  00082A  0100               	movlb	0	; () banked
   667  00082C  1768               	andwf	??_lcd_caracter& (0+255),f,b
   668  00082E  C066  F069         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   669  000832  0E0F               	movlw	15
   670  000834  1769               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   671  000836  3883               	swapf	3971,w,c	;volatile
   672  000838  0B0F               	andlw	15
   673  00083A  0B0F               	andlw	15
   674  00083C  090F               	iorlw	15
   675  00083E  1569               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   676  000840  6F6A               	movwf	(??_lcd_caracter+2)& (0+255),b
   677  000842  396A               	swapf	(??_lcd_caracter+2)& (0+255),w,b
   678  000844  0BF0               	andlw	240
   679  000846  1168               	iorwf	??_lcd_caracter& (0+255),w,b
   680  000848  6E83               	movwf	3971,c	;volatile
   681                           
   682                           ;lcd.c: 292: lcd_pulso();
   683  00084A  ECF8  F004         	call	_lcd_pulso	;wreg free
   684                           
   685                           ;lcd.c: 293: PORTDbits.RD1=0;
   686  00084E  9283               	bcf	3971,1,c	;volatile
   687  000850  0012               	return		;funcret
   688  000852                     __end_of_lcd_caracter:
   689                           	opt stack 0
   690                           tblptru	equ	0xFF8
   691                           tblptrh	equ	0xFF7
   692                           tblptrl	equ	0xFF6
   693                           tablat	equ	0xFF5
   694                           indf2	equ	0xFDF
   695                           fsr2h	equ	0xFDA
   696                           fsr2l	equ	0xFD9
   697                           status	equ	0xFD8
   698                           
   699 ;; *************** function _lcd_origen *****************
   700 ;; Defined at:
   701 ;;		line 308 in file "lcd.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    6
   722 ;; This function calls:
   723 ;;		_lcd_orden
   724 ;;		_wait_in_ms
   725 ;; This function is called by:
   726 ;;		_main
   727 ;;		_lcd_ubicarXY
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text3
   732  000A0E                     __ptext3:
   733                           	opt stack 0
   734  000A0E                     _lcd_origen:
   735                           	opt stack 24
   736                           
   737                           ;lcd.c: 309: lcd_orden(0x02);
   738                           
   739                           ;incstack = 0
   740  000A0E  0E00               	movlw	0
   741  000A10  0100               	movlb	0	; () banked
   742  000A12  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
   743  000A14  0E02               	movlw	2
   744  000A16  6F66               	movwf	lcd_orden@orden& (0+255),b
   745  000A18  EC29  F004         	call	_lcd_orden	;wreg free
   746                           
   747                           ;lcd.c: 310: wait_in_ms(4);
   748  000A1C  0E00               	movlw	0
   749  000A1E  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   750  000A20  0E04               	movlw	4
   751  000A22  6E43               	movwf	wait_in_ms@time_in_ms,c
   752  000A24  EC37  F002         	call	_wait_in_ms	;wreg free
   753  000A28  0012               	return		;funcret
   754  000A2A                     __end_of_lcd_origen:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           indf2	equ	0xFDF
   761                           fsr2h	equ	0xFDA
   762                           fsr2l	equ	0xFD9
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _lcd_iniciar *****************
   766 ;; Defined at:
   767 ;;		line 224 in file "lcd.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0
   784 ;;      Totals:         0       0       0       0       0       0       0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    6
   788 ;; This function calls:
   789 ;;		_lcd_orden
   790 ;;		_lcd_pulso
   791 ;;		_wait_in_ms
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798  000398                     __ptext4:
   799                           	opt stack 0
   800  000398                     _lcd_iniciar:
   801                           	opt stack 24
   802                           
   803                           ;lcd.c: 225: TRISDbits.TRISD1=0;
   804                           
   805                           ;incstack = 0
   806  000398  9295               	bcf	3989,1,c	;volatile
   807                           
   808                           ;lcd.c: 226: TRISDbits.TRISD2=0;
   809  00039A  9495               	bcf	3989,2,c	;volatile
   810                           
   811                           ;lcd.c: 227: TRISDbits.TRISD3=0;
   812  00039C  9695               	bcf	3989,3,c	;volatile
   813                           
   814                           ;lcd.c: 228: TRISDbits.TRISD4=0;
   815  00039E  9895               	bcf	3989,4,c	;volatile
   816                           
   817                           ;lcd.c: 229: TRISDbits.TRISD5=0;
   818  0003A0  9A95               	bcf	3989,5,c	;volatile
   819                           
   820                           ;lcd.c: 230: TRISDbits.TRISD6=0;
   821  0003A2  9C95               	bcf	3989,6,c	;volatile
   822                           
   823                           ;lcd.c: 231: TRISDbits.TRISD7=0;
   824  0003A4  9E95               	bcf	3989,7,c	;volatile
   825                           
   826                           ;lcd.c: 233: PORTDbits.RD1=0;
   827  0003A6  9283               	bcf	3971,1,c	;volatile
   828                           
   829                           ;lcd.c: 234: PORTDbits.RD2=0;
   830  0003A8  9483               	bcf	3971,2,c	;volatile
   831                           
   832                           ;lcd.c: 235: PORTDbits.RD3=0;
   833  0003AA  9683               	bcf	3971,3,c	;volatile
   834                           
   835                           ;lcd.c: 236: PORTDbits.RD4=0;
   836  0003AC  9883               	bcf	3971,4,c	;volatile
   837                           
   838                           ;lcd.c: 237: PORTDbits.RD5=0;
   839  0003AE  9A83               	bcf	3971,5,c	;volatile
   840                           
   841                           ;lcd.c: 238: PORTDbits.RD6=0;
   842  0003B0  9C83               	bcf	3971,6,c	;volatile
   843                           
   844                           ;lcd.c: 239: PORTDbits.RD7=0;
   845  0003B2  9E83               	bcf	3971,7,c	;volatile
   846                           
   847                           ;lcd.c: 241: wait_in_ms(20);
   848  0003B4  0E00               	movlw	0
   849  0003B6  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   850  0003B8  0E14               	movlw	20
   851  0003BA  6E43               	movwf	wait_in_ms@time_in_ms,c
   852  0003BC  EC37  F002         	call	_wait_in_ms	;wreg free
   853                           
   854                           ;lcd.c: 242: PORTD=0X03<<4;
   855  0003C0  0E30               	movlw	48
   856  0003C2  6E83               	movwf	3971,c	;volatile
   857                           
   858                           ;lcd.c: 243: lcd_pulso();
   859  0003C4  ECF8  F004         	call	_lcd_pulso	;wreg free
   860                           
   861                           ;lcd.c: 244: wait_in_ms(4);
   862  0003C8  0E00               	movlw	0
   863  0003CA  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   864  0003CC  0E04               	movlw	4
   865  0003CE  6E43               	movwf	wait_in_ms@time_in_ms,c
   866  0003D0  EC37  F002         	call	_wait_in_ms	;wreg free
   867                           
   868                           ;lcd.c: 246: PORTD=0X03<<4;
   869  0003D4  0E30               	movlw	48
   870  0003D6  6E83               	movwf	3971,c	;volatile
   871                           
   872                           ;lcd.c: 247: lcd_pulso();
   873  0003D8  ECF8  F004         	call	_lcd_pulso	;wreg free
   874                           
   875                           ;lcd.c: 248: wait_in_ms(4);
   876  0003DC  0E00               	movlw	0
   877  0003DE  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   878  0003E0  0E04               	movlw	4
   879  0003E2  6E43               	movwf	wait_in_ms@time_in_ms,c
   880  0003E4  EC37  F002         	call	_wait_in_ms	;wreg free
   881                           
   882                           ;lcd.c: 250: PORTD=0X03<<4;
   883  0003E8  0E30               	movlw	48
   884  0003EA  6E83               	movwf	3971,c	;volatile
   885                           
   886                           ;lcd.c: 251: lcd_pulso();
   887  0003EC  ECF8  F004         	call	_lcd_pulso	;wreg free
   888                           
   889                           ;lcd.c: 252: wait_in_ms(1);
   890  0003F0  0E00               	movlw	0
   891  0003F2  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   892  0003F4  0E01               	movlw	1
   893  0003F6  6E43               	movwf	wait_in_ms@time_in_ms,c
   894  0003F8  EC37  F002         	call	_wait_in_ms	;wreg free
   895                           
   896                           ;lcd.c: 254: PORTD=0X02<<4;
   897  0003FC  0E20               	movlw	32
   898  0003FE  6E83               	movwf	3971,c	;volatile
   899                           
   900                           ;lcd.c: 255: lcd_pulso();
   901  000400  ECF8  F004         	call	_lcd_pulso	;wreg free
   902                           
   903                           ;lcd.c: 257: lcd_orden(0x28);
   904  000404  0E00               	movlw	0
   905  000406  0100               	movlb	0	; () banked
   906  000408  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
   907  00040A  0E28               	movlw	40
   908  00040C  6F66               	movwf	lcd_orden@orden& (0+255),b
   909  00040E  EC29  F004         	call	_lcd_orden	;wreg free
   910                           
   911                           ;lcd.c: 258: wait_in_ms(8);
   912  000412  0E00               	movlw	0
   913  000414  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   914  000416  0E08               	movlw	8
   915  000418  6E43               	movwf	wait_in_ms@time_in_ms,c
   916  00041A  EC37  F002         	call	_wait_in_ms	;wreg free
   917                           
   918                           ;lcd.c: 260: lcd_orden(0x0c);
   919  00041E  0E00               	movlw	0
   920  000420  0100               	movlb	0	; () banked
   921  000422  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
   922  000424  0E0C               	movlw	12
   923  000426  6F66               	movwf	lcd_orden@orden& (0+255),b
   924  000428  EC29  F004         	call	_lcd_orden	;wreg free
   925                           
   926                           ;lcd.c: 261: wait_in_ms(8);
   927  00042C  0E00               	movlw	0
   928  00042E  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   929  000430  0E08               	movlw	8
   930  000432  6E43               	movwf	wait_in_ms@time_in_ms,c
   931  000434  EC37  F002         	call	_wait_in_ms	;wreg free
   932                           
   933                           ;lcd.c: 263: lcd_orden(0x01);
   934  000438  0E00               	movlw	0
   935  00043A  0100               	movlb	0	; () banked
   936  00043C  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
   937  00043E  0E01               	movlw	1
   938  000440  6F66               	movwf	lcd_orden@orden& (0+255),b
   939  000442  EC29  F004         	call	_lcd_orden	;wreg free
   940                           
   941                           ;lcd.c: 264: wait_in_ms(2);
   942  000446  0E00               	movlw	0
   943  000448  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   944  00044A  0E02               	movlw	2
   945  00044C  6E43               	movwf	wait_in_ms@time_in_ms,c
   946  00044E  EC37  F002         	call	_wait_in_ms	;wreg free
   947                           
   948                           ;lcd.c: 266: lcd_orden(0x06);
   949  000452  0E00               	movlw	0
   950  000454  0100               	movlb	0	; () banked
   951  000456  6F67               	movwf	(lcd_orden@orden+1)& (0+255),b
   952  000458  0E06               	movlw	6
   953  00045A  6F66               	movwf	lcd_orden@orden& (0+255),b
   954  00045C  EC29  F004         	call	_lcd_orden	;wreg free
   955                           
   956                           ;lcd.c: 267: wait_in_ms(8);
   957  000460  0E00               	movlw	0
   958  000462  6E44               	movwf	wait_in_ms@time_in_ms+1,c
   959  000464  0E08               	movlw	8
   960  000466  6E43               	movwf	wait_in_ms@time_in_ms,c
   961  000468  EC37  F002         	call	_wait_in_ms	;wreg free
   962  00046C  0012               	return		;funcret
   963  00046E                     __end_of_lcd_iniciar:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           indf2	equ	0xFDF
   970                           fsr2h	equ	0xFDA
   971                           fsr2l	equ	0xFD9
   972                           status	equ	0xFD8
   973                           
   974 ;; *************** function _lcd_orden *****************
   975 ;; Defined at:
   976 ;;		line 277 in file "lcd.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  orden           2    6[BANK0 ] unsigned int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0       2       0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       5       0       0       0       0       0       0       0
   993 ;;      Totals:         0       7       0       0       0       0       0       0       0
   994 ;;Total ram usage:        7 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    5
   997 ;; This function calls:
   998 ;;		_lcd_pulso
   999 ;; This function is called by:
  1000 ;;		_lcd_iniciar
  1001 ;;		_lcd_origen
  1002 ;;		_lcd_limpiar
  1003 ;;		_lcd_ubicarXY
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text5
  1008  000852                     __ptext5:
  1009                           	opt stack 0
  1010  000852                     _lcd_orden:
  1011                           	opt stack 24
  1012                           
  1013                           ;lcd.c: 278: PORTDbits.RD1=0;
  1014                           
  1015                           ;incstack = 0
  1016  000852  9283               	bcf	3971,1,c	;volatile
  1017                           
  1018                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  1019  000854  CF83 F068          	movff	3971,??_lcd_orden	;volatile
  1020  000858  0E0F               	movlw	15
  1021  00085A  0100               	movlb	0	; () banked
  1022  00085C  1768               	andwf	??_lcd_orden& (0+255),f,b
  1023  00085E  C066  F069         	movff	lcd_orden@orden,??_lcd_orden+1
  1024  000862  C067  F06A         	movff	lcd_orden@orden+1,??_lcd_orden+2
  1025  000866  0E04               	movlw	4
  1026  000868  6F6B               	movwf	(??_lcd_orden+3)& (0+255),b
  1027  00086A                     u1895:
  1028  00086A  90D8               	bcf	status,0,c
  1029  00086C  336A               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  1030  00086E  3369               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  1031  000870  2F6B               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  1032  000872  D7FB               	goto	u1895
  1033  000874  0E0F               	movlw	15
  1034  000876  1769               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1035  000878  3883               	swapf	3971,w,c	;volatile
  1036  00087A  0B0F               	andlw	15
  1037  00087C  0B0F               	andlw	15
  1038  00087E  090F               	iorlw	15
  1039  000880  1569               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1040  000882  6F6C               	movwf	(??_lcd_orden+4)& (0+255),b
  1041  000884  396C               	swapf	(??_lcd_orden+4)& (0+255),w,b
  1042  000886  0BF0               	andlw	240
  1043  000888  1168               	iorwf	??_lcd_orden& (0+255),w,b
  1044  00088A  6E83               	movwf	3971,c	;volatile
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;lcd.c: 281: lcd_pulso();
  1048  00088C  ECF8  F004         	call	_lcd_pulso	;wreg free
  1049                           
  1050                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  1051  000890  CF83 F068          	movff	3971,??_lcd_orden	;volatile
  1052  000894  0E0F               	movlw	15
  1053  000896  0100               	movlb	0	; () banked
  1054  000898  1768               	andwf	??_lcd_orden& (0+255),f,b
  1055  00089A  C066  F069         	movff	lcd_orden@orden,??_lcd_orden+1
  1056  00089E  0E0F               	movlw	15
  1057  0008A0  1769               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1058  0008A2  3883               	swapf	3971,w,c	;volatile
  1059  0008A4  0B0F               	andlw	15
  1060  0008A6  0B0F               	andlw	15
  1061  0008A8  090F               	iorlw	15
  1062  0008AA  1569               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1063  0008AC  6F6A               	movwf	(??_lcd_orden+2)& (0+255),b
  1064  0008AE  396A               	swapf	(??_lcd_orden+2)& (0+255),w,b
  1065  0008B0  0BF0               	andlw	240
  1066  0008B2  1168               	iorwf	??_lcd_orden& (0+255),w,b
  1067  0008B4  6E83               	movwf	3971,c	;volatile
  1068                           
  1069                           ;lcd.c: 283: lcd_pulso();
  1070  0008B6  ECF8  F004         	call	_lcd_pulso	;wreg free
  1071  0008BA  0012               	return		;funcret
  1072  0008BC                     __end_of_lcd_orden:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           indf2	equ	0xFDF
  1079                           fsr2h	equ	0xFDA
  1080                           fsr2l	equ	0xFD9
  1081                           status	equ	0xFD8
  1082                           
  1083 ;; *************** function _lcd_pulso *****************
  1084 ;; Defined at:
  1085 ;;		line 270 in file "lcd.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         0       0       0       0       0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    4
  1106 ;; This function calls:
  1107 ;;		_wait_in_ms
  1108 ;; This function is called by:
  1109 ;;		_lcd_iniciar
  1110 ;;		_lcd_orden
  1111 ;;		_lcd_caracter
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text6
  1116  0009F0                     __ptext6:
  1117                           	opt stack 0
  1118  0009F0                     _lcd_pulso:
  1119                           	opt stack 24
  1120                           
  1121                           ;lcd.c: 271: PORTDbits.RD3=1;
  1122                           
  1123                           ;incstack = 0
  1124  0009F0  8683               	bsf	3971,3,c	;volatile
  1125                           
  1126                           ;lcd.c: 272: wait_in_ms(2);
  1127  0009F2  0E00               	movlw	0
  1128  0009F4  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1129  0009F6  0E02               	movlw	2
  1130  0009F8  6E43               	movwf	wait_in_ms@time_in_ms,c
  1131  0009FA  EC37  F002         	call	_wait_in_ms	;wreg free
  1132                           
  1133                           ;lcd.c: 273: PORTDbits.RD3=0;
  1134  0009FE  9683               	bcf	3971,3,c	;volatile
  1135                           
  1136                           ;lcd.c: 274: wait_in_ms(2);
  1137  000A00  0E00               	movlw	0
  1138  000A02  6E44               	movwf	wait_in_ms@time_in_ms+1,c
  1139  000A04  0E02               	movlw	2
  1140  000A06  6E43               	movwf	wait_in_ms@time_in_ms,c
  1141  000A08  EC37  F002         	call	_wait_in_ms	;wreg free
  1142  000A0C  0012               	return		;funcret
  1143  000A0E                     __end_of_lcd_pulso:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           indf2	equ	0xFDF
  1150                           fsr2h	equ	0xFDA
  1151                           fsr2l	equ	0xFD9
  1152                           status	equ	0xFD8
  1153                           
  1154 ;; *************** function _wait_in_ms *****************
  1155 ;; Defined at:
  1156 ;;		line 79 in file "config.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  time_in_ms      2   66[COMRAM] int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  count_ms        2    4[BANK0 ] unsigned int 
  1161 ;;  count           2    2[BANK0 ] unsigned int 
  1162 ;;  flag            2    0[BANK0 ] unsigned int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0
  1173 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1175 ;;      Totals:         4       6       0       0       0       0       0       0       0
  1176 ;;Total ram usage:       10 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    3
  1179 ;; This function calls:
  1180 ;;		___awtoft
  1181 ;;		___ftdiv
  1182 ;;		___fttol
  1183 ;; This function is called by:
  1184 ;;		_lcd_iniciar
  1185 ;;		_lcd_pulso
  1186 ;;		_lcd_origen
  1187 ;;		_ADC_Read
  1188 ;;		_lcd_limpiar
  1189 ;;		_Lcd_Cmd
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194  00046E                     __ptext7:
  1195                           	opt stack 0
  1196  00046E                     _wait_in_ms:
  1197                           	opt stack 24
  1198                           
  1199                           ;config.c: 80: unsigned int count = 0;
  1200                           
  1201                           ;incstack = 0
  1202  00046E  0E00               	movlw	0
  1203  000470  0100               	movlb	0	; () banked
  1204  000472  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  1205  000474  0E00               	movlw	0
  1206  000476  6F62               	movwf	wait_in_ms@count& (0+255),b
  1207                           
  1208                           ;config.c: 81: unsigned int count_ms = 0;
  1209  000478  0E00               	movlw	0
  1210  00047A  6F65               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  1211  00047C  0E00               	movlw	0
  1212  00047E  6F64               	movwf	wait_in_ms@count_ms& (0+255),b
  1213                           
  1214                           ;config.c: 82: unsigned int flag = 0;
  1215  000480  0E00               	movlw	0
  1216  000482  6F61               	movwf	(wait_in_ms@flag+1)& (0+255),b
  1217  000484  0E00               	movlw	0
  1218  000486  6F60               	movwf	wait_in_ms@flag& (0+255),b
  1219                           
  1220                           ;config.c: 84: TMR0L = 131;
  1221  000488  0E83               	movlw	131
  1222  00048A  6ED6               	movwf	4054,c	;volatile
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;config.c: 87: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1226  00048C  50D6               	movf	4054,w,c	;volatile
  1227  00048E  6E45               	movwf	??_wait_in_ms& (0+255),c
  1228  000490  6A46               	clrf	(??_wait_in_ms+1)& (0+255),c
  1229  000492  1E45               	comf	??_wait_in_ms,f,c
  1230  000494  1E46               	comf	??_wait_in_ms+1,f,c
  1231  000496  4A45               	infsnz	??_wait_in_ms,f,c
  1232  000498  2A46               	incf	??_wait_in_ms+1,f,c
  1233  00049A  0E05               	movlw	5
  1234  00049C                     u1845:
  1235  00049C  90D8               	bcf	status,0,c
  1236  00049E  3645               	rlcf	??_wait_in_ms,f,c
  1237  0004A0  3646               	rlcf	??_wait_in_ms+1,f,c
  1238  0004A2  2EE8               	decfsz	wreg,f,c
  1239  0004A4  D7FB               	goto	u1845
  1240  0004A6  0E00               	movlw	0
  1241  0004A8  2445               	addwf	??_wait_in_ms,w,c
  1242  0004AA  6E1B               	movwf	___awtoft@c,c
  1243  0004AC  0E20               	movlw	32
  1244  0004AE  2046               	addwfc	??_wait_in_ms+1,w,c
  1245  0004B0  6E1C               	movwf	___awtoft@c+1,c
  1246  0004B2  EC84  F004         	call	___awtoft	;wreg free
  1247  0004B6  C01B  F028         	movff	?___awtoft,___ftdiv@f2
  1248  0004BA  C01C  F029         	movff	?___awtoft+1,___ftdiv@f2+1
  1249  0004BE  C01D  F02A         	movff	?___awtoft+2,___ftdiv@f2+2
  1250  0004C2  0E00               	movlw	0
  1251  0004C4  6E25               	movwf	___ftdiv@f1,c
  1252  0004C6  0EFA               	movlw	250
  1253  0004C8  6E26               	movwf	___ftdiv@f1+1,c
  1254  0004CA  0E45               	movlw	69
  1255  0004CC  6E27               	movwf	___ftdiv@f1+2,c
  1256  0004CE  EC59  F001         	call	___ftdiv	;wreg free
  1257  0004D2  C025  F034         	movff	?___ftdiv,___fttol@f1
  1258  0004D6  C026  F035         	movff	?___ftdiv+1,___fttol@f1+1
  1259  0004DA  C027  F036         	movff	?___ftdiv+2,___fttol@f1+2
  1260  0004DE  ECDF  F000         	call	___fttol	;wreg free
  1261  0004E2  C034  F064         	movff	?___fttol,wait_in_ms@count_ms
  1262  0004E6  C035  F065         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1263                           
  1264                           ;config.c: 89: TMR0ON = 1;
  1265  0004EA  8ED5               	bsf	4053,7,c	;volatile
  1266                           
  1267                           ;config.c: 91: while (count < count_ms){
  1268  0004EC  D020               	goto	l47
  1269  0004EE                     l43:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;config.c: 92: if(TMR0IF == 1){
  1273  0004EE  A4F2               	btfss	intcon,2,c	;volatile
  1274  0004F0  D01E               	goto	l47
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;config.c: 93: TMR0IF = 0;
  1278  0004F2  94F2               	bcf	intcon,2,c	;volatile
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;config.c: 94: TMR0L = 131;
  1282  0004F4  0E83               	movlw	131
  1283  0004F6  6ED6               	movwf	4054,c	;volatile
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;config.c: 95: count ++;
  1287  0004F8  4B62               	infsnz	wait_in_ms@count& (0+255),f,b
  1288  0004FA  2B63               	incf	(wait_in_ms@count+1)& (0+255),f,b
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;config.c: 96: if (count == count_ms){
  1292  0004FC  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  1293  0004FE  1962               	xorwf	wait_in_ms@count& (0+255),w,b
  1294  000500  E116               	bnz	l2037
  1295  000502  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1296  000504  1963               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  1297  000506  A4D8               	btfss	status,2,c
  1298  000508  D012               	goto	l47
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;config.c: 97: flag++;
  1302  00050A  4B60               	infsnz	wait_in_ms@flag& (0+255),f,b
  1303  00050C  2B61               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;config.c: 98: if (flag != time_in_ms){
  1307  00050E  5160               	movf	wait_in_ms@flag& (0+255),w,b
  1308  000510  1843               	xorwf	wait_in_ms@time_in_ms,w,c
  1309  000512  E104               	bnz	u1870
  1310  000514  5161               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  1311  000516  1844               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1312  000518  B4D8               	btfsc	status,2,c
  1313  00051A  D005               	goto	l46
  1314  00051C                     u1870:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;config.c: 99: count = 0;
  1318  00051C  0E00               	movlw	0
  1319  00051E  6F63               	movwf	(wait_in_ms@count+1)& (0+255),b
  1320  000520  0E00               	movlw	0
  1321  000522  6F62               	movwf	wait_in_ms@count& (0+255),b
  1322                           
  1323                           ;config.c: 100: }
  1324  000524  D004               	goto	l47
  1325  000526                     l46:
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;config.c: 101: else{
  1329                           ;config.c: 102: count = count_ms;
  1330  000526  C064  F062         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1331  00052A  C065  F063         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1332  00052E                     l47:
  1333  00052E                     l2037:
  1334  00052E  0100               	movlb	0	; () banked
  1335  000530  5164               	movf	wait_in_ms@count_ms& (0+255),w,b
  1336  000532  5D62               	subwf	wait_in_ms@count& (0+255),w,b
  1337  000534  5165               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1338  000536  5963               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  1339  000538  B0D8               	btfsc	status,0,c
  1340  00053A  0012               	return	
  1341  00053C  D7D8               	goto	l43
  1342  00053E                     __end_of_wait_in_ms:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           intcon	equ	0xFF2
  1349                           wreg	equ	0xFE8
  1350                           indf2	equ	0xFDF
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function ___awtoft *****************
  1356 ;; Defined at:
  1357 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  c               2   26[COMRAM] int 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  sign            1   29[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  3   26[COMRAM] float 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1371 ;;      Params:         3       0       0       0       0       0       0       0       0
  1372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1374 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1375 ;;Total ram usage:        4 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    2
  1378 ;; This function calls:
  1379 ;;		___ftpack
  1380 ;; This function is called by:
  1381 ;;		_wait_in_ms
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text8
  1386  000908                     __ptext8:
  1387                           	opt stack 0
  1388  000908                     ___awtoft:
  1389                           	opt stack 24
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;incstack = 0
  1393  000908  0E00               	movlw	0
  1394  00090A  6E1E               	movwf	___awtoft@sign,c
  1395  00090C  AE1C               	btfss	___awtoft@c+1,7,c
  1396  00090E  D006               	goto	l447
  1397  000910  6C1B               	negf	___awtoft@c,c
  1398  000912  1E1C               	comf	___awtoft@c+1,f,c
  1399  000914  B0D8               	btfsc	status,0,c
  1400  000916  2A1C               	incf	___awtoft@c+1,f,c
  1401  000918  0E01               	movlw	1
  1402  00091A  6E1E               	movwf	___awtoft@sign,c
  1403  00091C                     l447:
  1404  00091C  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  1405  000920  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  1406  000924  6A15               	clrf	___ftpack@arg+2,c
  1407  000926  0E8E               	movlw	142
  1408  000928  6E16               	movwf	___ftpack@exp,c
  1409  00092A  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  1410  00092E  EC9F  F002         	call	___ftpack	;wreg free
  1411  000932  C013  F01B         	movff	?___ftpack,?___awtoft
  1412  000936  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  1413  00093A  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  1414  00093E  0012               	return	
  1415  000940                     __end_of___awtoft:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           intcon	equ	0xFF2
  1422                           wreg	equ	0xFE8
  1423                           indf2	equ	0xFDF
  1424                           fsr2h	equ	0xFDA
  1425                           fsr2l	equ	0xFD9
  1426                           status	equ	0xFD8
  1427                           
  1428 ;; *************** function _configBoard *****************
  1429 ;; Defined at:
  1430 ;;		line 11 in file "config.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text9
  1459  000778                     __ptext9:
  1460                           	opt stack 0
  1461  000778                     _configBoard:
  1462                           	opt stack 29
  1463                           
  1464                           ;config.c: 15: INTCONbits.GIE = 1;
  1465                           
  1466                           ;incstack = 0
  1467  000778  8EF2               	bsf	intcon,7,c	;volatile
  1468                           
  1469                           ;config.c: 16: INTCONbits.PEIE = 1;
  1470  00077A  8CF2               	bsf	intcon,6,c	;volatile
  1471                           
  1472                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1473  00077C  8ED5               	bsf	4053,7,c	;volatile
  1474                           
  1475                           ;config.c: 26: T08BIT = 1;
  1476  00077E  8CD5               	bsf	4053,6,c	;volatile
  1477                           
  1478                           ;config.c: 27: T0CONbits.T0CS = 0;
  1479  000780  9AD5               	bcf	4053,5,c	;volatile
  1480                           
  1481                           ;config.c: 29: T0CONbits.PSA = 0;
  1482  000782  96D5               	bcf	4053,3,c	;volatile
  1483                           
  1484                           ;config.c: 30: T0CONbits.T0PS = 100;
  1485  000784  50D5               	movf	4053,w,c	;volatile
  1486  000786  0BF8               	andlw	-8
  1487  000788  0904               	iorlw	4
  1488  00078A  6ED5               	movwf	4053,c	;volatile
  1489                           
  1490                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1491  00078C  94F2               	bcf	intcon,2,c	;volatile
  1492                           
  1493                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1494  00078E  80C1               	bsf	4033,0,c	;volatile
  1495  000790  82C1               	bsf	4033,1,c	;volatile
  1496  000792  84C1               	bsf	4033,2,c	;volatile
  1497  000794  86C1               	bsf	4033,3,c	;volatile
  1498                           
  1499                           ;config.c: 36: TRISA=0b00000000;
  1500  000796  0E00               	movlw	0
  1501  000798  6E92               	movwf	3986,c	;volatile
  1502                           
  1503                           ;config.c: 37: TRISB=0b00000000;
  1504  00079A  0E00               	movlw	0
  1505  00079C  6E93               	movwf	3987,c	;volatile
  1506                           
  1507                           ;config.c: 44: ADCON0 = 0b00000111;
  1508  00079E  0E07               	movlw	7
  1509  0007A0  6EC2               	movwf	4034,c	;volatile
  1510                           
  1511                           ;config.c: 47: ADCON0bits.ADON = 0;
  1512  0007A2  90C2               	bcf	4034,0,c	;volatile
  1513                           
  1514                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1515  0007A4  8EC0               	bsf	4032,7,c	;volatile
  1516                           
  1517                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1518  0007A6  50C0               	movf	4032,w,c	;volatile
  1519  0007A8  0BF8               	andlw	-8
  1520  0007AA  0906               	iorlw	6
  1521  0007AC  6EC0               	movwf	4032,c	;volatile
  1522                           
  1523                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1524  0007AE  50C0               	movf	4032,w,c	;volatile
  1525  0007B0  0BC7               	andlw	-57
  1526  0007B2  0928               	iorlw	40
  1527  0007B4  6EC0               	movwf	4032,c	;volatile
  1528                           
  1529                           ;config.c: 54: ADCON1bits.PCFG=0b1101;
  1530  0007B6  50C1               	movf	4033,w,c	;volatile
  1531  0007B8  0BF0               	andlw	-16
  1532  0007BA  090D               	iorlw	13
  1533  0007BC  6EC1               	movwf	4033,c	;volatile
  1534                           
  1535                           ;config.c: 55: TRISAbits.RA1=1;
  1536  0007BE  8292               	bsf	3986,1,c	;volatile
  1537                           
  1538                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1539  0007C0  50C0               	movf	4032,w,c	;volatile
  1540  0007C2  0BF8               	andlw	-8
  1541  0007C4  0906               	iorlw	6
  1542  0007C6  6EC0               	movwf	4032,c	;volatile
  1543                           
  1544                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1545  0007C8  9AC1               	bcf	4033,5,c	;volatile
  1546                           
  1547                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1548  0007CA  98C1               	bcf	4033,4,c	;volatile
  1549                           
  1550                           ;config.c: 60: ADCON2bits.ADFM=1;
  1551  0007CC  8EC0               	bsf	4032,7,c	;volatile
  1552                           
  1553                           ;config.c: 64: ADCON0bits.ADON=1;
  1554  0007CE  80C2               	bsf	4034,0,c	;volatile
  1555                           
  1556                           ;config.c: 66: PIE1bits.ADIE=1;
  1557  0007D0  8C9D               	bsf	3997,6,c	;volatile
  1558                           
  1559                           ;config.c: 67: PIR1bits.ADIF=0;
  1560  0007D2  9C9E               	bcf	3998,6,c	;volatile
  1561                           
  1562                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1563  0007D4  86C0               	bsf	4032,3,c	;volatile
  1564  0007D6  88C0               	bsf	4032,4,c	;volatile
  1565  0007D8  8AC0               	bsf	4032,5,c	;volatile
  1566                           
  1567                           ;config.c: 70: ADCON0bits.GO=1;
  1568  0007DA  82C2               	bsf	4034,1,c	;volatile
  1569                           
  1570                           ;config.c: 74: TRISD=0;
  1571  0007DC  0E00               	movlw	0
  1572  0007DE  6E95               	movwf	3989,c	;volatile
  1573                           
  1574                           ;config.c: 75: PORTA=0;
  1575  0007E0  0E00               	movlw	0
  1576  0007E2  6E80               	movwf	3968,c	;volatile
  1577  0007E4  0012               	return		;funcret
  1578  0007E6                     __end_of_configBoard:
  1579                           	opt stack 0
  1580                           tblptru	equ	0xFF8
  1581                           tblptrh	equ	0xFF7
  1582                           tblptrl	equ	0xFF6
  1583                           tablat	equ	0xFF5
  1584                           intcon	equ	0xFF2
  1585                           wreg	equ	0xFE8
  1586                           indf2	equ	0xFDF
  1587                           fsr2h	equ	0xFDA
  1588                           fsr2l	equ	0xFD9
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _USART_SendString *****************
  1592 ;; Defined at:
  1593 ;;		line 38 in file "USART_Source_File.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  out             2   19[COMRAM] PTR const unsigned char 
  1596 ;;		 -> main@temp(5), 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1608 ;;      Params:         2       0       0       0       0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1611 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1612 ;;Total ram usage:        2 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    2
  1615 ;; This function calls:
  1616 ;;		_USART_TransmitChar
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text10
  1623  0009CC                     __ptext10:
  1624                           	opt stack 0
  1625  0009CC                     _USART_SendString:
  1626                           	opt stack 28
  1627                           
  1628                           ;USART_Source_File.c: 40: while(*out!='\0')
  1629                           
  1630                           ;incstack = 0
  1631  0009CC  D009               	goto	l209
  1632  0009CE                     
  1633                           ;USART_Source_File.c: 41: {
  1634                           ;USART_Source_File.c: 42: USART_TransmitChar(*out);
  1635  0009CE  C014  FFD9         	movff	USART_SendString@out,fsr2l
  1636  0009D2  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  1637  0009D6  50DF               	movf	indf2,w,c
  1638  0009D8  EC15  F005         	call	_USART_TransmitChar
  1639                           
  1640                           ;USART_Source_File.c: 43: out++;
  1641  0009DC  4A14               	infsnz	USART_SendString@out,f,c
  1642  0009DE  2A15               	incf	USART_SendString@out+1,f,c
  1643  0009E0                     l209:
  1644  0009E0  C014  FFD9         	movff	USART_SendString@out,fsr2l
  1645  0009E4  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  1646  0009E8  50DF               	movf	indf2,w,c
  1647  0009EA  B4D8               	btfsc	status,2,c
  1648  0009EC  0012               	return	
  1649  0009EE  D7EF               	goto	l210
  1650  0009F0                     __end_of_USART_SendString:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           intcon	equ	0xFF2
  1657                           wreg	equ	0xFE8
  1658                           indf2	equ	0xFDF
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _USART_TransmitChar *****************
  1664 ;; Defined at:
  1665 ;;		line 20 in file "USART_Source_File.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  out             1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  out             1   18[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1682 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_USART_SendString
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text11
  1694  000A2A                     __ptext11:
  1695                           	opt stack 0
  1696  000A2A                     _USART_TransmitChar:
  1697                           	opt stack 28
  1698                           
  1699                           ;incstack = 0
  1700                           ;USART_TransmitChar@out stored from wreg
  1701  000A2A  6E13               	movwf	USART_TransmitChar@out,c
  1702  000A2C                     
  1703                           ;USART_Source_File.c: 22: while(TXIF==0);
  1704  000A2C  A89E               	btfss	3998,4,c	;volatile
  1705  000A2E  D7FE               	goto	l1581
  1706                           
  1707                           ;USART_Source_File.c: 23: TXREG=out;
  1708  000A30  C013  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  1709  000A34  0012               	return		;funcret
  1710  000A36                     __end_of_USART_TransmitChar:
  1711                           	opt stack 0
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           intcon	equ	0xFF2
  1717                           wreg	equ	0xFE8
  1718                           indf2	equ	0xFDF
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _USART_Init *****************
  1724 ;; Defined at:
  1725 ;;		line 9 in file "USART_Source_File.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  baud_rate       4   66[COMRAM] long 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  temp            3    0[BANK0 ] float 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1739 ;;      Params:         4       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1742 ;;      Totals:         4       3       0       0       0       0       0       0       0
  1743 ;;Total ram usage:        7 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		___altoft
  1748 ;;		___ftadd
  1749 ;;		___ftdiv
  1750 ;;		___fttol
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text12
  1757  000686                     __ptext12:
  1758                           	opt stack 0
  1759  000686                     _USART_Init:
  1760                           	opt stack 27
  1761                           
  1762                           ;USART_Source_File.c: 11: float temp;
  1763                           ;USART_Source_File.c: 12: TRISC6=0;
  1764                           
  1765                           ;incstack = 0
  1766  000686  9C94               	bcf	3988,6,c	;volatile
  1767                           
  1768                           ;USART_Source_File.c: 13: TRISC7=1;
  1769  000688  8E94               	bsf	3988,7,c	;volatile
  1770                           
  1771                           ;USART_Source_File.c: 14: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  1772  00068A  C043  F01B         	movff	USART_Init@baud_rate,___altoft@c
  1773  00068E  C044  F01C         	movff	USART_Init@baud_rate+1,___altoft@c+1
  1774  000692  C045  F01D         	movff	USART_Init@baud_rate+2,___altoft@c+2
  1775  000696  C046  F01E         	movff	USART_Init@baud_rate+3,___altoft@c+3
  1776  00069A  EC80  F003         	call	___altoft	;wreg free
  1777  00069E  C01B  F028         	movff	?___altoft,___ftdiv@f2
  1778  0006A2  C01C  F029         	movff	?___altoft+1,___ftdiv@f2+1
  1779  0006A6  C01D  F02A         	movff	?___altoft+2,___ftdiv@f2+2
  1780  0006AA  0E24               	movlw	36
  1781  0006AC  6E25               	movwf	___ftdiv@f1,c
  1782  0006AE  0EF4               	movlw	244
  1783  0006B0  6E26               	movwf	___ftdiv@f1+1,c
  1784  0006B2  0E47               	movlw	71
  1785  0006B4  6E27               	movwf	___ftdiv@f1+2,c
  1786  0006B6  EC59  F001         	call	___ftdiv	;wreg free
  1787  0006BA  C025  F034         	movff	?___ftdiv,___ftadd@f1
  1788  0006BE  C026  F035         	movff	?___ftdiv+1,___ftadd@f1+1
  1789  0006C2  C027  F036         	movff	?___ftdiv+2,___ftadd@f1+2
  1790  0006C6  0E00               	movlw	0
  1791  0006C8  6E37               	movwf	___ftadd@f2,c
  1792  0006CA  0E80               	movlw	128
  1793  0006CC  6E38               	movwf	___ftadd@f2+1,c
  1794  0006CE  0EBF               	movlw	191
  1795  0006D0  6E39               	movwf	___ftadd@f2+2,c
  1796  0006D2  EC09  F000         	call	___ftadd	;wreg free
  1797  0006D6  C034  F060         	movff	?___ftadd,USART_Init@temp
  1798  0006DA  C035  F061         	movff	?___ftadd+1,USART_Init@temp+1
  1799  0006DE  C036  F062         	movff	?___ftadd+2,USART_Init@temp+2
  1800                           
  1801                           ;USART_Source_File.c: 15: SPBRG=(int)temp;
  1802  0006E2  C060  F034         	movff	USART_Init@temp,___fttol@f1
  1803  0006E6  C061  F035         	movff	USART_Init@temp+1,___fttol@f1+1
  1804  0006EA  C062  F036         	movff	USART_Init@temp+2,___fttol@f1+2
  1805  0006EE  ECDF  F000         	call	___fttol	;wreg free
  1806  0006F2  5034               	movf	?___fttol,w,c
  1807  0006F4  6EAF               	movwf	4015,c	;volatile
  1808                           
  1809                           ;USART_Source_File.c: 16: TXSTA=0x20;
  1810  0006F6  0E20               	movlw	32
  1811  0006F8  6EAC               	movwf	4012,c	;volatile
  1812                           
  1813                           ;USART_Source_File.c: 17: RCSTA=0x90;
  1814  0006FA  0E90               	movlw	144
  1815  0006FC  6EAB               	movwf	4011,c	;volatile
  1816  0006FE  0012               	return		;funcret
  1817  000700                     __end_of_USART_Init:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           intcon	equ	0xFF2
  1824                           wreg	equ	0xFE8
  1825                           indf2	equ	0xFDF
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function ___fttol *****************
  1831 ;; Defined at:
  1832 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  f1              3   51[COMRAM] float 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  lval            4   61[COMRAM] unsigned long 
  1837 ;;  exp1            1   65[COMRAM] unsigned char 
  1838 ;;  sign1           1   60[COMRAM] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  4   51[COMRAM] long 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1848 ;;      Params:         4       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1851 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:       15 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_wait_in_ms
  1859 ;;		_USART_Init
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text13
  1864  0001BE                     __ptext13:
  1865                           	opt stack 0
  1866  0001BE                     ___fttol:
  1867                           	opt stack 25
  1868                           
  1869                           ;incstack = 0
  1870  0001BE  C036  F038         	movff	___fttol@f1+2,??___fttol
  1871  0001C2  6A39               	clrf	(??___fttol+1)& (0+255),c
  1872  0001C4  6A3A               	clrf	(??___fttol+2)& (0+255),c
  1873  0001C6  3435               	rlcf	___fttol@f1+1,w,c
  1874  0001C8  3638               	rlcf	??___fttol& (0+255),f,c
  1875  0001CA  E301               	bnc	u1761
  1876  0001CC  8039               	bsf	(??___fttol+1)& (0+255),0,c
  1877  0001CE                     u1761:
  1878  0001CE  5038               	movf	??___fttol,w,c
  1879  0001D0  6E42               	movwf	___fttol@exp1,c
  1880  0001D2  5042               	movf	___fttol@exp1,w,c
  1881  0001D4  A4D8               	btfss	status,2,c
  1882  0001D6  D009               	goto	l566
  1883  0001D8  0E00               	movlw	0
  1884  0001DA  6E34               	movwf	?___fttol,c
  1885  0001DC  0E00               	movlw	0
  1886  0001DE  6E35               	movwf	?___fttol+1,c
  1887  0001E0  0E00               	movlw	0
  1888  0001E2  6E36               	movwf	?___fttol+2,c
  1889  0001E4  0E00               	movlw	0
  1890  0001E6  6E37               	movwf	?___fttol+3,c
  1891  0001E8  0012               	return	
  1892  0001EA                     l566:
  1893  0001EA  0E17               	movlw	23
  1894  0001EC  6E38               	movwf	??___fttol& (0+255),c
  1895  0001EE  C034  F039         	movff	___fttol@f1,??___fttol+1
  1896  0001F2  C035  F03A         	movff	___fttol@f1+1,??___fttol+2
  1897  0001F6  C036  F03B         	movff	___fttol@f1+2,??___fttol+3
  1898  0001FA  2838               	incf	??___fttol,w,c
  1899  0001FC  6E3C               	movwf	(??___fttol+4)& (0+255),c
  1900  0001FE  D004               	goto	u1780
  1901  000200                     u1785:
  1902  000200  90D8               	bcf	status,0,c
  1903  000202  323B               	rrcf	??___fttol+3,f,c
  1904  000204  323A               	rrcf	??___fttol+2,f,c
  1905  000206  3239               	rrcf	??___fttol+1,f,c
  1906  000208                     u1780:
  1907  000208  2E3C               	decfsz	(??___fttol+4)& (0+255),f,c
  1908  00020A  D7FA               	goto	u1785
  1909  00020C  5039               	movf	??___fttol+1,w,c
  1910  00020E  6E3D               	movwf	___fttol@sign1,c
  1911  000210  8E35               	bsf	___fttol@f1+1,7,c
  1912  000212  0EFF               	movlw	255
  1913  000214  1634               	andwf	___fttol@f1,f,c
  1914  000216  0EFF               	movlw	255
  1915  000218  1635               	andwf	___fttol@f1+1,f,c
  1916  00021A  0E00               	movlw	0
  1917  00021C  1636               	andwf	___fttol@f1+2,f,c
  1918  00021E  5034               	movf	___fttol@f1,w,c
  1919  000220  6E3E               	movwf	___fttol@lval,c
  1920  000222  5035               	movf	___fttol@f1+1,w,c
  1921  000224  6E3F               	movwf	___fttol@lval+1,c
  1922  000226  5036               	movf	___fttol@f1+2,w,c
  1923  000228  6E40               	movwf	___fttol@lval+2,c
  1924  00022A  6A41               	clrf	___fttol@lval+3,c
  1925  00022C  0E8E               	movlw	142
  1926  00022E  5E42               	subwf	___fttol@exp1,f,c
  1927  000230  AE42               	btfss	___fttol@exp1,7,c
  1928  000232  D016               	goto	l568
  1929  000234  5042               	movf	___fttol@exp1,w,c
  1930  000236  0A80               	xorlw	128
  1931  000238  0F8F               	addlw	143
  1932  00023A  B0D8               	btfsc	status,0,c
  1933  00023C  D009               	goto	l569
  1934  00023E  0E00               	movlw	0
  1935  000240  6E34               	movwf	?___fttol,c
  1936  000242  0E00               	movlw	0
  1937  000244  6E35               	movwf	?___fttol+1,c
  1938  000246  0E00               	movlw	0
  1939  000248  6E36               	movwf	?___fttol+2,c
  1940  00024A  0E00               	movlw	0
  1941  00024C  6E37               	movwf	?___fttol+3,c
  1942  00024E  0012               	return	
  1943  000250                     l569:
  1944  000250  90D8               	bcf	status,0,c
  1945  000252  3241               	rrcf	___fttol@lval+3,f,c
  1946  000254  3240               	rrcf	___fttol@lval+2,f,c
  1947  000256  323F               	rrcf	___fttol@lval+1,f,c
  1948  000258  323E               	rrcf	___fttol@lval,f,c
  1949  00025A  3E42               	incfsz	___fttol@exp1,f,c
  1950  00025C  D7F9               	goto	l569
  1951  00025E  D015               	goto	u1820
  1952  000260                     l568:
  1953  000260  0E17               	movlw	23
  1954  000262  6442               	cpfsgt	___fttol@exp1,c
  1955  000264  D00F               	goto	l574
  1956  000266  0E00               	movlw	0
  1957  000268  6E34               	movwf	?___fttol,c
  1958  00026A  0E00               	movlw	0
  1959  00026C  6E35               	movwf	?___fttol+1,c
  1960  00026E  0E00               	movlw	0
  1961  000270  6E36               	movwf	?___fttol+2,c
  1962  000272  0E00               	movlw	0
  1963  000274  6E37               	movwf	?___fttol+3,c
  1964  000276  0012               	return	
  1965  000278  90D8               	bcf	status,0,c
  1966  00027A  363E               	rlcf	___fttol@lval,f,c
  1967  00027C  363F               	rlcf	___fttol@lval+1,f,c
  1968  00027E  3640               	rlcf	___fttol@lval+2,f,c
  1969  000280  3641               	rlcf	___fttol@lval+3,f,c
  1970  000282  0642               	decf	___fttol@exp1,f,c
  1971  000284                     l574:
  1972  000284  5042               	movf	___fttol@exp1,w,c
  1973  000286  A4D8               	btfss	status,2,c
  1974  000288  D7F7               	goto	l575
  1975  00028A                     u1820:
  1976  00028A  503D               	movf	___fttol@sign1,w,c
  1977  00028C  B4D8               	btfsc	status,2,c
  1978  00028E  D008               	goto	l577
  1979  000290  1E41               	comf	___fttol@lval+3,f,c
  1980  000292  1E40               	comf	___fttol@lval+2,f,c
  1981  000294  1E3F               	comf	___fttol@lval+1,f,c
  1982  000296  6C3E               	negf	___fttol@lval,c
  1983  000298  0E00               	movlw	0
  1984  00029A  223F               	addwfc	___fttol@lval+1,f,c
  1985  00029C  2240               	addwfc	___fttol@lval+2,f,c
  1986  00029E  2241               	addwfc	___fttol@lval+3,f,c
  1987  0002A0                     l577:
  1988  0002A0  C03E  F034         	movff	___fttol@lval,?___fttol
  1989  0002A4  C03F  F035         	movff	___fttol@lval+1,?___fttol+1
  1990  0002A8  C040  F036         	movff	___fttol@lval+2,?___fttol+2
  1991  0002AC  C041  F037         	movff	___fttol@lval+3,?___fttol+3
  1992  0002B0  0012               	return	
  1993  0002B2                     __end_of___fttol:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           wreg	equ	0xFE8
  2001                           indf2	equ	0xFDF
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function ___ftdiv *****************
  2007 ;; Defined at:
  2008 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  f1              3   36[COMRAM] float 
  2011 ;;  f2              3   39[COMRAM] float 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  f3              3   46[COMRAM] float 
  2014 ;;  sign            1   50[COMRAM] unsigned char 
  2015 ;;  exp             1   49[COMRAM] unsigned char 
  2016 ;;  cntr            1   45[COMRAM] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  3   36[COMRAM] float 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         6       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2029 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:       15 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    2
  2033 ;; This function calls:
  2034 ;;		___ftpack
  2035 ;; This function is called by:
  2036 ;;		_wait_in_ms
  2037 ;;		_USART_Init
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text14
  2042  0002B2                     __ptext14:
  2043                           	opt stack 0
  2044  0002B2                     ___ftdiv:
  2045                           	opt stack 24
  2046                           
  2047                           ;incstack = 0
  2048  0002B2  C027  F02B         	movff	___ftdiv@f1+2,??___ftdiv
  2049  0002B6  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2050  0002B8  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2051  0002BA  3426               	rlcf	___ftdiv@f1+1,w,c
  2052  0002BC  362B               	rlcf	??___ftdiv& (0+255),f,c
  2053  0002BE  E301               	bnc	u1701
  2054  0002C0  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2055  0002C2                     u1701:
  2056  0002C2  502B               	movf	??___ftdiv,w,c
  2057  0002C4  6E32               	movwf	___ftdiv@exp,c
  2058  0002C6  5032               	movf	___ftdiv@exp,w,c
  2059  0002C8  A4D8               	btfss	status,2,c
  2060  0002CA  D007               	goto	l530
  2061  0002CC  0E00               	movlw	0
  2062  0002CE  6E25               	movwf	?___ftdiv,c
  2063  0002D0  0E00               	movlw	0
  2064  0002D2  6E26               	movwf	?___ftdiv+1,c
  2065  0002D4  0E00               	movlw	0
  2066  0002D6  6E27               	movwf	?___ftdiv+2,c
  2067  0002D8  0012               	return	
  2068  0002DA                     l530:
  2069  0002DA  C02A  F02B         	movff	___ftdiv@f2+2,??___ftdiv
  2070  0002DE  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2071  0002E0  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2072  0002E2  3429               	rlcf	___ftdiv@f2+1,w,c
  2073  0002E4  362B               	rlcf	??___ftdiv& (0+255),f,c
  2074  0002E6  E301               	bnc	u1721
  2075  0002E8  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2076  0002EA                     u1721:
  2077  0002EA  502B               	movf	??___ftdiv,w,c
  2078  0002EC  6E33               	movwf	___ftdiv@sign,c
  2079  0002EE  5033               	movf	___ftdiv@sign,w,c
  2080  0002F0  A4D8               	btfss	status,2,c
  2081  0002F2  D007               	goto	l532
  2082  0002F4  0E00               	movlw	0
  2083  0002F6  6E25               	movwf	?___ftdiv,c
  2084  0002F8  0E00               	movlw	0
  2085  0002FA  6E26               	movwf	?___ftdiv+1,c
  2086  0002FC  0E00               	movlw	0
  2087  0002FE  6E27               	movwf	?___ftdiv+2,c
  2088  000300  0012               	return	
  2089  000302                     l532:
  2090  000302  0E00               	movlw	0
  2091  000304  6E2F               	movwf	___ftdiv@f3,c
  2092  000306  0E00               	movlw	0
  2093  000308  6E30               	movwf	___ftdiv@f3+1,c
  2094  00030A  0E00               	movlw	0
  2095  00030C  6E31               	movwf	___ftdiv@f3+2,c
  2096  00030E  5033               	movf	___ftdiv@sign,w,c
  2097  000310  0F89               	addlw	137
  2098  000312  5E32               	subwf	___ftdiv@exp,f,c
  2099  000314  C027  F033         	movff	___ftdiv@f1+2,___ftdiv@sign
  2100  000318  502A               	movf	___ftdiv@f2+2,w,c
  2101  00031A  1A33               	xorwf	___ftdiv@sign,f,c
  2102  00031C  0E80               	movlw	128
  2103  00031E  1633               	andwf	___ftdiv@sign,f,c
  2104  000320  8E26               	bsf	___ftdiv@f1+1,7,c
  2105  000322  0EFF               	movlw	255
  2106  000324  1625               	andwf	___ftdiv@f1,f,c
  2107  000326  0EFF               	movlw	255
  2108  000328  1626               	andwf	___ftdiv@f1+1,f,c
  2109  00032A  0E00               	movlw	0
  2110  00032C  1627               	andwf	___ftdiv@f1+2,f,c
  2111  00032E  8E29               	bsf	___ftdiv@f2+1,7,c
  2112  000330  0EFF               	movlw	255
  2113  000332  1628               	andwf	___ftdiv@f2,f,c
  2114  000334  0EFF               	movlw	255
  2115  000336  1629               	andwf	___ftdiv@f2+1,f,c
  2116  000338  0E00               	movlw	0
  2117  00033A  162A               	andwf	___ftdiv@f2+2,f,c
  2118  00033C  0E18               	movlw	24
  2119  00033E  6E2E               	movwf	___ftdiv@cntr,c
  2120  000340  90D8               	bcf	status,0,c
  2121  000342  362F               	rlcf	___ftdiv@f3,f,c
  2122  000344  3630               	rlcf	___ftdiv@f3+1,f,c
  2123  000346  3631               	rlcf	___ftdiv@f3+2,f,c
  2124  000348  5028               	movf	___ftdiv@f2,w,c
  2125  00034A  5C25               	subwf	___ftdiv@f1,w,c
  2126  00034C  5029               	movf	___ftdiv@f2+1,w,c
  2127  00034E  5826               	subwfb	___ftdiv@f1+1,w,c
  2128  000350  502A               	movf	___ftdiv@f2+2,w,c
  2129  000352  5827               	subwfb	___ftdiv@f1+2,w,c
  2130  000354  A0D8               	btfss	status,0,c
  2131  000356  D007               	goto	l534
  2132  000358  5028               	movf	___ftdiv@f2,w,c
  2133  00035A  5E25               	subwf	___ftdiv@f1,f,c
  2134  00035C  5029               	movf	___ftdiv@f2+1,w,c
  2135  00035E  5A26               	subwfb	___ftdiv@f1+1,f,c
  2136  000360  502A               	movf	___ftdiv@f2+2,w,c
  2137  000362  5A27               	subwfb	___ftdiv@f1+2,f,c
  2138  000364  802F               	bsf	___ftdiv@f3,0,c
  2139  000366                     l534:
  2140  000366  90D8               	bcf	status,0,c
  2141  000368  3625               	rlcf	___ftdiv@f1,f,c
  2142  00036A  3626               	rlcf	___ftdiv@f1+1,f,c
  2143  00036C  3627               	rlcf	___ftdiv@f1+2,f,c
  2144  00036E  2E2E               	decfsz	___ftdiv@cntr,f,c
  2145  000370  D7E7               	goto	l533
  2146  000372  C02F  F013         	movff	___ftdiv@f3,___ftpack@arg
  2147  000376  C030  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2148  00037A  C031  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2149  00037E  C032  F016         	movff	___ftdiv@exp,___ftpack@exp
  2150  000382  C033  F017         	movff	___ftdiv@sign,___ftpack@sign
  2151  000386  EC9F  F002         	call	___ftpack	;wreg free
  2152  00038A  C013  F025         	movff	?___ftpack,?___ftdiv
  2153  00038E  C014  F026         	movff	?___ftpack+1,?___ftdiv+1
  2154  000392  C015  F027         	movff	?___ftpack+2,?___ftdiv+2
  2155  000396  0012               	return	
  2156  000398                     __end_of___ftdiv:
  2157                           	opt stack 0
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           intcon	equ	0xFF2
  2163                           wreg	equ	0xFE8
  2164                           indf2	equ	0xFDF
  2165                           fsr2h	equ	0xFDA
  2166                           fsr2l	equ	0xFD9
  2167                           status	equ	0xFD8
  2168                           
  2169 ;; *************** function ___ftadd *****************
  2170 ;; Defined at:
  2171 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  f1              3   51[COMRAM] float 
  2174 ;;  f2              3   54[COMRAM] float 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  exp1            1   62[COMRAM] unsigned char 
  2177 ;;  exp2            1   61[COMRAM] unsigned char 
  2178 ;;  sign            1   60[COMRAM] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  3   51[COMRAM] float 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2188 ;;      Params:         6       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2191 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2192 ;;Total ram usage:       12 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    2
  2195 ;; This function calls:
  2196 ;;		___ftpack
  2197 ;; This function is called by:
  2198 ;;		_USART_Init
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text15
  2203  000012                     __ptext15:
  2204                           	opt stack 0
  2205  000012                     ___ftadd:
  2206                           	opt stack 27
  2207                           
  2208                           ;incstack = 0
  2209  000012  C036  F03A         	movff	___ftadd@f1+2,??___ftadd
  2210  000016  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2211  000018  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2212  00001A  3435               	rlcf	___ftadd@f1+1,w,c
  2213  00001C  363A               	rlcf	??___ftadd& (0+255),f,c
  2214  00001E  E301               	bnc	u1931
  2215  000020  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2216  000022                     u1931:
  2217  000022  503A               	movf	??___ftadd,w,c
  2218  000024  6E3F               	movwf	___ftadd@exp1,c
  2219  000026  C039  F03A         	movff	___ftadd@f2+2,??___ftadd
  2220  00002A  6A3B               	clrf	(??___ftadd+1)& (0+255),c
  2221  00002C  6A3C               	clrf	(??___ftadd+2)& (0+255),c
  2222  00002E  3438               	rlcf	___ftadd@f2+1,w,c
  2223  000030  363A               	rlcf	??___ftadd& (0+255),f,c
  2224  000032  E301               	bnc	u1941
  2225  000034  803B               	bsf	(??___ftadd+1)& (0+255),0,c
  2226  000036                     u1941:
  2227  000036  503A               	movf	??___ftadd,w,c
  2228  000038  6E3E               	movwf	___ftadd@exp2,c
  2229  00003A  503F               	movf	___ftadd@exp1,w,c
  2230  00003C  B4D8               	btfsc	status,2,c
  2231  00003E  D00B               	goto	u1970
  2232  000040  503E               	movf	___ftadd@exp2,w,c
  2233  000042  5C3F               	subwf	___ftadd@exp1,w,c
  2234  000044  B0D8               	btfsc	status,0,c
  2235  000046  D00E               	goto	l497
  2236  000048  503F               	movf	___ftadd@exp1,w,c
  2237  00004A  0800               	sublw	0
  2238  00004C  243E               	addwf	___ftadd@exp2,w,c
  2239  00004E  6E3A               	movwf	??___ftadd& (0+255),c
  2240  000050  0E18               	movlw	24
  2241  000052  643A               	cpfsgt	??___ftadd,c
  2242  000054  D007               	goto	l497
  2243  000056                     u1970:
  2244  000056  C037  F034         	movff	___ftadd@f2,?___ftadd
  2245  00005A  C038  F035         	movff	___ftadd@f2+1,?___ftadd+1
  2246  00005E  C039  F036         	movff	___ftadd@f2+2,?___ftadd+2
  2247  000062  0012               	return	
  2248  000064                     l497:
  2249  000064  503E               	movf	___ftadd@exp2,w,c
  2250  000066  B4D8               	btfsc	status,2,c
  2251  000068  D00B               	goto	u2000
  2252  00006A  503F               	movf	___ftadd@exp1,w,c
  2253  00006C  5C3E               	subwf	___ftadd@exp2,w,c
  2254  00006E  B0D8               	btfsc	status,0,c
  2255  000070  D00E               	goto	l501
  2256  000072  503E               	movf	___ftadd@exp2,w,c
  2257  000074  0800               	sublw	0
  2258  000076  243F               	addwf	___ftadd@exp1,w,c
  2259  000078  6E3A               	movwf	??___ftadd& (0+255),c
  2260  00007A  0E18               	movlw	24
  2261  00007C  643A               	cpfsgt	??___ftadd,c
  2262  00007E  D007               	goto	l501
  2263  000080                     u2000:
  2264  000080  C034  F034         	movff	___ftadd@f1,?___ftadd
  2265  000084  C035  F035         	movff	___ftadd@f1+1,?___ftadd+1
  2266  000088  C036  F036         	movff	___ftadd@f1+2,?___ftadd+2
  2267  00008C  0012               	return	
  2268  00008E                     l501:
  2269  00008E  0E06               	movlw	6
  2270  000090  6E3D               	movwf	___ftadd@sign,c
  2271  000092  BE36               	btfsc	___ftadd@f1+2,7,c
  2272  000094  8E3D               	bsf	___ftadd@sign,7,c
  2273  000096  BE39               	btfsc	___ftadd@f2+2,7,c
  2274  000098  8C3D               	bsf	___ftadd@sign,6,c
  2275  00009A  8E35               	bsf	___ftadd@f1+1,7,c
  2276  00009C  0EFF               	movlw	255
  2277  00009E  1634               	andwf	___ftadd@f1,f,c
  2278  0000A0  0EFF               	movlw	255
  2279  0000A2  1635               	andwf	___ftadd@f1+1,f,c
  2280  0000A4  0E00               	movlw	0
  2281  0000A6  1636               	andwf	___ftadd@f1+2,f,c
  2282  0000A8  8E38               	bsf	___ftadd@f2+1,7,c
  2283  0000AA  0EFF               	movlw	255
  2284  0000AC  1637               	andwf	___ftadd@f2,f,c
  2285  0000AE  0EFF               	movlw	255
  2286  0000B0  1638               	andwf	___ftadd@f2+1,f,c
  2287  0000B2  0E00               	movlw	0
  2288  0000B4  1639               	andwf	___ftadd@f2+2,f,c
  2289  0000B6  503E               	movf	___ftadd@exp2,w,c
  2290  0000B8  5C3F               	subwf	___ftadd@exp1,w,c
  2291  0000BA  B0D8               	btfsc	status,0,c
  2292  0000BC  D01B               	goto	l506
  2293  0000BE                     u2030:
  2294  0000BE  90D8               	bcf	status,0,c
  2295  0000C0  3637               	rlcf	___ftadd@f2,f,c
  2296  0000C2  3638               	rlcf	___ftadd@f2+1,f,c
  2297  0000C4  3639               	rlcf	___ftadd@f2+2,f,c
  2298  0000C6  063E               	decf	___ftadd@exp2,f,c
  2299  0000C8  503F               	movf	___ftadd@exp1,w,c
  2300  0000CA  183E               	xorwf	___ftadd@exp2,w,c
  2301  0000CC  B4D8               	btfsc	status,2,c
  2302  0000CE  D00D               	goto	l511
  2303  0000D0  063D               	decf	___ftadd@sign,f,c
  2304  0000D2  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  2305  0000D6  0E07               	movlw	7
  2306  0000D8  163A               	andwf	??___ftadd,f,c
  2307  0000DA  B4D8               	btfsc	status,2,c
  2308  0000DC  D006               	goto	l511
  2309  0000DE  D7EF               	goto	u2030
  2310  0000E0  90D8               	bcf	status,0,c
  2311  0000E2  3236               	rrcf	___ftadd@f1+2,f,c
  2312  0000E4  3235               	rrcf	___ftadd@f1+1,f,c
  2313  0000E6  3234               	rrcf	___ftadd@f1,f,c
  2314  0000E8  2A3F               	incf	___ftadd@exp1,f,c
  2315  0000EA                     l511:
  2316  0000EA  503E               	movf	___ftadd@exp2,w,c
  2317  0000EC  183F               	xorwf	___ftadd@exp1,w,c
  2318  0000EE  B4D8               	btfsc	status,2,c
  2319  0000F0  D01F               	goto	u2100
  2320  0000F2  D7F6               	goto	l512
  2321  0000F4                     l506:
  2322  0000F4  503F               	movf	___ftadd@exp1,w,c
  2323  0000F6  5C3E               	subwf	___ftadd@exp2,w,c
  2324  0000F8  B0D8               	btfsc	status,0,c
  2325  0000FA  D01A               	goto	u2100
  2326  0000FC                     u2070:
  2327  0000FC  90D8               	bcf	status,0,c
  2328  0000FE  3634               	rlcf	___ftadd@f1,f,c
  2329  000100  3635               	rlcf	___ftadd@f1+1,f,c
  2330  000102  3636               	rlcf	___ftadd@f1+2,f,c
  2331  000104  063F               	decf	___ftadd@exp1,f,c
  2332  000106  503F               	movf	___ftadd@exp1,w,c
  2333  000108  183E               	xorwf	___ftadd@exp2,w,c
  2334  00010A  B4D8               	btfsc	status,2,c
  2335  00010C  D00D               	goto	l520
  2336  00010E  063D               	decf	___ftadd@sign,f,c
  2337  000110  C03D  F03A         	movff	___ftadd@sign,??___ftadd
  2338  000114  0E07               	movlw	7
  2339  000116  163A               	andwf	??___ftadd,f,c
  2340  000118  B4D8               	btfsc	status,2,c
  2341  00011A  D006               	goto	l520
  2342  00011C  D7EF               	goto	u2070
  2343  00011E  90D8               	bcf	status,0,c
  2344  000120  3239               	rrcf	___ftadd@f2+2,f,c
  2345  000122  3238               	rrcf	___ftadd@f2+1,f,c
  2346  000124  3237               	rrcf	___ftadd@f2,f,c
  2347  000126  2A3E               	incf	___ftadd@exp2,f,c
  2348  000128                     l520:
  2349  000128  503E               	movf	___ftadd@exp2,w,c
  2350  00012A  183F               	xorwf	___ftadd@exp1,w,c
  2351  00012C  A4D8               	btfss	status,2,c
  2352  00012E  D7F7               	goto	l521
  2353  000130                     u2100:
  2354  000130  AE3D               	btfss	___ftadd@sign,7,c
  2355  000132  D00C               	goto	l523
  2356  000134  0EFF               	movlw	255
  2357  000136  1A34               	xorwf	___ftadd@f1,f,c
  2358  000138  0EFF               	movlw	255
  2359  00013A  1A35               	xorwf	___ftadd@f1+1,f,c
  2360  00013C  0EFF               	movlw	255
  2361  00013E  1A36               	xorwf	___ftadd@f1+2,f,c
  2362  000140  0E01               	movlw	1
  2363  000142  2634               	addwf	___ftadd@f1,f,c
  2364  000144  0E00               	movlw	0
  2365  000146  2235               	addwfc	___ftadd@f1+1,f,c
  2366  000148  0E00               	movlw	0
  2367  00014A  2236               	addwfc	___ftadd@f1+2,f,c
  2368  00014C                     l523:
  2369  00014C  AC3D               	btfss	___ftadd@sign,6,c
  2370  00014E  D00C               	goto	l524
  2371  000150  0EFF               	movlw	255
  2372  000152  1A37               	xorwf	___ftadd@f2,f,c
  2373  000154  0EFF               	movlw	255
  2374  000156  1A38               	xorwf	___ftadd@f2+1,f,c
  2375  000158  0EFF               	movlw	255
  2376  00015A  1A39               	xorwf	___ftadd@f2+2,f,c
  2377  00015C  0E01               	movlw	1
  2378  00015E  2637               	addwf	___ftadd@f2,f,c
  2379  000160  0E00               	movlw	0
  2380  000162  2238               	addwfc	___ftadd@f2+1,f,c
  2381  000164  0E00               	movlw	0
  2382  000166  2239               	addwfc	___ftadd@f2+2,f,c
  2383  000168                     l524:
  2384  000168  0E00               	movlw	0
  2385  00016A  6E3D               	movwf	___ftadd@sign,c
  2386  00016C  5034               	movf	___ftadd@f1,w,c
  2387  00016E  2637               	addwf	___ftadd@f2,f,c
  2388  000170  5035               	movf	___ftadd@f1+1,w,c
  2389  000172  2238               	addwfc	___ftadd@f2+1,f,c
  2390  000174  5036               	movf	___ftadd@f1+2,w,c
  2391  000176  2239               	addwfc	___ftadd@f2+2,f,c
  2392  000178  AE39               	btfss	___ftadd@f2+2,7,c
  2393  00017A  D00E               	goto	l525
  2394  00017C  0EFF               	movlw	255
  2395  00017E  1A37               	xorwf	___ftadd@f2,f,c
  2396  000180  0EFF               	movlw	255
  2397  000182  1A38               	xorwf	___ftadd@f2+1,f,c
  2398  000184  0EFF               	movlw	255
  2399  000186  1A39               	xorwf	___ftadd@f2+2,f,c
  2400  000188  0E01               	movlw	1
  2401  00018A  2637               	addwf	___ftadd@f2,f,c
  2402  00018C  0E00               	movlw	0
  2403  00018E  2238               	addwfc	___ftadd@f2+1,f,c
  2404  000190  0E00               	movlw	0
  2405  000192  2239               	addwfc	___ftadd@f2+2,f,c
  2406  000194  0E01               	movlw	1
  2407  000196  6E3D               	movwf	___ftadd@sign,c
  2408  000198                     l525:
  2409  000198  C037  F013         	movff	___ftadd@f2,___ftpack@arg
  2410  00019C  C038  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  2411  0001A0  C039  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  2412  0001A4  C03F  F016         	movff	___ftadd@exp1,___ftpack@exp
  2413  0001A8  C03D  F017         	movff	___ftadd@sign,___ftpack@sign
  2414  0001AC  EC9F  F002         	call	___ftpack	;wreg free
  2415  0001B0  C013  F034         	movff	?___ftpack,?___ftadd
  2416  0001B4  C014  F035         	movff	?___ftpack+1,?___ftadd+1
  2417  0001B8  C015  F036         	movff	?___ftpack+2,?___ftadd+2
  2418  0001BC  0012               	return	
  2419  0001BE                     __end_of___ftadd:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           intcon	equ	0xFF2
  2426                           wreg	equ	0xFE8
  2427                           indf2	equ	0xFDF
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8
  2431                           
  2432 ;; *************** function ___altoft *****************
  2433 ;; Defined at:
  2434 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  c               4   26[COMRAM] long 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  sign            1   35[COMRAM] unsigned char 
  2439 ;;  exp             1   34[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  3   26[COMRAM] float 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         4       0       0       0       0       0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2452 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2453 ;;Total ram usage:       10 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    2
  2456 ;; This function calls:
  2457 ;;		___ftpack
  2458 ;; This function is called by:
  2459 ;;		_USART_Init
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text16
  2464  000700                     __ptext16:
  2465                           	opt stack 0
  2466  000700                     ___altoft:
  2467                           	opt stack 27
  2468                           
  2469                           ;incstack = 0
  2470  000700  0E00               	movlw	0
  2471  000702  6E24               	movwf	___altoft@sign,c
  2472  000704  0E8E               	movlw	142
  2473  000706  6E23               	movwf	___altoft@exp,c
  2474  000708  AE1E               	btfss	___altoft@c+3,7,c
  2475  00070A  D011               	goto	l336
  2476  00070C  1E1E               	comf	___altoft@c+3,f,c
  2477  00070E  1E1D               	comf	___altoft@c+2,f,c
  2478  000710  1E1C               	comf	___altoft@c+1,f,c
  2479  000712  6C1B               	negf	___altoft@c,c
  2480  000714  0E00               	movlw	0
  2481  000716  221C               	addwfc	___altoft@c+1,f,c
  2482  000718  221D               	addwfc	___altoft@c+2,f,c
  2483  00071A  221E               	addwfc	___altoft@c+3,f,c
  2484  00071C  0E01               	movlw	1
  2485  00071E  6E24               	movwf	___altoft@sign,c
  2486  000720  D006               	goto	l336
  2487  000722  90D8               	bcf	status,0,c
  2488  000724  321E               	rrcf	___altoft@c+3,f,c
  2489  000726  321D               	rrcf	___altoft@c+2,f,c
  2490  000728  321C               	rrcf	___altoft@c+1,f,c
  2491  00072A  321B               	rrcf	___altoft@c,f,c
  2492  00072C  2A23               	incf	___altoft@exp,f,c
  2493  00072E                     l336:
  2494  00072E  0E00               	movlw	0
  2495  000730  141B               	andwf	___altoft@c,w,c
  2496  000732  6E1F               	movwf	??___altoft& (0+255),c
  2497  000734  0E00               	movlw	0
  2498  000736  141C               	andwf	___altoft@c+1,w,c
  2499  000738  6E20               	movwf	(??___altoft+1)& (0+255),c
  2500  00073A  0E00               	movlw	0
  2501  00073C  141D               	andwf	___altoft@c+2,w,c
  2502  00073E  6E21               	movwf	(??___altoft+2)& (0+255),c
  2503  000740  0EFF               	movlw	255
  2504  000742  141E               	andwf	___altoft@c+3,w,c
  2505  000744  6E22               	movwf	(??___altoft+3)& (0+255),c
  2506  000746  501F               	movf	??___altoft,w,c
  2507  000748  1020               	iorwf	??___altoft+1,w,c
  2508  00074A  1021               	iorwf	??___altoft+2,w,c
  2509  00074C  1022               	iorwf	??___altoft+3,w,c
  2510  00074E  A4D8               	btfss	status,2,c
  2511  000750  D7E8               	goto	l337
  2512  000752  C01B  F013         	movff	___altoft@c,___ftpack@arg
  2513  000756  C01C  F014         	movff	___altoft@c+1,___ftpack@arg+1
  2514  00075A  C01D  F015         	movff	___altoft@c+2,___ftpack@arg+2
  2515  00075E  C023  F016         	movff	___altoft@exp,___ftpack@exp
  2516  000762  C024  F017         	movff	___altoft@sign,___ftpack@sign
  2517  000766  EC9F  F002         	call	___ftpack	;wreg free
  2518  00076A  C013  F01B         	movff	?___ftpack,?___altoft
  2519  00076E  C014  F01C         	movff	?___ftpack+1,?___altoft+1
  2520  000772  C015  F01D         	movff	?___ftpack+2,?___altoft+2
  2521  000776  0012               	return	
  2522  000778                     __end_of___altoft:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           intcon	equ	0xFF2
  2529                           wreg	equ	0xFE8
  2530                           indf2	equ	0xFDF
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function ___ftpack *****************
  2536 ;; Defined at:
  2537 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  arg             3   18[COMRAM] unsigned um
  2540 ;;  exp             1   21[COMRAM] unsigned char 
  2541 ;;  sign            1   22[COMRAM] unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  3   18[COMRAM] float 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2553 ;;      Params:         5       0       0       0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2555 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2556 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2557 ;;Total ram usage:        8 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		___altoft
  2564 ;;		___awtoft
  2565 ;;		___ftadd
  2566 ;;		___ftdiv
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text17
  2571  00053E                     __ptext17:
  2572                           	opt stack 0
  2573  00053E                     ___ftpack:
  2574                           	opt stack 24
  2575                           
  2576                           ;incstack = 0
  2577  00053E  5016               	movf	___ftpack@exp,w,c
  2578  000540  B4D8               	btfsc	status,2,c
  2579  000542  D005               	goto	u1630
  2580  000544  5013               	movf	___ftpack@arg,w,c
  2581  000546  1014               	iorwf	___ftpack@arg+1,w,c
  2582  000548  1015               	iorwf	___ftpack@arg+2,w,c
  2583  00054A  A4D8               	btfss	status,2,c
  2584  00054C  D00C               	goto	l466
  2585  00054E                     u1630:
  2586  00054E  0E00               	movlw	0
  2587  000550  6E13               	movwf	?___ftpack,c
  2588  000552  0E00               	movlw	0
  2589  000554  6E14               	movwf	?___ftpack+1,c
  2590  000556  0E00               	movlw	0
  2591  000558  6E15               	movwf	?___ftpack+2,c
  2592  00055A  0012               	return	
  2593  00055C  2A16               	incf	___ftpack@exp,f,c
  2594  00055E  90D8               	bcf	status,0,c
  2595  000560  3215               	rrcf	___ftpack@arg+2,f,c
  2596  000562  3214               	rrcf	___ftpack@arg+1,f,c
  2597  000564  3213               	rrcf	___ftpack@arg,f,c
  2598  000566                     l466:
  2599  000566  0E00               	movlw	0
  2600  000568  1413               	andwf	___ftpack@arg,w,c
  2601  00056A  6E18               	movwf	??___ftpack& (0+255),c
  2602  00056C  0E00               	movlw	0
  2603  00056E  1414               	andwf	___ftpack@arg+1,w,c
  2604  000570  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2605  000572  0EFE               	movlw	254
  2606  000574  1415               	andwf	___ftpack@arg+2,w,c
  2607  000576  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2608  000578  5018               	movf	??___ftpack,w,c
  2609  00057A  1019               	iorwf	??___ftpack+1,w,c
  2610  00057C  101A               	iorwf	??___ftpack+2,w,c
  2611  00057E  B4D8               	btfsc	status,2,c
  2612  000580  D00C               	goto	l469
  2613  000582  D7EC               	goto	l467
  2614  000584  2A16               	incf	___ftpack@exp,f,c
  2615  000586  0E01               	movlw	1
  2616  000588  2613               	addwf	___ftpack@arg,f,c
  2617  00058A  0E00               	movlw	0
  2618  00058C  2214               	addwfc	___ftpack@arg+1,f,c
  2619  00058E  0E00               	movlw	0
  2620  000590  2215               	addwfc	___ftpack@arg+2,f,c
  2621  000592  90D8               	bcf	status,0,c
  2622  000594  3215               	rrcf	___ftpack@arg+2,f,c
  2623  000596  3214               	rrcf	___ftpack@arg+1,f,c
  2624  000598  3213               	rrcf	___ftpack@arg,f,c
  2625  00059A                     l469:
  2626  00059A  0E00               	movlw	0
  2627  00059C  1413               	andwf	___ftpack@arg,w,c
  2628  00059E  6E18               	movwf	??___ftpack& (0+255),c
  2629  0005A0  0E00               	movlw	0
  2630  0005A2  1414               	andwf	___ftpack@arg+1,w,c
  2631  0005A4  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2632  0005A6  0EFF               	movlw	255
  2633  0005A8  1415               	andwf	___ftpack@arg+2,w,c
  2634  0005AA  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2635  0005AC  5018               	movf	??___ftpack,w,c
  2636  0005AE  1019               	iorwf	??___ftpack+1,w,c
  2637  0005B0  101A               	iorwf	??___ftpack+2,w,c
  2638  0005B2  B4D8               	btfsc	status,2,c
  2639  0005B4  D006               	goto	l472
  2640  0005B6  D7E6               	goto	l470
  2641  0005B8  0616               	decf	___ftpack@exp,f,c
  2642  0005BA  90D8               	bcf	status,0,c
  2643  0005BC  3613               	rlcf	___ftpack@arg,f,c
  2644  0005BE  3614               	rlcf	___ftpack@arg+1,f,c
  2645  0005C0  3615               	rlcf	___ftpack@arg+2,f,c
  2646  0005C2                     l472:
  2647  0005C2  BE14               	btfsc	___ftpack@arg+1,7,c
  2648  0005C4  D003               	goto	u1670
  2649  0005C6  0E02               	movlw	2
  2650  0005C8  6016               	cpfslt	___ftpack@exp,c
  2651  0005CA  D7F6               	goto	l473
  2652  0005CC                     u1670:
  2653  0005CC  A016               	btfss	___ftpack@exp,0,c
  2654  0005CE  9E14               	bcf	___ftpack@arg+1,7,c
  2655  0005D0  90D8               	bcf	status,0,c
  2656  0005D2  3216               	rrcf	___ftpack@exp,f,c
  2657  0005D4  5016               	movf	___ftpack@exp,w,c
  2658  0005D6  1215               	iorwf	___ftpack@arg+2,f,c
  2659  0005D8  5017               	movf	___ftpack@sign,w,c
  2660  0005DA  A4D8               	btfss	status,2,c
  2661  0005DC  8E15               	bsf	___ftpack@arg+2,7,c
  2662  0005DE  C013  F013         	movff	___ftpack@arg,?___ftpack
  2663  0005E2  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  2664  0005E6  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  2665  0005EA  0012               	return	
  2666  0005EC                     __end_of___ftpack:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           intcon	equ	0xFF2
  2673                           wreg	equ	0xFE8
  2674                           indf2	equ	0xFDF
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _MSdelay *****************
  2680 ;; Defined at:
  2681 ;;		line 47 in file "USART_Source_File.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  val             2   18[COMRAM] unsigned int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  j               2   22[COMRAM] unsigned int 
  2686 ;;  i               2   20[COMRAM] unsigned int 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2696 ;;      Params:         2       0       0       0       0       0       0       0       0
  2697 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2699 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:        6 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text18
  2711  000940                     __ptext18:
  2712                           	opt stack 0
  2713  000940                     _MSdelay:
  2714                           	opt stack 29
  2715                           
  2716                           ;USART_Source_File.c: 49: unsigned int i,j;
  2717                           ;USART_Source_File.c: 50: for(i=0;i<=val;i++)
  2718                           
  2719                           ;incstack = 0
  2720  000940  0E00               	movlw	0
  2721  000942  6E16               	movwf	MSdelay@i+1,c
  2722  000944  0E00               	movlw	0
  2723  000946  6E15               	movwf	MSdelay@i,c
  2724  000948  D00F               	goto	l215
  2725  00094A                     
  2726                           ;USART_Source_File.c: 51: for(j=0;j<81;j++);
  2727  00094A  0E00               	movlw	0
  2728  00094C  6E18               	movwf	MSdelay@j+1,c
  2729  00094E  0E00               	movlw	0
  2730  000950  6E17               	movwf	MSdelay@j,c
  2731  000952                     l1761:
  2732  000952  5018               	movf	MSdelay@j+1,w,c
  2733  000954  E107               	bnz	l1769
  2734  000956  0E51               	movlw	81
  2735  000958  5C17               	subwf	MSdelay@j,w,c
  2736  00095A  B0D8               	btfsc	status,0,c
  2737  00095C  D003               	goto	u1420
  2738  00095E  4A17               	infsnz	MSdelay@j,f,c
  2739  000960  2A18               	incf	MSdelay@j+1,f,c
  2740  000962  D7F7               	goto	l1761
  2741  000964                     u1420:
  2742  000964                     l1769:
  2743  000964  4A15               	infsnz	MSdelay@i,f,c
  2744  000966  2A16               	incf	MSdelay@i+1,f,c
  2745  000968                     l215:
  2746  000968  5015               	movf	MSdelay@i,w,c
  2747  00096A  5C13               	subwf	MSdelay@val,w,c
  2748  00096C  5016               	movf	MSdelay@i+1,w,c
  2749  00096E  5814               	subwfb	MSdelay@val+1,w,c
  2750  000970  A0D8               	btfss	status,0,c
  2751  000972  0012               	return	
  2752  000974  D7EA               	goto	l216
  2753  000976                     __end_of_MSdelay:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           intcon	equ	0xFF2
  2760                           wreg	equ	0xFE8
  2761                           indf2	equ	0xFDF
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _ADCint *****************
  2767 ;; Defined at:
  2768 ;;		line 28 in file "funciones.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		None
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2784 ;;      Temps:         18       0       0       0       0       0       0       0       0
  2785 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:       18 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		Interrupt level 2
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	intcode
  2796  000008                     __pintcode:
  2797                           	opt stack 0
  2798  000008                     _ADCint:
  2799                           	opt stack 24
  2800                           
  2801                           ;incstack = 0
  2802  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2803  00000A  EDF6  F002         	call	int_func,f	;refresh shadow registers
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           intcon	equ	0xFF2
  2809                           wreg	equ	0xFE8
  2810                           indf2	equ	0xFDF
  2811                           fsr2h	equ	0xFDA
  2812                           fsr2l	equ	0xFD9
  2813                           status	equ	0xFD8
  2814                           
  2815                           	psect	intcode_body
  2816  0005EC                     __pintcode_body:
  2817                           	opt stack 24
  2818  0005EC                     int_func:
  2819                           	opt stack 24
  2820  0005EC  0006               	pop		; remove dummy address from shadow register refresh
  2821  0005EE  CFFA F001          	movff	pclath,??_ADCint
  2822  0005F2  CFFB F002          	movff	pclatu,??_ADCint+1
  2823  0005F6  CFE9 F003          	movff	fsr0l,??_ADCint+2
  2824  0005FA  CFEA F004          	movff	fsr0h,??_ADCint+3
  2825  0005FE  CFE1 F005          	movff	fsr1l,??_ADCint+4
  2826  000602  CFE2 F006          	movff	fsr1h,??_ADCint+5
  2827  000606  CFD9 F007          	movff	fsr2l,??_ADCint+6
  2828  00060A  CFDA F008          	movff	fsr2h,??_ADCint+7
  2829  00060E  CFF3 F009          	movff	prodl,??_ADCint+8
  2830  000612  CFF4 F00A          	movff	prodh,??_ADCint+9
  2831  000616  CFF6 F00B          	movff	tblptrl,??_ADCint+10
  2832  00061A  CFF7 F00C          	movff	tblptrh,??_ADCint+11
  2833  00061E  CFF8 F00D          	movff	tblptru,??_ADCint+12
  2834  000622  CFF5 F00E          	movff	tablat,??_ADCint+13
  2835  000626  C04D  F00F         	movff	btemp,??_ADCint+14
  2836  00062A  C04E  F010         	movff	btemp+1,??_ADCint+15
  2837  00062E  C04F  F011         	movff	btemp+2,??_ADCint+16
  2838  000632  C050  F012         	movff	btemp+3,??_ADCint+17
  2839                           
  2840                           ;funciones.c: 30: if(PIR1bits.ADIF == 1)
  2841  000636  BC9E               	btfsc	3998,6,c	;volatile
  2842                           
  2843                           ;funciones.c: 31: {
  2844                           ;funciones.c: 32: PIR1bits.ADIF = 0;
  2845  000638  9C9E               	bcf	3998,6,c	;volatile
  2846  00063A  C012  F050         	movff	??_ADCint+17,btemp+3
  2847  00063E  C011  F04F         	movff	??_ADCint+16,btemp+2
  2848  000642  C010  F04E         	movff	??_ADCint+15,btemp+1
  2849  000646  C00F  F04D         	movff	??_ADCint+14,btemp
  2850  00064A  C00E  FFF5         	movff	??_ADCint+13,tablat
  2851  00064E  C00D  FFF8         	movff	??_ADCint+12,tblptru
  2852  000652  C00C  FFF7         	movff	??_ADCint+11,tblptrh
  2853  000656  C00B  FFF6         	movff	??_ADCint+10,tblptrl
  2854  00065A  C00A  FFF4         	movff	??_ADCint+9,prodh
  2855  00065E  C009  FFF3         	movff	??_ADCint+8,prodl
  2856  000662  C008  FFDA         	movff	??_ADCint+7,fsr2h
  2857  000666  C007  FFD9         	movff	??_ADCint+6,fsr2l
  2858  00066A  C006  FFE2         	movff	??_ADCint+5,fsr1h
  2859  00066E  C005  FFE1         	movff	??_ADCint+4,fsr1l
  2860  000672  C004  FFEA         	movff	??_ADCint+3,fsr0h
  2861  000676  C003  FFE9         	movff	??_ADCint+2,fsr0l
  2862  00067A  C002  FFFB         	movff	??_ADCint+1,pclatu
  2863  00067E  C001  FFFA         	movff	??_ADCint,pclath
  2864  000682  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2865  000684  0011               	retfie		f
  2866  000686                     __end_of_ADCint:
  2867                           	opt stack 0
  2868  0000                     pclatu	equ	0xFFB
  2869                           pclath	equ	0xFFA
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodh	equ	0xFF4
  2875                           prodl	equ	0xFF3
  2876                           intcon	equ	0xFF2
  2877                           fsr0h	equ	0xFEA
  2878                           fsr0l	equ	0xFE9
  2879                           wreg	equ	0xFE8
  2880                           fsr1h	equ	0xFE2
  2881                           fsr1l	equ	0xFE1
  2882                           indf2	equ	0xFDF
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           pclatu	equ	0xFFB
  2887                           pclath	equ	0xFFA
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           fsr0h	equ	0xFEA
  2896                           fsr0l	equ	0xFE9
  2897                           wreg	equ	0xFE8
  2898                           fsr1h	equ	0xFE2
  2899                           fsr1l	equ	0xFE1
  2900                           indf2	equ	0xFDF
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8
  2904                           
  2905                           	psect	rparam
  2906  0000                     pclatu	equ	0xFFB
  2907                           pclath	equ	0xFFA
  2908                           tblptru	equ	0xFF8
  2909                           tblptrh	equ	0xFF7
  2910                           tblptrl	equ	0xFF6
  2911                           tablat	equ	0xFF5
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           fsr0h	equ	0xFEA
  2916                           fsr0l	equ	0xFE9
  2917                           wreg	equ	0xFE8
  2918                           fsr1h	equ	0xFE2
  2919                           fsr1l	equ	0xFE1
  2920                           indf2	equ	0xFDF
  2921                           fsr2h	equ	0xFDA
  2922                           fsr2l	equ	0xFD9
  2923                           status	equ	0xFD8
  2924                           
  2925                           	psect	temp
  2926  00004D                     btemp:
  2927                           	opt stack 0
  2928  00004D                     	ds	1
  2929  0000                     int$flags	set	btemp
  2930  0000                     wtemp6	set	btemp+1
  2931                           pclatu	equ	0xFFB
  2932                           pclath	equ	0xFFA
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           prodh	equ	0xFF4
  2938                           prodl	equ	0xFF3
  2939                           intcon	equ	0xFF2
  2940                           fsr0h	equ	0xFEA
  2941                           fsr0l	equ	0xFE9
  2942                           wreg	equ	0xFE8
  2943                           fsr1h	equ	0xFE2
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      76
    BANK0           160     21      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 5
		 -> main@temp(BANK0[5]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 5
		 -> main@temp(BANK0[5]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _lcd_origen->_wait_in_ms
    _lcd_iniciar->_wait_in_ms
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___awtoft->___ftpack
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _ADCint in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms

Critical Paths under _ADCint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ADCint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   68426
                                             16 BANK0      5     5      0
                            _MSdelay
                         _USART_Init
                   _USART_SendString
                        _configBoard
                        _lcd_iniciar
                         _lcd_origen
                          _lcd_texto
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            3     1      2    9288
                                             13 BANK0      3     1      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    9133
                                              6 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   27725
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    9763
                                              6 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    8981
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (4) _wait_in_ms                                          10     8      2    8981
                                             66 COMRAM     4     2      2
                                              0 BANK0      6     6      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3116
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     143
                                             19 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4   12284
                                             66 COMRAM     4     0      4
                                              0 BANK0      3     3      0
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             51 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3813
                                             36 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4578
                                             51 COMRAM    12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3187
                                             26 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ADCint                                              18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _USART_SendString
     _USART_TransmitChar
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)

 _ADCint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      15       5       13.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      20        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 12 16:59:58 2018

               ___altoft@exp 0023                ___altoft@sign 0024                           l43 04EE  
                         l46 0526                           l47 052E                  __CFG_BOR$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                 ___ftadd@exp1 003F  
               ___ftadd@exp2 003E                 ___ftadd@sign 003D                          l210 09CE  
                        l215 0968                          l127 0996                          l216 094A  
                        l128 0978                          l209 09E0                          l501 008E  
                        l511 00EA                          l336 072E                          l520 0128  
                        l512 00E0                          l248 08E8                          l337 0722  
                        l521 011E                          l506 00F4                          l530 02DA  
                        l523 014C                          l524 0168                          l532 0302  
                        l525 0198                          l533 0340                          l470 0584  
                        l534 0366                          l447 091C                          l472 05C2  
                        l473 05B8                          l466 0566                          l467 055C  
                        l469 059A                          l574 0284                          l566 01EA  
                        l575 0278                          l568 0260                          l497 0064  
                        l577 02A0                          l569 0250                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                          wreg 000FE8               ??_lcd_caracter 0068  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 002E                 ___ftdiv@sign 0033  
               __CFG_WDT$OFF 000000                         l2037 052E                         l1581 0A2C  
                       l1761 0952                         l1769 0964                         _CREN 007D5C  
                       u2000 0080                         u2100 0130                         u2030 00BE  
                       u1420 0964                         u2070 00FC                         u1701 02C2  
                       u1630 054E                         u1721 02EA                         u1820 028A  
                       u1670 05CC                         u1761 01CE                         u1905 07FE  
                       u1931 0022                         u1780 0208                         u1941 0036  
                       u1845 049C                         u1870 051C                         u1785 0200  
                       u1970 0056                         u1895 086A                         _RCIF 007CF5  
                       _TXIF 007CF4                         _main 08BC                 ___ftpack@arg 0013  
               ___ftpack@exp 0016                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr2h 000FDA                         fsr0l 000FE9                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         btemp 004D  
   __end_of_USART_SendString 09F0                         prodh 000FF4                         prodl 000FF3  
                       start 000E              __end_of_MSdelay 0976                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000         lcd_caracter@caracter 0066  
               ___fttol@exp1 0042                 ___fttol@lval 003E                __CFG_PLLDIV$2 000000  
             __CFG_CCP2MX$ON 000000                        ?_main 0001              __end_of___ftadd 01BE  
            __end_of___ftdiv 0398              __end_of___fttol 02B2                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTA 000F80                        _PORTD 000F83                __CFG_USBDIV$1 000000  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISD 000F95  
                      _TXREG 000FAD                        _TXSTA 000FAC                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                ___awtoft@sign 001E                        _nivel 004C  
              ___ftpack@sign 0017                        pclath 000FFA                        tablat 000FF5  
                      status 000FD8                        wtemp6 004E               __CFG_ICPRT$OFF 000000  
                ?_USART_Init 0043              __initialization 09A6                 __end_of_main 0908  
                     ??_main 0047                ___fttol@sign1 003D                __activetblptr 000000  
                     _ADCON0 000FC2             __end_of___altoft 0778                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _T08BIT 007EAE                       _ADCint 0008  
           __end_of___awtoft 0940             __end_of___ftpack 05EC                    ??_MSdelay 0015  
                     _OSCCON 000FD3                       _TMR0IF 007F92                       _TMR0ON 007EAF  
                     _TRISC6 007CA6                       _TRISC7 007CA7               __CFG_XINST$OFF 000000  
       __size_of_configBoard 006E         __end_of_lcd_caracter 0852         __size_of_lcd_iniciar 00D6  
                  ??___ftadd 003A               __CFG_STVREN$ON 000000                    ??___ftdiv 002B  
                  ??___fttol 0038              _cantidadBotones 0049                 __pdataCOMRAM 004C  
 __end_of_USART_TransmitChar 0A36                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8          __size_of_USART_Init 007A                   __accesstop 0060  
    __end_of__initialization 09C2                   ___altoft@c 001B              __CFG_PBADEN$OFF 000000  
                 ___ftadd@f1 0034                   ___ftadd@f2 0037                ___rparam_used 000001  
                 ___ftdiv@f1 0025                   ___ftdiv@f2 0028                   ___ftdiv@f3 002F  
                 ___awtoft@c 001B                   ___fttol@f1 0034               __pcstackCOMRAM 0001  
         __size_of_lcd_orden 006A           __size_of_lcd_texto 0030           __size_of_lcd_pulso 001E  
                    ?_ADCint 0001            ?_USART_SendString 0014           ??_USART_SendString 0016  
             lcd_orden@orden 0066                    ?___altoft 001B                    ?___awtoft 001B  
                  ?___ftpack 0013                   _lcd_origen 0A0E              __size_of_ADCint 067E  
                    _MSdelay 0940              __CFG_VREGEN$OFF 000000        __size_of_lcd_caracter 006C  
               ??_USART_Init 0047                      __Hparam 0000                      __Lparam 0000  
          __end_of_lcd_orden 08BC            __end_of_lcd_texto 09A6            __end_of_lcd_pulso 0A0E  
                    ___ftadd 0012                      ___ftdiv 02B2                      ___fttol 01BE  
                 ??___altoft 001F                      __pcinit 09A6                   ??___awtoft 001E  
                 ??___ftpack 0018                      __ramtop 0800                      __ptext0 08BC  
                    __ptext1 0976                      __ptext2 07E6                      __ptext3 0A0E  
                    __ptext4 0398                      __ptext5 0852                      __ptext6 09F0  
                    __ptext7 046E                      __ptext8 0908                      __ptext9 0778  
        USART_SendString@out 0014                    _T0CONbits 000FD5               USART_Init@temp 0060  
         __end_of_USART_Init 0700                 _lcd_caracter 07E6               __pintcode_body 05EC  
       end_of_initialization 09C2         wait_in_ms@time_in_ms 0043                      int_func 05EC  
                  _RCSTAbits 000FAB                   _wait_in_ms 046E                    _PORTDbits 000F83  
                  _TRISAbits 000F92                    _TRISDbits 000F95                  ?_lcd_origen 0001  
        USART_Init@baud_rate 0043        USART_TransmitChar@out 0013               __end_of_ADCint 0686  
                ___ftdiv@exp 0032                ??_configBoard 0013                   _puntuacion 0047  
         _USART_TransmitChar 0A2A                ??_lcd_iniciar 0047          ?_USART_TransmitChar 0001  
              __pidataCOMRAM 0A36          start_initialization 09A6         ??_USART_TransmitChar 0013  
            wait_in_ms@count 0062                     ??_ADCint 0001           wait_in_ms@count_ms 0064  
        __end_of_configBoard 07E6          __size_of_lcd_origen 001C                  ?_wait_in_ms 0043  
           __CFG_LPT1OSC$OFF 000000          __end_of_lcd_iniciar 046E    __size_of_USART_SendString 0024  
          __size_of___altoft 0078            __size_of___awtoft 0038            __size_of___ftpack 00AE  
                __pbssCOMRAM 0047                __pcstackBANK0 0060                     ?_MSdelay 0013  
                  __pintcode 0008                     ?___ftadd 0034                     ?___ftdiv 0025  
                   ?___fttol 0034                    _lcd_orden 0852                    _lcd_texto 0976  
                  _lcd_pulso 09F0          __size_of_wait_in_ms 00D0                     MSdelay@i 0015  
                   MSdelay@j 0017                  _configBoard 0778                     _PIE1bits 000F9D  
                _lcd_iniciar 0398                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
                 ?_lcd_orden 0066                   ?_lcd_texto 006D                   ?_lcd_pulso 0001  
                 _ADCON0bits 000FC2                   _ADCON1bits 000FC1                   _ADCON2bits 000FC0  
               ??_lcd_origen 0047             __size_of_MSdelay 0036               wait_in_ms@flag 0060  
                   __Hrparam 0000                     __Lrparam 0000           __end_of_lcd_origen 0A2A  
           __size_of___ftadd 01AC             __size_of___ftdiv 00E6                     ___altoft 0700  
           __size_of___fttol 00F4                     ___awtoft 0908                     ___ftpack 053E  
           _USART_SendString 09CC                     __ptext10 09CC                     __ptext11 0A2A  
                   __ptext12 0686                     __ptext13 01BE                     __ptext14 02B2  
                   __ptext15 0012                     __ptext16 0700                     __ptext17 053E  
                   __ptext18 0940              lcd_texto@cadena 006D                __size_of_main 004C  
                 MSdelay@val 0013                     _numTopos 004B                     int$flags 004D  
               ??_wait_in_ms 0045                     main@temp 0070                  ??_lcd_orden 0068  
                ??_lcd_texto 006F                  ??_lcd_pulso 0047        __CFG_CPUDIV$OSC1_PLL2 000000  
              _presionoBoton 004A                   _INTCONbits 000FF2  __size_of_USART_TransmitChar 000C  
                   intlevel2 0000           __end_of_wait_in_ms 053E                ?_lcd_caracter 0066  
         __CFG_FOSC$HSPLL_HS 000000                 ?_configBoard 0001                 ?_lcd_iniciar 0001  
                 _USART_Init 0686  
