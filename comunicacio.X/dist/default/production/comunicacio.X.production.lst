

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 14 20:33:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0013D4                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _nivel
    82  0013D4  07                 	db	7
    83  0000                     _PORTCbits	set	3970
    84  0000                     _TRISC	set	3988
    85  0000                     _OSCCON	set	4051
    86  0000                     _RCREG	set	4014
    87  0000                     _TXREG	set	4013
    88  0000                     _RCSTA	set	4011
    89  0000                     _TXSTA	set	4012
    90  0000                     _SPBRG	set	4015
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTDbits	set	3971
    93  0000                     _TRISDbits	set	3989
    94  0000                     _ADRESL	set	4035
    95  0000                     _ADRESH	set	4036
    96  0000                     _PORTA	set	3968
    97  0000                     _TRISD	set	3989
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PIE1bits	set	3997
   100  0000                     _TRISAbits	set	3986
   101  0000                     _ADCON2bits	set	4032
   102  0000                     _ADCON0bits	set	4034
   103  0000                     _ADCON0	set	4034
   104  0000                     _TRISB	set	3987
   105  0000                     _TRISA	set	3986
   106  0000                     _ADCON1bits	set	4033
   107  0000                     _T0CONbits	set	4053
   108  0000                     _INTCONbits	set	4082
   109  0000                     _TMR0L	set	4054
   110  0000                     _RCIF	set	31989
   111  0000                     _TXIF	set	31988
   112  0000                     _TRISC7	set	31911
   113  0000                     _TRISC6	set	31910
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0ON	set	32431
   116  0000                     _T08BIT	set	32430
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	opt stack 0
   121  000800  00                 	db	0
   122  000801                     STR_1:
   123  000801  6F                 	db	111	;'o'
   124  000802  6E                 	db	110	;'n'
   125  000803  00                 	db	0
   126                           
   127                           ; #config settings
   128  000804  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  0012BA                     __pcinit:
   132                           	opt stack 0
   133  0012BA                     start_initialization:
   134                           	opt stack 0
   135  0012BA                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Initialize objects allocated to COMRAM (1 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140  0012BA  0ED4               	movlw	low __pidataCOMRAM
   141  0012BC  6EF6               	movwf	tblptrl,c
   142  0012BE  0E13               	movlw	high __pidataCOMRAM
   143  0012C0  6EF7               	movwf	tblptrh,c
   144  0012C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   145  0012C4  6EF8               	movwf	tblptru,c
   146  0012C6  0009               	tblrd		*+	;fetch initializer
   147  0012C8  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   148                           
   149                           ; Clear objects allocated to COMRAM (17 bytes)
   150  0012CC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   151  0012D0  0E11               	movlw	17
   152  0012D2                     clear_0:
   153  0012D2  6AEE               	clrf	postinc0,c
   154  0012D4  06E8               	decf	wreg,f,c
   155  0012D6  E1FD               	bnz	clear_0
   156  0012D8                     end_of_initialization:
   157                           	opt stack 0
   158  0012D8                     __end_of__initialization:
   159                           	opt stack 0
   160  0012D8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   161  0012DA  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   162  0012DC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  0012DE  6EF8               	movwf	tblptru,c
   164  0012E0  0E08               	movlw	high __Lsmallconst
   165  0012E2  6EF7               	movwf	tblptrh,c
   166  0012E4  0100               	movlb	0
   167  0012E6  EF46  F007         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	bssCOMRAM
   176  00003B                     __pbssCOMRAM:
   177                           	opt stack 0
   178  00003B                     _puntuacion:
   179                           	opt stack 0
   180  00003B                     	ds	2
   181  00003D                     _cantidadBotones:
   182                           	opt stack 0
   183  00003D                     	ds	1
   184  00003E                     _presionoBoton:
   185                           	opt stack 0
   186  00003E                     	ds	1
   187  00003F                     _numTopos:
   188                           	opt stack 0
   189  00003F                     	ds	1
   190  000040                     main@temp:
   191                           	opt stack 0
   192  000040                     	ds	12
   193                           tblptru	equ	0xFF8
   194                           tblptrh	equ	0xFF7
   195                           tblptrl	equ	0xFF6
   196                           tablat	equ	0xFF5
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           	psect	dataCOMRAM
   201  00004C                     __pdataCOMRAM:
   202                           	opt stack 0
   203  00004C                     _nivel:
   204                           	opt stack 0
   205  00004C                     	ds	1
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           
   213                           	psect	cstackBANK0
   214  000060                     __pcstackBANK0:
   215                           	opt stack 0
   216  000060                     ??___ftadd:
   217  000060                     ??___fttol:
   218                           
   219                           ; 1 bytes @ 0x0
   220  000060                     	ds	3
   221  000063                     ___ftadd@sign:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x3
   225  000063                     	ds	1
   226  000064                     ___ftadd@exp2:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x4
   230  000064                     	ds	1
   231  000065                     ___ftadd@exp1:
   232                           	opt stack 0
   233  000065                     ___fttol@sign1:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237  000065                     	ds	1
   238  000066                     ___fttol@lval:
   239                           	opt stack 0
   240                           
   241                           ; 4 bytes @ 0x6
   242  000066                     	ds	4
   243  00006A                     ___fttol@exp1:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0xA
   247  00006A                     	ds	1
   248  00006B                     ??_wait_in_ms:
   249  00006B                     USART_Init@baud_rate:
   250                           	opt stack 0
   251                           
   252                           ; 4 bytes @ 0xB
   253  00006B                     	ds	2
   254  00006D                     wait_in_ms@flag:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0xD
   258  00006D                     	ds	2
   259  00006F                     wait_in_ms@count:
   260                           	opt stack 0
   261  00006F                     USART_Init@temp:
   262                           	opt stack 0
   263                           
   264                           ; 3 bytes @ 0xF
   265  00006F                     	ds	2
   266  000071                     wait_in_ms@count_ms:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x11
   270  000071                     	ds	2
   271  000073                     lcd_orden@orden:
   272                           	opt stack 0
   273  000073                     lcd_caracter@caracter:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x13
   277  000073                     	ds	2
   278  000075                     ??_lcd_orden:
   279  000075                     ??_lcd_caracter:
   280                           
   281                           ; 1 bytes @ 0x15
   282  000075                     	ds	5
   283  00007A                     lcd_texto@cadena:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x1A
   287  00007A                     	ds	2
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	cstackCOMRAM
   296  000001                     __pcstackCOMRAM:
   297                           	opt stack 0
   298  000001                     ??_ADCint:
   299  000001                     
   300                           ; 1 bytes @ 0x0
   301  000001                     	ds	18
   302  000013                     ?_strcmp:
   303                           	opt stack 0
   304  000013                     ?___ftpack:
   305                           	opt stack 0
   306  000013                     USART_TransmitChar@out:
   307                           	opt stack 0
   308  000013                     MSdelay@val:
   309                           	opt stack 0
   310  000013                     USART_ReceiveString@Input:
   311                           	opt stack 0
   312  000013                     memset@p1:
   313                           	opt stack 0
   314  000013                     strcmp@s1:
   315                           	opt stack 0
   316  000013                     ___ftpack@arg:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x12
   320  000013                     	ds	1
   321  000014                     USART_SendString@out:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x13
   325  000014                     	ds	1
   326  000015                     USART_ReceiveString@length:
   327                           	opt stack 0
   328  000015                     MSdelay@i:
   329                           	opt stack 0
   330  000015                     memset@c:
   331                           	opt stack 0
   332  000015                     strcmp@s2:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x14
   336  000015                     	ds	1
   337  000016                     ??_USART_ReceiveString:
   338  000016                     ___ftpack@exp:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x15
   342  000016                     	ds	1
   343  000017                     ??_strcmp:
   344  000017                     ___ftpack@sign:
   345                           	opt stack 0
   346  000017                     MSdelay@j:
   347                           	opt stack 0
   348  000017                     memset@n:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x16
   352  000017                     	ds	1
   353  000018                     ??___ftpack:
   354  000018                     strcmp@r:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x17
   358  000018                     	ds	1
   359  000019                     memset@p:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x18
   363  000019                     	ds	2
   364  00001B                     ?___altoft:
   365                           	opt stack 0
   366  00001B                     ?___awtoft:
   367                           	opt stack 0
   368  00001B                     USART_ReceiveString@i:
   369                           	opt stack 0
   370  00001B                     ___awtoft@c:
   371                           	opt stack 0
   372  00001B                     ___altoft@c:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x1A
   376  00001B                     	ds	2
   377  00001D                     USART_ReceiveString@temp:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x1C
   381  00001D                     	ds	1
   382  00001E                     ___awtoft@sign:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x1D
   386  00001E                     	ds	1
   387  00001F                     ??___altoft:
   388                           
   389                           ; 1 bytes @ 0x1E
   390  00001F                     	ds	4
   391  000023                     ___altoft@exp:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x22
   395  000023                     	ds	1
   396  000024                     ___altoft@sign:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x23
   400  000024                     	ds	1
   401  000025                     ?___ftdiv:
   402                           	opt stack 0
   403  000025                     ___ftdiv@f1:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x24
   407  000025                     	ds	3
   408  000028                     ___ftdiv@f2:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x27
   412  000028                     	ds	3
   413  00002B                     ??___ftdiv:
   414                           
   415                           ; 1 bytes @ 0x2A
   416  00002B                     	ds	3
   417  00002E                     ___ftdiv@cntr:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x2D
   421  00002E                     	ds	1
   422  00002F                     ___ftdiv@f3:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x2E
   426  00002F                     	ds	3
   427  000032                     ___ftdiv@exp:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x31
   431  000032                     	ds	1
   432  000033                     ___ftdiv@sign:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x32
   436  000033                     	ds	1
   437  000034                     ?___ftadd:
   438                           	opt stack 0
   439  000034                     ?___fttol:
   440                           	opt stack 0
   441  000034                     ___ftadd@f1:
   442                           	opt stack 0
   443  000034                     ___fttol@f1:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0x33
   447  000034                     	ds	3
   448  000037                     ___ftadd@f2:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0x36
   452  000037                     	ds	1
   453  000038                     wait_in_ms@time_in_ms:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x37
   457  000038                     	ds	2
   458  00003A                     ??_lcd_texto:
   459  00003A                     
   460                           ; 1 bytes @ 0x39
   461  00003A                     	ds	1
   462  00003B                     tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           
   469                           ; 1 bytes @ 0x3A
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 33 in file "comuni.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   489 ;;      Params:         0       0       0       0       0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels required when called:    7
   495 ;; This function calls:
   496 ;;		_MSdelay
   497 ;;		_USART_Init
   498 ;;		_USART_ReceiveString
   499 ;;		_USART_SendString
   500 ;;		_configBoard
   501 ;;		_lcd_iniciar
   502 ;;		_lcd_limpiar
   503 ;;		_lcd_origen
   504 ;;		_lcd_texto
   505 ;;		_memset
   506 ;;		_strcmp
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text0
   513  000E8C                     __ptext0:
   514                           	opt stack 0
   515  000E8C                     _main:
   516                           	opt stack 24
   517                           
   518                           ;comuni.c: 35: OSCCON=0x72;
   519                           
   520                           ;incstack = 0
   521  000E8C  0E72               	movlw	114
   522  000E8E  6ED3               	movwf	4051,c	;volatile
   523                           
   524                           ;comuni.c: 39: TRISC=0;
   525  000E90  0E00               	movlw	0
   526  000E92  6E94               	movwf	3988,c	;volatile
   527                           
   528                           ;comuni.c: 40: configBoard();
   529  000E94  EC5E  F008         	call	_configBoard	;wreg free
   530                           
   531                           ;comuni.c: 41: lcd_iniciar();
   532  000E98  ECC9  F005         	call	_lcd_iniciar	;wreg free
   533                           
   534                           ;comuni.c: 42: USART_Init(9600);
   535  000E9C  0E80               	movlw	128
   536  000E9E  0100               	movlb	0	; () banked
   537  000EA0  6F6B               	movwf	USART_Init@baud_rate& (0+255),b
   538  000EA2  0E25               	movlw	37
   539  000EA4  6F6C               	movwf	(USART_Init@baud_rate+1)& (0+255),b
   540  000EA6  0E00               	movlw	0
   541  000EA8  6F6D               	movwf	(USART_Init@baud_rate+2)& (0+255),b
   542  000EAA  0E00               	movlw	0
   543  000EAC  6F6E               	movwf	(USART_Init@baud_rate+3)& (0+255),b
   544  000EAE  ECE5  F007         	call	_USART_Init	;wreg free
   545                           
   546                           ;comuni.c: 43: MSdelay(50);
   547  000EB2  0E00               	movlw	0
   548  000EB4  6E14               	movwf	MSdelay@val+1,c
   549  000EB6  0E32               	movlw	50
   550  000EB8  6E13               	movwf	MSdelay@val,c
   551  000EBA  EC42  F009         	call	_MSdelay	;wreg free
   552  000EBE                     
   553                           ;comuni.c: 45: lcd_origen();
   554  000EBE  ECC4  F009         	call	_lcd_origen	;wreg free
   555                           
   556                           ;comuni.c: 48: static char temp[12];
   557                           ;comuni.c: 53: USART_ReceiveString(&temp, sizeof temp );
   558  000EC2  0E40               	movlw	low main@temp
   559  000EC4  6E13               	movwf	USART_ReceiveString@Input,c
   560  000EC6  0E00               	movlw	high main@temp
   561  000EC8  6E14               	movwf	USART_ReceiveString@Input+1,c
   562  000ECA  0E0C               	movlw	12
   563  000ECC  6E15               	movwf	USART_ReceiveString@length,c
   564  000ECE  ECF3  F006         	call	_USART_ReceiveString	;wreg free
   565                           
   566                           ;comuni.c: 55: USART_SendString(temp);
   567  000ED2  0E40               	movlw	low main@temp
   568  000ED4  6E14               	movwf	USART_SendString@out,c
   569  000ED6  0E00               	movlw	high main@temp
   570  000ED8  6E15               	movwf	USART_SendString@out+1,c
   571  000EDA  ECA3  F009         	call	_USART_SendString	;wreg free
   572                           
   573                           ;comuni.c: 56: lcd_limpiar();
   574  000EDE  ECD2  F009         	call	_lcd_limpiar	;wreg free
   575                           
   576                           ;comuni.c: 57: lcd_texto(temp);
   577  000EE2  0E40               	movlw	low main@temp
   578  000EE4  0100               	movlb	0	; () banked
   579  000EE6  6F7A               	movwf	lcd_texto@cadena& (0+255),b
   580  000EE8  0E00               	movlw	high main@temp
   581  000EEA  6F7B               	movwf	(lcd_texto@cadena+1)& (0+255),b
   582  000EEC  EC75  F009         	call	_lcd_texto	;wreg free
   583                           
   584                           ;comuni.c: 58: if(!strcmp("on",temp)){
   585  000EF0  0E01               	movlw	low STR_1
   586  000EF2  6E13               	movwf	strcmp@s1,c
   587  000EF4  0E08               	movlw	high STR_1
   588  000EF6  6E14               	movwf	strcmp@s1+1,c
   589  000EF8  0E40               	movlw	low main@temp
   590  000EFA  6E15               	movwf	strcmp@s2,c
   591  000EFC  0E00               	movlw	high main@temp
   592  000EFE  6E16               	movwf	strcmp@s2+1,c
   593  000F00  EC00  F009         	call	_strcmp	;wreg free
   594  000F04  5013               	movf	?_strcmp,w,c
   595  000F06  1014               	iorwf	?_strcmp+1,w,c
   596  000F08  A4D8               	btfss	status,2,c
   597  000F0A  D002               	goto	l262
   598                           
   599                           ;comuni.c: 59: PORTCbits.RC2=1;
   600  000F0C  8482               	bsf	3970,2,c	;volatile
   601                           
   602                           ;comuni.c: 60: }
   603  000F0E  D001               	goto	l263
   604  000F10                     l262:
   605                           
   606                           ;comuni.c: 61: else{
   607                           ;comuni.c: 62: PORTCbits.RC2=0;
   608  000F10  9482               	bcf	3970,2,c	;volatile
   609  000F12                     l263:
   610                           
   611                           ;comuni.c: 63: }
   612                           ;comuni.c: 64: memset(temp, 0, sizeof temp);
   613  000F12  0E40               	movlw	low main@temp
   614  000F14  6E13               	movwf	memset@p1,c
   615  000F16  0E00               	movlw	high main@temp
   616  000F18  6E14               	movwf	memset@p1+1,c
   617  000F1A  0E00               	movlw	0
   618  000F1C  6E16               	movwf	memset@c+1,c
   619  000F1E  0E00               	movlw	0
   620  000F20  6E15               	movwf	memset@c,c
   621  000F22  0E00               	movlw	0
   622  000F24  6E18               	movwf	memset@n+1,c
   623  000F26  0E0C               	movlw	12
   624  000F28  6E17               	movwf	memset@n,c
   625  000F2A  EC8D  F009         	call	_memset	;wreg free
   626  000F2E  D7C7               	goto	l259
   627  000F30                     __end_of_main:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           status	equ	0xFD8
   636                           
   637 ;; *************** function _strcmp *****************
   638 ;; Defined at:
   639 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  s1              2   18[COMRAM] PTR const unsigned char 
   642 ;;		 -> STR_1(3), 
   643 ;;  s2              2   20[COMRAM] PTR const unsigned char 
   644 ;;		 -> main@temp(12), 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  r               1   23[COMRAM] char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  2   18[COMRAM] int 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   656 ;;      Params:         4       0       0       0       0       0       0       0       0
   657 ;;      Locals:         1       0       0       0       0       0       0       0       0
   658 ;;      Temps:          1       0       0       0       0       0       0       0       0
   659 ;;      Totals:         6       0       0       0       0       0       0       0       0
   660 ;;Total ram usage:        6 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text1
   671  001200                     __ptext1:
   672                           	opt stack 0
   673  001200                     _strcmp:
   674                           	opt stack 29
   675                           
   676                           ;incstack = 0
   677  001200  D004               	goto	l820
   678  001202  4A13               	infsnz	strcmp@s1,f,c
   679  001204  2A14               	incf	strcmp@s1+1,f,c
   680  001206  4A15               	infsnz	strcmp@s2,f,c
   681  001208  2A16               	incf	strcmp@s2+1,f,c
   682  00120A                     l820:
   683  00120A  C013  FFF6         	movff	strcmp@s1,tblptrl
   684  00120E  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   685  001212                     	if	0	;tblptru may be non-zero
   686  001212                     	endif
   687  001212                     	if	0	;tblptru may be non-zero
   688  001212                     	endif
   689  001212  0008               	tblrd		*
   690  001214  CFF5 F017          	movff	tablat,??_strcmp
   691  001218  C015  FFD9         	movff	strcmp@s2,fsr2l
   692  00121C  C016  FFDA         	movff	strcmp@s2+1,fsr2h
   693  001220  50DF               	movf	indf2,w,c
   694  001222  0800               	sublw	0
   695  001224  2417               	addwf	??_strcmp,w,c
   696  001226  6E18               	movwf	strcmp@r,c
   697  001228  5018               	movf	strcmp@r,w,c
   698  00122A  A4D8               	btfss	status,2,c
   699  00122C  D009               	goto	u1540
   700  00122E  C013  FFF6         	movff	strcmp@s1,tblptrl
   701  001232  C014  FFF7         	movff	strcmp@s1+1,tblptrh
   702  001236                     	if	0	;tblptru may be non-zero
   703  001236                     	endif
   704  001236                     	if	0	;tblptru may be non-zero
   705  001236                     	endif
   706  001236  0008               	tblrd		*
   707  001238  50F5               	movf	tablat,w,c
   708  00123A  0900               	iorlw	0
   709  00123C  A4D8               	btfss	status,2,c
   710  00123E  D7E1               	goto	l821
   711  001240                     u1540:
   712  001240  5018               	movf	strcmp@r,w,c
   713  001242  6E13               	movwf	?_strcmp,c
   714  001244  6A14               	clrf	?_strcmp+1,c
   715  001246  BE13               	btfsc	?_strcmp,7,c
   716  001248  0614               	decf	?_strcmp+1,f,c
   717  00124A  0012               	return	
   718  00124C                     __end_of_strcmp:
   719                           	opt stack 0
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           indf2	equ	0xFDF
   727                           fsr2h	equ	0xFDA
   728                           fsr2l	equ	0xFD9
   729                           status	equ	0xFD8
   730                           
   731 ;; *************** function _memset *****************
   732 ;; Defined at:
   733 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  p1              2   18[COMRAM] PTR void 
   736 ;;		 -> main@temp(12), 
   737 ;;  c               2   20[COMRAM] int 
   738 ;;  n               2   22[COMRAM] unsigned int 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  p               2   24[COMRAM] PTR unsigned char 
   741 ;;		 -> main@temp(12), 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  2   18[COMRAM] PTR void 
   744 ;; Registers used:
   745 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         6       0       0       0       0       0       0       0       0
   752 ;;      Locals:         2       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         8       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        8 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text2
   766  00131A                     __ptext2:
   767                           	opt stack 0
   768  00131A                     _memset:
   769                           	opt stack 29
   770                           
   771                           ;incstack = 0
   772  00131A  C013  F019         	movff	memset@p1,memset@p
   773  00131E  C014  F01A         	movff	memset@p1+1,memset@p+1
   774  001322  D008               	goto	l694
   775  001324                     l1858:
   776  001324  C019  FFD9         	movff	memset@p,fsr2l
   777  001328  C01A  FFDA         	movff	memset@p+1,fsr2h
   778  00132C  C015  FFDF         	movff	memset@c,indf2
   779  001330  4A19               	infsnz	memset@p,f,c
   780  001332  2A1A               	incf	memset@p+1,f,c
   781  001334                     l694:
   782  001334  0617               	decf	memset@n,f,c
   783  001336  A0D8               	btfss	status,0,c
   784  001338  0618               	decf	memset@n+1,f,c
   785  00133A  2817               	incf	memset@n,w,c
   786  00133C  E1F3               	bnz	l1858
   787  00133E  2818               	incf	memset@n+1,w,c
   788  001340  B4D8               	btfsc	status,2,c
   789  001342  0012               	return	
   790  001344  D7EF               	goto	l695
   791  001346                     __end_of_memset:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           indf2	equ	0xFDF
   800                           fsr2h	equ	0xFDA
   801                           fsr2l	equ	0xFD9
   802                           status	equ	0xFD8
   803                           
   804 ;; *************** function _lcd_texto *****************
   805 ;; Defined at:
   806 ;;		line 296 in file "lcd.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  cadena          2   26[BANK0 ] PTR unsigned char 
   809 ;;		 -> main@temp(12), 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         0       2       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0       0       0       0       0
   824 ;;      Totals:         1       2       0       0       0       0       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    6
   828 ;; This function calls:
   829 ;;		_lcd_caracter
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text3
   836  0012EA                     __ptext3:
   837                           	opt stack 0
   838  0012EA                     _lcd_texto:
   839                           	opt stack 24
   840                           
   841                           ;lcd.c: 297: while(*cadena != 0x00){
   842                           
   843                           ;incstack = 0
   844  0012EA  D00F               	goto	l127
   845  0012EC                     
   846                           ;lcd.c: 298: lcd_caracter(*cadena);
   847  0012EC  C07A  FFD9         	movff	lcd_texto@cadena,fsr2l
   848  0012F0  C07B  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   849  0012F4  50DF               	movf	indf2,w,c
   850  0012F6  6E3A               	movwf	??_lcd_texto& (0+255),c
   851  0012F8  503A               	movf	??_lcd_texto,w,c
   852  0012FA  0100               	movlb	0	; () banked
   853  0012FC  6F73               	movwf	lcd_caracter@caracter& (0+255),b
   854  0012FE  6B74               	clrf	(lcd_caracter@caracter+1)& (0+255),b
   855  001300  EC95  F008         	call	_lcd_caracter	;wreg free
   856                           
   857                           ;lcd.c: 299: cadena++;
   858  001304  0100               	movlb	0	; () banked
   859  001306  4B7A               	infsnz	lcd_texto@cadena& (0+255),f,b
   860  001308  2B7B               	incf	(lcd_texto@cadena+1)& (0+255),f,b
   861  00130A                     l127:
   862                           
   863                           ; BSR set to: 0
   864  00130A  C07A  FFD9         	movff	lcd_texto@cadena,fsr2l
   865  00130E  C07B  FFDA         	movff	lcd_texto@cadena+1,fsr2h
   866  001312  50DF               	movf	indf2,w,c
   867  001314  B4D8               	btfsc	status,2,c
   868  001316  0012               	return	
   869  001318  D7E9               	goto	l128
   870  00131A                     __end_of_lcd_texto:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           indf2	equ	0xFDF
   879                           fsr2h	equ	0xFDA
   880                           fsr2l	equ	0xFD9
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _lcd_caracter *****************
   884 ;; Defined at:
   885 ;;		line 286 in file "lcd.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  caracter        2   19[BANK0 ] unsigned int 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         0       2       0       0       0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0
   901 ;;      Temps:          0       5       0       0       0       0       0       0       0
   902 ;;      Totals:         0       7       0       0       0       0       0       0       0
   903 ;;Total ram usage:        7 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    5
   906 ;; This function calls:
   907 ;;		_lcd_pulso
   908 ;; This function is called by:
   909 ;;		_lcd_texto
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text4
   914  00112A                     __ptext4:
   915                           	opt stack 0
   916  00112A                     _lcd_caracter:
   917                           	opt stack 24
   918                           
   919                           ;lcd.c: 287: PORTDbits.RD1=1;
   920                           
   921                           ;incstack = 0
   922  00112A  8283               	bsf	3971,1,c	;volatile
   923                           
   924                           ;lcd.c: 289: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   925  00112C  CF83 F075          	movff	3971,??_lcd_caracter	;volatile
   926  001130  0E0F               	movlw	15
   927  001132  0100               	movlb	0	; () banked
   928  001134  1775               	andwf	??_lcd_caracter& (0+255),f,b
   929  001136  C073  F076         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   930  00113A  C074  F077         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   931  00113E  0E04               	movlw	4
   932  001140  6F78               	movwf	(??_lcd_caracter+3)& (0+255),b
   933  001142                     u2035:
   934  001142  90D8               	bcf	status,0,c
   935  001144  3377               	rrcf	(??_lcd_caracter+2)& (0+255),f,b
   936  001146  3376               	rrcf	(??_lcd_caracter+1)& (0+255),f,b
   937  001148  2F78               	decfsz	(??_lcd_caracter+3)& (0+255),f,b
   938  00114A  D7FB               	goto	u2035
   939  00114C  0E0F               	movlw	15
   940  00114E  1776               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   941  001150  3883               	swapf	3971,w,c	;volatile
   942  001152  0B0F               	andlw	15
   943  001154  0B0F               	andlw	15
   944  001156  090F               	iorlw	15
   945  001158  1576               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   946  00115A  6F79               	movwf	(??_lcd_caracter+4)& (0+255),b
   947  00115C  3979               	swapf	(??_lcd_caracter+4)& (0+255),w,b
   948  00115E  0BF0               	andlw	240
   949  001160  1175               	iorwf	??_lcd_caracter& (0+255),w,b
   950  001162  6E83               	movwf	3971,c	;volatile
   951                           
   952                           ; BSR set to: 0
   953                           ;lcd.c: 290: lcd_pulso();
   954  001164  ECB5  F009         	call	_lcd_pulso	;wreg free
   955                           
   956                           ;lcd.c: 291: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   957  001168  CF83 F075          	movff	3971,??_lcd_caracter	;volatile
   958  00116C  0E0F               	movlw	15
   959  00116E  0100               	movlb	0	; () banked
   960  001170  1775               	andwf	??_lcd_caracter& (0+255),f,b
   961  001172  C073  F076         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   962  001176  0E0F               	movlw	15
   963  001178  1776               	andwf	(??_lcd_caracter+1)& (0+255),f,b
   964  00117A  3883               	swapf	3971,w,c	;volatile
   965  00117C  0B0F               	andlw	15
   966  00117E  0B0F               	andlw	15
   967  001180  090F               	iorlw	15
   968  001182  1576               	andwf	(??_lcd_caracter+1)& (0+255),w,b
   969  001184  6F77               	movwf	(??_lcd_caracter+2)& (0+255),b
   970  001186  3977               	swapf	(??_lcd_caracter+2)& (0+255),w,b
   971  001188  0BF0               	andlw	240
   972  00118A  1175               	iorwf	??_lcd_caracter& (0+255),w,b
   973  00118C  6E83               	movwf	3971,c	;volatile
   974                           
   975                           ;lcd.c: 292: lcd_pulso();
   976  00118E  ECB5  F009         	call	_lcd_pulso	;wreg free
   977                           
   978                           ;lcd.c: 293: PORTDbits.RD1=0;
   979  001192  9283               	bcf	3971,1,c	;volatile
   980  001194  0012               	return		;funcret
   981  001196                     __end_of_lcd_caracter:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           indf2	equ	0xFDF
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function _lcd_origen *****************
   995 ;; Defined at:
   996 ;;		line 308 in file "lcd.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    6
  1017 ;; This function calls:
  1018 ;;		_lcd_orden
  1019 ;;		_wait_in_ms
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;;		_lcd_ubicarXY
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text5
  1027  001388                     __ptext5:
  1028                           	opt stack 0
  1029  001388                     _lcd_origen:
  1030                           	opt stack 24
  1031                           
  1032                           ;lcd.c: 309: lcd_orden(0x02);
  1033                           
  1034                           ;incstack = 0
  1035  001388  0E00               	movlw	0
  1036  00138A  0100               	movlb	0	; () banked
  1037  00138C  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1038  00138E  0E02               	movlw	2
  1039  001390  6F73               	movwf	lcd_orden@orden& (0+255),b
  1040  001392  ECCB  F008         	call	_lcd_orden	;wreg free
  1041                           
  1042                           ;lcd.c: 310: wait_in_ms(4);
  1043  001396  0E00               	movlw	0
  1044  001398  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1045  00139A  0E04               	movlw	4
  1046  00139C  6E38               	movwf	wait_in_ms@time_in_ms,c
  1047  00139E  EC34  F006         	call	_wait_in_ms	;wreg free
  1048  0013A2  0012               	return		;funcret
  1049  0013A4                     __end_of_lcd_origen:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           indf2	equ	0xFDF
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _lcd_limpiar *****************
  1063 ;; Defined at:
  1064 ;;		line 303 in file "lcd.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    6
  1085 ;; This function calls:
  1086 ;;		_lcd_orden
  1087 ;;		_wait_in_ms
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text6
  1094  0013A4                     __ptext6:
  1095                           	opt stack 0
  1096  0013A4                     _lcd_limpiar:
  1097                           	opt stack 24
  1098                           
  1099                           ;lcd.c: 304: lcd_orden(0x01);
  1100                           
  1101                           ;incstack = 0
  1102  0013A4  0E00               	movlw	0
  1103  0013A6  0100               	movlb	0	; () banked
  1104  0013A8  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1105  0013AA  0E01               	movlw	1
  1106  0013AC  6F73               	movwf	lcd_orden@orden& (0+255),b
  1107  0013AE  ECCB  F008         	call	_lcd_orden	;wreg free
  1108                           
  1109                           ;lcd.c: 305: wait_in_ms(2);
  1110  0013B2  0E00               	movlw	0
  1111  0013B4  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1112  0013B6  0E02               	movlw	2
  1113  0013B8  6E38               	movwf	wait_in_ms@time_in_ms,c
  1114  0013BA  EC34  F006         	call	_wait_in_ms	;wreg free
  1115  0013BE  0012               	return		;funcret
  1116  0013C0                     __end_of_lcd_limpiar:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           indf2	equ	0xFDF
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _lcd_iniciar *****************
  1130 ;; Defined at:
  1131 ;;		line 224 in file "lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    6
  1152 ;; This function calls:
  1153 ;;		_lcd_orden
  1154 ;;		_lcd_pulso
  1155 ;;		_wait_in_ms
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text7
  1162  000B92                     __ptext7:
  1163                           	opt stack 0
  1164  000B92                     _lcd_iniciar:
  1165                           	opt stack 24
  1166                           
  1167                           ;lcd.c: 225: TRISDbits.TRISD1=0;
  1168                           
  1169                           ;incstack = 0
  1170  000B92  9295               	bcf	3989,1,c	;volatile
  1171                           
  1172                           ;lcd.c: 226: TRISDbits.TRISD2=0;
  1173  000B94  9495               	bcf	3989,2,c	;volatile
  1174                           
  1175                           ;lcd.c: 227: TRISDbits.TRISD3=0;
  1176  000B96  9695               	bcf	3989,3,c	;volatile
  1177                           
  1178                           ;lcd.c: 228: TRISDbits.TRISD4=0;
  1179  000B98  9895               	bcf	3989,4,c	;volatile
  1180                           
  1181                           ;lcd.c: 229: TRISDbits.TRISD5=0;
  1182  000B9A  9A95               	bcf	3989,5,c	;volatile
  1183                           
  1184                           ;lcd.c: 230: TRISDbits.TRISD6=0;
  1185  000B9C  9C95               	bcf	3989,6,c	;volatile
  1186                           
  1187                           ;lcd.c: 231: TRISDbits.TRISD7=0;
  1188  000B9E  9E95               	bcf	3989,7,c	;volatile
  1189                           
  1190                           ;lcd.c: 233: PORTDbits.RD1=0;
  1191  000BA0  9283               	bcf	3971,1,c	;volatile
  1192                           
  1193                           ;lcd.c: 234: PORTDbits.RD2=0;
  1194  000BA2  9483               	bcf	3971,2,c	;volatile
  1195                           
  1196                           ;lcd.c: 235: PORTDbits.RD3=0;
  1197  000BA4  9683               	bcf	3971,3,c	;volatile
  1198                           
  1199                           ;lcd.c: 236: PORTDbits.RD4=0;
  1200  000BA6  9883               	bcf	3971,4,c	;volatile
  1201                           
  1202                           ;lcd.c: 237: PORTDbits.RD5=0;
  1203  000BA8  9A83               	bcf	3971,5,c	;volatile
  1204                           
  1205                           ;lcd.c: 238: PORTDbits.RD6=0;
  1206  000BAA  9C83               	bcf	3971,6,c	;volatile
  1207                           
  1208                           ;lcd.c: 239: PORTDbits.RD7=0;
  1209  000BAC  9E83               	bcf	3971,7,c	;volatile
  1210                           
  1211                           ;lcd.c: 241: wait_in_ms(20);
  1212  000BAE  0E00               	movlw	0
  1213  000BB0  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1214  000BB2  0E14               	movlw	20
  1215  000BB4  6E38               	movwf	wait_in_ms@time_in_ms,c
  1216  000BB6  EC34  F006         	call	_wait_in_ms	;wreg free
  1217                           
  1218                           ;lcd.c: 242: PORTD=0X03<<4;
  1219  000BBA  0E30               	movlw	48
  1220  000BBC  6E83               	movwf	3971,c	;volatile
  1221                           
  1222                           ;lcd.c: 243: lcd_pulso();
  1223  000BBE  ECB5  F009         	call	_lcd_pulso	;wreg free
  1224                           
  1225                           ;lcd.c: 244: wait_in_ms(4);
  1226  000BC2  0E00               	movlw	0
  1227  000BC4  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1228  000BC6  0E04               	movlw	4
  1229  000BC8  6E38               	movwf	wait_in_ms@time_in_ms,c
  1230  000BCA  EC34  F006         	call	_wait_in_ms	;wreg free
  1231                           
  1232                           ;lcd.c: 246: PORTD=0X03<<4;
  1233  000BCE  0E30               	movlw	48
  1234  000BD0  6E83               	movwf	3971,c	;volatile
  1235                           
  1236                           ;lcd.c: 247: lcd_pulso();
  1237  000BD2  ECB5  F009         	call	_lcd_pulso	;wreg free
  1238                           
  1239                           ;lcd.c: 248: wait_in_ms(4);
  1240  000BD6  0E00               	movlw	0
  1241  000BD8  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1242  000BDA  0E04               	movlw	4
  1243  000BDC  6E38               	movwf	wait_in_ms@time_in_ms,c
  1244  000BDE  EC34  F006         	call	_wait_in_ms	;wreg free
  1245                           
  1246                           ;lcd.c: 250: PORTD=0X03<<4;
  1247  000BE2  0E30               	movlw	48
  1248  000BE4  6E83               	movwf	3971,c	;volatile
  1249                           
  1250                           ;lcd.c: 251: lcd_pulso();
  1251  000BE6  ECB5  F009         	call	_lcd_pulso	;wreg free
  1252                           
  1253                           ;lcd.c: 252: wait_in_ms(1);
  1254  000BEA  0E00               	movlw	0
  1255  000BEC  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1256  000BEE  0E01               	movlw	1
  1257  000BF0  6E38               	movwf	wait_in_ms@time_in_ms,c
  1258  000BF2  EC34  F006         	call	_wait_in_ms	;wreg free
  1259                           
  1260                           ;lcd.c: 254: PORTD=0X02<<4;
  1261  000BF6  0E20               	movlw	32
  1262  000BF8  6E83               	movwf	3971,c	;volatile
  1263                           
  1264                           ;lcd.c: 255: lcd_pulso();
  1265  000BFA  ECB5  F009         	call	_lcd_pulso	;wreg free
  1266                           
  1267                           ;lcd.c: 257: lcd_orden(0x28);
  1268  000BFE  0E00               	movlw	0
  1269  000C00  0100               	movlb	0	; () banked
  1270  000C02  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1271  000C04  0E28               	movlw	40
  1272  000C06  6F73               	movwf	lcd_orden@orden& (0+255),b
  1273  000C08  ECCB  F008         	call	_lcd_orden	;wreg free
  1274                           
  1275                           ;lcd.c: 258: wait_in_ms(8);
  1276  000C0C  0E00               	movlw	0
  1277  000C0E  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1278  000C10  0E08               	movlw	8
  1279  000C12  6E38               	movwf	wait_in_ms@time_in_ms,c
  1280  000C14  EC34  F006         	call	_wait_in_ms	;wreg free
  1281                           
  1282                           ;lcd.c: 260: lcd_orden(0x0c);
  1283  000C18  0E00               	movlw	0
  1284  000C1A  0100               	movlb	0	; () banked
  1285  000C1C  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1286  000C1E  0E0C               	movlw	12
  1287  000C20  6F73               	movwf	lcd_orden@orden& (0+255),b
  1288  000C22  ECCB  F008         	call	_lcd_orden	;wreg free
  1289                           
  1290                           ;lcd.c: 261: wait_in_ms(8);
  1291  000C26  0E00               	movlw	0
  1292  000C28  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1293  000C2A  0E08               	movlw	8
  1294  000C2C  6E38               	movwf	wait_in_ms@time_in_ms,c
  1295  000C2E  EC34  F006         	call	_wait_in_ms	;wreg free
  1296                           
  1297                           ;lcd.c: 263: lcd_orden(0x01);
  1298  000C32  0E00               	movlw	0
  1299  000C34  0100               	movlb	0	; () banked
  1300  000C36  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1301  000C38  0E01               	movlw	1
  1302  000C3A  6F73               	movwf	lcd_orden@orden& (0+255),b
  1303  000C3C  ECCB  F008         	call	_lcd_orden	;wreg free
  1304                           
  1305                           ;lcd.c: 264: wait_in_ms(2);
  1306  000C40  0E00               	movlw	0
  1307  000C42  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1308  000C44  0E02               	movlw	2
  1309  000C46  6E38               	movwf	wait_in_ms@time_in_ms,c
  1310  000C48  EC34  F006         	call	_wait_in_ms	;wreg free
  1311                           
  1312                           ;lcd.c: 266: lcd_orden(0x06);
  1313  000C4C  0E00               	movlw	0
  1314  000C4E  0100               	movlb	0	; () banked
  1315  000C50  6F74               	movwf	(lcd_orden@orden+1)& (0+255),b
  1316  000C52  0E06               	movlw	6
  1317  000C54  6F73               	movwf	lcd_orden@orden& (0+255),b
  1318  000C56  ECCB  F008         	call	_lcd_orden	;wreg free
  1319                           
  1320                           ;lcd.c: 267: wait_in_ms(8);
  1321  000C5A  0E00               	movlw	0
  1322  000C5C  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1323  000C5E  0E08               	movlw	8
  1324  000C60  6E38               	movwf	wait_in_ms@time_in_ms,c
  1325  000C62  EC34  F006         	call	_wait_in_ms	;wreg free
  1326  000C66  0012               	return		;funcret
  1327  000C68                     __end_of_lcd_iniciar:
  1328                           	opt stack 0
  1329                           tblptru	equ	0xFF8
  1330                           tblptrh	equ	0xFF7
  1331                           tblptrl	equ	0xFF6
  1332                           tablat	equ	0xFF5
  1333                           postinc0	equ	0xFEE
  1334                           wreg	equ	0xFE8
  1335                           indf2	equ	0xFDF
  1336                           fsr2h	equ	0xFDA
  1337                           fsr2l	equ	0xFD9
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _lcd_orden *****************
  1341 ;; Defined at:
  1342 ;;		line 277 in file "lcd.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  orden           2   19[BANK0 ] unsigned int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1356 ;;      Params:         0       2       0       0       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1358 ;;      Temps:          0       5       0       0       0       0       0       0       0
  1359 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1360 ;;Total ram usage:        7 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		_lcd_pulso
  1365 ;; This function is called by:
  1366 ;;		_lcd_iniciar
  1367 ;;		_lcd_limpiar
  1368 ;;		_lcd_origen
  1369 ;;		_lcd_ubicarXY
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text8
  1374  001196                     __ptext8:
  1375                           	opt stack 0
  1376  001196                     _lcd_orden:
  1377                           	opt stack 24
  1378                           
  1379                           ;lcd.c: 278: PORTDbits.RD1=0;
  1380                           
  1381                           ;incstack = 0
  1382  001196  9283               	bcf	3971,1,c	;volatile
  1383                           
  1384                           ;lcd.c: 280: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
  1385  001198  CF83 F075          	movff	3971,??_lcd_orden	;volatile
  1386  00119C  0E0F               	movlw	15
  1387  00119E  0100               	movlb	0	; () banked
  1388  0011A0  1775               	andwf	??_lcd_orden& (0+255),f,b
  1389  0011A2  C073  F076         	movff	lcd_orden@orden,??_lcd_orden+1
  1390  0011A6  C074  F077         	movff	lcd_orden@orden+1,??_lcd_orden+2
  1391  0011AA  0E04               	movlw	4
  1392  0011AC  6F78               	movwf	(??_lcd_orden+3)& (0+255),b
  1393  0011AE                     u2025:
  1394  0011AE  90D8               	bcf	status,0,c
  1395  0011B0  3377               	rrcf	(??_lcd_orden+2)& (0+255),f,b
  1396  0011B2  3376               	rrcf	(??_lcd_orden+1)& (0+255),f,b
  1397  0011B4  2F78               	decfsz	(??_lcd_orden+3)& (0+255),f,b
  1398  0011B6  D7FB               	goto	u2025
  1399  0011B8  0E0F               	movlw	15
  1400  0011BA  1776               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1401  0011BC  3883               	swapf	3971,w,c	;volatile
  1402  0011BE  0B0F               	andlw	15
  1403  0011C0  0B0F               	andlw	15
  1404  0011C2  090F               	iorlw	15
  1405  0011C4  1576               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1406  0011C6  6F79               	movwf	(??_lcd_orden+4)& (0+255),b
  1407  0011C8  3979               	swapf	(??_lcd_orden+4)& (0+255),w,b
  1408  0011CA  0BF0               	andlw	240
  1409  0011CC  1175               	iorwf	??_lcd_orden& (0+255),w,b
  1410  0011CE  6E83               	movwf	3971,c	;volatile
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;lcd.c: 281: lcd_pulso();
  1414  0011D0  ECB5  F009         	call	_lcd_pulso	;wreg free
  1415                           
  1416                           ;lcd.c: 282: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
  1417  0011D4  CF83 F075          	movff	3971,??_lcd_orden	;volatile
  1418  0011D8  0E0F               	movlw	15
  1419  0011DA  0100               	movlb	0	; () banked
  1420  0011DC  1775               	andwf	??_lcd_orden& (0+255),f,b
  1421  0011DE  C073  F076         	movff	lcd_orden@orden,??_lcd_orden+1
  1422  0011E2  0E0F               	movlw	15
  1423  0011E4  1776               	andwf	(??_lcd_orden+1)& (0+255),f,b
  1424  0011E6  3883               	swapf	3971,w,c	;volatile
  1425  0011E8  0B0F               	andlw	15
  1426  0011EA  0B0F               	andlw	15
  1427  0011EC  090F               	iorlw	15
  1428  0011EE  1576               	andwf	(??_lcd_orden+1)& (0+255),w,b
  1429  0011F0  6F77               	movwf	(??_lcd_orden+2)& (0+255),b
  1430  0011F2  3977               	swapf	(??_lcd_orden+2)& (0+255),w,b
  1431  0011F4  0BF0               	andlw	240
  1432  0011F6  1175               	iorwf	??_lcd_orden& (0+255),w,b
  1433  0011F8  6E83               	movwf	3971,c	;volatile
  1434                           
  1435                           ;lcd.c: 283: lcd_pulso();
  1436  0011FA  ECB5  F009         	call	_lcd_pulso	;wreg free
  1437  0011FE  0012               	return		;funcret
  1438  001200                     __end_of_lcd_orden:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _lcd_pulso *****************
  1452 ;; Defined at:
  1453 ;;		line 270 in file "lcd.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    4
  1474 ;; This function calls:
  1475 ;;		_wait_in_ms
  1476 ;; This function is called by:
  1477 ;;		_lcd_iniciar
  1478 ;;		_lcd_orden
  1479 ;;		_lcd_caracter
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text9
  1484  00136A                     __ptext9:
  1485                           	opt stack 0
  1486  00136A                     _lcd_pulso:
  1487                           	opt stack 24
  1488                           
  1489                           ;lcd.c: 271: PORTDbits.RD3=1;
  1490                           
  1491                           ;incstack = 0
  1492  00136A  8683               	bsf	3971,3,c	;volatile
  1493                           
  1494                           ;lcd.c: 272: wait_in_ms(2);
  1495  00136C  0E00               	movlw	0
  1496  00136E  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1497  001370  0E02               	movlw	2
  1498  001372  6E38               	movwf	wait_in_ms@time_in_ms,c
  1499  001374  EC34  F006         	call	_wait_in_ms	;wreg free
  1500                           
  1501                           ;lcd.c: 273: PORTDbits.RD3=0;
  1502  001378  9683               	bcf	3971,3,c	;volatile
  1503                           
  1504                           ;lcd.c: 274: wait_in_ms(2);
  1505  00137A  0E00               	movlw	0
  1506  00137C  6E39               	movwf	wait_in_ms@time_in_ms+1,c
  1507  00137E  0E02               	movlw	2
  1508  001380  6E38               	movwf	wait_in_ms@time_in_ms,c
  1509  001382  EC34  F006         	call	_wait_in_ms	;wreg free
  1510  001386  0012               	return		;funcret
  1511  001388                     __end_of_lcd_pulso:
  1512                           	opt stack 0
  1513                           tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           indf2	equ	0xFDF
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _wait_in_ms *****************
  1525 ;; Defined at:
  1526 ;;		line 79 in file "config.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  time_in_ms      2   55[COMRAM] int 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  count_ms        2   17[BANK0 ] unsigned int 
  1531 ;;  count           2   15[BANK0 ] unsigned int 
  1532 ;;  flag            2   13[BANK0 ] unsigned int 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         2       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1544 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1545 ;;      Totals:         2       8       0       0       0       0       0       0       0
  1546 ;;Total ram usage:       10 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    3
  1549 ;; This function calls:
  1550 ;;		___awtoft
  1551 ;;		___ftdiv
  1552 ;;		___fttol
  1553 ;; This function is called by:
  1554 ;;		_lcd_iniciar
  1555 ;;		_lcd_pulso
  1556 ;;		_lcd_limpiar
  1557 ;;		_lcd_origen
  1558 ;;		_ADC_Read
  1559 ;;		_Lcd_Cmd
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text10
  1564  000C68                     __ptext10:
  1565                           	opt stack 0
  1566  000C68                     _wait_in_ms:
  1567                           	opt stack 24
  1568                           
  1569                           ;config.c: 80: unsigned int count = 0;
  1570                           
  1571                           ;incstack = 0
  1572  000C68  0E00               	movlw	0
  1573  000C6A  0100               	movlb	0	; () banked
  1574  000C6C  6F70               	movwf	(wait_in_ms@count+1)& (0+255),b
  1575  000C6E  0E00               	movlw	0
  1576  000C70  6F6F               	movwf	wait_in_ms@count& (0+255),b
  1577                           
  1578                           ;config.c: 81: unsigned int count_ms = 0;
  1579  000C72  0E00               	movlw	0
  1580  000C74  6F72               	movwf	(wait_in_ms@count_ms+1)& (0+255),b
  1581  000C76  0E00               	movlw	0
  1582  000C78  6F71               	movwf	wait_in_ms@count_ms& (0+255),b
  1583                           
  1584                           ;config.c: 82: unsigned int flag = 0;
  1585  000C7A  0E00               	movlw	0
  1586  000C7C  6F6E               	movwf	(wait_in_ms@flag+1)& (0+255),b
  1587  000C7E  0E00               	movlw	0
  1588  000C80  6F6D               	movwf	wait_in_ms@flag& (0+255),b
  1589                           
  1590                           ;config.c: 84: TMR0L = 131;
  1591  000C82  0E83               	movlw	131
  1592  000C84  6ED6               	movwf	4054,c	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;config.c: 87: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1596  000C86  50D6               	movf	4054,w,c	;volatile
  1597  000C88  6F6B               	movwf	??_wait_in_ms& (0+255),b
  1598  000C8A  6B6C               	clrf	(??_wait_in_ms+1)& (0+255),b
  1599  000C8C  1F6B               	comf	??_wait_in_ms& (0+255),f,b
  1600  000C8E  1F6C               	comf	(??_wait_in_ms+1)& (0+255),f,b
  1601  000C90  4B6B               	infsnz	??_wait_in_ms& (0+255),f,b
  1602  000C92  2B6C               	incf	(??_wait_in_ms+1)& (0+255),f,b
  1603  000C94  0E05               	movlw	5
  1604  000C96                     u1975:
  1605  000C96  90D8               	bcf	status,0,c
  1606  000C98  376B               	rlcf	??_wait_in_ms& (0+255),f,b
  1607  000C9A  376C               	rlcf	(??_wait_in_ms+1)& (0+255),f,b
  1608  000C9C  2EE8               	decfsz	wreg,f,c
  1609  000C9E  D7FB               	goto	u1975
  1610  000CA0  0E00               	movlw	0
  1611  000CA2  256B               	addwf	??_wait_in_ms& (0+255),w,b
  1612  000CA4  6E1B               	movwf	___awtoft@c,c
  1613  000CA6  0E20               	movlw	32
  1614  000CA8  216C               	addwfc	(??_wait_in_ms+1)& (0+255),w,b
  1615  000CAA  6E1C               	movwf	___awtoft@c+1,c
  1616  000CAC  EC26  F009         	call	___awtoft	;wreg free
  1617  000CB0  C01B  F028         	movff	?___awtoft,___ftdiv@f2
  1618  000CB4  C01C  F029         	movff	?___awtoft+1,___ftdiv@f2+1
  1619  000CB8  C01D  F02A         	movff	?___awtoft+2,___ftdiv@f2+2
  1620  000CBC  0E00               	movlw	0
  1621  000CBE  6E25               	movwf	___ftdiv@f1,c
  1622  000CC0  0EFA               	movlw	250
  1623  000CC2  6E26               	movwf	___ftdiv@f1+1,c
  1624  000CC4  0E45               	movlw	69
  1625  000CC6  6E27               	movwf	___ftdiv@f1+2,c
  1626  000CC8  EC56  F005         	call	___ftdiv	;wreg free
  1627  000CCC  C025  F034         	movff	?___ftdiv,___fttol@f1
  1628  000CD0  C026  F035         	movff	?___ftdiv+1,___fttol@f1+1
  1629  000CD4  C027  F036         	movff	?___ftdiv+2,___fttol@f1+2
  1630  000CD8  ECDA  F004         	call	___fttol	;wreg free
  1631  000CDC  C034  F071         	movff	?___fttol,wait_in_ms@count_ms
  1632  000CE0  C035  F072         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1633                           
  1634                           ;config.c: 89: TMR0ON = 1;
  1635  000CE4  8ED5               	bsf	4053,7,c	;volatile
  1636                           
  1637                           ;config.c: 91: while (count < count_ms){
  1638  000CE6  D020               	goto	l47
  1639  000CE8                     l43:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;config.c: 92: if(TMR0IF == 1){
  1643  000CE8  A4F2               	btfss	intcon,2,c	;volatile
  1644  000CEA  D01E               	goto	l47
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;config.c: 93: TMR0IF = 0;
  1648  000CEC  94F2               	bcf	intcon,2,c	;volatile
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;config.c: 94: TMR0L = 131;
  1652  000CEE  0E83               	movlw	131
  1653  000CF0  6ED6               	movwf	4054,c	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;config.c: 95: count ++;
  1657  000CF2  4B6F               	infsnz	wait_in_ms@count& (0+255),f,b
  1658  000CF4  2B70               	incf	(wait_in_ms@count+1)& (0+255),f,b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;config.c: 96: if (count == count_ms){
  1662  000CF6  5171               	movf	wait_in_ms@count_ms& (0+255),w,b
  1663  000CF8  196F               	xorwf	wait_in_ms@count& (0+255),w,b
  1664  000CFA  E116               	bnz	l2136
  1665  000CFC  5172               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1666  000CFE  1970               	xorwf	(wait_in_ms@count+1)& (0+255),w,b
  1667  000D00  A4D8               	btfss	status,2,c
  1668  000D02  D012               	goto	l47
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;config.c: 97: flag++;
  1672  000D04  4B6D               	infsnz	wait_in_ms@flag& (0+255),f,b
  1673  000D06  2B6E               	incf	(wait_in_ms@flag+1)& (0+255),f,b
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;config.c: 98: if (flag != time_in_ms){
  1677  000D08  516D               	movf	wait_in_ms@flag& (0+255),w,b
  1678  000D0A  1838               	xorwf	wait_in_ms@time_in_ms,w,c
  1679  000D0C  E104               	bnz	u2000
  1680  000D0E  516E               	movf	(wait_in_ms@flag+1)& (0+255),w,b
  1681  000D10  1839               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1682  000D12  B4D8               	btfsc	status,2,c
  1683  000D14  D005               	goto	l46
  1684  000D16                     u2000:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;config.c: 99: count = 0;
  1688  000D16  0E00               	movlw	0
  1689  000D18  6F70               	movwf	(wait_in_ms@count+1)& (0+255),b
  1690  000D1A  0E00               	movlw	0
  1691  000D1C  6F6F               	movwf	wait_in_ms@count& (0+255),b
  1692                           
  1693                           ;config.c: 100: }
  1694  000D1E  D004               	goto	l47
  1695  000D20                     l46:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;config.c: 101: else{
  1699                           ;config.c: 102: count = count_ms;
  1700  000D20  C071  F06F         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1701  000D24  C072  F070         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1702  000D28                     l47:
  1703  000D28                     l2136:
  1704  000D28  0100               	movlb	0	; () banked
  1705  000D2A  5171               	movf	wait_in_ms@count_ms& (0+255),w,b
  1706  000D2C  5D6F               	subwf	wait_in_ms@count& (0+255),w,b
  1707  000D2E  5172               	movf	(wait_in_ms@count_ms+1)& (0+255),w,b
  1708  000D30  5970               	subwfb	(wait_in_ms@count+1)& (0+255),w,b
  1709  000D32  B0D8               	btfsc	status,0,c
  1710  000D34  0012               	return	
  1711  000D36  D7D8               	goto	l43
  1712  000D38                     __end_of_wait_in_ms:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           intcon	equ	0xFF2
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           indf2	equ	0xFDF
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function ___awtoft *****************
  1727 ;; Defined at:
  1728 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  c               2   26[COMRAM] int 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  sign            1   29[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  3   26[COMRAM] float 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         3       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        4 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    2
  1749 ;; This function calls:
  1750 ;;		___ftpack
  1751 ;; This function is called by:
  1752 ;;		_wait_in_ms
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text11
  1757  00124C                     __ptext11:
  1758                           	opt stack 0
  1759  00124C                     ___awtoft:
  1760                           	opt stack 24
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;incstack = 0
  1764  00124C  0E00               	movlw	0
  1765  00124E  6E1E               	movwf	___awtoft@sign,c
  1766  001250  AE1C               	btfss	___awtoft@c+1,7,c
  1767  001252  D006               	goto	l462
  1768  001254  6C1B               	negf	___awtoft@c,c
  1769  001256  1E1C               	comf	___awtoft@c+1,f,c
  1770  001258  B0D8               	btfsc	status,0,c
  1771  00125A  2A1C               	incf	___awtoft@c+1,f,c
  1772  00125C  0E01               	movlw	1
  1773  00125E  6E1E               	movwf	___awtoft@sign,c
  1774  001260                     l462:
  1775  001260  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  1776  001264  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  1777  001268  6A15               	clrf	___ftpack@arg+2,c
  1778  00126A  0E8E               	movlw	142
  1779  00126C  6E16               	movwf	___ftpack@exp,c
  1780  00126E  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  1781  001272  EC9C  F006         	call	___ftpack	;wreg free
  1782  001276  C013  F01B         	movff	?___ftpack,?___awtoft
  1783  00127A  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  1784  00127E  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  1785  001282  0012               	return	
  1786  001284                     __end_of___awtoft:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           indf2	equ	0xFDF
  1796                           fsr2h	equ	0xFDA
  1797                           fsr2l	equ	0xFD9
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _configBoard *****************
  1801 ;; Defined at:
  1802 ;;		line 11 in file "config.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1816 ;;      Params:         0       0       0       0       0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text12
  1831  0010BC                     __ptext12:
  1832                           	opt stack 0
  1833  0010BC                     _configBoard:
  1834                           	opt stack 29
  1835                           
  1836                           ;config.c: 15: INTCONbits.GIE = 1;
  1837                           
  1838                           ;incstack = 0
  1839  0010BC  8EF2               	bsf	intcon,7,c	;volatile
  1840                           
  1841                           ;config.c: 16: INTCONbits.PEIE = 1;
  1842  0010BE  8CF2               	bsf	intcon,6,c	;volatile
  1843                           
  1844                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1845  0010C0  8ED5               	bsf	4053,7,c	;volatile
  1846                           
  1847                           ;config.c: 26: T08BIT = 1;
  1848  0010C2  8CD5               	bsf	4053,6,c	;volatile
  1849                           
  1850                           ;config.c: 27: T0CONbits.T0CS = 0;
  1851  0010C4  9AD5               	bcf	4053,5,c	;volatile
  1852                           
  1853                           ;config.c: 29: T0CONbits.PSA = 0;
  1854  0010C6  96D5               	bcf	4053,3,c	;volatile
  1855                           
  1856                           ;config.c: 30: T0CONbits.T0PS = 100;
  1857  0010C8  50D5               	movf	4053,w,c	;volatile
  1858  0010CA  0BF8               	andlw	-8
  1859  0010CC  0904               	iorlw	4
  1860  0010CE  6ED5               	movwf	4053,c	;volatile
  1861                           
  1862                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1863  0010D0  94F2               	bcf	intcon,2,c	;volatile
  1864                           
  1865                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1866  0010D2  80C1               	bsf	4033,0,c	;volatile
  1867  0010D4  82C1               	bsf	4033,1,c	;volatile
  1868  0010D6  84C1               	bsf	4033,2,c	;volatile
  1869  0010D8  86C1               	bsf	4033,3,c	;volatile
  1870                           
  1871                           ;config.c: 36: TRISA=0b00000000;
  1872  0010DA  0E00               	movlw	0
  1873  0010DC  6E92               	movwf	3986,c	;volatile
  1874                           
  1875                           ;config.c: 37: TRISB=0b00000000;
  1876  0010DE  0E00               	movlw	0
  1877  0010E0  6E93               	movwf	3987,c	;volatile
  1878                           
  1879                           ;config.c: 44: ADCON0 = 0b00000111;
  1880  0010E2  0E07               	movlw	7
  1881  0010E4  6EC2               	movwf	4034,c	;volatile
  1882                           
  1883                           ;config.c: 47: ADCON0bits.ADON = 0;
  1884  0010E6  90C2               	bcf	4034,0,c	;volatile
  1885                           
  1886                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1887  0010E8  8EC0               	bsf	4032,7,c	;volatile
  1888                           
  1889                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1890  0010EA  50C0               	movf	4032,w,c	;volatile
  1891  0010EC  0BF8               	andlw	-8
  1892  0010EE  0906               	iorlw	6
  1893  0010F0  6EC0               	movwf	4032,c	;volatile
  1894                           
  1895                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1896  0010F2  50C0               	movf	4032,w,c	;volatile
  1897  0010F4  0BC7               	andlw	-57
  1898  0010F6  0928               	iorlw	40
  1899  0010F8  6EC0               	movwf	4032,c	;volatile
  1900                           
  1901                           ;config.c: 54: ADCON1bits.PCFG=0b1101;
  1902  0010FA  50C1               	movf	4033,w,c	;volatile
  1903  0010FC  0BF0               	andlw	-16
  1904  0010FE  090D               	iorlw	13
  1905  001100  6EC1               	movwf	4033,c	;volatile
  1906                           
  1907                           ;config.c: 55: TRISAbits.RA1=1;
  1908  001102  8292               	bsf	3986,1,c	;volatile
  1909                           
  1910                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1911  001104  50C0               	movf	4032,w,c	;volatile
  1912  001106  0BF8               	andlw	-8
  1913  001108  0906               	iorlw	6
  1914  00110A  6EC0               	movwf	4032,c	;volatile
  1915                           
  1916                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1917  00110C  9AC1               	bcf	4033,5,c	;volatile
  1918                           
  1919                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1920  00110E  98C1               	bcf	4033,4,c	;volatile
  1921                           
  1922                           ;config.c: 60: ADCON2bits.ADFM=1;
  1923  001110  8EC0               	bsf	4032,7,c	;volatile
  1924                           
  1925                           ;config.c: 64: ADCON0bits.ADON=1;
  1926  001112  80C2               	bsf	4034,0,c	;volatile
  1927                           
  1928                           ;config.c: 66: PIE1bits.ADIE=1;
  1929  001114  8C9D               	bsf	3997,6,c	;volatile
  1930                           
  1931                           ;config.c: 67: PIR1bits.ADIF=0;
  1932  001116  9C9E               	bcf	3998,6,c	;volatile
  1933                           
  1934                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1935  001118  86C0               	bsf	4032,3,c	;volatile
  1936  00111A  88C0               	bsf	4032,4,c	;volatile
  1937  00111C  8AC0               	bsf	4032,5,c	;volatile
  1938                           
  1939                           ;config.c: 70: ADCON0bits.GO=1;
  1940  00111E  82C2               	bsf	4034,1,c	;volatile
  1941                           
  1942                           ;config.c: 74: TRISD=0;
  1943  001120  0E00               	movlw	0
  1944  001122  6E95               	movwf	3989,c	;volatile
  1945                           
  1946                           ;config.c: 75: PORTA=0;
  1947  001124  0E00               	movlw	0
  1948  001126  6E80               	movwf	3968,c	;volatile
  1949  001128  0012               	return		;funcret
  1950  00112A                     __end_of_configBoard:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           intcon	equ	0xFF2
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           indf2	equ	0xFDF
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _USART_SendString *****************
  1965 ;; Defined at:
  1966 ;;		line 40 in file "USART_Source_File.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  out             2   19[COMRAM] PTR const unsigned char 
  1969 ;;		 -> main@temp(12), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         2       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        2 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    2
  1988 ;; This function calls:
  1989 ;;		_USART_TransmitChar
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text13
  1996  001346                     __ptext13:
  1997                           	opt stack 0
  1998  001346                     _USART_SendString:
  1999                           	opt stack 28
  2000                           
  2001                           ;USART_Source_File.c: 42: while(*out!='\0')
  2002                           
  2003                           ;incstack = 0
  2004  001346  D009               	goto	l203
  2005  001348                     
  2006                           ;USART_Source_File.c: 43: {
  2007                           ;USART_Source_File.c: 44: USART_TransmitChar(*out);
  2008  001348  C014  FFD9         	movff	USART_SendString@out,fsr2l
  2009  00134C  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  2010  001350  50DF               	movf	indf2,w,c
  2011  001352  ECE0  F009         	call	_USART_TransmitChar
  2012                           
  2013                           ;USART_Source_File.c: 45: out++;
  2014  001356  4A14               	infsnz	USART_SendString@out,f,c
  2015  001358  2A15               	incf	USART_SendString@out+1,f,c
  2016  00135A                     l203:
  2017  00135A  C014  FFD9         	movff	USART_SendString@out,fsr2l
  2018  00135E  C015  FFDA         	movff	USART_SendString@out+1,fsr2h
  2019  001362  50DF               	movf	indf2,w,c
  2020  001364  B4D8               	btfsc	status,2,c
  2021  001366  0012               	return	
  2022  001368  D7EF               	goto	l204
  2023  00136A                     __end_of_USART_SendString:
  2024                           	opt stack 0
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           intcon	equ	0xFF2
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           indf2	equ	0xFDF
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _USART_TransmitChar *****************
  2038 ;; Defined at:
  2039 ;;		line 22 in file "USART_Source_File.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  out             1    wreg     unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  out             1   18[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        1 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_USART_SendString
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text14
  2068  0013C0                     __ptext14:
  2069                           	opt stack 0
  2070  0013C0                     _USART_TransmitChar:
  2071                           	opt stack 28
  2072                           
  2073                           ;incstack = 0
  2074                           ;USART_TransmitChar@out stored from wreg
  2075  0013C0  6E13               	movwf	USART_TransmitChar@out,c
  2076  0013C2                     
  2077                           ;USART_Source_File.c: 24: while(TXIF==0);
  2078  0013C2  A89E               	btfss	3998,4,c	;volatile
  2079  0013C4  D7FE               	goto	l1104
  2080                           
  2081                           ;USART_Source_File.c: 25: TXREG=out;
  2082  0013C6  C013  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
  2083  0013CA  0012               	return		;funcret
  2084  0013CC                     __end_of_USART_TransmitChar:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           indf2	equ	0xFDF
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098 ;; *************** function _USART_ReceiveString *****************
  2099 ;; Defined at:
  2100 ;;		line 58 in file "USART_Source_File.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  Input           2   18[COMRAM] PTR unsigned char 
  2103 ;;		 -> main@temp(12), 
  2104 ;;  length          1   20[COMRAM] unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  temp            1   28[COMRAM] unsigned char 
  2107 ;;  i               2   26[COMRAM] int 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         3       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2120 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:       11 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		_USART_ReceiveChar
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text15
  2132  000DE6                     __ptext15:
  2133                           	opt stack 0
  2134  000DE6                     _USART_ReceiveString:
  2135                           	opt stack 28
  2136                           
  2137                           ;USART_Source_File.c: 62: for(int i=0;i<=length-2;i++) {
  2138                           
  2139                           ;incstack = 0
  2140  000DE6  0E00               	movlw	0
  2141  000DE8  6E1C               	movwf	USART_ReceiveString@i+1,c
  2142  000DEA  0E00               	movlw	0
  2143  000DEC  6E1B               	movwf	USART_ReceiveString@i,c
  2144  000DEE  D038               	goto	l217
  2145  000DF0                     
  2146                           ;USART_Source_File.c: 65: Input[i]=0;
  2147  000DF0  501B               	movf	USART_ReceiveString@i,w,c
  2148  000DF2  2413               	addwf	USART_ReceiveString@Input,w,c
  2149  000DF4  6ED9               	movwf	fsr2l,c
  2150  000DF6  501C               	movf	USART_ReceiveString@i+1,w,c
  2151  000DF8  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2152  000DFA  6EDA               	movwf	fsr2h,c
  2153  000DFC  0E00               	movlw	0
  2154  000DFE  6EDF               	movwf	indf2,c
  2155                           
  2156                           ;USART_Source_File.c: 66: RCREG=0;
  2157  000E00  0E00               	movlw	0
  2158  000E02  6EAE               	movwf	4014,c	;volatile
  2159                           
  2160                           ;USART_Source_File.c: 68: char temp=USART_ReceiveChar();
  2161  000E04  ECE6  F009         	call	_USART_ReceiveChar	;wreg free
  2162  000E08  6E1D               	movwf	USART_ReceiveString@temp,c
  2163                           
  2164                           ;USART_Source_File.c: 69: if(temp>=97 && temp <=122 || temp==32){
  2165  000E0A  0E60               	movlw	96
  2166  000E0C  641D               	cpfsgt	USART_ReceiveString@temp,c
  2167  000E0E  D003               	goto	u1500
  2168  000E10  0E7A               	movlw	122
  2169  000E12  641D               	cpfsgt	USART_ReceiveString@temp,c
  2170  000E14  D004               	goto	u1510
  2171  000E16                     u1500:
  2172  000E16  0E20               	movlw	32
  2173  000E18  181D               	xorwf	USART_ReceiveString@temp,w,c
  2174  000E1A  A4D8               	btfss	status,2,c
  2175  000E1C  D009               	goto	l219
  2176  000E1E                     u1510:
  2177                           
  2178                           ;USART_Source_File.c: 70: Input[i] =temp;
  2179  000E1E  501B               	movf	USART_ReceiveString@i,w,c
  2180  000E20  2413               	addwf	USART_ReceiveString@Input,w,c
  2181  000E22  6ED9               	movwf	fsr2l,c
  2182  000E24  501C               	movf	USART_ReceiveString@i+1,w,c
  2183  000E26  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2184  000E28  6EDA               	movwf	fsr2h,c
  2185  000E2A  C01D  FFDF         	movff	USART_ReceiveString@temp,indf2
  2186                           
  2187                           ;USART_Source_File.c: 71: }else{
  2188  000E2E  D014               	goto	l224
  2189  000E30                     l219:
  2190                           
  2191                           ;USART_Source_File.c: 72: Input[i+1]=0;
  2192  000E30  0E01               	movlw	1
  2193  000E32  241B               	addwf	USART_ReceiveString@i,w,c
  2194  000E34  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2195  000E36  0E00               	movlw	0
  2196  000E38  201C               	addwfc	USART_ReceiveString@i+1,w,c
  2197  000E3A  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2198  000E3C  5016               	movf	??_USART_ReceiveString,w,c
  2199  000E3E  2413               	addwf	USART_ReceiveString@Input,w,c
  2200  000E40  6ED9               	movwf	fsr2l,c
  2201  000E42  5017               	movf	??_USART_ReceiveString+1,w,c
  2202  000E44  2014               	addwfc	USART_ReceiveString@Input+1,w,c
  2203  000E46  6EDA               	movwf	fsr2h,c
  2204  000E48  0E00               	movlw	0
  2205  000E4A  6EDF               	movwf	indf2,c
  2206                           
  2207                           ;USART_Source_File.c: 73: i=length-1;
  2208  000E4C  0EFF               	movlw	255
  2209  000E4E  2415               	addwf	USART_ReceiveString@length,w,c
  2210  000E50  6E1B               	movwf	USART_ReceiveString@i,c
  2211  000E52  6A1C               	clrf	USART_ReceiveString@i+1,c
  2212  000E54  0EFF               	movlw	255
  2213  000E56  221C               	addwfc	USART_ReceiveString@i+1,f,c
  2214  000E58                     l224:
  2215                           
  2216                           ;USART_Source_File.c: 75: }
  2217                           ;USART_Source_File.c: 76: temp=0;
  2218  000E58  0E00               	movlw	0
  2219  000E5A  6E1D               	movwf	USART_ReceiveString@temp,c
  2220  000E5C  4A1B               	infsnz	USART_ReceiveString@i,f,c
  2221  000E5E  2A1C               	incf	USART_ReceiveString@i+1,f,c
  2222  000E60                     l217:
  2223  000E60  0EFE               	movlw	254
  2224  000E62  6E16               	movwf	??_USART_ReceiveString& (0+255),c
  2225  000E64  0EFF               	movlw	255
  2226  000E66  6E17               	movwf	(??_USART_ReceiveString+1)& (0+255),c
  2227  000E68  5015               	movf	USART_ReceiveString@length,w,c
  2228  000E6A  6E18               	movwf	(??_USART_ReceiveString+2)& (0+255),c
  2229  000E6C  6A19               	clrf	(??_USART_ReceiveString+3)& (0+255),c
  2230  000E6E  5016               	movf	??_USART_ReceiveString,w,c
  2231  000E70  2618               	addwf	??_USART_ReceiveString+2,f,c
  2232  000E72  5017               	movf	??_USART_ReceiveString+1,w,c
  2233  000E74  2219               	addwfc	??_USART_ReceiveString+3,f,c
  2234  000E76  501B               	movf	USART_ReceiveString@i,w,c
  2235  000E78  5C18               	subwf	??_USART_ReceiveString+2,w,c
  2236  000E7A  5019               	movf	??_USART_ReceiveString+3,w,c
  2237  000E7C  0A80               	xorlw	128
  2238  000E7E  6E1A               	movwf	(??_USART_ReceiveString+4)& (0+255),c
  2239  000E80  501C               	movf	USART_ReceiveString@i+1,w,c
  2240  000E82  0A80               	xorlw	128
  2241  000E84  581A               	subwfb	(??_USART_ReceiveString+4)& (0+255),w,c
  2242  000E86  A0D8               	btfss	status,0,c
  2243  000E88  0012               	return	
  2244  000E8A  D7B2               	goto	l218
  2245  000E8C                     __end_of_USART_ReceiveString:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           indf2	equ	0xFDF
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _USART_ReceiveChar *****************
  2260 ;; Defined at:
  2261 ;;		line 29 in file "USART_Source_File.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_USART_ReceiveString
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text16
  2290  0013CC                     __ptext16:
  2291                           	opt stack 0
  2292  0013CC                     _USART_ReceiveChar:
  2293                           	opt stack 28
  2294                           
  2295                           ;USART_Source_File.c: 32: while(RCIF==0);
  2296                           
  2297                           ;incstack = 0
  2298  0013CC  AA9E               	btfss	3998,5,c	;volatile
  2299  0013CE  D7FE               	goto	_USART_ReceiveChar
  2300                           
  2301                           ;USART_Source_File.c: 33: return(RCREG);
  2302  0013D0  50AE               	movf	4014,w,c	;volatile
  2303  0013D2  0012               	return	
  2304  0013D4                     __end_of_USART_ReceiveChar:
  2305                           	opt stack 0
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           intcon	equ	0xFF2
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           indf2	equ	0xFDF
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function _USART_Init *****************
  2319 ;; Defined at:
  2320 ;;		line 10 in file "USART_Source_File.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  baud_rate       4   11[BANK0 ] long 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  temp            3   15[BANK0 ] float 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2334 ;;      Params:         0       4       0       0       0       0       0       0       0
  2335 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2337 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2338 ;;Total ram usage:        7 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		___altoft
  2343 ;;		___ftadd
  2344 ;;		___ftdiv
  2345 ;;		___fttol
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text17
  2352  000FCA                     __ptext17:
  2353                           	opt stack 0
  2354  000FCA                     _USART_Init:
  2355                           	opt stack 27
  2356                           
  2357                           ;USART_Source_File.c: 12: float temp;
  2358                           ;USART_Source_File.c: 13: TRISC6=0;
  2359                           
  2360                           ;incstack = 0
  2361  000FCA  9C94               	bcf	3988,6,c	;volatile
  2362                           
  2363                           ;USART_Source_File.c: 14: TRISC7=1;
  2364  000FCC  8E94               	bsf	3988,7,c	;volatile
  2365                           
  2366                           ;USART_Source_File.c: 15: temp=(((float)(8000000/64)/(float)baud_rate)-1);
  2367  000FCE  C06B  F01B         	movff	USART_Init@baud_rate,___altoft@c
  2368  000FD2  C06C  F01C         	movff	USART_Init@baud_rate+1,___altoft@c+1
  2369  000FD6  C06D  F01D         	movff	USART_Init@baud_rate+2,___altoft@c+2
  2370  000FDA  C06E  F01E         	movff	USART_Init@baud_rate+3,___altoft@c+3
  2371  000FDE  EC22  F008         	call	___altoft	;wreg free
  2372  000FE2  C01B  F028         	movff	?___altoft,___ftdiv@f2
  2373  000FE6  C01C  F029         	movff	?___altoft+1,___ftdiv@f2+1
  2374  000FEA  C01D  F02A         	movff	?___altoft+2,___ftdiv@f2+2
  2375  000FEE  0E24               	movlw	36
  2376  000FF0  6E25               	movwf	___ftdiv@f1,c
  2377  000FF2  0EF4               	movlw	244
  2378  000FF4  6E26               	movwf	___ftdiv@f1+1,c
  2379  000FF6  0E47               	movlw	71
  2380  000FF8  6E27               	movwf	___ftdiv@f1+2,c
  2381  000FFA  EC56  F005         	call	___ftdiv	;wreg free
  2382  000FFE  C025  F034         	movff	?___ftdiv,___ftadd@f1
  2383  001002  C026  F035         	movff	?___ftdiv+1,___ftadd@f1+1
  2384  001006  C027  F036         	movff	?___ftdiv+2,___ftadd@f1+2
  2385  00100A  0E00               	movlw	0
  2386  00100C  6E37               	movwf	___ftadd@f2,c
  2387  00100E  0E80               	movlw	128
  2388  001010  6E38               	movwf	___ftadd@f2+1,c
  2389  001012  0EBF               	movlw	191
  2390  001014  6E39               	movwf	___ftadd@f2+2,c
  2391  001016  EC03  F004         	call	___ftadd	;wreg free
  2392  00101A  C034  F06F         	movff	?___ftadd,USART_Init@temp
  2393  00101E  C035  F070         	movff	?___ftadd+1,USART_Init@temp+1
  2394  001022  C036  F071         	movff	?___ftadd+2,USART_Init@temp+2
  2395                           
  2396                           ;USART_Source_File.c: 16: SPBRG=(int)temp;
  2397  001026  C06F  F034         	movff	USART_Init@temp,___fttol@f1
  2398  00102A  C070  F035         	movff	USART_Init@temp+1,___fttol@f1+1
  2399  00102E  C071  F036         	movff	USART_Init@temp+2,___fttol@f1+2
  2400  001032  ECDA  F004         	call	___fttol	;wreg free
  2401  001036  5034               	movf	?___fttol,w,c
  2402  001038  6EAF               	movwf	4015,c	;volatile
  2403                           
  2404                           ;USART_Source_File.c: 17: TXSTA=0x20;
  2405  00103A  0E20               	movlw	32
  2406  00103C  6EAC               	movwf	4012,c	;volatile
  2407                           
  2408                           ;USART_Source_File.c: 19: RCSTA=0x94;
  2409  00103E  0E94               	movlw	148
  2410  001040  6EAB               	movwf	4011,c	;volatile
  2411  001042  0012               	return		;funcret
  2412  001044                     __end_of_USART_Init:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           intcon	equ	0xFF2
  2419                           postinc0	equ	0xFEE
  2420                           wreg	equ	0xFE8
  2421                           indf2	equ	0xFDF
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function ___fttol *****************
  2427 ;; Defined at:
  2428 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  f1              3   51[COMRAM] float 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  lval            4    6[BANK0 ] unsigned long 
  2433 ;;  exp1            1   10[BANK0 ] unsigned char 
  2434 ;;  sign1           1    5[BANK0 ] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  4   51[COMRAM] long 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2444 ;;      Params:         4       0       0       0       0       0       0       0       0
  2445 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2446 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2447 ;;      Totals:         4      11       0       0       0       0       0       0       0
  2448 ;;Total ram usage:       15 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_wait_in_ms
  2455 ;;		_USART_Init
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text18
  2460  0009B4                     __ptext18:
  2461                           	opt stack 0
  2462  0009B4                     ___fttol:
  2463                           	opt stack 25
  2464                           
  2465                           ;incstack = 0
  2466  0009B4  C036  F060         	movff	___fttol@f1+2,??___fttol
  2467  0009B8  0100               	movlb	0	; () banked
  2468  0009BA  6B61               	clrf	(??___fttol+1)& (0+255),b
  2469  0009BC  6B62               	clrf	(??___fttol+2)& (0+255),b
  2470  0009BE  3435               	rlcf	___fttol@f1+1,w,c
  2471  0009C0  3760               	rlcf	??___fttol& (0+255),f,b
  2472  0009C2  E301               	bnc	u1891
  2473  0009C4  8161               	bsf	(??___fttol+1)& (0+255),0,b
  2474  0009C6                     u1891:
  2475  0009C6  5160               	movf	??___fttol& (0+255),w,b
  2476  0009C8  6F6A               	movwf	___fttol@exp1& (0+255),b
  2477  0009CA  516A               	movf	___fttol@exp1& (0+255),w,b
  2478  0009CC  A4D8               	btfss	status,2,c
  2479  0009CE  D009               	goto	l581
  2480                           
  2481                           ; BSR set to: 0
  2482  0009D0  0E00               	movlw	0
  2483  0009D2  6E34               	movwf	?___fttol,c
  2484  0009D4  0E00               	movlw	0
  2485  0009D6  6E35               	movwf	?___fttol+1,c
  2486  0009D8  0E00               	movlw	0
  2487  0009DA  6E36               	movwf	?___fttol+2,c
  2488  0009DC  0E00               	movlw	0
  2489  0009DE  6E37               	movwf	?___fttol+3,c
  2490                           
  2491                           ; BSR set to: 0
  2492  0009E0  0012               	return	
  2493  0009E2                     l581:
  2494                           
  2495                           ; BSR set to: 0
  2496                           
  2497                           ; BSR set to: 0
  2498  0009E2  0E17               	movlw	23
  2499  0009E4  6F60               	movwf	??___fttol& (0+255),b
  2500  0009E6  C034  F061         	movff	___fttol@f1,??___fttol+1
  2501  0009EA  C035  F062         	movff	___fttol@f1+1,??___fttol+2
  2502  0009EE  C036  F063         	movff	___fttol@f1+2,??___fttol+3
  2503  0009F2  2960               	incf	??___fttol& (0+255),w,b
  2504  0009F4  6F64               	movwf	(??___fttol+4)& (0+255),b
  2505  0009F6  D004               	goto	u1910
  2506  0009F8                     u1915:
  2507  0009F8  90D8               	bcf	status,0,c
  2508  0009FA  3363               	rrcf	(??___fttol+3)& (0+255),f,b
  2509  0009FC  3362               	rrcf	(??___fttol+2)& (0+255),f,b
  2510  0009FE  3361               	rrcf	(??___fttol+1)& (0+255),f,b
  2511  000A00                     u1910:
  2512  000A00  2F64               	decfsz	(??___fttol+4)& (0+255),f,b
  2513  000A02  D7FA               	goto	u1915
  2514  000A04  0100               	movlb	0	; () banked
  2515  000A06  5161               	movf	(??___fttol+1)& (0+255),w,b
  2516  000A08  6F65               	movwf	___fttol@sign1& (0+255),b
  2517                           
  2518                           ; BSR set to: 0
  2519  000A0A  8E35               	bsf	___fttol@f1+1,7,c
  2520                           
  2521                           ; BSR set to: 0
  2522  000A0C  0EFF               	movlw	255
  2523  000A0E  1634               	andwf	___fttol@f1,f,c
  2524  000A10  0EFF               	movlw	255
  2525  000A12  1635               	andwf	___fttol@f1+1,f,c
  2526  000A14  0E00               	movlw	0
  2527  000A16  1636               	andwf	___fttol@f1+2,f,c
  2528                           
  2529                           ; BSR set to: 0
  2530  000A18  5034               	movf	___fttol@f1,w,c
  2531  000A1A  6F66               	movwf	___fttol@lval& (0+255),b
  2532  000A1C  5035               	movf	___fttol@f1+1,w,c
  2533  000A1E  6F67               	movwf	(___fttol@lval+1)& (0+255),b
  2534  000A20  5036               	movf	___fttol@f1+2,w,c
  2535  000A22  6F68               	movwf	(___fttol@lval+2)& (0+255),b
  2536  000A24  6B69               	clrf	(___fttol@lval+3)& (0+255),b
  2537                           
  2538                           ; BSR set to: 0
  2539  000A26  0E8E               	movlw	142
  2540  000A28  5F6A               	subwf	___fttol@exp1& (0+255),f,b
  2541                           
  2542                           ; BSR set to: 0
  2543  000A2A  AF6A               	btfss	___fttol@exp1& (0+255),7,b
  2544  000A2C  D016               	goto	l583
  2545                           
  2546                           ; BSR set to: 0
  2547  000A2E  516A               	movf	___fttol@exp1& (0+255),w,b
  2548  000A30  0A80               	xorlw	128
  2549  000A32  0F8F               	addlw	143
  2550  000A34  B0D8               	btfsc	status,0,c
  2551  000A36  D009               	goto	l584
  2552                           
  2553                           ; BSR set to: 0
  2554  000A38  0E00               	movlw	0
  2555  000A3A  6E34               	movwf	?___fttol,c
  2556  000A3C  0E00               	movlw	0
  2557  000A3E  6E35               	movwf	?___fttol+1,c
  2558  000A40  0E00               	movlw	0
  2559  000A42  6E36               	movwf	?___fttol+2,c
  2560  000A44  0E00               	movlw	0
  2561  000A46  6E37               	movwf	?___fttol+3,c
  2562                           
  2563                           ; BSR set to: 0
  2564  000A48  0012               	return	
  2565  000A4A                     l584:
  2566                           
  2567                           ; BSR set to: 0
  2568                           
  2569                           ; BSR set to: 0
  2570                           
  2571                           ; BSR set to: 0
  2572  000A4A  90D8               	bcf	status,0,c
  2573  000A4C  3369               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2574  000A4E  3368               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2575  000A50  3367               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2576  000A52  3366               	rrcf	___fttol@lval& (0+255),f,b
  2577                           
  2578                           ; BSR set to: 0
  2579  000A54  3F6A               	incfsz	___fttol@exp1& (0+255),f,b
  2580  000A56  D7F9               	goto	l584
  2581                           
  2582                           ; BSR set to: 0
  2583  000A58  D015               	goto	u1950
  2584  000A5A                     l583:
  2585                           
  2586                           ; BSR set to: 0
  2587                           
  2588                           ; BSR set to: 0
  2589  000A5A  0E17               	movlw	23
  2590  000A5C  656A               	cpfsgt	___fttol@exp1& (0+255),b
  2591  000A5E  D00F               	goto	l589
  2592                           
  2593                           ; BSR set to: 0
  2594  000A60  0E00               	movlw	0
  2595  000A62  6E34               	movwf	?___fttol,c
  2596  000A64  0E00               	movlw	0
  2597  000A66  6E35               	movwf	?___fttol+1,c
  2598  000A68  0E00               	movlw	0
  2599  000A6A  6E36               	movwf	?___fttol+2,c
  2600  000A6C  0E00               	movlw	0
  2601  000A6E  6E37               	movwf	?___fttol+3,c
  2602                           
  2603                           ; BSR set to: 0
  2604  000A70  0012               	return	
  2605  000A72                     
  2606                           ; BSR set to: 0
  2607                           
  2608                           ; BSR set to: 0
  2609  000A72  90D8               	bcf	status,0,c
  2610  000A74  3766               	rlcf	___fttol@lval& (0+255),f,b
  2611  000A76  3767               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2612  000A78  3768               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2613  000A7A  3769               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2614  000A7C  076A               	decf	___fttol@exp1& (0+255),f,b
  2615  000A7E                     l589:
  2616                           
  2617                           ; BSR set to: 0
  2618                           
  2619                           ; BSR set to: 0
  2620  000A7E  516A               	movf	___fttol@exp1& (0+255),w,b
  2621  000A80  A4D8               	btfss	status,2,c
  2622  000A82  D7F7               	goto	l590
  2623  000A84                     u1950:
  2624                           
  2625                           ; BSR set to: 0
  2626                           
  2627                           ; BSR set to: 0
  2628                           
  2629                           ; BSR set to: 0
  2630  000A84  5165               	movf	___fttol@sign1& (0+255),w,b
  2631  000A86  B4D8               	btfsc	status,2,c
  2632  000A88  D008               	goto	l592
  2633                           
  2634                           ; BSR set to: 0
  2635  000A8A  1F69               	comf	(___fttol@lval+3)& (0+255),f,b
  2636  000A8C  1F68               	comf	(___fttol@lval+2)& (0+255),f,b
  2637  000A8E  1F67               	comf	(___fttol@lval+1)& (0+255),f,b
  2638  000A90  6D66               	negf	___fttol@lval& (0+255),b
  2639  000A92  0E00               	movlw	0
  2640  000A94  2367               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2641  000A96  2368               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2642  000A98  2369               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2643  000A9A                     l592:
  2644                           
  2645                           ; BSR set to: 0
  2646                           
  2647                           ; BSR set to: 0
  2648  000A9A  C066  F034         	movff	___fttol@lval,?___fttol
  2649  000A9E  C067  F035         	movff	___fttol@lval+1,?___fttol+1
  2650  000AA2  C068  F036         	movff	___fttol@lval+2,?___fttol+2
  2651  000AA6  C069  F037         	movff	___fttol@lval+3,?___fttol+3
  2652  000AAA  0012               	return	
  2653  000AAC                     __end_of___fttol:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           intcon	equ	0xFF2
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           indf2	equ	0xFDF
  2663                           fsr2h	equ	0xFDA
  2664                           fsr2l	equ	0xFD9
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function ___ftdiv *****************
  2668 ;; Defined at:
  2669 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  f1              3   36[COMRAM] float 
  2672 ;;  f2              3   39[COMRAM] float 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  f3              3   46[COMRAM] float 
  2675 ;;  sign            1   50[COMRAM] unsigned char 
  2676 ;;  exp             1   49[COMRAM] unsigned char 
  2677 ;;  cntr            1   45[COMRAM] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  3   36[COMRAM] float 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2687 ;;      Params:         6       0       0       0       0       0       0       0       0
  2688 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2689 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2690 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2691 ;;Total ram usage:       15 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    2
  2694 ;; This function calls:
  2695 ;;		___ftpack
  2696 ;; This function is called by:
  2697 ;;		_wait_in_ms
  2698 ;;		_USART_Init
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text19
  2703  000AAC                     __ptext19:
  2704                           	opt stack 0
  2705  000AAC                     ___ftdiv:
  2706                           	opt stack 24
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;incstack = 0
  2710  000AAC  C027  F02B         	movff	___ftdiv@f1+2,??___ftdiv
  2711  000AB0  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2712  000AB2  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2713  000AB4  3426               	rlcf	___ftdiv@f1+1,w,c
  2714  000AB6  362B               	rlcf	??___ftdiv& (0+255),f,c
  2715  000AB8  E301               	bnc	u1831
  2716  000ABA  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2717  000ABC                     u1831:
  2718  000ABC  502B               	movf	??___ftdiv,w,c
  2719  000ABE  6E32               	movwf	___ftdiv@exp,c
  2720  000AC0  5032               	movf	___ftdiv@exp,w,c
  2721  000AC2  A4D8               	btfss	status,2,c
  2722  000AC4  D007               	goto	l545
  2723  000AC6  0E00               	movlw	0
  2724  000AC8  6E25               	movwf	?___ftdiv,c
  2725  000ACA  0E00               	movlw	0
  2726  000ACC  6E26               	movwf	?___ftdiv+1,c
  2727  000ACE  0E00               	movlw	0
  2728  000AD0  6E27               	movwf	?___ftdiv+2,c
  2729  000AD2  0012               	return	
  2730  000AD4                     l545:
  2731  000AD4  C02A  F02B         	movff	___ftdiv@f2+2,??___ftdiv
  2732  000AD8  6A2C               	clrf	(??___ftdiv+1)& (0+255),c
  2733  000ADA  6A2D               	clrf	(??___ftdiv+2)& (0+255),c
  2734  000ADC  3429               	rlcf	___ftdiv@f2+1,w,c
  2735  000ADE  362B               	rlcf	??___ftdiv& (0+255),f,c
  2736  000AE0  E301               	bnc	u1851
  2737  000AE2  802C               	bsf	(??___ftdiv+1)& (0+255),0,c
  2738  000AE4                     u1851:
  2739  000AE4  502B               	movf	??___ftdiv,w,c
  2740  000AE6  6E33               	movwf	___ftdiv@sign,c
  2741  000AE8  5033               	movf	___ftdiv@sign,w,c
  2742  000AEA  A4D8               	btfss	status,2,c
  2743  000AEC  D007               	goto	l547
  2744  000AEE  0E00               	movlw	0
  2745  000AF0  6E25               	movwf	?___ftdiv,c
  2746  000AF2  0E00               	movlw	0
  2747  000AF4  6E26               	movwf	?___ftdiv+1,c
  2748  000AF6  0E00               	movlw	0
  2749  000AF8  6E27               	movwf	?___ftdiv+2,c
  2750  000AFA  0012               	return	
  2751  000AFC                     l547:
  2752  000AFC  0E00               	movlw	0
  2753  000AFE  6E2F               	movwf	___ftdiv@f3,c
  2754  000B00  0E00               	movlw	0
  2755  000B02  6E30               	movwf	___ftdiv@f3+1,c
  2756  000B04  0E00               	movlw	0
  2757  000B06  6E31               	movwf	___ftdiv@f3+2,c
  2758  000B08  5033               	movf	___ftdiv@sign,w,c
  2759  000B0A  0F89               	addlw	137
  2760  000B0C  5E32               	subwf	___ftdiv@exp,f,c
  2761  000B0E  C027  F033         	movff	___ftdiv@f1+2,___ftdiv@sign
  2762  000B12  502A               	movf	___ftdiv@f2+2,w,c
  2763  000B14  1A33               	xorwf	___ftdiv@sign,f,c
  2764  000B16  0E80               	movlw	128
  2765  000B18  1633               	andwf	___ftdiv@sign,f,c
  2766  000B1A  8E26               	bsf	___ftdiv@f1+1,7,c
  2767  000B1C  0EFF               	movlw	255
  2768  000B1E  1625               	andwf	___ftdiv@f1,f,c
  2769  000B20  0EFF               	movlw	255
  2770  000B22  1626               	andwf	___ftdiv@f1+1,f,c
  2771  000B24  0E00               	movlw	0
  2772  000B26  1627               	andwf	___ftdiv@f1+2,f,c
  2773  000B28  8E29               	bsf	___ftdiv@f2+1,7,c
  2774  000B2A  0EFF               	movlw	255
  2775  000B2C  1628               	andwf	___ftdiv@f2,f,c
  2776  000B2E  0EFF               	movlw	255
  2777  000B30  1629               	andwf	___ftdiv@f2+1,f,c
  2778  000B32  0E00               	movlw	0
  2779  000B34  162A               	andwf	___ftdiv@f2+2,f,c
  2780  000B36  0E18               	movlw	24
  2781  000B38  6E2E               	movwf	___ftdiv@cntr,c
  2782  000B3A  90D8               	bcf	status,0,c
  2783  000B3C  362F               	rlcf	___ftdiv@f3,f,c
  2784  000B3E  3630               	rlcf	___ftdiv@f3+1,f,c
  2785  000B40  3631               	rlcf	___ftdiv@f3+2,f,c
  2786  000B42  5028               	movf	___ftdiv@f2,w,c
  2787  000B44  5C25               	subwf	___ftdiv@f1,w,c
  2788  000B46  5029               	movf	___ftdiv@f2+1,w,c
  2789  000B48  5826               	subwfb	___ftdiv@f1+1,w,c
  2790  000B4A  502A               	movf	___ftdiv@f2+2,w,c
  2791  000B4C  5827               	subwfb	___ftdiv@f1+2,w,c
  2792  000B4E  A0D8               	btfss	status,0,c
  2793  000B50  D007               	goto	l549
  2794  000B52  5028               	movf	___ftdiv@f2,w,c
  2795  000B54  5E25               	subwf	___ftdiv@f1,f,c
  2796  000B56  5029               	movf	___ftdiv@f2+1,w,c
  2797  000B58  5A26               	subwfb	___ftdiv@f1+1,f,c
  2798  000B5A  502A               	movf	___ftdiv@f2+2,w,c
  2799  000B5C  5A27               	subwfb	___ftdiv@f1+2,f,c
  2800  000B5E  802F               	bsf	___ftdiv@f3,0,c
  2801  000B60                     l549:
  2802  000B60  90D8               	bcf	status,0,c
  2803  000B62  3625               	rlcf	___ftdiv@f1,f,c
  2804  000B64  3626               	rlcf	___ftdiv@f1+1,f,c
  2805  000B66  3627               	rlcf	___ftdiv@f1+2,f,c
  2806  000B68  2E2E               	decfsz	___ftdiv@cntr,f,c
  2807  000B6A  D7E7               	goto	l548
  2808  000B6C  C02F  F013         	movff	___ftdiv@f3,___ftpack@arg
  2809  000B70  C030  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2810  000B74  C031  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2811  000B78  C032  F016         	movff	___ftdiv@exp,___ftpack@exp
  2812  000B7C  C033  F017         	movff	___ftdiv@sign,___ftpack@sign
  2813  000B80  EC9C  F006         	call	___ftpack	;wreg free
  2814  000B84  C013  F025         	movff	?___ftpack,?___ftdiv
  2815  000B88  C014  F026         	movff	?___ftpack+1,?___ftdiv+1
  2816  000B8C  C015  F027         	movff	?___ftpack+2,?___ftdiv+2
  2817  000B90  0012               	return	
  2818  000B92                     __end_of___ftdiv:
  2819                           	opt stack 0
  2820                           tblptru	equ	0xFF8
  2821                           tblptrh	equ	0xFF7
  2822                           tblptrl	equ	0xFF6
  2823                           tablat	equ	0xFF5
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           indf2	equ	0xFDF
  2828                           fsr2h	equ	0xFDA
  2829                           fsr2l	equ	0xFD9
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function ___ftadd *****************
  2833 ;; Defined at:
  2834 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  f1              3   51[COMRAM] float 
  2837 ;;  f2              3   54[COMRAM] float 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  exp1            1    5[BANK0 ] unsigned char 
  2840 ;;  exp2            1    4[BANK0 ] unsigned char 
  2841 ;;  sign            1    3[BANK0 ] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  3   51[COMRAM] float 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         6       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2854 ;;      Totals:         6       6       0       0       0       0       0       0       0
  2855 ;;Total ram usage:       12 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		___ftpack
  2860 ;; This function is called by:
  2861 ;;		_USART_Init
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text20
  2866  000806                     __ptext20:
  2867                           	opt stack 0
  2868  000806                     ___ftadd:
  2869                           	opt stack 27
  2870                           
  2871                           ;incstack = 0
  2872  000806  C036  F060         	movff	___ftadd@f1+2,??___ftadd
  2873  00080A  0100               	movlb	0	; () banked
  2874  00080C  6B61               	clrf	(??___ftadd+1)& (0+255),b
  2875  00080E  6B62               	clrf	(??___ftadd+2)& (0+255),b
  2876  000810  3435               	rlcf	___ftadd@f1+1,w,c
  2877  000812  3760               	rlcf	??___ftadd& (0+255),f,b
  2878  000814  E301               	bnc	u2061
  2879  000816  8161               	bsf	(??___ftadd+1)& (0+255),0,b
  2880  000818                     u2061:
  2881  000818  5160               	movf	??___ftadd& (0+255),w,b
  2882  00081A  6F65               	movwf	___ftadd@exp1& (0+255),b
  2883  00081C  C039  F060         	movff	___ftadd@f2+2,??___ftadd
  2884  000820  6B61               	clrf	(??___ftadd+1)& (0+255),b
  2885  000822  6B62               	clrf	(??___ftadd+2)& (0+255),b
  2886  000824  3438               	rlcf	___ftadd@f2+1,w,c
  2887  000826  3760               	rlcf	??___ftadd& (0+255),f,b
  2888  000828  E301               	bnc	u2071
  2889  00082A  8161               	bsf	(??___ftadd+1)& (0+255),0,b
  2890  00082C                     u2071:
  2891  00082C  5160               	movf	??___ftadd& (0+255),w,b
  2892  00082E  6F64               	movwf	___ftadd@exp2& (0+255),b
  2893                           
  2894                           ; BSR set to: 0
  2895  000830  5165               	movf	___ftadd@exp1& (0+255),w,b
  2896  000832  B4D8               	btfsc	status,2,c
  2897  000834  D00B               	goto	u2100
  2898                           
  2899                           ; BSR set to: 0
  2900  000836  5164               	movf	___ftadd@exp2& (0+255),w,b
  2901  000838  5D65               	subwf	___ftadd@exp1& (0+255),w,b
  2902  00083A  B0D8               	btfsc	status,0,c
  2903  00083C  D00E               	goto	l512
  2904                           
  2905                           ; BSR set to: 0
  2906  00083E  5165               	movf	___ftadd@exp1& (0+255),w,b
  2907  000840  0800               	sublw	0
  2908  000842  2564               	addwf	___ftadd@exp2& (0+255),w,b
  2909  000844  6F60               	movwf	??___ftadd& (0+255),b
  2910  000846  0E18               	movlw	24
  2911  000848  6560               	cpfsgt	??___ftadd& (0+255),b
  2912  00084A  D007               	goto	l512
  2913  00084C                     u2100:
  2914                           
  2915                           ; BSR set to: 0
  2916  00084C  C037  F034         	movff	___ftadd@f2,?___ftadd
  2917  000850  C038  F035         	movff	___ftadd@f2+1,?___ftadd+1
  2918  000854  C039  F036         	movff	___ftadd@f2+2,?___ftadd+2
  2919  000858  0012               	return	
  2920  00085A                     l512:
  2921                           
  2922                           ; BSR set to: 0
  2923                           
  2924                           ; BSR set to: 0
  2925  00085A  5164               	movf	___ftadd@exp2& (0+255),w,b
  2926  00085C  B4D8               	btfsc	status,2,c
  2927  00085E  D00B               	goto	u2130
  2928                           
  2929                           ; BSR set to: 0
  2930  000860  5165               	movf	___ftadd@exp1& (0+255),w,b
  2931  000862  5D64               	subwf	___ftadd@exp2& (0+255),w,b
  2932  000864  B0D8               	btfsc	status,0,c
  2933  000866  D00E               	goto	l516
  2934                           
  2935                           ; BSR set to: 0
  2936  000868  5164               	movf	___ftadd@exp2& (0+255),w,b
  2937  00086A  0800               	sublw	0
  2938  00086C  2565               	addwf	___ftadd@exp1& (0+255),w,b
  2939  00086E  6F60               	movwf	??___ftadd& (0+255),b
  2940  000870  0E18               	movlw	24
  2941  000872  6560               	cpfsgt	??___ftadd& (0+255),b
  2942  000874  D007               	goto	l516
  2943  000876                     u2130:
  2944                           
  2945                           ; BSR set to: 0
  2946  000876  C034  F034         	movff	___ftadd@f1,?___ftadd
  2947  00087A  C035  F035         	movff	___ftadd@f1+1,?___ftadd+1
  2948  00087E  C036  F036         	movff	___ftadd@f1+2,?___ftadd+2
  2949  000882  0012               	return	
  2950  000884                     l516:
  2951                           
  2952                           ; BSR set to: 0
  2953                           
  2954                           ; BSR set to: 0
  2955  000884  0E06               	movlw	6
  2956  000886  6F63               	movwf	___ftadd@sign& (0+255),b
  2957                           
  2958                           ; BSR set to: 0
  2959  000888  BE36               	btfsc	___ftadd@f1+2,7,c
  2960                           
  2961                           ; BSR set to: 0
  2962  00088A  8F63               	bsf	___ftadd@sign& (0+255),7,b
  2963                           
  2964                           ; BSR set to: 0
  2965                           
  2966                           ; BSR set to: 0
  2967  00088C  BE39               	btfsc	___ftadd@f2+2,7,c
  2968                           
  2969                           ; BSR set to: 0
  2970  00088E  8D63               	bsf	___ftadd@sign& (0+255),6,b
  2971                           
  2972                           ; BSR set to: 0
  2973  000890  8E35               	bsf	___ftadd@f1+1,7,c
  2974                           
  2975                           ; BSR set to: 0
  2976  000892  0EFF               	movlw	255
  2977  000894  1634               	andwf	___ftadd@f1,f,c
  2978  000896  0EFF               	movlw	255
  2979  000898  1635               	andwf	___ftadd@f1+1,f,c
  2980  00089A  0E00               	movlw	0
  2981  00089C  1636               	andwf	___ftadd@f1+2,f,c
  2982  00089E  8E38               	bsf	___ftadd@f2+1,7,c
  2983                           
  2984                           ; BSR set to: 0
  2985  0008A0  0EFF               	movlw	255
  2986  0008A2  1637               	andwf	___ftadd@f2,f,c
  2987  0008A4  0EFF               	movlw	255
  2988  0008A6  1638               	andwf	___ftadd@f2+1,f,c
  2989  0008A8  0E00               	movlw	0
  2990  0008AA  1639               	andwf	___ftadd@f2+2,f,c
  2991                           
  2992                           ; BSR set to: 0
  2993  0008AC  5164               	movf	___ftadd@exp2& (0+255),w,b
  2994  0008AE  5D65               	subwf	___ftadd@exp1& (0+255),w,b
  2995  0008B0  B0D8               	btfsc	status,0,c
  2996  0008B2  D01B               	goto	l521
  2997  0008B4                     u2160:
  2998                           
  2999                           ; BSR set to: 0
  3000                           
  3001                           ; BSR set to: 0
  3002  0008B4  90D8               	bcf	status,0,c
  3003  0008B6  3637               	rlcf	___ftadd@f2,f,c
  3004  0008B8  3638               	rlcf	___ftadd@f2+1,f,c
  3005  0008BA  3639               	rlcf	___ftadd@f2+2,f,c
  3006  0008BC  0764               	decf	___ftadd@exp2& (0+255),f,b
  3007                           
  3008                           ; BSR set to: 0
  3009  0008BE  5165               	movf	___ftadd@exp1& (0+255),w,b
  3010  0008C0  1964               	xorwf	___ftadd@exp2& (0+255),w,b
  3011  0008C2  B4D8               	btfsc	status,2,c
  3012  0008C4  D00D               	goto	l526
  3013                           
  3014                           ; BSR set to: 0
  3015  0008C6  0763               	decf	___ftadd@sign& (0+255),f,b
  3016  0008C8  C063  F060         	movff	___ftadd@sign,??___ftadd
  3017  0008CC  0E07               	movlw	7
  3018  0008CE  1760               	andwf	??___ftadd& (0+255),f,b
  3019  0008D0  B4D8               	btfsc	status,2,c
  3020  0008D2  D006               	goto	l526
  3021  0008D4  D7EF               	goto	u2160
  3022  0008D6                     
  3023                           ; BSR set to: 0
  3024                           
  3025                           ; BSR set to: 0
  3026  0008D6  90D8               	bcf	status,0,c
  3027  0008D8  3236               	rrcf	___ftadd@f1+2,f,c
  3028  0008DA  3235               	rrcf	___ftadd@f1+1,f,c
  3029  0008DC  3234               	rrcf	___ftadd@f1,f,c
  3030  0008DE  2B65               	incf	___ftadd@exp1& (0+255),f,b
  3031  0008E0                     l526:
  3032                           
  3033                           ; BSR set to: 0
  3034                           
  3035                           ; BSR set to: 0
  3036  0008E0  5164               	movf	___ftadd@exp2& (0+255),w,b
  3037  0008E2  1965               	xorwf	___ftadd@exp1& (0+255),w,b
  3038  0008E4  B4D8               	btfsc	status,2,c
  3039  0008E6  D01F               	goto	u2230
  3040  0008E8  D7F6               	goto	l527
  3041  0008EA                     l521:
  3042                           
  3043                           ; BSR set to: 0
  3044                           
  3045                           ; BSR set to: 0
  3046  0008EA  5165               	movf	___ftadd@exp1& (0+255),w,b
  3047  0008EC  5D64               	subwf	___ftadd@exp2& (0+255),w,b
  3048  0008EE  B0D8               	btfsc	status,0,c
  3049  0008F0  D01A               	goto	u2230
  3050  0008F2                     u2200:
  3051                           
  3052                           ; BSR set to: 0
  3053                           
  3054                           ; BSR set to: 0
  3055  0008F2  90D8               	bcf	status,0,c
  3056  0008F4  3634               	rlcf	___ftadd@f1,f,c
  3057  0008F6  3635               	rlcf	___ftadd@f1+1,f,c
  3058  0008F8  3636               	rlcf	___ftadd@f1+2,f,c
  3059  0008FA  0765               	decf	___ftadd@exp1& (0+255),f,b
  3060                           
  3061                           ; BSR set to: 0
  3062  0008FC  5165               	movf	___ftadd@exp1& (0+255),w,b
  3063  0008FE  1964               	xorwf	___ftadd@exp2& (0+255),w,b
  3064  000900  B4D8               	btfsc	status,2,c
  3065  000902  D00D               	goto	l535
  3066                           
  3067                           ; BSR set to: 0
  3068  000904  0763               	decf	___ftadd@sign& (0+255),f,b
  3069  000906  C063  F060         	movff	___ftadd@sign,??___ftadd
  3070  00090A  0E07               	movlw	7
  3071  00090C  1760               	andwf	??___ftadd& (0+255),f,b
  3072  00090E  B4D8               	btfsc	status,2,c
  3073  000910  D006               	goto	l535
  3074  000912  D7EF               	goto	u2200
  3075  000914                     
  3076                           ; BSR set to: 0
  3077                           
  3078                           ; BSR set to: 0
  3079  000914  90D8               	bcf	status,0,c
  3080  000916  3239               	rrcf	___ftadd@f2+2,f,c
  3081  000918  3238               	rrcf	___ftadd@f2+1,f,c
  3082  00091A  3237               	rrcf	___ftadd@f2,f,c
  3083  00091C  2B64               	incf	___ftadd@exp2& (0+255),f,b
  3084  00091E                     l535:
  3085                           
  3086                           ; BSR set to: 0
  3087                           
  3088                           ; BSR set to: 0
  3089  00091E  5164               	movf	___ftadd@exp2& (0+255),w,b
  3090  000920  1965               	xorwf	___ftadd@exp1& (0+255),w,b
  3091  000922  A4D8               	btfss	status,2,c
  3092  000924  D7F7               	goto	l536
  3093  000926                     u2230:
  3094                           
  3095                           ; BSR set to: 0
  3096                           
  3097                           ; BSR set to: 0
  3098                           
  3099                           ; BSR set to: 0
  3100  000926  AF63               	btfss	___ftadd@sign& (0+255),7,b
  3101  000928  D00C               	goto	l538
  3102                           
  3103                           ; BSR set to: 0
  3104  00092A  0EFF               	movlw	255
  3105  00092C  1A34               	xorwf	___ftadd@f1,f,c
  3106  00092E  0EFF               	movlw	255
  3107  000930  1A35               	xorwf	___ftadd@f1+1,f,c
  3108  000932  0EFF               	movlw	255
  3109  000934  1A36               	xorwf	___ftadd@f1+2,f,c
  3110  000936  0E01               	movlw	1
  3111  000938  2634               	addwf	___ftadd@f1,f,c
  3112  00093A  0E00               	movlw	0
  3113  00093C  2235               	addwfc	___ftadd@f1+1,f,c
  3114  00093E  0E00               	movlw	0
  3115  000940  2236               	addwfc	___ftadd@f1+2,f,c
  3116  000942                     l538:
  3117                           
  3118                           ; BSR set to: 0
  3119  000942  AD63               	btfss	___ftadd@sign& (0+255),6,b
  3120  000944  D00C               	goto	l539
  3121                           
  3122                           ; BSR set to: 0
  3123  000946  0EFF               	movlw	255
  3124  000948  1A37               	xorwf	___ftadd@f2,f,c
  3125  00094A  0EFF               	movlw	255
  3126  00094C  1A38               	xorwf	___ftadd@f2+1,f,c
  3127  00094E  0EFF               	movlw	255
  3128  000950  1A39               	xorwf	___ftadd@f2+2,f,c
  3129  000952  0E01               	movlw	1
  3130  000954  2637               	addwf	___ftadd@f2,f,c
  3131  000956  0E00               	movlw	0
  3132  000958  2238               	addwfc	___ftadd@f2+1,f,c
  3133  00095A  0E00               	movlw	0
  3134  00095C  2239               	addwfc	___ftadd@f2+2,f,c
  3135  00095E                     l539:
  3136                           
  3137                           ; BSR set to: 0
  3138                           
  3139                           ; BSR set to: 0
  3140  00095E  0E00               	movlw	0
  3141  000960  6F63               	movwf	___ftadd@sign& (0+255),b
  3142                           
  3143                           ; BSR set to: 0
  3144  000962  5034               	movf	___ftadd@f1,w,c
  3145  000964  2637               	addwf	___ftadd@f2,f,c
  3146  000966  5035               	movf	___ftadd@f1+1,w,c
  3147  000968  2238               	addwfc	___ftadd@f2+1,f,c
  3148  00096A  5036               	movf	___ftadd@f1+2,w,c
  3149  00096C  2239               	addwfc	___ftadd@f2+2,f,c
  3150                           
  3151                           ; BSR set to: 0
  3152  00096E  AE39               	btfss	___ftadd@f2+2,7,c
  3153  000970  D00E               	goto	l540
  3154                           
  3155                           ; BSR set to: 0
  3156  000972  0EFF               	movlw	255
  3157  000974  1A37               	xorwf	___ftadd@f2,f,c
  3158  000976  0EFF               	movlw	255
  3159  000978  1A38               	xorwf	___ftadd@f2+1,f,c
  3160  00097A  0EFF               	movlw	255
  3161  00097C  1A39               	xorwf	___ftadd@f2+2,f,c
  3162  00097E  0E01               	movlw	1
  3163  000980  2637               	addwf	___ftadd@f2,f,c
  3164  000982  0E00               	movlw	0
  3165  000984  2238               	addwfc	___ftadd@f2+1,f,c
  3166  000986  0E00               	movlw	0
  3167  000988  2239               	addwfc	___ftadd@f2+2,f,c
  3168                           
  3169                           ; BSR set to: 0
  3170  00098A  0E01               	movlw	1
  3171  00098C  6F63               	movwf	___ftadd@sign& (0+255),b
  3172  00098E                     l540:
  3173                           
  3174                           ; BSR set to: 0
  3175                           
  3176                           ; BSR set to: 0
  3177  00098E  C037  F013         	movff	___ftadd@f2,___ftpack@arg
  3178  000992  C038  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  3179  000996  C039  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  3180  00099A  C065  F016         	movff	___ftadd@exp1,___ftpack@exp
  3181  00099E  C063  F017         	movff	___ftadd@sign,___ftpack@sign
  3182  0009A2  EC9C  F006         	call	___ftpack	;wreg free
  3183  0009A6  C013  F034         	movff	?___ftpack,?___ftadd
  3184  0009AA  C014  F035         	movff	?___ftpack+1,?___ftadd+1
  3185  0009AE  C015  F036         	movff	?___ftpack+2,?___ftadd+2
  3186  0009B2  0012               	return	
  3187  0009B4                     __end_of___ftadd:
  3188                           	opt stack 0
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           intcon	equ	0xFF2
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           indf2	equ	0xFDF
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function ___altoft *****************
  3202 ;; Defined at:
  3203 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  c               4   26[COMRAM] long 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  sign            1   35[COMRAM] unsigned char 
  3208 ;;  exp             1   34[COMRAM] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  3   26[COMRAM] float 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         4       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3221 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3222 ;;Total ram usage:       10 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    2
  3225 ;; This function calls:
  3226 ;;		___ftpack
  3227 ;; This function is called by:
  3228 ;;		_USART_Init
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text21
  3233  001044                     __ptext21:
  3234                           	opt stack 0
  3235  001044                     ___altoft:
  3236                           	opt stack 27
  3237                           
  3238                           ;incstack = 0
  3239  001044  0E00               	movlw	0
  3240  001046  6E24               	movwf	___altoft@sign,c
  3241  001048  0E8E               	movlw	142
  3242  00104A  6E23               	movwf	___altoft@exp,c
  3243  00104C  AE1E               	btfss	___altoft@c+3,7,c
  3244  00104E  D011               	goto	l351
  3245  001050  1E1E               	comf	___altoft@c+3,f,c
  3246  001052  1E1D               	comf	___altoft@c+2,f,c
  3247  001054  1E1C               	comf	___altoft@c+1,f,c
  3248  001056  6C1B               	negf	___altoft@c,c
  3249  001058  0E00               	movlw	0
  3250  00105A  221C               	addwfc	___altoft@c+1,f,c
  3251  00105C  221D               	addwfc	___altoft@c+2,f,c
  3252  00105E  221E               	addwfc	___altoft@c+3,f,c
  3253  001060  0E01               	movlw	1
  3254  001062  6E24               	movwf	___altoft@sign,c
  3255  001064  D006               	goto	l351
  3256  001066  90D8               	bcf	status,0,c
  3257  001068  321E               	rrcf	___altoft@c+3,f,c
  3258  00106A  321D               	rrcf	___altoft@c+2,f,c
  3259  00106C  321C               	rrcf	___altoft@c+1,f,c
  3260  00106E  321B               	rrcf	___altoft@c,f,c
  3261  001070  2A23               	incf	___altoft@exp,f,c
  3262  001072                     l351:
  3263  001072  0E00               	movlw	0
  3264  001074  141B               	andwf	___altoft@c,w,c
  3265  001076  6E1F               	movwf	??___altoft& (0+255),c
  3266  001078  0E00               	movlw	0
  3267  00107A  141C               	andwf	___altoft@c+1,w,c
  3268  00107C  6E20               	movwf	(??___altoft+1)& (0+255),c
  3269  00107E  0E00               	movlw	0
  3270  001080  141D               	andwf	___altoft@c+2,w,c
  3271  001082  6E21               	movwf	(??___altoft+2)& (0+255),c
  3272  001084  0EFF               	movlw	255
  3273  001086  141E               	andwf	___altoft@c+3,w,c
  3274  001088  6E22               	movwf	(??___altoft+3)& (0+255),c
  3275  00108A  501F               	movf	??___altoft,w,c
  3276  00108C  1020               	iorwf	??___altoft+1,w,c
  3277  00108E  1021               	iorwf	??___altoft+2,w,c
  3278  001090  1022               	iorwf	??___altoft+3,w,c
  3279  001092  A4D8               	btfss	status,2,c
  3280  001094  D7E8               	goto	l352
  3281  001096  C01B  F013         	movff	___altoft@c,___ftpack@arg
  3282  00109A  C01C  F014         	movff	___altoft@c+1,___ftpack@arg+1
  3283  00109E  C01D  F015         	movff	___altoft@c+2,___ftpack@arg+2
  3284  0010A2  C023  F016         	movff	___altoft@exp,___ftpack@exp
  3285  0010A6  C024  F017         	movff	___altoft@sign,___ftpack@sign
  3286  0010AA  EC9C  F006         	call	___ftpack	;wreg free
  3287  0010AE  C013  F01B         	movff	?___ftpack,?___altoft
  3288  0010B2  C014  F01C         	movff	?___ftpack+1,?___altoft+1
  3289  0010B6  C015  F01D         	movff	?___ftpack+2,?___altoft+2
  3290  0010BA  0012               	return	
  3291  0010BC                     __end_of___altoft:
  3292                           	opt stack 0
  3293                           tblptru	equ	0xFF8
  3294                           tblptrh	equ	0xFF7
  3295                           tblptrl	equ	0xFF6
  3296                           tablat	equ	0xFF5
  3297                           intcon	equ	0xFF2
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           indf2	equ	0xFDF
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function ___ftpack *****************
  3306 ;; Defined at:
  3307 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  arg             3   18[COMRAM] unsigned um
  3310 ;;  exp             1   21[COMRAM] unsigned char 
  3311 ;;  sign            1   22[COMRAM] unsigned char 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  3   18[COMRAM] float 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3323 ;;      Params:         5       0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3325 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3326 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        8 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		___altoft
  3334 ;;		___awtoft
  3335 ;;		___ftadd
  3336 ;;		___ftdiv
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text22
  3341  000D38                     __ptext22:
  3342                           	opt stack 0
  3343  000D38                     ___ftpack:
  3344                           	opt stack 24
  3345                           
  3346                           ;incstack = 0
  3347  000D38  5016               	movf	___ftpack@exp,w,c
  3348  000D3A  B4D8               	btfsc	status,2,c
  3349  000D3C  D005               	goto	u1760
  3350  000D3E  5013               	movf	___ftpack@arg,w,c
  3351  000D40  1014               	iorwf	___ftpack@arg+1,w,c
  3352  000D42  1015               	iorwf	___ftpack@arg+2,w,c
  3353  000D44  A4D8               	btfss	status,2,c
  3354  000D46  D00C               	goto	l481
  3355  000D48                     u1760:
  3356  000D48  0E00               	movlw	0
  3357  000D4A  6E13               	movwf	?___ftpack,c
  3358  000D4C  0E00               	movlw	0
  3359  000D4E  6E14               	movwf	?___ftpack+1,c
  3360  000D50  0E00               	movlw	0
  3361  000D52  6E15               	movwf	?___ftpack+2,c
  3362  000D54  0012               	return	
  3363  000D56  2A16               	incf	___ftpack@exp,f,c
  3364  000D58  90D8               	bcf	status,0,c
  3365  000D5A  3215               	rrcf	___ftpack@arg+2,f,c
  3366  000D5C  3214               	rrcf	___ftpack@arg+1,f,c
  3367  000D5E  3213               	rrcf	___ftpack@arg,f,c
  3368  000D60                     l481:
  3369  000D60  0E00               	movlw	0
  3370  000D62  1413               	andwf	___ftpack@arg,w,c
  3371  000D64  6E18               	movwf	??___ftpack& (0+255),c
  3372  000D66  0E00               	movlw	0
  3373  000D68  1414               	andwf	___ftpack@arg+1,w,c
  3374  000D6A  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3375  000D6C  0EFE               	movlw	254
  3376  000D6E  1415               	andwf	___ftpack@arg+2,w,c
  3377  000D70  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3378  000D72  5018               	movf	??___ftpack,w,c
  3379  000D74  1019               	iorwf	??___ftpack+1,w,c
  3380  000D76  101A               	iorwf	??___ftpack+2,w,c
  3381  000D78  B4D8               	btfsc	status,2,c
  3382  000D7A  D00C               	goto	l484
  3383  000D7C  D7EC               	goto	l482
  3384  000D7E  2A16               	incf	___ftpack@exp,f,c
  3385  000D80  0E01               	movlw	1
  3386  000D82  2613               	addwf	___ftpack@arg,f,c
  3387  000D84  0E00               	movlw	0
  3388  000D86  2214               	addwfc	___ftpack@arg+1,f,c
  3389  000D88  0E00               	movlw	0
  3390  000D8A  2215               	addwfc	___ftpack@arg+2,f,c
  3391  000D8C  90D8               	bcf	status,0,c
  3392  000D8E  3215               	rrcf	___ftpack@arg+2,f,c
  3393  000D90  3214               	rrcf	___ftpack@arg+1,f,c
  3394  000D92  3213               	rrcf	___ftpack@arg,f,c
  3395  000D94                     l484:
  3396  000D94  0E00               	movlw	0
  3397  000D96  1413               	andwf	___ftpack@arg,w,c
  3398  000D98  6E18               	movwf	??___ftpack& (0+255),c
  3399  000D9A  0E00               	movlw	0
  3400  000D9C  1414               	andwf	___ftpack@arg+1,w,c
  3401  000D9E  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3402  000DA0  0EFF               	movlw	255
  3403  000DA2  1415               	andwf	___ftpack@arg+2,w,c
  3404  000DA4  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3405  000DA6  5018               	movf	??___ftpack,w,c
  3406  000DA8  1019               	iorwf	??___ftpack+1,w,c
  3407  000DAA  101A               	iorwf	??___ftpack+2,w,c
  3408  000DAC  B4D8               	btfsc	status,2,c
  3409  000DAE  D006               	goto	l487
  3410  000DB0  D7E6               	goto	l485
  3411  000DB2  0616               	decf	___ftpack@exp,f,c
  3412  000DB4  90D8               	bcf	status,0,c
  3413  000DB6  3613               	rlcf	___ftpack@arg,f,c
  3414  000DB8  3614               	rlcf	___ftpack@arg+1,f,c
  3415  000DBA  3615               	rlcf	___ftpack@arg+2,f,c
  3416  000DBC                     l487:
  3417  000DBC  BE14               	btfsc	___ftpack@arg+1,7,c
  3418  000DBE  D003               	goto	u1800
  3419  000DC0  0E02               	movlw	2
  3420  000DC2  6016               	cpfslt	___ftpack@exp,c
  3421  000DC4  D7F6               	goto	l488
  3422  000DC6                     u1800:
  3423  000DC6  A016               	btfss	___ftpack@exp,0,c
  3424  000DC8  9E14               	bcf	___ftpack@arg+1,7,c
  3425  000DCA  90D8               	bcf	status,0,c
  3426  000DCC  3216               	rrcf	___ftpack@exp,f,c
  3427  000DCE  5016               	movf	___ftpack@exp,w,c
  3428  000DD0  1215               	iorwf	___ftpack@arg+2,f,c
  3429  000DD2  5017               	movf	___ftpack@sign,w,c
  3430  000DD4  A4D8               	btfss	status,2,c
  3431  000DD6  8E15               	bsf	___ftpack@arg+2,7,c
  3432  000DD8  C013  F013         	movff	___ftpack@arg,?___ftpack
  3433  000DDC  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3434  000DE0  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3435  000DE4  0012               	return	
  3436  000DE6                     __end_of___ftpack:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           intcon	equ	0xFF2
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           indf2	equ	0xFDF
  3446                           fsr2h	equ	0xFDA
  3447                           fsr2l	equ	0xFD9
  3448                           status	equ	0xFD8
  3449                           
  3450 ;; *************** function _MSdelay *****************
  3451 ;; Defined at:
  3452 ;;		line 50 in file "USART_Source_File.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  val             2   18[COMRAM] unsigned int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  j               2   22[COMRAM] unsigned int 
  3457 ;;  i               2   20[COMRAM] unsigned int 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3467 ;;      Params:         2       0       0       0       0       0       0       0       0
  3468 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3470 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3471 ;;Total ram usage:        6 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text23
  3482  001284                     __ptext23:
  3483                           	opt stack 0
  3484  001284                     _MSdelay:
  3485                           	opt stack 29
  3486                           
  3487                           ;USART_Source_File.c: 52: unsigned int i,j;
  3488                           ;USART_Source_File.c: 53: for(i=0;i<=val;i++)
  3489                           
  3490                           ;incstack = 0
  3491  001284  0E00               	movlw	0
  3492  001286  6E16               	movwf	MSdelay@i+1,c
  3493  001288  0E00               	movlw	0
  3494  00128A  6E15               	movwf	MSdelay@i,c
  3495  00128C  D00F               	goto	l209
  3496  00128E                     
  3497                           ;USART_Source_File.c: 54: for(j=0;j<81;j++);
  3498  00128E  0E00               	movlw	0
  3499  001290  6E18               	movwf	MSdelay@j+1,c
  3500  001292  0E00               	movlw	0
  3501  001294  6E17               	movwf	MSdelay@j,c
  3502  001296                     l1806:
  3503  001296  5018               	movf	MSdelay@j+1,w,c
  3504  001298  E107               	bnz	l1814
  3505  00129A  0E51               	movlw	81
  3506  00129C  5C17               	subwf	MSdelay@j,w,c
  3507  00129E  B0D8               	btfsc	status,0,c
  3508  0012A0  D003               	goto	u1470
  3509  0012A2  4A17               	infsnz	MSdelay@j,f,c
  3510  0012A4  2A18               	incf	MSdelay@j+1,f,c
  3511  0012A6  D7F7               	goto	l1806
  3512  0012A8                     u1470:
  3513  0012A8                     l1814:
  3514  0012A8  4A15               	infsnz	MSdelay@i,f,c
  3515  0012AA  2A16               	incf	MSdelay@i+1,f,c
  3516  0012AC                     l209:
  3517  0012AC  5015               	movf	MSdelay@i,w,c
  3518  0012AE  5C13               	subwf	MSdelay@val,w,c
  3519  0012B0  5016               	movf	MSdelay@i+1,w,c
  3520  0012B2  5814               	subwfb	MSdelay@val+1,w,c
  3521  0012B4  A0D8               	btfss	status,0,c
  3522  0012B6  0012               	return	
  3523  0012B8  D7EA               	goto	l210
  3524  0012BA                     __end_of_MSdelay:
  3525                           	opt stack 0
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           intcon	equ	0xFF2
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           indf2	equ	0xFDF
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8
  3537                           
  3538 ;; *************** function _ADCint *****************
  3539 ;; Defined at:
  3540 ;;		line 28 in file "funciones.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		None
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3556 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3557 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3558 ;;Total ram usage:       18 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		Interrupt level 2
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	intcode
  3568  000008                     __pintcode:
  3569                           	opt stack 0
  3570  000008                     _ADCint:
  3571                           	opt stack 24
  3572                           
  3573                           ;incstack = 0
  3574  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3575  00000A  ED98  F007         	call	int_func,f	;refresh shadow registers
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           indf2	equ	0xFDF
  3584                           fsr2h	equ	0xFDA
  3585                           fsr2l	equ	0xFD9
  3586                           status	equ	0xFD8
  3587                           
  3588                           	psect	intcode_body
  3589  000F30                     __pintcode_body:
  3590                           	opt stack 24
  3591  000F30                     int_func:
  3592                           	opt stack 24
  3593  000F30  0006               	pop		; remove dummy address from shadow register refresh
  3594  000F32  CFFA F001          	movff	pclath,??_ADCint
  3595  000F36  CFFB F002          	movff	pclatu,??_ADCint+1
  3596  000F3A  CFE9 F003          	movff	fsr0l,??_ADCint+2
  3597  000F3E  CFEA F004          	movff	fsr0h,??_ADCint+3
  3598  000F42  CFE1 F005          	movff	fsr1l,??_ADCint+4
  3599  000F46  CFE2 F006          	movff	fsr1h,??_ADCint+5
  3600  000F4A  CFD9 F007          	movff	fsr2l,??_ADCint+6
  3601  000F4E  CFDA F008          	movff	fsr2h,??_ADCint+7
  3602  000F52  CFF3 F009          	movff	prodl,??_ADCint+8
  3603  000F56  CFF4 F00A          	movff	prodh,??_ADCint+9
  3604  000F5A  CFF6 F00B          	movff	tblptrl,??_ADCint+10
  3605  000F5E  CFF7 F00C          	movff	tblptrh,??_ADCint+11
  3606  000F62  CFF8 F00D          	movff	tblptru,??_ADCint+12
  3607  000F66  CFF5 F00E          	movff	tablat,??_ADCint+13
  3608  000F6A  C04D  F00F         	movff	btemp,??_ADCint+14
  3609  000F6E  C04E  F010         	movff	btemp+1,??_ADCint+15
  3610  000F72  C04F  F011         	movff	btemp+2,??_ADCint+16
  3611  000F76  C050  F012         	movff	btemp+3,??_ADCint+17
  3612                           
  3613                           ;funciones.c: 30: if(PIR1bits.ADIF == 1)
  3614  000F7A  BC9E               	btfsc	3998,6,c	;volatile
  3615                           
  3616                           ;funciones.c: 31: {
  3617                           ;funciones.c: 32: PIR1bits.ADIF = 0;
  3618  000F7C  9C9E               	bcf	3998,6,c	;volatile
  3619  000F7E  C012  F050         	movff	??_ADCint+17,btemp+3
  3620  000F82  C011  F04F         	movff	??_ADCint+16,btemp+2
  3621  000F86  C010  F04E         	movff	??_ADCint+15,btemp+1
  3622  000F8A  C00F  F04D         	movff	??_ADCint+14,btemp
  3623  000F8E  C00E  FFF5         	movff	??_ADCint+13,tablat
  3624  000F92  C00D  FFF8         	movff	??_ADCint+12,tblptru
  3625  000F96  C00C  FFF7         	movff	??_ADCint+11,tblptrh
  3626  000F9A  C00B  FFF6         	movff	??_ADCint+10,tblptrl
  3627  000F9E  C00A  FFF4         	movff	??_ADCint+9,prodh
  3628  000FA2  C009  FFF3         	movff	??_ADCint+8,prodl
  3629  000FA6  C008  FFDA         	movff	??_ADCint+7,fsr2h
  3630  000FAA  C007  FFD9         	movff	??_ADCint+6,fsr2l
  3631  000FAE  C006  FFE2         	movff	??_ADCint+5,fsr1h
  3632  000FB2  C005  FFE1         	movff	??_ADCint+4,fsr1l
  3633  000FB6  C004  FFEA         	movff	??_ADCint+3,fsr0h
  3634  000FBA  C003  FFE9         	movff	??_ADCint+2,fsr0l
  3635  000FBE  C002  FFFB         	movff	??_ADCint+1,pclatu
  3636  000FC2  C001  FFFA         	movff	??_ADCint,pclath
  3637  000FC6  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3638  000FC8  0011               	retfie		f
  3639  000FCA                     __end_of_ADCint:
  3640                           	opt stack 0
  3641                           pclatu	equ	0xFFB
  3642                           pclath	equ	0xFFA
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           prodh	equ	0xFF4
  3648                           prodl	equ	0xFF3
  3649                           intcon	equ	0xFF2
  3650                           postinc0	equ	0xFEE
  3651                           fsr0h	equ	0xFEA
  3652                           fsr0l	equ	0xFE9
  3653                           wreg	equ	0xFE8
  3654                           fsr1h	equ	0xFE2
  3655                           fsr1l	equ	0xFE1
  3656                           indf2	equ	0xFDF
  3657                           fsr2h	equ	0xFDA
  3658                           fsr2l	equ	0xFD9
  3659                           status	equ	0xFD8
  3660                           pclatu	equ	0xFFB
  3661                           pclath	equ	0xFFA
  3662                           tblptru	equ	0xFF8
  3663                           tblptrh	equ	0xFF7
  3664                           tblptrl	equ	0xFF6
  3665                           tablat	equ	0xFF5
  3666                           prodh	equ	0xFF4
  3667                           prodl	equ	0xFF3
  3668                           intcon	equ	0xFF2
  3669                           postinc0	equ	0xFEE
  3670                           fsr0h	equ	0xFEA
  3671                           fsr0l	equ	0xFE9
  3672                           wreg	equ	0xFE8
  3673                           fsr1h	equ	0xFE2
  3674                           fsr1l	equ	0xFE1
  3675                           indf2	equ	0xFDF
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680                           	psect	rparam
  3681  0000                     pclatu	equ	0xFFB
  3682                           pclath	equ	0xFFA
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           postinc0	equ	0xFEE
  3691                           fsr0h	equ	0xFEA
  3692                           fsr0l	equ	0xFE9
  3693                           wreg	equ	0xFE8
  3694                           fsr1h	equ	0xFE2
  3695                           fsr1l	equ	0xFE1
  3696                           indf2	equ	0xFDF
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701                           	psect	temp
  3702  00004D                     btemp:
  3703                           	opt stack 0
  3704  00004D                     	ds	1
  3705  0000                     int$flags	set	btemp
  3706  0000                     wtemp6	set	btemp+1
  3707                           pclatu	equ	0xFFB
  3708                           pclath	equ	0xFFA
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           postinc0	equ	0xFEE
  3717                           fsr0h	equ	0xFEA
  3718                           fsr0l	equ	0xFE9
  3719                           wreg	equ	0xFE8
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        1
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     28      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    memset@p1	PTR void  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    memset@p	PTR unsigned char  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    sp__memset	PTR void  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    USART_ReceiveString@Input	PTR unsigned char  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 12
		 -> main@temp(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_lcd_texto
    _lcd_origen->_wait_in_ms
    _lcd_limpiar->_wait_in_ms
    _lcd_iniciar->_wait_in_ms
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___awtoft->___ftpack
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___ftadd
    ___fttol->___ftdiv
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _ADCint in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_limpiar->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    _USART_Init->___fttol

Critical Paths under _ADCint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ADCint in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ADCint in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ADCint in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ADCint in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ADCint in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ADCint in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ADCint in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   88099
                            _MSdelay
                         _USART_Init
                _USART_ReceiveString
                   _USART_SendString
                        _configBoard
                        _lcd_iniciar
                        _lcd_limpiar
                         _lcd_origen
                          _lcd_texto
                             _memset
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     243
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     324
                                             18 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            3     1      2    9288
                                             57 COMRAM     1     1      0
                                             26 BANK0      2     0      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    9133
                                             19 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_limpiar                                          0     0      0   18744
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   27725
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    9763
                                             19 BANK0      7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    8981
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (4) _wait_in_ms                                          10     8      2    8981
                                             55 COMRAM     2     0      2
                                             11 BANK0      8     8      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3116
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     136
                                             19 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveString                                 11     8      3     443
                                             18 COMRAM    11     8      3
                  _USART_ReceiveChar
 ---------------------------------------------------------------------------------
 (2) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4   12284
                                             11 BANK0      7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     551
                                             51 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3813
                                             36 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4578
                                             51 COMRAM     6     0      6
                                              0 BANK0      6     6      0
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    3187
                                             26 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     168
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ADCint                                              18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _USART_ReceiveString
     _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_limpiar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _memset
   _strcmp

 _ADCint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      20        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 14 20:33:25 2018

                ___altoft@exp 0023                 ___altoft@sign 0024                            l43 0CE8  
                          l46 0D20                            l47 0D28                   __CFG_BORV$3 000000  
                ___ftadd@exp1 0065                  ___ftadd@exp2 0064                  ___ftadd@sign 0063  
                         l210 128E                           l203 135A                           l204 1348  
                         l127 130A                           l224 0E58                           l128 12EC  
                         l209 12AC                           l217 0E60                           l218 0DF0  
                         l219 0E30                           l262 0F10                           l351 1072  
                         l263 0F12                           l352 1066                           l512 085A  
                         l521 08EA                           l259 0EBE                           l540 098E  
                         l516 0884                           l526 08E0                           l462 1260  
                         l535 091E                           l527 08D6                           l536 0914  
                         l481 0D60                           l545 0AD4                           l482 0D56  
                         l538 0942                           l539 095E                           l547 0AFC  
                         l484 0D94                           l548 0B3A                           l820 120A  
                         l485 0D7E                           l549 0B60                           l581 09E2  
                         l821 1202                           l590 0A72                           l487 0DBC  
                         l583 0A5A                           l488 0DB2                           l592 0A9A  
                         l584 0A4A                           l589 0A7E                           l694 1334  
                         l695 1324                           wreg 000FE8                ??_lcd_caracter 0075  
                __CFG_LVP$OFF 000000                  ___ftdiv@cntr 002E                  ___ftdiv@sign 0033  
                __CFG_WDT$OFF 000000                          l1104 13C2                          l2136 0D28  
                        l1814 12A8                          l1806 1296                          l1858 1324  
                        STR_1 0801                          u2000 0D16                          u2100 084C  
                        u2200 08F2                          u2025 11AE                          u2130 0876  
                        u2035 1142                          u1500 0E16                          u2061 0818  
                        u2230 0926                          u1510 0E1E                          u2071 082C  
                        u2160 08B4                          u1540 1240                          u1470 12A8  
                        u1800 0DC6                          u1910 0A00                          u1831 0ABC  
                        u1760 0D48                          u1851 0AE4                          u1915 09F8  
                        u1950 0A84                          u1891 09C6                          u1975 0C96  
                        _RCIF 007CF5                          _TXIF 007CF4                          _main 0E8C  
                ___ftpack@arg 0013                  ___ftpack@exp 0016                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 004D      __end_of_USART_SendString 136A                          prodh 000FF4  
                        prodl 000FF3                          start 000E               __end_of_MSdelay 12BA  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000          lcd_caracter@caracter 0073  
                ___fttol@exp1 006A                  ___fttol@lval 0066                 __CFG_PLLDIV$2 000000  
                       ?_main 0001               __end_of___ftadd 09B4               __end_of___ftdiv 0B92  
             __end_of___fttol 0AAC                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _TMR0L 000FD6                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TXREG 000FAD  
                       _TXSTA 000FAC                __CFG_FCMEN$OFF 000000                 ___awtoft@sign 001E  
                       _nivel 004C                 ___ftpack@sign 0017                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8                         wtemp6 004E  
                 ?_USART_Init 006B               __initialization 12BA                  __end_of_main 0F30  
                      ??_main 003B                 ___fttol@sign1 0065                 __activetblptr 000001  
__size_of_USART_ReceiveString 00A6          USART_ReceiveString@i 001B                        _ADCON0 000FC2  
            __end_of___altoft 10BC                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _T08BIT 007EAE                        _ADCint 0008              __end_of___awtoft 1284  
            __end_of___ftpack 0DE6                     ??_MSdelay 0015                        _OSCCON 000FD3  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                        _TRISC6 007CA6  
                      _TRISC7 007CA7          __size_of_configBoard 006E          __end_of_lcd_caracter 1196  
        __size_of_lcd_iniciar 00D6                     ??___ftadd 0060                     ??___ftdiv 002B  
                   ??___fttol 0060          __size_of_lcd_limpiar 001C                        _memset 131A  
                      clear_0 12D2               _cantidadBotones 003D                        _strcmp 1200  
                __pdataCOMRAM 004C    __end_of_USART_TransmitChar 13CC                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
         __size_of_USART_Init 007A                    __accesstop 0060       __end_of__initialization 12D8  
                  ___altoft@c 001B                    ___ftadd@f1 0034                    ___ftadd@f2 0037  
               ___rparam_used 000001                    ___ftdiv@f1 0025                    ___ftdiv@f2 0028  
                  ___ftdiv@f3 002F                    ___awtoft@c 001B                    ___fttol@f1 0034  
              __pcstackCOMRAM 0001            __size_of_lcd_orden 006A            __size_of_lcd_texto 0030  
          __size_of_lcd_pulso 001E                       ?_ADCint 0001             ?_USART_SendString 0014  
     USART_ReceiveString@temp 001D            ??_USART_SendString 0016                lcd_orden@orden 0073  
                   ?___altoft 001B                       ?_memset 0013                     ?___awtoft 001B  
                   ?___ftpack 0013                       ?_strcmp 0013                    _lcd_origen 1388  
             __size_of_ADCint 0FC2                       _MSdelay 1284         __size_of_lcd_caracter 006C  
                ??_USART_Init 003A                       __Hparam 0000                       __Lparam 0000  
         _USART_ReceiveString 0DE6             __end_of_lcd_orden 1200             __end_of_lcd_texto 131A  
           __end_of_lcd_pulso 1388                       ___ftadd 0806                       ___ftdiv 0AAC  
                     ___fttol 09B4                  __psmallconst 0800                    ??___altoft 001F  
                     __pcinit 12BA                    ??___awtoft 001E                    ??___ftpack 0018  
             __size_of_memset 002C                       __ramtop 0800                       __ptext0 0E8C  
                     __ptext1 1200                       __ptext2 131A                       __ptext3 12EA  
                     __ptext4 112A                       __ptext5 1388                       __ptext6 13A4  
                     __ptext7 0B92                       __ptext8 1196                       __ptext9 136A  
         USART_SendString@out 0014                     _T0CONbits 000FD5               __size_of_strcmp 004C  
              USART_Init@temp 006F          ?_USART_ReceiveString 0013            __end_of_USART_Init 1044  
                _lcd_caracter 112A                __pintcode_body 0F30          end_of_initialization 12D8  
                     memset@c 0015                       memset@n 0017                       memset@p 0019  
        wait_in_ms@time_in_ms 0038                       int_func 0F30                       postinc0 000FEE  
                  _wait_in_ms 0C68                       strcmp@r 0018                     _PORTCbits 000F82  
                   _PORTDbits 000F83         ??_USART_ReceiveString 0016                     _TRISAbits 000F92  
                   _TRISDbits 000F95                   ?_lcd_origen 0001           USART_Init@baud_rate 006B  
       USART_TransmitChar@out 0013                __end_of_ADCint 0FCA                   ___ftdiv@exp 0032  
               ??_configBoard 0013                    _puntuacion 003B            _USART_TransmitChar 13C0  
               ??_lcd_iniciar 003A                 ??_lcd_limpiar 003A           ?_USART_TransmitChar 0001  
               __pidataCOMRAM 13D4                __end_of_memset 1346                __end_of_strcmp 124C  
         start_initialization 12BA          ??_USART_TransmitChar 0013               wait_in_ms@count 006F  
                    ??_ADCint 0001            wait_in_ms@count_ms 0071             _USART_ReceiveChar 13CC  
          ?_USART_ReceiveChar 0001           __end_of_configBoard 112A           __size_of_lcd_origen 001C  
                 ?_wait_in_ms 0038           __end_of_lcd_iniciar 0C68                      ??_memset 0019  
         __end_of_lcd_limpiar 13C0           ??_USART_ReceiveChar 0013                      ??_strcmp 0017  
   __size_of_USART_SendString 0024             __size_of___altoft 0078             __size_of___awtoft 0038  
           __size_of___ftpack 00AE                   __pbssCOMRAM 003B                 __pcstackBANK0 0060  
                    ?_MSdelay 0013      USART_ReceiveString@Input 0013     __end_of_USART_ReceiveChar 13D4  
                   __pintcode 0008                      ?___ftadd 0034                      ?___ftdiv 0025  
                    ?___fttol 0034                     _lcd_orden 1196                     _lcd_texto 12EA  
                   _lcd_pulso 136A                   __smallconst 0800           __size_of_wait_in_ms 00D0  
                    MSdelay@i 0015                      MSdelay@j 0017                   _configBoard 10BC  
                    _PIE1bits 000F9D                   _lcd_iniciar 0B92                      _PIR1bits 000F9E  
                 _lcd_limpiar 13A4                    ?_lcd_orden 0073                    ?_lcd_texto 007A  
                  ?_lcd_pulso 0001                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                  ??_lcd_origen 003A              __size_of_MSdelay 0036  
              wait_in_ms@flag 006D    __size_of_USART_ReceiveChar 0008                      __Hrparam 0000  
                    __Lrparam 0000                  __Lsmallconst 0800            __end_of_lcd_origen 13A4  
            __size_of___ftadd 01AE              __size_of___ftdiv 00E6                      ___altoft 1044  
            __size_of___fttol 00F8   __end_of_USART_ReceiveString 0E8C                      ___awtoft 124C  
                    ___ftpack 0D38              _USART_SendString 1346                      __ptext10 0C68  
                    __ptext11 124C                      __ptext20 0806                      __ptext12 10BC  
                    __ptext21 1044                      __ptext13 1346                      __ptext22 0D38  
                    __ptext14 13C0                      __ptext23 1284                      __ptext15 0DE6  
                    __ptext16 13CC                      __ptext17 0FCA                      __ptext18 09B4  
                    __ptext19 0AAC               lcd_texto@cadena 007A                 __size_of_main 00A4  
                  MSdelay@val 0013                      _numTopos 003F                      int$flags 004D  
                ??_wait_in_ms 006B                      main@temp 0040                   ??_lcd_orden 0075  
                 ??_lcd_texto 003A                   ??_lcd_pulso 003A         __CFG_CPUDIV$OSC1_PLL2 000000  
               _presionoBoton 003E                    _INTCONbits 000FF2                      memset@p1 0013  
 __size_of_USART_TransmitChar 000C     USART_ReceiveString@length 0015                      intlevel2 0000  
          __end_of_wait_in_ms 0D38                      strcmp@s1 0013                      strcmp@s2 0015  
               ?_lcd_caracter 0073            __CFG_FOSC$HSPLL_HS 000000                  ?_configBoard 0001  
                ?_lcd_iniciar 0001                    _USART_Init 0FCA                  ?_lcd_limpiar 0001  
