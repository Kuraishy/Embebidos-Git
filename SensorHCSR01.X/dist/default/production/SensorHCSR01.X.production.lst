

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 20:33:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _TMR1	set	4046
    51  0000                     _PORTA	set	3968
    52  0000                     _PIR1bits	set	3998
    53  0000                     _PIE1bits	set	3997
    54  0000                     _TRISAbits	set	3986
    55  0000                     _ADCON2bits	set	4032
    56  0000                     _ADCON0bits	set	4034
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON1bits	set	4033
    59  0000                     _T0CONbits	set	4053
    60  0000                     _INTCONbits	set	4082
    61  0000                     _PORTBbits	set	3969
    62  0000                     _T1CON	set	4045
    63  0000                     _INTCON2bits	set	4081
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISB	set	3987
    66  0000                     _OSCCON	set	4051
    67  0000                     _PORTD	set	3971
    68  0000                     _PORTDbits	set	3971
    69  0000                     _TRISDbits	set	3989
    70  0000                     _TMR0L	set	4054
    71  0000                     _TMR0IF	set	32658
    72  0000                     _TMR0ON	set	32431
    73  0000                     _RCIF	set	31989
    74  0000                     _T08BIT	set	32430
    75  0000                     _TMR1ON	set	32360
    76  0000                     _TMR1IF	set	31984
    77  0000                     _LATD0	set	31840
    78                           
    79                           ; #config settings
    80  0000                     
    81                           	psect	cinit
    82  007CD4                     __pcinit:
    83                           	opt stack 0
    84  007CD4                     start_initialization:
    85                           	opt stack 0
    86  007CD4                     __initialization:
    87                           	opt stack 0
    88  007CD4                     end_of_initialization:
    89                           	opt stack 0
    90  007CD4                     __end_of__initialization:
    91                           	opt stack 0
    92  007CD4  0100               	movlb	0
    93  007CD6  EF2F  F03F         	goto	_main	;jump to C main() function
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt stack 0
    98  000001                     ?___ftpack:
    99                           	opt stack 0
   100  000001                     ___ftpack@arg:
   101                           	opt stack 0
   102  000001                     ___ftge@ff1:
   103                           	opt stack 0
   104                           
   105                           ; 3 bytes @ 0x0
   106  000001                     	ds	3
   107  000004                     ___ftpack@exp:
   108                           	opt stack 0
   109  000004                     ___ftge@ff2:
   110                           	opt stack 0
   111                           
   112                           ; 3 bytes @ 0x3
   113  000004                     	ds	1
   114  000005                     ___ftpack@sign:
   115                           	opt stack 0
   116                           
   117                           ; 1 bytes @ 0x4
   118  000005                     	ds	1
   119  000006                     ??___ftpack:
   120                           
   121                           ; 1 bytes @ 0x5
   122  000006                     	ds	1
   123  000007                     ??___ftge:
   124                           
   125                           ; 1 bytes @ 0x6
   126  000007                     	ds	2
   127  000009                     ?___awtoft:
   128                           	opt stack 0
   129  000009                     ___awtoft@c:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x8
   133  000009                     	ds	3
   134  00000C                     ___awtoft@sign:
   135                           	opt stack 0
   136                           
   137                           ; 1 bytes @ 0xB
   138  00000C                     	ds	1
   139  00000D                     ?___ftdiv:
   140                           	opt stack 0
   141  00000D                     ___ftdiv@f1:
   142                           	opt stack 0
   143                           
   144                           ; 3 bytes @ 0xC
   145  00000D                     	ds	3
   146  000010                     ___ftdiv@f2:
   147                           	opt stack 0
   148                           
   149                           ; 3 bytes @ 0xF
   150  000010                     	ds	3
   151  000013                     ??___ftdiv:
   152                           
   153                           ; 1 bytes @ 0x12
   154  000013                     	ds	3
   155  000016                     ___ftdiv@cntr:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x15
   159  000016                     	ds	1
   160  000017                     ___ftdiv@f3:
   161                           	opt stack 0
   162                           
   163                           ; 3 bytes @ 0x16
   164  000017                     	ds	3
   165  00001A                     ___ftdiv@exp:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x19
   169  00001A                     	ds	1
   170  00001B                     ___ftdiv@sign:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x1A
   174  00001B                     	ds	1
   175  00001C                     main@Time:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x1B
   179  00001C                     	ds	2
   180  00001E                     main@Distance:
   181                           	opt stack 0
   182                           
   183                           ; 3 bytes @ 0x1D
   184  00001E                     	ds	3
   185                           
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 30 in file "PruebaSensor.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;  Total_distan   30    0        float [10]
   196 ;;  Distance        3   29[COMRAM] float 
   197 ;;  Time            2   27[COMRAM] int 
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   207 ;;      Params:         0       0       0       0       0       0       0       0       0
   208 ;;      Locals:         5       0       0       0       0       0       0       0       0
   209 ;;      Temps:          0       0       0       0       0       0       0       0       0
   210 ;;      Totals:         5       0       0       0       0       0       0       0       0
   211 ;;Total ram usage:        5 bytes
   212 ;; Hardware stack levels required when called:    2
   213 ;; This function calls:
   214 ;;		_Trigger_Pulse_10us
   215 ;;		___awtoft
   216 ;;		___ftdiv
   217 ;;		___ftge
   218 ;; This function is called by:
   219 ;;		Startup code after reset
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text0
   224  007E5E                     __ptext0:
   225                           	opt stack 0
   226  007E5E                     _main:
   227                           	opt stack 29
   228                           
   229                           ;PruebaSensor.c: 32: float Distance;
   230                           ;PruebaSensor.c: 33: int Time;
   231                           ;PruebaSensor.c: 34: float Total_distance[10];
   232                           ;PruebaSensor.c: 35: OSCCON=0x72;
   233                           
   234                           ;incstack = 0
   235  007E5E  0E72               	movlw	114
   236  007E60  6ED3               	movwf	4051,c	;volatile
   237                           
   238                           ;PruebaSensor.c: 36: TRISB = 0xff;
   239  007E62  6893               	setf	3987,c	;volatile
   240                           
   241                           ;PruebaSensor.c: 37: TRISD = 0;
   242  007E64  0E00               	movlw	0
   243  007E66  6E95               	movwf	3989,c	;volatile
   244                           
   245                           ;PruebaSensor.c: 38: INTCON2bits.RBPU=0;
   246  007E68  9EF1               	bcf	intcon2,7,c	;volatile
   247                           
   248                           ;PruebaSensor.c: 40: LATD0 = 0;
   249  007E6A  908C               	bcf	3980,0,c	;volatile
   250                           
   251                           ;PruebaSensor.c: 42: T1CON = 0x80;
   252  007E6C  0E80               	movlw	128
   253  007E6E  6ECD               	movwf	4045,c	;volatile
   254                           
   255                           ;PruebaSensor.c: 43: TMR1IF = 0;
   256  007E70  909E               	bcf	3998,0,c	;volatile
   257                           
   258                           ;PruebaSensor.c: 44: TMR1=0;
   259  007E72  0E00               	movlw	0
   260  007E74  6ECF               	movwf	4047,c	;volatile
   261  007E76  0E00               	movlw	0
   262  007E78  6ECE               	movwf	4046,c	;volatile
   263  007E7A                     
   264                           ;PruebaSensor.c: 47: {
   265                           ;PruebaSensor.c: 49: Trigger_Pulse_10us();
   266  007E7A  EC6D  F03E         	call	_Trigger_Pulse_10us	;wreg free
   267  007E7E  A081               	btfss	3969,0,c	;volatile
   268  007E80  D7FE               	goto	l100
   269                           
   270                           ;PruebaSensor.c: 51: TMR1=0;
   271  007E82  0E00               	movlw	0
   272  007E84  6ECF               	movwf	4047,c	;volatile
   273  007E86  0E00               	movlw	0
   274  007E88  6ECE               	movwf	4046,c	;volatile
   275                           
   276                           ;PruebaSensor.c: 52: TMR1ON=1;
   277  007E8A  80CD               	bsf	4045,0,c	;volatile
   278  007E8C  A081               	btfss	3969,0,c	;volatile
   279  007E8E  D002               	goto	u710
   280  007E90  A09E               	btfss	3998,0,c	;volatile
   281  007E92  D7FC               	goto	l103
   282  007E94                     u710:
   283                           
   284                           ;PruebaSensor.c: 54: Time = TMR1;
   285  007E94  CFCE F01C          	movff	4046,main@Time	;volatile
   286  007E98  CFCF F01D          	movff	4047,main@Time+1	;volatile
   287                           
   288                           ;PruebaSensor.c: 55: TMR1ON=0;
   289  007E9C  90CD               	bcf	4045,0,c	;volatile
   290                           
   291                           ;PruebaSensor.c: 56: Distance = ((float)Time/117.00);
   292  007E9E  C01C  F009         	movff	main@Time,___awtoft@c
   293  007EA2  C01D  F00A         	movff	main@Time+1,___awtoft@c+1
   294  007EA6  EC74  F03E         	call	___awtoft	;wreg free
   295  007EAA  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   296  007EAE  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   297  007EB2  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   298  007EB6  0E00               	movlw	0
   299  007EB8  6E10               	movwf	___ftdiv@f2,c
   300  007EBA  0EEA               	movlw	234
   301  007EBC  6E11               	movwf	___ftdiv@f2+1,c
   302  007EBE  0E42               	movlw	66
   303  007EC0  6E12               	movwf	___ftdiv@f2+2,c
   304  007EC2  EC8D  F03F         	call	___ftdiv	;wreg free
   305  007EC6  C00D  F01E         	movff	?___ftdiv,main@Distance
   306  007ECA  C00E  F01F         	movff	?___ftdiv+1,main@Distance+1
   307  007ECE  C00F  F020         	movff	?___ftdiv+2,main@Distance+2
   308                           
   309                           ;PruebaSensor.c: 57: if(Distance>5&&Distance<15){
   310  007ED2  0E00               	movlw	0
   311  007ED4  6E01               	movwf	___ftge@ff1,c
   312  007ED6  0EA0               	movlw	160
   313  007ED8  6E02               	movwf	___ftge@ff1+1,c
   314  007EDA  0E40               	movlw	64
   315  007EDC  6E03               	movwf	___ftge@ff1+2,c
   316  007EDE  C01E  F004         	movff	main@Distance,___ftge@ff2
   317  007EE2  C01F  F005         	movff	main@Distance+1,___ftge@ff2+1
   318  007EE6  C020  F006         	movff	main@Distance+2,___ftge@ff2+2
   319  007EEA  EC90  F03E         	call	___ftge	;wreg free
   320  007EEE  B0D8               	btfsc	status,0,c
   321  007EF0  D012               	goto	l107
   322  007EF2  C01E  F001         	movff	main@Distance,___ftge@ff1
   323  007EF6  C01F  F002         	movff	main@Distance+1,___ftge@ff1+1
   324  007EFA  C020  F003         	movff	main@Distance+2,___ftge@ff1+2
   325  007EFE  0E00               	movlw	0
   326  007F00  6E04               	movwf	___ftge@ff2,c
   327  007F02  0E70               	movlw	112
   328  007F04  6E05               	movwf	___ftge@ff2+1,c
   329  007F06  0E41               	movlw	65
   330  007F08  6E06               	movwf	___ftge@ff2+2,c
   331  007F0A  EC90  F03E         	call	___ftge	;wreg free
   332  007F0E  B0D8               	btfsc	status,0,c
   333  007F10  D002               	goto	l107
   334                           
   335                           ;PruebaSensor.c: 58: PORTDbits.RD2=1;
   336  007F12  8483               	bsf	3971,2,c	;volatile
   337                           
   338                           ;PruebaSensor.c: 59: }else{
   339  007F14  D7B2               	goto	l98
   340  007F16                     l107:
   341                           
   342                           ;PruebaSensor.c: 60: PORTDbits.RD2=0;
   343  007F16  9483               	bcf	3971,2,c	;volatile
   344  007F18  D7B0               	goto	l98
   345  007F1A                     __end_of_main:
   346                           	opt stack 0
   347                           intcon2	equ	0xFF1
   348                           status	equ	0xFD8
   349                           
   350 ;; *************** function ___ftge *****************
   351 ;; Defined at:
   352 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;  ff1             3    0[COMRAM] float 
   355 ;;  ff2             3    3[COMRAM] float 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;		None               void
   360 ;; Registers used:
   361 ;;		wreg, status,2, status,0
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   367 ;;      Params:         6       0       0       0       0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0       0       0
   369 ;;      Temps:          3       0       0       0       0       0       0       0       0
   370 ;;      Totals:         9       0       0       0       0       0       0       0       0
   371 ;;Total ram usage:        9 bytes
   372 ;; Hardware stack levels used:    1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text1
   381  007D20                     __ptext1:
   382                           	opt stack 0
   383  007D20                     ___ftge:
   384                           	opt stack 30
   385                           
   386                           ;incstack = 0
   387  007D20  AE03               	btfss	___ftge@ff1+2,7,c
   388  007D22  D016               	goto	l454
   389  007D24  C001  F007         	movff	___ftge@ff1,??___ftge
   390  007D28  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
   391  007D2C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
   392  007D30  1E07               	comf	??___ftge,f,c
   393  007D32  1E08               	comf	??___ftge+1,f,c
   394  007D34  1E09               	comf	??___ftge+2,f,c
   395  007D36  2A07               	incf	??___ftge,f,c
   396  007D38  0E00               	movlw	0
   397  007D3A  2208               	addwfc	??___ftge+1,f,c
   398  007D3C  2209               	addwfc	??___ftge+2,f,c
   399  007D3E  0E00               	movlw	0
   400  007D40  2407               	addwf	??___ftge,w,c
   401  007D42  6E01               	movwf	___ftge@ff1,c
   402  007D44  0E00               	movlw	0
   403  007D46  2008               	addwfc	??___ftge+1,w,c
   404  007D48  6E02               	movwf	___ftge@ff1+1,c
   405  007D4A  0E80               	movlw	128
   406  007D4C  2009               	addwfc	??___ftge+2,w,c
   407  007D4E  6E03               	movwf	___ftge@ff1+2,c
   408  007D50                     l454:
   409  007D50  AE06               	btfss	___ftge@ff2+2,7,c
   410  007D52  D016               	goto	l455
   411  007D54  C004  F007         	movff	___ftge@ff2,??___ftge
   412  007D58  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
   413  007D5C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
   414  007D60  1E07               	comf	??___ftge,f,c
   415  007D62  1E08               	comf	??___ftge+1,f,c
   416  007D64  1E09               	comf	??___ftge+2,f,c
   417  007D66  2A07               	incf	??___ftge,f,c
   418  007D68  0E00               	movlw	0
   419  007D6A  2208               	addwfc	??___ftge+1,f,c
   420  007D6C  2209               	addwfc	??___ftge+2,f,c
   421  007D6E  0E00               	movlw	0
   422  007D70  2407               	addwf	??___ftge,w,c
   423  007D72  6E04               	movwf	___ftge@ff2,c
   424  007D74  0E00               	movlw	0
   425  007D76  2008               	addwfc	??___ftge+1,w,c
   426  007D78  6E05               	movwf	___ftge@ff2+1,c
   427  007D7A  0E80               	movlw	128
   428  007D7C  2009               	addwfc	??___ftge+2,w,c
   429  007D7E  6E06               	movwf	___ftge@ff2+2,c
   430  007D80                     l455:
   431  007D80  0E00               	movlw	0
   432  007D82  1A01               	xorwf	___ftge@ff1,f,c
   433  007D84  0E00               	movlw	0
   434  007D86  1A02               	xorwf	___ftge@ff1+1,f,c
   435  007D88  0E80               	movlw	128
   436  007D8A  1A03               	xorwf	___ftge@ff1+2,f,c
   437  007D8C  0E00               	movlw	0
   438  007D8E  1A04               	xorwf	___ftge@ff2,f,c
   439  007D90  0E00               	movlw	0
   440  007D92  1A05               	xorwf	___ftge@ff2+1,f,c
   441  007D94  0E80               	movlw	128
   442  007D96  1A06               	xorwf	___ftge@ff2+2,f,c
   443  007D98  5004               	movf	___ftge@ff2,w,c
   444  007D9A  5C01               	subwf	___ftge@ff1,w,c
   445  007D9C  5005               	movf	___ftge@ff2+1,w,c
   446  007D9E  5802               	subwfb	___ftge@ff1+1,w,c
   447  007DA0  5006               	movf	___ftge@ff2+2,w,c
   448  007DA2  5803               	subwfb	___ftge@ff1+2,w,c
   449  007DA4  B0D8               	btfsc	status,0,c
   450  007DA6  D002               	goto	l1111
   451  007DA8  90D8               	bcf	status,0,c
   452  007DAA  0012               	return	
   453  007DAC                     l1111:
   454  007DAC  80D8               	bsf	status,0,c
   455  007DAE  0012               	return	
   456  007DB0                     __end_of___ftge:
   457                           	opt stack 0
   458                           intcon2	equ	0xFF1
   459                           status	equ	0xFD8
   460                           
   461 ;; *************** function ___ftdiv *****************
   462 ;; Defined at:
   463 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  f1              3   12[COMRAM] float 
   466 ;;  f2              3   15[COMRAM] float 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  f3              3   22[COMRAM] float 
   469 ;;  sign            1   26[COMRAM] unsigned char 
   470 ;;  exp             1   25[COMRAM] unsigned char 
   471 ;;  cntr            1   21[COMRAM] unsigned char 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  3   12[COMRAM] float 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         6       0       0       0       0       0       0       0       0
   482 ;;      Locals:         6       0       0       0       0       0       0       0       0
   483 ;;      Temps:          3       0       0       0       0       0       0       0       0
   484 ;;      Totals:        15       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:       15 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; Hardware stack levels required when called:    1
   488 ;; This function calls:
   489 ;;		___ftpack
   490 ;; This function is called by:
   491 ;;		_main
   492 ;;		_wait_in_ms
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text2
   497  007F1A                     __ptext2:
   498                           	opt stack 0
   499  007F1A                     ___ftdiv:
   500                           	opt stack 29
   501                           
   502                           ;incstack = 0
   503  007F1A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
   504  007F1E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   505  007F20  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   506  007F22  340E               	rlcf	___ftdiv@f1+1,w,c
   507  007F24  3613               	rlcf	??___ftdiv& (0+255),f,c
   508  007F26  E301               	bnc	u501
   509  007F28  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   510  007F2A                     u501:
   511  007F2A  5013               	movf	??___ftdiv,w,c
   512  007F2C  6E1A               	movwf	___ftdiv@exp,c
   513  007F2E  501A               	movf	___ftdiv@exp,w,c
   514  007F30  A4D8               	btfss	status,2,c
   515  007F32  D007               	goto	l446
   516  007F34  0E00               	movlw	0
   517  007F36  6E0D               	movwf	?___ftdiv,c
   518  007F38  0E00               	movlw	0
   519  007F3A  6E0E               	movwf	?___ftdiv+1,c
   520  007F3C  0E00               	movlw	0
   521  007F3E  6E0F               	movwf	?___ftdiv+2,c
   522  007F40  0012               	return	
   523  007F42                     l446:
   524  007F42  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
   525  007F46  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   526  007F48  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   527  007F4A  3411               	rlcf	___ftdiv@f2+1,w,c
   528  007F4C  3613               	rlcf	??___ftdiv& (0+255),f,c
   529  007F4E  E301               	bnc	u521
   530  007F50  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   531  007F52                     u521:
   532  007F52  5013               	movf	??___ftdiv,w,c
   533  007F54  6E1B               	movwf	___ftdiv@sign,c
   534  007F56  501B               	movf	___ftdiv@sign,w,c
   535  007F58  A4D8               	btfss	status,2,c
   536  007F5A  D007               	goto	l448
   537  007F5C  0E00               	movlw	0
   538  007F5E  6E0D               	movwf	?___ftdiv,c
   539  007F60  0E00               	movlw	0
   540  007F62  6E0E               	movwf	?___ftdiv+1,c
   541  007F64  0E00               	movlw	0
   542  007F66  6E0F               	movwf	?___ftdiv+2,c
   543  007F68  0012               	return	
   544  007F6A                     l448:
   545  007F6A  0E00               	movlw	0
   546  007F6C  6E17               	movwf	___ftdiv@f3,c
   547  007F6E  0E00               	movlw	0
   548  007F70  6E18               	movwf	___ftdiv@f3+1,c
   549  007F72  0E00               	movlw	0
   550  007F74  6E19               	movwf	___ftdiv@f3+2,c
   551  007F76  501B               	movf	___ftdiv@sign,w,c
   552  007F78  0F89               	addlw	137
   553  007F7A  5E1A               	subwf	___ftdiv@exp,f,c
   554  007F7C  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
   555  007F80  5012               	movf	___ftdiv@f2+2,w,c
   556  007F82  1A1B               	xorwf	___ftdiv@sign,f,c
   557  007F84  0E80               	movlw	128
   558  007F86  161B               	andwf	___ftdiv@sign,f,c
   559  007F88  8E0E               	bsf	___ftdiv@f1+1,7,c
   560  007F8A  0EFF               	movlw	255
   561  007F8C  160D               	andwf	___ftdiv@f1,f,c
   562  007F8E  0EFF               	movlw	255
   563  007F90  160E               	andwf	___ftdiv@f1+1,f,c
   564  007F92  0E00               	movlw	0
   565  007F94  160F               	andwf	___ftdiv@f1+2,f,c
   566  007F96  8E11               	bsf	___ftdiv@f2+1,7,c
   567  007F98  0EFF               	movlw	255
   568  007F9A  1610               	andwf	___ftdiv@f2,f,c
   569  007F9C  0EFF               	movlw	255
   570  007F9E  1611               	andwf	___ftdiv@f2+1,f,c
   571  007FA0  0E00               	movlw	0
   572  007FA2  1612               	andwf	___ftdiv@f2+2,f,c
   573  007FA4  0E18               	movlw	24
   574  007FA6  6E16               	movwf	___ftdiv@cntr,c
   575  007FA8  90D8               	bcf	status,0,c
   576  007FAA  3617               	rlcf	___ftdiv@f3,f,c
   577  007FAC  3618               	rlcf	___ftdiv@f3+1,f,c
   578  007FAE  3619               	rlcf	___ftdiv@f3+2,f,c
   579  007FB0  5010               	movf	___ftdiv@f2,w,c
   580  007FB2  5C0D               	subwf	___ftdiv@f1,w,c
   581  007FB4  5011               	movf	___ftdiv@f2+1,w,c
   582  007FB6  580E               	subwfb	___ftdiv@f1+1,w,c
   583  007FB8  5012               	movf	___ftdiv@f2+2,w,c
   584  007FBA  580F               	subwfb	___ftdiv@f1+2,w,c
   585  007FBC  A0D8               	btfss	status,0,c
   586  007FBE  D007               	goto	l450
   587  007FC0  5010               	movf	___ftdiv@f2,w,c
   588  007FC2  5E0D               	subwf	___ftdiv@f1,f,c
   589  007FC4  5011               	movf	___ftdiv@f2+1,w,c
   590  007FC6  5A0E               	subwfb	___ftdiv@f1+1,f,c
   591  007FC8  5012               	movf	___ftdiv@f2+2,w,c
   592  007FCA  5A0F               	subwfb	___ftdiv@f1+2,f,c
   593  007FCC  8017               	bsf	___ftdiv@f3,0,c
   594  007FCE                     l450:
   595  007FCE  90D8               	bcf	status,0,c
   596  007FD0  360D               	rlcf	___ftdiv@f1,f,c
   597  007FD2  360E               	rlcf	___ftdiv@f1+1,f,c
   598  007FD4  360F               	rlcf	___ftdiv@f1+2,f,c
   599  007FD6  2E16               	decfsz	___ftdiv@cntr,f,c
   600  007FD8  D7E7               	goto	l449
   601  007FDA  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
   602  007FDE  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   603  007FE2  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   604  007FE6  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
   605  007FEA  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
   606  007FEE  ECD8  F03E         	call	___ftpack	;wreg free
   607  007FF2  C001  F00D         	movff	?___ftpack,?___ftdiv
   608  007FF6  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
   609  007FFA  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
   610  007FFE  0012               	return	
   611  008000                     __end_of___ftdiv:
   612                           	opt stack 0
   613                           intcon2	equ	0xFF1
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function ___awtoft *****************
   617 ;; Defined at:
   618 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  c               2    8[COMRAM] int 
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  sign            1   11[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  3    8[COMRAM] float 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         3       0       0       0       0       0       0       0       0
   633 ;;      Locals:         1       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         4       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        4 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    1
   639 ;; This function calls:
   640 ;;		___ftpack
   641 ;; This function is called by:
   642 ;;		_main
   643 ;;		_wait_in_ms
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text3
   648  007CE8                     __ptext3:
   649                           	opt stack 0
   650  007CE8                     ___awtoft:
   651                           	opt stack 29
   652                           
   653                           ;incstack = 0
   654  007CE8  0E00               	movlw	0
   655  007CEA  6E0C               	movwf	___awtoft@sign,c
   656  007CEC  AE0A               	btfss	___awtoft@c+1,7,c
   657  007CEE  D006               	goto	l363
   658  007CF0  6C09               	negf	___awtoft@c,c
   659  007CF2  1E0A               	comf	___awtoft@c+1,f,c
   660  007CF4  B0D8               	btfsc	status,0,c
   661  007CF6  2A0A               	incf	___awtoft@c+1,f,c
   662  007CF8  0E01               	movlw	1
   663  007CFA  6E0C               	movwf	___awtoft@sign,c
   664  007CFC                     l363:
   665  007CFC  C009  F001         	movff	___awtoft@c,___ftpack@arg
   666  007D00  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   667  007D04  6A03               	clrf	___ftpack@arg+2,c
   668  007D06  0E8E               	movlw	142
   669  007D08  6E04               	movwf	___ftpack@exp,c
   670  007D0A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   671  007D0E  ECD8  F03E         	call	___ftpack	;wreg free
   672  007D12  C001  F009         	movff	?___ftpack,?___awtoft
   673  007D16  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   674  007D1A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   675  007D1E  0012               	return	
   676  007D20                     __end_of___awtoft:
   677                           	opt stack 0
   678                           intcon2	equ	0xFF1
   679                           status	equ	0xFD8
   680                           
   681 ;; *************** function ___ftpack *****************
   682 ;; Defined at:
   683 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  arg             3    0[COMRAM] unsigned um
   686 ;;  exp             1    3[COMRAM] unsigned char 
   687 ;;  sign            1    4[COMRAM] unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  3    0[COMRAM] float 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         5       0       0       0       0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0       0       0
   701 ;;      Temps:          3       0       0       0       0       0       0       0       0
   702 ;;      Totals:         8       0       0       0       0       0       0       0       0
   703 ;;Total ram usage:        8 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		___awtoft
   709 ;;		___ftdiv
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text4
   714  007DB0                     __ptext4:
   715                           	opt stack 0
   716  007DB0                     ___ftpack:
   717                           	opt stack 29
   718                           
   719                           ;incstack = 0
   720  007DB0  5004               	movf	___ftpack@exp,w,c
   721  007DB2  B4D8               	btfsc	status,2,c
   722  007DB4  D005               	goto	u420
   723  007DB6  5001               	movf	___ftpack@arg,w,c
   724  007DB8  1002               	iorwf	___ftpack@arg+1,w,c
   725  007DBA  1003               	iorwf	___ftpack@arg+2,w,c
   726  007DBC  A4D8               	btfss	status,2,c
   727  007DBE  D00C               	goto	l382
   728  007DC0                     u420:
   729  007DC0  0E00               	movlw	0
   730  007DC2  6E01               	movwf	?___ftpack,c
   731  007DC4  0E00               	movlw	0
   732  007DC6  6E02               	movwf	?___ftpack+1,c
   733  007DC8  0E00               	movlw	0
   734  007DCA  6E03               	movwf	?___ftpack+2,c
   735  007DCC  0012               	return	
   736  007DCE  2A04               	incf	___ftpack@exp,f,c
   737  007DD0  90D8               	bcf	status,0,c
   738  007DD2  3203               	rrcf	___ftpack@arg+2,f,c
   739  007DD4  3202               	rrcf	___ftpack@arg+1,f,c
   740  007DD6  3201               	rrcf	___ftpack@arg,f,c
   741  007DD8                     l382:
   742  007DD8  0E00               	movlw	0
   743  007DDA  1401               	andwf	___ftpack@arg,w,c
   744  007DDC  6E06               	movwf	??___ftpack& (0+255),c
   745  007DDE  0E00               	movlw	0
   746  007DE0  1402               	andwf	___ftpack@arg+1,w,c
   747  007DE2  6E07               	movwf	(??___ftpack+1)& (0+255),c
   748  007DE4  0EFE               	movlw	254
   749  007DE6  1403               	andwf	___ftpack@arg+2,w,c
   750  007DE8  6E08               	movwf	(??___ftpack+2)& (0+255),c
   751  007DEA  5006               	movf	??___ftpack,w,c
   752  007DEC  1007               	iorwf	??___ftpack+1,w,c
   753  007DEE  1008               	iorwf	??___ftpack+2,w,c
   754  007DF0  B4D8               	btfsc	status,2,c
   755  007DF2  D00C               	goto	l385
   756  007DF4  D7EC               	goto	l383
   757  007DF6  2A04               	incf	___ftpack@exp,f,c
   758  007DF8  0E01               	movlw	1
   759  007DFA  2601               	addwf	___ftpack@arg,f,c
   760  007DFC  0E00               	movlw	0
   761  007DFE  2202               	addwfc	___ftpack@arg+1,f,c
   762  007E00  0E00               	movlw	0
   763  007E02  2203               	addwfc	___ftpack@arg+2,f,c
   764  007E04  90D8               	bcf	status,0,c
   765  007E06  3203               	rrcf	___ftpack@arg+2,f,c
   766  007E08  3202               	rrcf	___ftpack@arg+1,f,c
   767  007E0A  3201               	rrcf	___ftpack@arg,f,c
   768  007E0C                     l385:
   769  007E0C  0E00               	movlw	0
   770  007E0E  1401               	andwf	___ftpack@arg,w,c
   771  007E10  6E06               	movwf	??___ftpack& (0+255),c
   772  007E12  0E00               	movlw	0
   773  007E14  1402               	andwf	___ftpack@arg+1,w,c
   774  007E16  6E07               	movwf	(??___ftpack+1)& (0+255),c
   775  007E18  0EFF               	movlw	255
   776  007E1A  1403               	andwf	___ftpack@arg+2,w,c
   777  007E1C  6E08               	movwf	(??___ftpack+2)& (0+255),c
   778  007E1E  5006               	movf	??___ftpack,w,c
   779  007E20  1007               	iorwf	??___ftpack+1,w,c
   780  007E22  1008               	iorwf	??___ftpack+2,w,c
   781  007E24  B4D8               	btfsc	status,2,c
   782  007E26  D006               	goto	l388
   783  007E28  D7E6               	goto	l386
   784  007E2A  0604               	decf	___ftpack@exp,f,c
   785  007E2C  90D8               	bcf	status,0,c
   786  007E2E  3601               	rlcf	___ftpack@arg,f,c
   787  007E30  3602               	rlcf	___ftpack@arg+1,f,c
   788  007E32  3603               	rlcf	___ftpack@arg+2,f,c
   789  007E34                     l388:
   790  007E34  BE02               	btfsc	___ftpack@arg+1,7,c
   791  007E36  D003               	goto	u460
   792  007E38  0E02               	movlw	2
   793  007E3A  6004               	cpfslt	___ftpack@exp,c
   794  007E3C  D7F6               	goto	l389
   795  007E3E                     u460:
   796  007E3E  A004               	btfss	___ftpack@exp,0,c
   797  007E40  9E02               	bcf	___ftpack@arg+1,7,c
   798  007E42  90D8               	bcf	status,0,c
   799  007E44  3204               	rrcf	___ftpack@exp,f,c
   800  007E46  5004               	movf	___ftpack@exp,w,c
   801  007E48  1203               	iorwf	___ftpack@arg+2,f,c
   802  007E4A  5005               	movf	___ftpack@sign,w,c
   803  007E4C  A4D8               	btfss	status,2,c
   804  007E4E  8E03               	bsf	___ftpack@arg+2,7,c
   805  007E50  C001  F001         	movff	___ftpack@arg,?___ftpack
   806  007E54  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   807  007E58  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   808  007E5C  0012               	return	
   809  007E5E                     __end_of___ftpack:
   810                           	opt stack 0
   811                           intcon2	equ	0xFF1
   812                           status	equ	0xFD8
   813                           
   814 ;; *************** function _Trigger_Pulse_10us *****************
   815 ;; Defined at:
   816 ;;		line 65 in file "PruebaSensor.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text5
   844  007CDA                     __ptext5:
   845                           	opt stack 0
   846  007CDA                     _Trigger_Pulse_10us:
   847                           	opt stack 30
   848                           
   849                           ;PruebaSensor.c: 67: LATD0 = 1;
   850                           
   851                           ;incstack = 0
   852  007CDA  808C               	bsf	3980,0,c	;volatile
   853                           
   854                           ;PruebaSensor.c: 68: _delay((unsigned long)((10)*(8000000/4000000.0)));
   855  007CDC  0E06               	movlw	6
   856  007CDE                     u747:
   857  007CDE  2EE8               	decfsz	wreg,f,c
   858  007CE0  D7FE               	bra	u747
   859  007CE2  D000               	nop2	
   860                           
   861                           ;PruebaSensor.c: 69: LATD0 = 0;
   862  007CE4  908C               	bcf	3980,0,c	;volatile
   863  007CE6  0012               	return		;funcret
   864  007CE8                     __end_of_Trigger_Pulse_10us:
   865                           	opt stack 0
   866  0000                     intcon2	equ	0xFF1
   867                           wreg	equ	0xFE8
   868                           status	equ	0xFD8
   869                           intcon2	equ	0xFF1
   870                           wreg	equ	0xFE8
   871                           status	equ	0xFD8
   872                           
   873                           	psect	rparam
   874  0000                     intcon2	equ	0xFF1
   875                           wreg	equ	0xFE8
   876                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    6237
                                             27 COMRAM     5     5      0
                 _Trigger_Pulse_10us
                           ___awtoft
                            ___ftdiv
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     440
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3098
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2631
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Trigger_Pulse_10us                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Trigger_Pulse_10us
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     20      20       1       33.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 20:33:25 2018

                         l98 7E7A                  __CFG_BORV$3 000000                 main@Distance 001E  
                        l100 7E7E                          l103 7E8C                          l107 7F16  
                        l450 7FCE                          l363 7CFC                          l382 7DD8  
                        l446 7F42                          l454 7D50                          l383 7DCE  
                        l455 7D80                          l448 7F6A                          l385 7E0C  
                        l449 7FA8                          l386 7DF6                          l388 7E34  
                        l389 7E2A                          u420 7DC0                          u501 7F2A  
                        u521 7F52                          u460 7E3E                          u710 7E94  
                        u747 7CDE                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               ___ftdiv@cntr 0016                 ___ftdiv@sign 001B                 __CFG_WDT$OFF 000000  
                       l1111 7DAC                         _RCIF 007CF5                         _TMR1 000FCE  
                       _main 7E5E                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       start 0000                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
              __CFG_PLLDIV$2 000000                        ?_main 0001              __end_of___ftdiv 8000  
                      _T1CON 000FCD                        _LATD0 007C60                        _TMR0L 000FD6  
                      _PORTA 000F80                        _PORTD 000F83                        _TRISB 000F93  
                      _TRISD 000F95               __CFG_FCMEN$OFF 000000                ___awtoft@sign 000C  
              ___ftpack@sign 0005                        status 000FD8              __initialization 7CD4  
               __end_of_main 7F1A                       ??_main 001C                __activetblptr 000000  
                     _ADCON0 000FC2                       _T08BIT 007EAE             __end_of___awtoft 7D20  
           __end_of___ftpack 7E5E                       _OSCCON 000FD3                       _TMR0IF 007F92  
                     _TMR1IF 007CF0                       _TMR0ON 007EAF                       _TMR1ON 007E68  
                     ___ftge 7D20                    ??___ftdiv 0013  __size_of_Trigger_Pulse_10us 000E  
                 __accesstop 0060      __end_of__initialization 7CD4                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004                ___rparam_used 000001                   ___ftdiv@f1 000D  
                 ___ftdiv@f2 0010                   ___ftdiv@f3 0017                   ___awtoft@c 0009  
             __pcstackCOMRAM 0001                      ?___ftge 0001                    ?___awtoft 0009  
                  ?___ftpack 0001                      __Hparam 0000                      __Lparam 0000  
            __size_of___ftge 0090                      ___ftdiv 7F1A                      __pcinit 7CD4  
                 ??___awtoft 000C                   ??___ftpack 0006                      __ramtop 0800  
                    __ptext0 7E5E                      __ptext1 7D20                      __ptext2 7F1A  
                    __ptext3 7CE8                      __ptext4 7DB0                      __ptext5 7CDA  
                  _T0CONbits 000FD5         end_of_initialization 7CD4                    _PORTBbits 000F81  
                  _PORTDbits 000F83                    _TRISAbits 000F92                    _TRISDbits 000F95  
                ___ftdiv@exp 001A   __end_of_Trigger_Pulse_10us 7CE8               __end_of___ftge 7DB0  
        start_initialization 7CD4                     ??___ftge 0007            __size_of___awtoft 0038  
          __size_of___ftpack 00AE                     ?___ftdiv 000D                     _PIE1bits 000F9D  
                   _PIR1bits 000F9E                   _ADCON0bits 000FC2                   _ADCON1bits 000FC1  
                 _ADCON2bits 000FC0                  _INTCON2bits 000FF1                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___ftdiv 00E6                     ___awtoft 7CE8  
                   ___ftpack 7DB0           _Trigger_Pulse_10us 7CDA          ?_Trigger_Pulse_10us 0001  
              __size_of_main 00BC                     main@Time 001C         ??_Trigger_Pulse_10us 0001  
      __CFG_CPUDIV$OSC4_PLL6 000000                   _INTCONbits 000FF2           __CFG_FOSC$HSPLL_HS 000000  
