

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 23 19:12:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _PORTA	set	3968
    59  0000                     _TRISD	set	3989
    60  0000                     _PIR1bits	set	3998
    61  0000                     _PIE1bits	set	3997
    62  0000                     _TRISAbits	set	3986
    63  0000                     _ADCON2bits	set	4032
    64  0000                     _ADCON0bits	set	4034
    65  0000                     _ADCON0	set	4034
    66  0000                     _T0CONbits	set	4053
    67  0000                     _INTCONbits	set	4082
    68  0000                     _TRISBbits	set	3987
    69  0000                     _TRISCbits	set	3988
    70  0000                     _ADCON1bits	set	4033
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTDbits	set	3971
    73  0000                     _TRISDbits	set	3989
    74  0000                     _TMR0L	set	4054
    75  0000                     _TMR0IF	set	32658
    76  0000                     _TMR0ON	set	32431
    77  0000                     _RCIF	set	31989
    78  0000                     _T08BIT	set	32430
    79                           
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	opt stack 0
    83  000800  00                 	db	0
    84  000801                     STR_1:
    85  000801  68                 	db	104	;'h'
    86  000802  6F                 	db	111	;'o'
    87  000803  6C                 	db	108	;'l'
    88  000804  61                 	db	97	;'a'
    89  000805  00                 	db	0
    90                           
    91                           ; #config settings
    92  000806  00                 	db	0	; dummy byte at the end
    93  0000                     
    94                           	psect	cinit
    95  000E22                     __pcinit:
    96                           	opt stack 0
    97  000E22                     start_initialization:
    98                           	opt stack 0
    99  000E22                     __initialization:
   100                           	opt stack 0
   101  000E22                     end_of_initialization:
   102                           	opt stack 0
   103  000E22                     __end_of__initialization:
   104                           	opt stack 0
   105  000E22  0E00               	movlw	low (__Lsmallconst shr (0+16))
   106  000E24  6EF8               	movwf	tblptru,c
   107  000E26  0E08               	movlw	high __Lsmallconst
   108  000E28  6EF7               	movwf	tblptrh,c
   109  000E2A  0100               	movlb	0
   110  000E2C  EFDF  F006         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           
   114                           	psect	cstackCOMRAM
   115  000001                     __pcstackCOMRAM:
   116                           	opt stack 0
   117  000001                     ?___ftpack:
   118                           	opt stack 0
   119  000001                     ___ftpack@arg:
   120                           	opt stack 0
   121                           
   122                           ; 3 bytes @ 0x0
   123  000001                     	ds	3
   124  000004                     ___ftpack@exp:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x3
   128  000004                     	ds	1
   129  000005                     ___ftpack@sign:
   130                           	opt stack 0
   131                           
   132                           ; 1 bytes @ 0x4
   133  000005                     	ds	1
   134  000006                     ??___ftpack:
   135                           
   136                           ; 1 bytes @ 0x5
   137  000006                     	ds	3
   138  000009                     ?___awtoft:
   139                           	opt stack 0
   140  000009                     ___awtoft@c:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x8
   144  000009                     	ds	3
   145  00000C                     ___awtoft@sign:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0xB
   149  00000C                     	ds	1
   150  00000D                     ?___ftdiv:
   151                           	opt stack 0
   152  00000D                     ___ftdiv@f1:
   153                           	opt stack 0
   154                           
   155                           ; 3 bytes @ 0xC
   156  00000D                     	ds	3
   157  000010                     ___ftdiv@f2:
   158                           	opt stack 0
   159                           
   160                           ; 3 bytes @ 0xF
   161  000010                     	ds	3
   162  000013                     ??___ftdiv:
   163                           
   164                           ; 1 bytes @ 0x12
   165  000013                     	ds	3
   166  000016                     ___ftdiv@cntr:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x15
   170  000016                     	ds	1
   171  000017                     ___ftdiv@f3:
   172                           	opt stack 0
   173                           
   174                           ; 3 bytes @ 0x16
   175  000017                     	ds	3
   176  00001A                     ___ftdiv@exp:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x19
   180  00001A                     	ds	1
   181  00001B                     ___ftdiv@sign:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x1A
   185  00001B                     	ds	1
   186  00001C                     ?___fttol:
   187                           	opt stack 0
   188  00001C                     ___fttol@f1:
   189                           	opt stack 0
   190                           
   191                           ; 3 bytes @ 0x1B
   192  00001C                     	ds	4
   193  000020                     ??___fttol:
   194                           
   195                           ; 1 bytes @ 0x1F
   196  000020                     	ds	5
   197  000025                     ___fttol@sign1:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x24
   201  000025                     	ds	1
   202  000026                     ___fttol@lval:
   203                           	opt stack 0
   204                           
   205                           ; 4 bytes @ 0x25
   206  000026                     	ds	4
   207  00002A                     ___fttol@exp1:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x29
   211  00002A                     	ds	1
   212  00002B                     wait_in_ms@time_in_ms:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x2A
   216  00002B                     	ds	2
   217  00002D                     ??_wait_in_ms:
   218                           
   219                           ; 1 bytes @ 0x2C
   220  00002D                     	ds	2
   221  00002F                     wait_in_ms@flag:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x2E
   225  00002F                     	ds	2
   226  000031                     wait_in_ms@count:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x30
   230  000031                     	ds	2
   231  000033                     wait_in_ms@count_ms:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x32
   235  000033                     	ds	2
   236  000035                     lcd_orden@orden:
   237                           	opt stack 0
   238  000035                     lcd_caracter@caracter:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x34
   242  000035                     	ds	2
   243  000037                     ??_lcd_orden:
   244  000037                     ??_lcd_caracter:
   245                           
   246                           ; 1 bytes @ 0x36
   247  000037                     	ds	5
   248  00003C                     lcd_texto@cadena:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x3B
   252  00003C                     	ds	2
   253  00003E                     tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           
   256                           ; 1 bytes @ 0x3D
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 30 in file "PruebaSensor.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         0       0       0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels required when called:    6
   282 ;; This function calls:
   283 ;;		_configBoard
   284 ;;		_lcd_iniciar
   285 ;;		_lcd_origen
   286 ;;		_lcd_texto
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293  000DBE                     __ptext0:
   294                           	opt stack 0
   295  000DBE                     _main:
   296                           	opt stack 25
   297                           
   298                           ;PruebaSensor.c: 32: configBoard();
   299                           
   300                           ;incstack = 0
   301  000DBE  EC7C  F006         	call	_configBoard	;wreg free
   302                           
   303                           ;PruebaSensor.c: 33: lcd_iniciar();
   304  000DC2  ECF1  F004         	call	_lcd_iniciar	;wreg free
   305                           
   306                           ;PruebaSensor.c: 34: ADCON1bits.PCFG = 0b1111;
   307  000DC6  80C1               	bsf	4033,0,c	;volatile
   308  000DC8  82C1               	bsf	4033,1,c	;volatile
   309  000DCA  84C1               	bsf	4033,2,c	;volatile
   310  000DCC  86C1               	bsf	4033,3,c	;volatile
   311                           
   312                           ;PruebaSensor.c: 38: TRISCbits.RC2=0;
   313  000DCE  9494               	bcf	3988,2,c	;volatile
   314                           
   315                           ;PruebaSensor.c: 39: TRISBbits.RB4=0;
   316  000DD0  9893               	bcf	3987,4,c	;volatile
   317                           
   318                           ;PruebaSensor.c: 40: TRISDbits.RD3=1;
   319  000DD2  8695               	bsf	3989,3,c	;volatile
   320                           
   321                           ;PruebaSensor.c: 41: TRISDbits.RD2=1;
   322  000DD4  8495               	bsf	3989,2,c	;volatile
   323                           
   324                           ;PruebaSensor.c: 42: TRISCbits.RC7=1;
   325  000DD6  8E94               	bsf	3988,7,c	;volatile
   326  000DD8                     
   327                           ;PruebaSensor.c: 52: lcd_origen();
   328  000DD8  EC04  F007         	call	_lcd_origen	;wreg free
   329                           
   330                           ;PruebaSensor.c: 53: lcd_texto("hola");
   331  000DDC  0E01               	movlw	low STR_1
   332  000DDE  6E3C               	movwf	lcd_texto@cadena,c
   333  000DE0  0E08               	movlw	high STR_1
   334  000DE2  6E3D               	movwf	lcd_texto@cadena+1,c
   335  000DE4  ECC8  F006         	call	_lcd_texto	;wreg free
   336  000DE8  D7F7               	goto	l88
   337  000DEA                     __end_of_main:
   338                           	opt stack 0
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           
   342 ;; *************** function _lcd_texto *****************
   343 ;; Defined at:
   344 ;;		line 297 in file "lcd.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  cadena          2   59[COMRAM] PTR unsigned char 
   347 ;;		 -> STR_1(5), 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         2       0       0       0       0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         2       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    5
   366 ;; This function calls:
   367 ;;		_lcd_caracter
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374  000D90                     __ptext1:
   375                           	opt stack 0
   376  000D90                     _lcd_texto:
   377                           	opt stack 25
   378                           
   379                           ;lcd.c: 298: while(*cadena != 0x00){
   380                           
   381                           ;incstack = 0
   382  000D90  D00C               	goto	l27
   383  000D92                     
   384                           ;lcd.c: 299: lcd_caracter(*cadena);
   385  000D92  C03C  FFF6         	movff	lcd_texto@cadena,tblptrl
   386  000D96  C03D  FFF7         	movff	lcd_texto@cadena+1,tblptrh
   387  000D9A                     	if	0	;tblptru may be non-zero
   388  000D9A                     	endif
   389  000D9A                     	if	0	;tblptru may be non-zero
   390  000D9A                     	endif
   391  000D9A  0008               	tblrd		*
   392  000D9C  50F5               	movf	tablat,w,c
   393  000D9E  6E35               	movwf	lcd_caracter@caracter,c
   394  000DA0  6A36               	clrf	lcd_caracter@caracter+1,c
   395  000DA2  EC15  F006         	call	_lcd_caracter	;wreg free
   396                           
   397                           ;lcd.c: 300: cadena++;
   398  000DA6  4A3C               	infsnz	lcd_texto@cadena,f,c
   399  000DA8  2A3D               	incf	lcd_texto@cadena+1,f,c
   400  000DAA                     l27:
   401  000DAA  C03C  FFF6         	movff	lcd_texto@cadena,tblptrl
   402  000DAE  C03D  FFF7         	movff	lcd_texto@cadena+1,tblptrh
   403  000DB2                     	if	0	;tblptru may be non-zero
   404  000DB2                     	endif
   405  000DB2                     	if	0	;tblptru may be non-zero
   406  000DB2                     	endif
   407  000DB2  0008               	tblrd		*
   408  000DB4  50F5               	movf	tablat,w,c
   409  000DB6  0900               	iorlw	0
   410  000DB8  B4D8               	btfsc	status,2,c
   411  000DBA  0012               	return	
   412  000DBC  D7EA               	goto	l28
   413  000DBE                     __end_of_lcd_texto:
   414                           	opt stack 0
   415                           tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           status	equ	0xFD8
   420                           
   421 ;; *************** function _lcd_caracter *****************
   422 ;; Defined at:
   423 ;;		line 287 in file "lcd.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  caracter        2   52[COMRAM] unsigned int 
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   437 ;;      Params:         2       0       0       0       0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0       0       0       0       0
   439 ;;      Temps:          5       0       0       0       0       0       0       0       0
   440 ;;      Totals:         7       0       0       0       0       0       0       0       0
   441 ;;Total ram usage:        7 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; Hardware stack levels required when called:    4
   444 ;; This function calls:
   445 ;;		_lcd_pulso
   446 ;; This function is called by:
   447 ;;		_lcd_texto
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text2
   452  000C2A                     __ptext2:
   453                           	opt stack 0
   454  000C2A                     _lcd_caracter:
   455                           	opt stack 25
   456                           
   457                           ;lcd.c: 288: PORTDbits.RD1=1;
   458                           
   459                           ;incstack = 0
   460  000C2A  8283               	bsf	3971,1,c	;volatile
   461                           
   462                           ;lcd.c: 290: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter>>4&0x0f))<<4)|(PORTD&0x0f));
   463  000C2C  CF83 F037          	movff	3971,??_lcd_caracter	;volatile
   464  000C30  0E0F               	movlw	15
   465  000C32  1637               	andwf	??_lcd_caracter,f,c
   466  000C34  C035  F038         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   467  000C38  C036  F039         	movff	lcd_caracter@caracter+1,??_lcd_caracter+2
   468  000C3C  0E04               	movlw	4
   469  000C3E  6E3A               	movwf	(??_lcd_caracter+3)& (0+255),c
   470  000C40                     u685:
   471  000C40  90D8               	bcf	status,0,c
   472  000C42  3239               	rrcf	??_lcd_caracter+2,f,c
   473  000C44  3238               	rrcf	??_lcd_caracter+1,f,c
   474  000C46  2E3A               	decfsz	(??_lcd_caracter+3)& (0+255),f,c
   475  000C48  D7FB               	goto	u685
   476  000C4A  0E0F               	movlw	15
   477  000C4C  1638               	andwf	??_lcd_caracter+1,f,c
   478  000C4E  3883               	swapf	3971,w,c	;volatile
   479  000C50  0B0F               	andlw	15
   480  000C52  0B0F               	andlw	15
   481  000C54  090F               	iorlw	15
   482  000C56  1438               	andwf	??_lcd_caracter+1,w,c
   483  000C58  6E3B               	movwf	(??_lcd_caracter+4)& (0+255),c
   484  000C5A  383B               	swapf	??_lcd_caracter+4,w,c
   485  000C5C  0BF0               	andlw	240
   486  000C5E  1037               	iorwf	??_lcd_caracter,w,c
   487  000C60  6E83               	movwf	3971,c	;volatile
   488                           
   489                           ;lcd.c: 291: lcd_pulso();
   490  000C62  ECF5  F006         	call	_lcd_pulso	;wreg free
   491                           
   492                           ;lcd.c: 292: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(caracter&0x0f))<<4)|(PORTD&0x0f));
   493  000C66  CF83 F037          	movff	3971,??_lcd_caracter	;volatile
   494  000C6A  0E0F               	movlw	15
   495  000C6C  1637               	andwf	??_lcd_caracter,f,c
   496  000C6E  C035  F038         	movff	lcd_caracter@caracter,??_lcd_caracter+1
   497  000C72  0E0F               	movlw	15
   498  000C74  1638               	andwf	??_lcd_caracter+1,f,c
   499  000C76  3883               	swapf	3971,w,c	;volatile
   500  000C78  0B0F               	andlw	15
   501  000C7A  0B0F               	andlw	15
   502  000C7C  090F               	iorlw	15
   503  000C7E  1438               	andwf	??_lcd_caracter+1,w,c
   504  000C80  6E39               	movwf	(??_lcd_caracter+2)& (0+255),c
   505  000C82  3839               	swapf	??_lcd_caracter+2,w,c
   506  000C84  0BF0               	andlw	240
   507  000C86  1037               	iorwf	??_lcd_caracter,w,c
   508  000C88  6E83               	movwf	3971,c	;volatile
   509                           
   510                           ;lcd.c: 293: lcd_pulso();
   511  000C8A  ECF5  F006         	call	_lcd_pulso	;wreg free
   512                           
   513                           ;lcd.c: 294: PORTDbits.RD1=0;
   514  000C8E  9283               	bcf	3971,1,c	;volatile
   515  000C90  0012               	return		;funcret
   516  000C92                     __end_of_lcd_caracter:
   517                           	opt stack 0
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           status	equ	0xFD8
   523                           
   524 ;; *************** function _lcd_origen *****************
   525 ;; Defined at:
   526 ;;		line 309 in file "lcd.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   540 ;;      Params:         0       0       0       0       0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; Hardware stack levels required when called:    5
   547 ;; This function calls:
   548 ;;		_lcd_orden
   549 ;;		_wait_in_ms
   550 ;; This function is called by:
   551 ;;		_main
   552 ;;		_lcd_ubicarXY
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text3
   557  000E08                     __ptext3:
   558                           	opt stack 0
   559  000E08                     _lcd_origen:
   560                           	opt stack 25
   561                           
   562                           ;lcd.c: 310: lcd_orden(0x02);
   563                           
   564                           ;incstack = 0
   565  000E08  0E00               	movlw	0
   566  000E0A  6E36               	movwf	lcd_orden@orden+1,c
   567  000E0C  0E02               	movlw	2
   568  000E0E  6E35               	movwf	lcd_orden@orden,c
   569  000E10  EC49  F006         	call	_lcd_orden	;wreg free
   570                           
   571                           ;lcd.c: 311: wait_in_ms(4);
   572  000E14  0E00               	movlw	0
   573  000E16  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   574  000E18  0E04               	movlw	4
   575  000E1A  6E2B               	movwf	wait_in_ms@time_in_ms,c
   576  000E1C  EC58  F005         	call	_wait_in_ms	;wreg free
   577  000E20  0012               	return		;funcret
   578  000E22                     __end_of_lcd_origen:
   579                           	opt stack 0
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           status	equ	0xFD8
   585                           
   586 ;; *************** function _lcd_iniciar *****************
   587 ;; Defined at:
   588 ;;		line 225 in file "lcd.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         0       0       0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    5
   609 ;; This function calls:
   610 ;;		_lcd_orden
   611 ;;		_lcd_pulso
   612 ;;		_wait_in_ms
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text4
   619  0009E2                     __ptext4:
   620                           	opt stack 0
   621  0009E2                     _lcd_iniciar:
   622                           	opt stack 25
   623                           
   624                           ;lcd.c: 226: TRISDbits.TRISD1=0;
   625                           
   626                           ;incstack = 0
   627  0009E2  9295               	bcf	3989,1,c	;volatile
   628                           
   629                           ;lcd.c: 227: TRISDbits.TRISD2=0;
   630  0009E4  9495               	bcf	3989,2,c	;volatile
   631                           
   632                           ;lcd.c: 228: TRISDbits.TRISD3=0;
   633  0009E6  9695               	bcf	3989,3,c	;volatile
   634                           
   635                           ;lcd.c: 229: TRISDbits.TRISD4=0;
   636  0009E8  9895               	bcf	3989,4,c	;volatile
   637                           
   638                           ;lcd.c: 230: TRISDbits.TRISD5=0;
   639  0009EA  9A95               	bcf	3989,5,c	;volatile
   640                           
   641                           ;lcd.c: 231: TRISDbits.TRISD6=0;
   642  0009EC  9C95               	bcf	3989,6,c	;volatile
   643                           
   644                           ;lcd.c: 232: TRISDbits.TRISD7=0;
   645  0009EE  9E95               	bcf	3989,7,c	;volatile
   646                           
   647                           ;lcd.c: 234: PORTDbits.RD1=0;
   648  0009F0  9283               	bcf	3971,1,c	;volatile
   649                           
   650                           ;lcd.c: 235: PORTDbits.RD2=0;
   651  0009F2  9483               	bcf	3971,2,c	;volatile
   652                           
   653                           ;lcd.c: 236: PORTDbits.RD3=0;
   654  0009F4  9683               	bcf	3971,3,c	;volatile
   655                           
   656                           ;lcd.c: 237: PORTDbits.RD4=0;
   657  0009F6  9883               	bcf	3971,4,c	;volatile
   658                           
   659                           ;lcd.c: 238: PORTDbits.RD5=0;
   660  0009F8  9A83               	bcf	3971,5,c	;volatile
   661                           
   662                           ;lcd.c: 239: PORTDbits.RD6=0;
   663  0009FA  9C83               	bcf	3971,6,c	;volatile
   664                           
   665                           ;lcd.c: 240: PORTDbits.RD7=0;
   666  0009FC  9E83               	bcf	3971,7,c	;volatile
   667                           
   668                           ;lcd.c: 242: wait_in_ms(20);
   669  0009FE  0E00               	movlw	0
   670  000A00  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   671  000A02  0E14               	movlw	20
   672  000A04  6E2B               	movwf	wait_in_ms@time_in_ms,c
   673  000A06  EC58  F005         	call	_wait_in_ms	;wreg free
   674                           
   675                           ;lcd.c: 243: PORTD=0X03<<4;
   676  000A0A  0E30               	movlw	48
   677  000A0C  6E83               	movwf	3971,c	;volatile
   678                           
   679                           ;lcd.c: 244: lcd_pulso();
   680  000A0E  ECF5  F006         	call	_lcd_pulso	;wreg free
   681                           
   682                           ;lcd.c: 245: wait_in_ms(4);
   683  000A12  0E00               	movlw	0
   684  000A14  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   685  000A16  0E04               	movlw	4
   686  000A18  6E2B               	movwf	wait_in_ms@time_in_ms,c
   687  000A1A  EC58  F005         	call	_wait_in_ms	;wreg free
   688                           
   689                           ;lcd.c: 247: PORTD=0X03<<4;
   690  000A1E  0E30               	movlw	48
   691  000A20  6E83               	movwf	3971,c	;volatile
   692                           
   693                           ;lcd.c: 248: lcd_pulso();
   694  000A22  ECF5  F006         	call	_lcd_pulso	;wreg free
   695                           
   696                           ;lcd.c: 249: wait_in_ms(4);
   697  000A26  0E00               	movlw	0
   698  000A28  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   699  000A2A  0E04               	movlw	4
   700  000A2C  6E2B               	movwf	wait_in_ms@time_in_ms,c
   701  000A2E  EC58  F005         	call	_wait_in_ms	;wreg free
   702                           
   703                           ;lcd.c: 251: PORTD=0X03<<4;
   704  000A32  0E30               	movlw	48
   705  000A34  6E83               	movwf	3971,c	;volatile
   706                           
   707                           ;lcd.c: 252: lcd_pulso();
   708  000A36  ECF5  F006         	call	_lcd_pulso	;wreg free
   709                           
   710                           ;lcd.c: 253: wait_in_ms(1);
   711  000A3A  0E00               	movlw	0
   712  000A3C  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   713  000A3E  0E01               	movlw	1
   714  000A40  6E2B               	movwf	wait_in_ms@time_in_ms,c
   715  000A42  EC58  F005         	call	_wait_in_ms	;wreg free
   716                           
   717                           ;lcd.c: 255: PORTD=0X02<<4;
   718  000A46  0E20               	movlw	32
   719  000A48  6E83               	movwf	3971,c	;volatile
   720                           
   721                           ;lcd.c: 256: lcd_pulso();
   722  000A4A  ECF5  F006         	call	_lcd_pulso	;wreg free
   723                           
   724                           ;lcd.c: 258: lcd_orden(0x28);
   725  000A4E  0E00               	movlw	0
   726  000A50  6E36               	movwf	lcd_orden@orden+1,c
   727  000A52  0E28               	movlw	40
   728  000A54  6E35               	movwf	lcd_orden@orden,c
   729  000A56  EC49  F006         	call	_lcd_orden	;wreg free
   730                           
   731                           ;lcd.c: 259: wait_in_ms(8);
   732  000A5A  0E00               	movlw	0
   733  000A5C  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   734  000A5E  0E08               	movlw	8
   735  000A60  6E2B               	movwf	wait_in_ms@time_in_ms,c
   736  000A62  EC58  F005         	call	_wait_in_ms	;wreg free
   737                           
   738                           ;lcd.c: 261: lcd_orden(0x0c);
   739  000A66  0E00               	movlw	0
   740  000A68  6E36               	movwf	lcd_orden@orden+1,c
   741  000A6A  0E0C               	movlw	12
   742  000A6C  6E35               	movwf	lcd_orden@orden,c
   743  000A6E  EC49  F006         	call	_lcd_orden	;wreg free
   744                           
   745                           ;lcd.c: 262: wait_in_ms(8);
   746  000A72  0E00               	movlw	0
   747  000A74  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   748  000A76  0E08               	movlw	8
   749  000A78  6E2B               	movwf	wait_in_ms@time_in_ms,c
   750  000A7A  EC58  F005         	call	_wait_in_ms	;wreg free
   751                           
   752                           ;lcd.c: 264: lcd_orden(0x01);
   753  000A7E  0E00               	movlw	0
   754  000A80  6E36               	movwf	lcd_orden@orden+1,c
   755  000A82  0E01               	movlw	1
   756  000A84  6E35               	movwf	lcd_orden@orden,c
   757  000A86  EC49  F006         	call	_lcd_orden	;wreg free
   758                           
   759                           ;lcd.c: 265: wait_in_ms(2);
   760  000A8A  0E00               	movlw	0
   761  000A8C  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   762  000A8E  0E02               	movlw	2
   763  000A90  6E2B               	movwf	wait_in_ms@time_in_ms,c
   764  000A92  EC58  F005         	call	_wait_in_ms	;wreg free
   765                           
   766                           ;lcd.c: 267: lcd_orden(0x06);
   767  000A96  0E00               	movlw	0
   768  000A98  6E36               	movwf	lcd_orden@orden+1,c
   769  000A9A  0E06               	movlw	6
   770  000A9C  6E35               	movwf	lcd_orden@orden,c
   771  000A9E  EC49  F006         	call	_lcd_orden	;wreg free
   772                           
   773                           ;lcd.c: 268: wait_in_ms(8);
   774  000AA2  0E00               	movlw	0
   775  000AA4  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   776  000AA6  0E08               	movlw	8
   777  000AA8  6E2B               	movwf	wait_in_ms@time_in_ms,c
   778  000AAA  EC58  F005         	call	_wait_in_ms	;wreg free
   779  000AAE  0012               	return		;funcret
   780  000AB0                     __end_of_lcd_iniciar:
   781                           	opt stack 0
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _lcd_orden *****************
   789 ;; Defined at:
   790 ;;		line 278 in file "lcd.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  orden           2   52[COMRAM] unsigned int 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         2       0       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          5       0       0       0       0       0       0       0       0
   807 ;;      Totals:         7       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:        7 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    4
   811 ;; This function calls:
   812 ;;		_lcd_pulso
   813 ;; This function is called by:
   814 ;;		_lcd_iniciar
   815 ;;		_lcd_origen
   816 ;;		_lcd_limpiar
   817 ;;		_lcd_ubicarXY
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text5
   822  000C92                     __ptext5:
   823                           	opt stack 0
   824  000C92                     _lcd_orden:
   825                           	opt stack 25
   826                           
   827                           ;lcd.c: 279: PORTDbits.RD1=0;
   828                           
   829                           ;incstack = 0
   830  000C92  9283               	bcf	3971,1,c	;volatile
   831                           
   832                           ;lcd.c: 281: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden>>4&0x0f))<<4)|(PORTD&0x0f));
   833  000C94  CF83 F037          	movff	3971,??_lcd_orden	;volatile
   834  000C98  0E0F               	movlw	15
   835  000C9A  1637               	andwf	??_lcd_orden,f,c
   836  000C9C  C035  F038         	movff	lcd_orden@orden,??_lcd_orden+1
   837  000CA0  C036  F039         	movff	lcd_orden@orden+1,??_lcd_orden+2
   838  000CA4  0E04               	movlw	4
   839  000CA6  6E3A               	movwf	(??_lcd_orden+3)& (0+255),c
   840  000CA8                     u675:
   841  000CA8  90D8               	bcf	status,0,c
   842  000CAA  3239               	rrcf	??_lcd_orden+2,f,c
   843  000CAC  3238               	rrcf	??_lcd_orden+1,f,c
   844  000CAE  2E3A               	decfsz	(??_lcd_orden+3)& (0+255),f,c
   845  000CB0  D7FB               	goto	u675
   846  000CB2  0E0F               	movlw	15
   847  000CB4  1638               	andwf	??_lcd_orden+1,f,c
   848  000CB6  3883               	swapf	3971,w,c	;volatile
   849  000CB8  0B0F               	andlw	15
   850  000CBA  0B0F               	andlw	15
   851  000CBC  090F               	iorlw	15
   852  000CBE  1438               	andwf	??_lcd_orden+1,w,c
   853  000CC0  6E3B               	movwf	(??_lcd_orden+4)& (0+255),c
   854  000CC2  383B               	swapf	??_lcd_orden+4,w,c
   855  000CC4  0BF0               	andlw	240
   856  000CC6  1037               	iorwf	??_lcd_orden,w,c
   857  000CC8  6E83               	movwf	3971,c	;volatile
   858                           
   859                           ;lcd.c: 282: lcd_pulso();
   860  000CCA  ECF5  F006         	call	_lcd_pulso	;wreg free
   861                           
   862                           ;lcd.c: 283: PORTD=(((((PORTD>>4&0x0f)|0x0f)&(orden&0x0f))<<4)|(PORTD&0x0f));
   863  000CCE  CF83 F037          	movff	3971,??_lcd_orden	;volatile
   864  000CD2  0E0F               	movlw	15
   865  000CD4  1637               	andwf	??_lcd_orden,f,c
   866  000CD6  C035  F038         	movff	lcd_orden@orden,??_lcd_orden+1
   867  000CDA  0E0F               	movlw	15
   868  000CDC  1638               	andwf	??_lcd_orden+1,f,c
   869  000CDE  3883               	swapf	3971,w,c	;volatile
   870  000CE0  0B0F               	andlw	15
   871  000CE2  0B0F               	andlw	15
   872  000CE4  090F               	iorlw	15
   873  000CE6  1438               	andwf	??_lcd_orden+1,w,c
   874  000CE8  6E39               	movwf	(??_lcd_orden+2)& (0+255),c
   875  000CEA  3839               	swapf	??_lcd_orden+2,w,c
   876  000CEC  0BF0               	andlw	240
   877  000CEE  1037               	iorwf	??_lcd_orden,w,c
   878  000CF0  6E83               	movwf	3971,c	;volatile
   879                           
   880                           ;lcd.c: 284: lcd_pulso();
   881  000CF2  ECF5  F006         	call	_lcd_pulso	;wreg free
   882  000CF6  0012               	return		;funcret
   883  000CF8                     __end_of_lcd_orden:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           status	equ	0xFD8
   890                           
   891 ;; *************** function _lcd_pulso *****************
   892 ;; Defined at:
   893 ;;		line 271 in file "lcd.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   907 ;;      Params:         0       0       0       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    3
   914 ;; This function calls:
   915 ;;		_wait_in_ms
   916 ;; This function is called by:
   917 ;;		_lcd_iniciar
   918 ;;		_lcd_orden
   919 ;;		_lcd_caracter
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text6
   924  000DEA                     __ptext6:
   925                           	opt stack 0
   926  000DEA                     _lcd_pulso:
   927                           	opt stack 25
   928                           
   929                           ;lcd.c: 272: PORTDbits.RD3=1;
   930                           
   931                           ;incstack = 0
   932  000DEA  8683               	bsf	3971,3,c	;volatile
   933                           
   934                           ;lcd.c: 273: wait_in_ms(2);
   935  000DEC  0E00               	movlw	0
   936  000DEE  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   937  000DF0  0E02               	movlw	2
   938  000DF2  6E2B               	movwf	wait_in_ms@time_in_ms,c
   939  000DF4  EC58  F005         	call	_wait_in_ms	;wreg free
   940                           
   941                           ;lcd.c: 274: PORTDbits.RD3=0;
   942  000DF8  9683               	bcf	3971,3,c	;volatile
   943                           
   944                           ;lcd.c: 275: wait_in_ms(2);
   945  000DFA  0E00               	movlw	0
   946  000DFC  6E2C               	movwf	wait_in_ms@time_in_ms+1,c
   947  000DFE  0E02               	movlw	2
   948  000E00  6E2B               	movwf	wait_in_ms@time_in_ms,c
   949  000E02  EC58  F005         	call	_wait_in_ms	;wreg free
   950  000E06  0012               	return		;funcret
   951  000E08                     __end_of_lcd_pulso:
   952                           	opt stack 0
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           status	equ	0xFD8
   958                           
   959 ;; *************** function _wait_in_ms *****************
   960 ;; Defined at:
   961 ;;		line 80 in file "config.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  time_in_ms      2   42[COMRAM] int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  count_ms        2   50[COMRAM] unsigned int 
   966 ;;  count           2   48[COMRAM] unsigned int 
   967 ;;  flag            2   46[COMRAM] unsigned int 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         2       0       0       0       0       0       0       0       0
   978 ;;      Locals:         6       0       0       0       0       0       0       0       0
   979 ;;      Temps:          2       0       0       0       0       0       0       0       0
   980 ;;      Totals:        10       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:       10 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    2
   984 ;; This function calls:
   985 ;;		___awtoft
   986 ;;		___ftdiv
   987 ;;		___fttol
   988 ;; This function is called by:
   989 ;;		_lcd_iniciar
   990 ;;		_lcd_pulso
   991 ;;		_lcd_origen
   992 ;;		_lcd_limpiar
   993 ;;		_Lcd_Cmd
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text7
   998  000AB0                     __ptext7:
   999                           	opt stack 0
  1000  000AB0                     _wait_in_ms:
  1001                           	opt stack 25
  1002                           
  1003                           ;config.c: 81: unsigned int count = 0;
  1004                           
  1005                           ;incstack = 0
  1006  000AB0  0E00               	movlw	0
  1007  000AB2  6E32               	movwf	wait_in_ms@count+1,c
  1008  000AB4  0E00               	movlw	0
  1009  000AB6  6E31               	movwf	wait_in_ms@count,c
  1010                           
  1011                           ;config.c: 82: unsigned int count_ms = 0;
  1012  000AB8  0E00               	movlw	0
  1013  000ABA  6E34               	movwf	wait_in_ms@count_ms+1,c
  1014  000ABC  0E00               	movlw	0
  1015  000ABE  6E33               	movwf	wait_in_ms@count_ms,c
  1016                           
  1017                           ;config.c: 83: unsigned int flag = 0;
  1018  000AC0  0E00               	movlw	0
  1019  000AC2  6E30               	movwf	wait_in_ms@flag+1,c
  1020  000AC4  0E00               	movlw	0
  1021  000AC6  6E2F               	movwf	wait_in_ms@flag,c
  1022                           
  1023                           ;config.c: 85: TMR0L = 131;
  1024  000AC8  0E83               	movlw	131
  1025  000ACA  6ED6               	movwf	4054,c	;volatile
  1026                           
  1027                           ;config.c: 88: count_ms = ((8000000)*0.001)/((256-TMR0L)*32);
  1028  000ACC  50D6               	movf	4054,w,c	;volatile
  1029  000ACE  6E2D               	movwf	??_wait_in_ms& (0+255),c
  1030  000AD0  6A2E               	clrf	(??_wait_in_ms+1)& (0+255),c
  1031  000AD2  1E2D               	comf	??_wait_in_ms,f,c
  1032  000AD4  1E2E               	comf	??_wait_in_ms+1,f,c
  1033  000AD6  4A2D               	infsnz	??_wait_in_ms,f,c
  1034  000AD8  2A2E               	incf	??_wait_in_ms+1,f,c
  1035  000ADA  0E05               	movlw	5
  1036  000ADC                     u625:
  1037  000ADC  90D8               	bcf	status,0,c
  1038  000ADE  362D               	rlcf	??_wait_in_ms,f,c
  1039  000AE0  362E               	rlcf	??_wait_in_ms+1,f,c
  1040  000AE2  2EE8               	decfsz	wreg,f,c
  1041  000AE4  D7FB               	goto	u625
  1042  000AE6  0E00               	movlw	0
  1043  000AE8  242D               	addwf	??_wait_in_ms,w,c
  1044  000AEA  6E09               	movwf	___awtoft@c,c
  1045  000AEC  0E20               	movlw	32
  1046  000AEE  202E               	addwfc	??_wait_in_ms+1,w,c
  1047  000AF0  6E0A               	movwf	___awtoft@c+1,c
  1048  000AF2  ECAC  F006         	call	___awtoft	;wreg free
  1049  000AF6  C009  F010         	movff	?___awtoft,___ftdiv@f2
  1050  000AFA  C00A  F011         	movff	?___awtoft+1,___ftdiv@f2+1
  1051  000AFE  C00B  F012         	movff	?___awtoft+2,___ftdiv@f2+2
  1052  000B02  0E00               	movlw	0
  1053  000B04  6E0D               	movwf	___ftdiv@f1,c
  1054  000B06  0EFA               	movlw	250
  1055  000B08  6E0E               	movwf	___ftdiv@f1+1,c
  1056  000B0A  0E45               	movlw	69
  1057  000B0C  6E0F               	movwf	___ftdiv@f1+2,c
  1058  000B0E  EC7E  F004         	call	___ftdiv	;wreg free
  1059  000B12  C00D  F01C         	movff	?___ftdiv,___fttol@f1
  1060  000B16  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
  1061  000B1A  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
  1062  000B1E  EC04  F004         	call	___fttol	;wreg free
  1063  000B22  C01C  F033         	movff	?___fttol,wait_in_ms@count_ms
  1064  000B26  C01D  F034         	movff	?___fttol+1,wait_in_ms@count_ms+1
  1065                           
  1066                           ;config.c: 90: TMR0ON = 1;
  1067  000B2A  8ED5               	bsf	4053,7,c	;volatile
  1068                           
  1069                           ;config.c: 92: while (count < count_ms){
  1070  000B2C  D020               	goto	l136
  1071  000B2E                     l132:
  1072                           
  1073                           ;config.c: 93: if(TMR0IF == 1){
  1074  000B2E  A4F2               	btfss	intcon,2,c	;volatile
  1075  000B30  D01E               	goto	l136
  1076                           
  1077                           ;config.c: 94: TMR0IF = 0;
  1078  000B32  94F2               	bcf	intcon,2,c	;volatile
  1079                           
  1080                           ;config.c: 95: TMR0L = 131;
  1081  000B34  0E83               	movlw	131
  1082  000B36  6ED6               	movwf	4054,c	;volatile
  1083                           
  1084                           ;config.c: 96: count ++;
  1085  000B38  4A31               	infsnz	wait_in_ms@count,f,c
  1086  000B3A  2A32               	incf	wait_in_ms@count+1,f,c
  1087                           
  1088                           ;config.c: 97: if (count == count_ms){
  1089  000B3C  5033               	movf	wait_in_ms@count_ms,w,c
  1090  000B3E  1831               	xorwf	wait_in_ms@count,w,c
  1091  000B40  E116               	bnz	l1254
  1092  000B42  5034               	movf	wait_in_ms@count_ms+1,w,c
  1093  000B44  1832               	xorwf	wait_in_ms@count+1,w,c
  1094  000B46  A4D8               	btfss	status,2,c
  1095  000B48  D012               	goto	l136
  1096                           
  1097                           ;config.c: 98: flag++;
  1098  000B4A  4A2F               	infsnz	wait_in_ms@flag,f,c
  1099  000B4C  2A30               	incf	wait_in_ms@flag+1,f,c
  1100                           
  1101                           ;config.c: 99: if (flag != time_in_ms){
  1102  000B4E  502F               	movf	wait_in_ms@flag,w,c
  1103  000B50  182B               	xorwf	wait_in_ms@time_in_ms,w,c
  1104  000B52  E104               	bnz	u650
  1105  000B54  5030               	movf	wait_in_ms@flag+1,w,c
  1106  000B56  182C               	xorwf	wait_in_ms@time_in_ms+1,w,c
  1107  000B58  B4D8               	btfsc	status,2,c
  1108  000B5A  D005               	goto	l135
  1109  000B5C                     u650:
  1110                           
  1111                           ;config.c: 100: count = 0;
  1112  000B5C  0E00               	movlw	0
  1113  000B5E  6E32               	movwf	wait_in_ms@count+1,c
  1114  000B60  0E00               	movlw	0
  1115  000B62  6E31               	movwf	wait_in_ms@count,c
  1116                           
  1117                           ;config.c: 101: }
  1118  000B64  D004               	goto	l136
  1119  000B66                     l135:
  1120                           
  1121                           ;config.c: 102: else{
  1122                           ;config.c: 103: count = count_ms;
  1123  000B66  C033  F031         	movff	wait_in_ms@count_ms,wait_in_ms@count
  1124  000B6A  C034  F032         	movff	wait_in_ms@count_ms+1,wait_in_ms@count+1
  1125  000B6E                     l136:
  1126  000B6E                     l1254:
  1127  000B6E  5033               	movf	wait_in_ms@count_ms,w,c
  1128  000B70  5C31               	subwf	wait_in_ms@count,w,c
  1129  000B72  5034               	movf	wait_in_ms@count_ms+1,w,c
  1130  000B74  5832               	subwfb	wait_in_ms@count+1,w,c
  1131  000B76  B0D8               	btfsc	status,0,c
  1132  000B78  0012               	return	
  1133  000B7A  D7D9               	goto	l132
  1134  000B7C                     __end_of_wait_in_ms:
  1135                           	opt stack 0
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           intcon	equ	0xFF2
  1141                           wreg	equ	0xFE8
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function ___fttol *****************
  1145 ;; Defined at:
  1146 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  f1              3   27[COMRAM] float 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  lval            4   37[COMRAM] unsigned long 
  1151 ;;  exp1            1   41[COMRAM] unsigned char 
  1152 ;;  sign1           1   36[COMRAM] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  4   27[COMRAM] long 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1162 ;;      Params:         4       0       0       0       0       0       0       0       0
  1163 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1164 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1165 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1166 ;;Total ram usage:       15 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_wait_in_ms
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text8
  1176  000808                     __ptext8:
  1177                           	opt stack 0
  1178  000808                     ___fttol:
  1179                           	opt stack 26
  1180                           
  1181                           ;incstack = 0
  1182  000808  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1183  00080C  6A21               	clrf	(??___fttol+1)& (0+255),c
  1184  00080E  6A22               	clrf	(??___fttol+2)& (0+255),c
  1185  000810  341D               	rlcf	___fttol@f1+1,w,c
  1186  000812  3620               	rlcf	??___fttol& (0+255),f,c
  1187  000814  E301               	bnc	u541
  1188  000816  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1189  000818                     u541:
  1190  000818  5020               	movf	??___fttol,w,c
  1191  00081A  6E2A               	movwf	___fttol@exp1,c
  1192  00081C  502A               	movf	___fttol@exp1,w,c
  1193  00081E  A4D8               	btfss	status,2,c
  1194  000820  D009               	goto	l459
  1195  000822  0E00               	movlw	0
  1196  000824  6E1C               	movwf	?___fttol,c
  1197  000826  0E00               	movlw	0
  1198  000828  6E1D               	movwf	?___fttol+1,c
  1199  00082A  0E00               	movlw	0
  1200  00082C  6E1E               	movwf	?___fttol+2,c
  1201  00082E  0E00               	movlw	0
  1202  000830  6E1F               	movwf	?___fttol+3,c
  1203  000832  0012               	return	
  1204  000834                     l459:
  1205  000834  0E17               	movlw	23
  1206  000836  6E20               	movwf	??___fttol& (0+255),c
  1207  000838  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1208  00083C  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1209  000840  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1210  000844  2820               	incf	??___fttol,w,c
  1211  000846  6E24               	movwf	(??___fttol+4)& (0+255),c
  1212  000848  D004               	goto	u560
  1213  00084A                     u565:
  1214  00084A  90D8               	bcf	status,0,c
  1215  00084C  3223               	rrcf	??___fttol+3,f,c
  1216  00084E  3222               	rrcf	??___fttol+2,f,c
  1217  000850  3221               	rrcf	??___fttol+1,f,c
  1218  000852                     u560:
  1219  000852  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1220  000854  D7FA               	goto	u565
  1221  000856  5021               	movf	??___fttol+1,w,c
  1222  000858  6E25               	movwf	___fttol@sign1,c
  1223  00085A  8E1D               	bsf	___fttol@f1+1,7,c
  1224  00085C  0EFF               	movlw	255
  1225  00085E  161C               	andwf	___fttol@f1,f,c
  1226  000860  0EFF               	movlw	255
  1227  000862  161D               	andwf	___fttol@f1+1,f,c
  1228  000864  0E00               	movlw	0
  1229  000866  161E               	andwf	___fttol@f1+2,f,c
  1230  000868  501C               	movf	___fttol@f1,w,c
  1231  00086A  6E26               	movwf	___fttol@lval,c
  1232  00086C  501D               	movf	___fttol@f1+1,w,c
  1233  00086E  6E27               	movwf	___fttol@lval+1,c
  1234  000870  501E               	movf	___fttol@f1+2,w,c
  1235  000872  6E28               	movwf	___fttol@lval+2,c
  1236  000874  6A29               	clrf	___fttol@lval+3,c
  1237  000876  0E8E               	movlw	142
  1238  000878  5E2A               	subwf	___fttol@exp1,f,c
  1239  00087A  AE2A               	btfss	___fttol@exp1,7,c
  1240  00087C  D016               	goto	l461
  1241  00087E  502A               	movf	___fttol@exp1,w,c
  1242  000880  0A80               	xorlw	128
  1243  000882  0F8F               	addlw	143
  1244  000884  B0D8               	btfsc	status,0,c
  1245  000886  D009               	goto	l462
  1246  000888  0E00               	movlw	0
  1247  00088A  6E1C               	movwf	?___fttol,c
  1248  00088C  0E00               	movlw	0
  1249  00088E  6E1D               	movwf	?___fttol+1,c
  1250  000890  0E00               	movlw	0
  1251  000892  6E1E               	movwf	?___fttol+2,c
  1252  000894  0E00               	movlw	0
  1253  000896  6E1F               	movwf	?___fttol+3,c
  1254  000898  0012               	return	
  1255  00089A                     l462:
  1256  00089A  90D8               	bcf	status,0,c
  1257  00089C  3229               	rrcf	___fttol@lval+3,f,c
  1258  00089E  3228               	rrcf	___fttol@lval+2,f,c
  1259  0008A0  3227               	rrcf	___fttol@lval+1,f,c
  1260  0008A2  3226               	rrcf	___fttol@lval,f,c
  1261  0008A4  3E2A               	incfsz	___fttol@exp1,f,c
  1262  0008A6  D7F9               	goto	l462
  1263  0008A8  D015               	goto	u600
  1264  0008AA                     l461:
  1265  0008AA  0E17               	movlw	23
  1266  0008AC  642A               	cpfsgt	___fttol@exp1,c
  1267  0008AE  D00F               	goto	l467
  1268  0008B0  0E00               	movlw	0
  1269  0008B2  6E1C               	movwf	?___fttol,c
  1270  0008B4  0E00               	movlw	0
  1271  0008B6  6E1D               	movwf	?___fttol+1,c
  1272  0008B8  0E00               	movlw	0
  1273  0008BA  6E1E               	movwf	?___fttol+2,c
  1274  0008BC  0E00               	movlw	0
  1275  0008BE  6E1F               	movwf	?___fttol+3,c
  1276  0008C0  0012               	return	
  1277  0008C2  90D8               	bcf	status,0,c
  1278  0008C4  3626               	rlcf	___fttol@lval,f,c
  1279  0008C6  3627               	rlcf	___fttol@lval+1,f,c
  1280  0008C8  3628               	rlcf	___fttol@lval+2,f,c
  1281  0008CA  3629               	rlcf	___fttol@lval+3,f,c
  1282  0008CC  062A               	decf	___fttol@exp1,f,c
  1283  0008CE                     l467:
  1284  0008CE  502A               	movf	___fttol@exp1,w,c
  1285  0008D0  A4D8               	btfss	status,2,c
  1286  0008D2  D7F7               	goto	l468
  1287  0008D4                     u600:
  1288  0008D4  5025               	movf	___fttol@sign1,w,c
  1289  0008D6  B4D8               	btfsc	status,2,c
  1290  0008D8  D008               	goto	l470
  1291  0008DA  1E29               	comf	___fttol@lval+3,f,c
  1292  0008DC  1E28               	comf	___fttol@lval+2,f,c
  1293  0008DE  1E27               	comf	___fttol@lval+1,f,c
  1294  0008E0  6C26               	negf	___fttol@lval,c
  1295  0008E2  0E00               	movlw	0
  1296  0008E4  2227               	addwfc	___fttol@lval+1,f,c
  1297  0008E6  2228               	addwfc	___fttol@lval+2,f,c
  1298  0008E8  2229               	addwfc	___fttol@lval+3,f,c
  1299  0008EA                     l470:
  1300  0008EA  C026  F01C         	movff	___fttol@lval,?___fttol
  1301  0008EE  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1302  0008F2  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1303  0008F6  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1304  0008FA  0012               	return	
  1305  0008FC                     __end_of___fttol:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           intcon	equ	0xFF2
  1312                           wreg	equ	0xFE8
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function ___ftdiv *****************
  1316 ;; Defined at:
  1317 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  f1              3   12[COMRAM] float 
  1320 ;;  f2              3   15[COMRAM] float 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  f3              3   22[COMRAM] float 
  1323 ;;  sign            1   26[COMRAM] unsigned char 
  1324 ;;  exp             1   25[COMRAM] unsigned char 
  1325 ;;  cntr            1   21[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  3   12[COMRAM] float 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         6       0       0       0       0       0       0       0       0
  1336 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1337 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1338 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1339 ;;Total ram usage:       15 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		___ftpack
  1344 ;; This function is called by:
  1345 ;;		_wait_in_ms
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text9
  1350  0008FC                     __ptext9:
  1351                           	opt stack 0
  1352  0008FC                     ___ftdiv:
  1353                           	opt stack 25
  1354                           
  1355                           ;incstack = 0
  1356  0008FC  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  1357  000900  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1358  000902  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1359  000904  340E               	rlcf	___ftdiv@f1+1,w,c
  1360  000906  3613               	rlcf	??___ftdiv& (0+255),f,c
  1361  000908  E301               	bnc	u481
  1362  00090A  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1363  00090C                     u481:
  1364  00090C  5013               	movf	??___ftdiv,w,c
  1365  00090E  6E1A               	movwf	___ftdiv@exp,c
  1366  000910  501A               	movf	___ftdiv@exp,w,c
  1367  000912  A4D8               	btfss	status,2,c
  1368  000914  D007               	goto	l423
  1369  000916  0E00               	movlw	0
  1370  000918  6E0D               	movwf	?___ftdiv,c
  1371  00091A  0E00               	movlw	0
  1372  00091C  6E0E               	movwf	?___ftdiv+1,c
  1373  00091E  0E00               	movlw	0
  1374  000920  6E0F               	movwf	?___ftdiv+2,c
  1375  000922  0012               	return	
  1376  000924                     l423:
  1377  000924  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  1378  000928  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1379  00092A  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1380  00092C  3411               	rlcf	___ftdiv@f2+1,w,c
  1381  00092E  3613               	rlcf	??___ftdiv& (0+255),f,c
  1382  000930  E301               	bnc	u501
  1383  000932  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1384  000934                     u501:
  1385  000934  5013               	movf	??___ftdiv,w,c
  1386  000936  6E1B               	movwf	___ftdiv@sign,c
  1387  000938  501B               	movf	___ftdiv@sign,w,c
  1388  00093A  A4D8               	btfss	status,2,c
  1389  00093C  D007               	goto	l425
  1390  00093E  0E00               	movlw	0
  1391  000940  6E0D               	movwf	?___ftdiv,c
  1392  000942  0E00               	movlw	0
  1393  000944  6E0E               	movwf	?___ftdiv+1,c
  1394  000946  0E00               	movlw	0
  1395  000948  6E0F               	movwf	?___ftdiv+2,c
  1396  00094A  0012               	return	
  1397  00094C                     l425:
  1398  00094C  0E00               	movlw	0
  1399  00094E  6E17               	movwf	___ftdiv@f3,c
  1400  000950  0E00               	movlw	0
  1401  000952  6E18               	movwf	___ftdiv@f3+1,c
  1402  000954  0E00               	movlw	0
  1403  000956  6E19               	movwf	___ftdiv@f3+2,c
  1404  000958  501B               	movf	___ftdiv@sign,w,c
  1405  00095A  0F89               	addlw	137
  1406  00095C  5E1A               	subwf	___ftdiv@exp,f,c
  1407  00095E  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  1408  000962  5012               	movf	___ftdiv@f2+2,w,c
  1409  000964  1A1B               	xorwf	___ftdiv@sign,f,c
  1410  000966  0E80               	movlw	128
  1411  000968  161B               	andwf	___ftdiv@sign,f,c
  1412  00096A  8E0E               	bsf	___ftdiv@f1+1,7,c
  1413  00096C  0EFF               	movlw	255
  1414  00096E  160D               	andwf	___ftdiv@f1,f,c
  1415  000970  0EFF               	movlw	255
  1416  000972  160E               	andwf	___ftdiv@f1+1,f,c
  1417  000974  0E00               	movlw	0
  1418  000976  160F               	andwf	___ftdiv@f1+2,f,c
  1419  000978  8E11               	bsf	___ftdiv@f2+1,7,c
  1420  00097A  0EFF               	movlw	255
  1421  00097C  1610               	andwf	___ftdiv@f2,f,c
  1422  00097E  0EFF               	movlw	255
  1423  000980  1611               	andwf	___ftdiv@f2+1,f,c
  1424  000982  0E00               	movlw	0
  1425  000984  1612               	andwf	___ftdiv@f2+2,f,c
  1426  000986  0E18               	movlw	24
  1427  000988  6E16               	movwf	___ftdiv@cntr,c
  1428  00098A  90D8               	bcf	status,0,c
  1429  00098C  3617               	rlcf	___ftdiv@f3,f,c
  1430  00098E  3618               	rlcf	___ftdiv@f3+1,f,c
  1431  000990  3619               	rlcf	___ftdiv@f3+2,f,c
  1432  000992  5010               	movf	___ftdiv@f2,w,c
  1433  000994  5C0D               	subwf	___ftdiv@f1,w,c
  1434  000996  5011               	movf	___ftdiv@f2+1,w,c
  1435  000998  580E               	subwfb	___ftdiv@f1+1,w,c
  1436  00099A  5012               	movf	___ftdiv@f2+2,w,c
  1437  00099C  580F               	subwfb	___ftdiv@f1+2,w,c
  1438  00099E  A0D8               	btfss	status,0,c
  1439  0009A0  D007               	goto	l427
  1440  0009A2  5010               	movf	___ftdiv@f2,w,c
  1441  0009A4  5E0D               	subwf	___ftdiv@f1,f,c
  1442  0009A6  5011               	movf	___ftdiv@f2+1,w,c
  1443  0009A8  5A0E               	subwfb	___ftdiv@f1+1,f,c
  1444  0009AA  5012               	movf	___ftdiv@f2+2,w,c
  1445  0009AC  5A0F               	subwfb	___ftdiv@f1+2,f,c
  1446  0009AE  8017               	bsf	___ftdiv@f3,0,c
  1447  0009B0                     l427:
  1448  0009B0  90D8               	bcf	status,0,c
  1449  0009B2  360D               	rlcf	___ftdiv@f1,f,c
  1450  0009B4  360E               	rlcf	___ftdiv@f1+1,f,c
  1451  0009B6  360F               	rlcf	___ftdiv@f1+2,f,c
  1452  0009B8  2E16               	decfsz	___ftdiv@cntr,f,c
  1453  0009BA  D7E7               	goto	l426
  1454  0009BC  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  1455  0009C0  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1456  0009C4  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1457  0009C8  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  1458  0009CC  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  1459  0009D0  ECBE  F005         	call	___ftpack	;wreg free
  1460  0009D4  C001  F00D         	movff	?___ftpack,?___ftdiv
  1461  0009D8  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  1462  0009DC  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  1463  0009E0  0012               	return	
  1464  0009E2                     __end_of___ftdiv:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           intcon	equ	0xFF2
  1471                           wreg	equ	0xFE8
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function ___awtoft *****************
  1475 ;; Defined at:
  1476 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  c               2    8[COMRAM] int 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  sign            1   11[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  3    8[COMRAM] float 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         3       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		___ftpack
  1499 ;; This function is called by:
  1500 ;;		_wait_in_ms
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505  000D58                     __ptext10:
  1506                           	opt stack 0
  1507  000D58                     ___awtoft:
  1508                           	opt stack 25
  1509                           
  1510                           ;incstack = 0
  1511  000D58  0E00               	movlw	0
  1512  000D5A  6E0C               	movwf	___awtoft@sign,c
  1513  000D5C  AE0A               	btfss	___awtoft@c+1,7,c
  1514  000D5E  D006               	goto	l340
  1515  000D60  6C09               	negf	___awtoft@c,c
  1516  000D62  1E0A               	comf	___awtoft@c+1,f,c
  1517  000D64  B0D8               	btfsc	status,0,c
  1518  000D66  2A0A               	incf	___awtoft@c+1,f,c
  1519  000D68  0E01               	movlw	1
  1520  000D6A  6E0C               	movwf	___awtoft@sign,c
  1521  000D6C                     l340:
  1522  000D6C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1523  000D70  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1524  000D74  6A03               	clrf	___ftpack@arg+2,c
  1525  000D76  0E8E               	movlw	142
  1526  000D78  6E04               	movwf	___ftpack@exp,c
  1527  000D7A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1528  000D7E  ECBE  F005         	call	___ftpack	;wreg free
  1529  000D82  C001  F009         	movff	?___ftpack,?___awtoft
  1530  000D86  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1531  000D8A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1532  000D8E  0012               	return	
  1533  000D90                     __end_of___awtoft:
  1534                           	opt stack 0
  1535                           tblptru	equ	0xFF8
  1536                           tblptrh	equ	0xFF7
  1537                           tblptrl	equ	0xFF6
  1538                           tablat	equ	0xFF5
  1539                           intcon	equ	0xFF2
  1540                           wreg	equ	0xFE8
  1541                           status	equ	0xFD8
  1542                           
  1543 ;; *************** function ___ftpack *****************
  1544 ;; Defined at:
  1545 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  arg             3    0[COMRAM] unsigned um
  1548 ;;  exp             1    3[COMRAM] unsigned char 
  1549 ;;  sign            1    4[COMRAM] unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  3    0[COMRAM] float 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1561 ;;      Params:         5       0       0       0       0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1563 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1564 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1565 ;;Total ram usage:        8 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		___awtoft
  1571 ;;		___ftdiv
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text11
  1576  000B7C                     __ptext11:
  1577                           	opt stack 0
  1578  000B7C                     ___ftpack:
  1579                           	opt stack 25
  1580                           
  1581                           ;incstack = 0
  1582  000B7C  5004               	movf	___ftpack@exp,w,c
  1583  000B7E  B4D8               	btfsc	status,2,c
  1584  000B80  D005               	goto	u410
  1585  000B82  5001               	movf	___ftpack@arg,w,c
  1586  000B84  1002               	iorwf	___ftpack@arg+1,w,c
  1587  000B86  1003               	iorwf	___ftpack@arg+2,w,c
  1588  000B88  A4D8               	btfss	status,2,c
  1589  000B8A  D00C               	goto	l359
  1590  000B8C                     u410:
  1591  000B8C  0E00               	movlw	0
  1592  000B8E  6E01               	movwf	?___ftpack,c
  1593  000B90  0E00               	movlw	0
  1594  000B92  6E02               	movwf	?___ftpack+1,c
  1595  000B94  0E00               	movlw	0
  1596  000B96  6E03               	movwf	?___ftpack+2,c
  1597  000B98  0012               	return	
  1598  000B9A  2A04               	incf	___ftpack@exp,f,c
  1599  000B9C  90D8               	bcf	status,0,c
  1600  000B9E  3203               	rrcf	___ftpack@arg+2,f,c
  1601  000BA0  3202               	rrcf	___ftpack@arg+1,f,c
  1602  000BA2  3201               	rrcf	___ftpack@arg,f,c
  1603  000BA4                     l359:
  1604  000BA4  0E00               	movlw	0
  1605  000BA6  1401               	andwf	___ftpack@arg,w,c
  1606  000BA8  6E06               	movwf	??___ftpack& (0+255),c
  1607  000BAA  0E00               	movlw	0
  1608  000BAC  1402               	andwf	___ftpack@arg+1,w,c
  1609  000BAE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1610  000BB0  0EFE               	movlw	254
  1611  000BB2  1403               	andwf	___ftpack@arg+2,w,c
  1612  000BB4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1613  000BB6  5006               	movf	??___ftpack,w,c
  1614  000BB8  1007               	iorwf	??___ftpack+1,w,c
  1615  000BBA  1008               	iorwf	??___ftpack+2,w,c
  1616  000BBC  B4D8               	btfsc	status,2,c
  1617  000BBE  D00C               	goto	l362
  1618  000BC0  D7EC               	goto	l360
  1619  000BC2  2A04               	incf	___ftpack@exp,f,c
  1620  000BC4  0E01               	movlw	1
  1621  000BC6  2601               	addwf	___ftpack@arg,f,c
  1622  000BC8  0E00               	movlw	0
  1623  000BCA  2202               	addwfc	___ftpack@arg+1,f,c
  1624  000BCC  0E00               	movlw	0
  1625  000BCE  2203               	addwfc	___ftpack@arg+2,f,c
  1626  000BD0  90D8               	bcf	status,0,c
  1627  000BD2  3203               	rrcf	___ftpack@arg+2,f,c
  1628  000BD4  3202               	rrcf	___ftpack@arg+1,f,c
  1629  000BD6  3201               	rrcf	___ftpack@arg,f,c
  1630  000BD8                     l362:
  1631  000BD8  0E00               	movlw	0
  1632  000BDA  1401               	andwf	___ftpack@arg,w,c
  1633  000BDC  6E06               	movwf	??___ftpack& (0+255),c
  1634  000BDE  0E00               	movlw	0
  1635  000BE0  1402               	andwf	___ftpack@arg+1,w,c
  1636  000BE2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1637  000BE4  0EFF               	movlw	255
  1638  000BE6  1403               	andwf	___ftpack@arg+2,w,c
  1639  000BE8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1640  000BEA  5006               	movf	??___ftpack,w,c
  1641  000BEC  1007               	iorwf	??___ftpack+1,w,c
  1642  000BEE  1008               	iorwf	??___ftpack+2,w,c
  1643  000BF0  B4D8               	btfsc	status,2,c
  1644  000BF2  D006               	goto	l365
  1645  000BF4  D7E6               	goto	l363
  1646  000BF6  0604               	decf	___ftpack@exp,f,c
  1647  000BF8  90D8               	bcf	status,0,c
  1648  000BFA  3601               	rlcf	___ftpack@arg,f,c
  1649  000BFC  3602               	rlcf	___ftpack@arg+1,f,c
  1650  000BFE  3603               	rlcf	___ftpack@arg+2,f,c
  1651  000C00                     l365:
  1652  000C00  BE02               	btfsc	___ftpack@arg+1,7,c
  1653  000C02  D003               	goto	u450
  1654  000C04  0E02               	movlw	2
  1655  000C06  6004               	cpfslt	___ftpack@exp,c
  1656  000C08  D7F6               	goto	l366
  1657  000C0A                     u450:
  1658  000C0A  A004               	btfss	___ftpack@exp,0,c
  1659  000C0C  9E02               	bcf	___ftpack@arg+1,7,c
  1660  000C0E  90D8               	bcf	status,0,c
  1661  000C10  3204               	rrcf	___ftpack@exp,f,c
  1662  000C12  5004               	movf	___ftpack@exp,w,c
  1663  000C14  1203               	iorwf	___ftpack@arg+2,f,c
  1664  000C16  5005               	movf	___ftpack@sign,w,c
  1665  000C18  A4D8               	btfss	status,2,c
  1666  000C1A  8E03               	bsf	___ftpack@arg+2,7,c
  1667  000C1C  C001  F001         	movff	___ftpack@arg,?___ftpack
  1668  000C20  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1669  000C24  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1670  000C28  0012               	return	
  1671  000C2A                     __end_of___ftpack:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           intcon	equ	0xFF2
  1678                           wreg	equ	0xFE8
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _configBoard *****************
  1682 ;; Defined at:
  1683 ;;		line 11 in file "config.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text12
  1711  000CF8                     __ptext12:
  1712                           	opt stack 0
  1713  000CF8                     _configBoard:
  1714                           	opt stack 30
  1715                           
  1716                           ;config.c: 15: INTCONbits.GIE = 0;
  1717                           
  1718                           ;incstack = 0
  1719  000CF8  9EF2               	bcf	intcon,7,c	;volatile
  1720                           
  1721                           ;config.c: 16: INTCONbits.PEIE = 0;
  1722  000CFA  9CF2               	bcf	intcon,6,c	;volatile
  1723                           
  1724                           ;config.c: 25: T0CONbits.TMR0ON = 1;
  1725  000CFC  8ED5               	bsf	4053,7,c	;volatile
  1726                           
  1727                           ;config.c: 26: T08BIT = 1;
  1728  000CFE  8CD5               	bsf	4053,6,c	;volatile
  1729                           
  1730                           ;config.c: 27: T0CONbits.T0CS = 0;
  1731  000D00  9AD5               	bcf	4053,5,c	;volatile
  1732                           
  1733                           ;config.c: 29: T0CONbits.PSA = 0;
  1734  000D02  96D5               	bcf	4053,3,c	;volatile
  1735                           
  1736                           ;config.c: 30: T0CONbits.T0PS = 100;
  1737  000D04  50D5               	movf	4053,w,c	;volatile
  1738  000D06  0BF8               	andlw	-8
  1739  000D08  0904               	iorlw	4
  1740  000D0A  6ED5               	movwf	4053,c	;volatile
  1741                           
  1742                           ;config.c: 31: INTCONbits.TMR0IF = 0;
  1743  000D0C  94F2               	bcf	intcon,2,c	;volatile
  1744                           
  1745                           ;config.c: 33: ADCON1bits.PCFG = 0b1111;
  1746  000D0E  80C1               	bsf	4033,0,c	;volatile
  1747  000D10  82C1               	bsf	4033,1,c	;volatile
  1748  000D12  84C1               	bsf	4033,2,c	;volatile
  1749  000D14  86C1               	bsf	4033,3,c	;volatile
  1750                           
  1751                           ;config.c: 44: ADCON0 = 0b00000111;
  1752  000D16  0E07               	movlw	7
  1753  000D18  6EC2               	movwf	4034,c	;volatile
  1754                           
  1755                           ;config.c: 47: ADCON0bits.ADON = 0;
  1756  000D1A  90C2               	bcf	4034,0,c	;volatile
  1757                           
  1758                           ;config.c: 51: ADCON2bits.ADFM = 1;
  1759  000D1C  8EC0               	bsf	4032,7,c	;volatile
  1760                           
  1761                           ;config.c: 52: ADCON2bits.ADCS = 0b110;
  1762  000D1E  50C0               	movf	4032,w,c	;volatile
  1763  000D20  0BF8               	andlw	-8
  1764  000D22  0906               	iorlw	6
  1765  000D24  6EC0               	movwf	4032,c	;volatile
  1766                           
  1767                           ;config.c: 53: ADCON2bits.ACQT = 0b101;
  1768  000D26  50C0               	movf	4032,w,c	;volatile
  1769  000D28  0BC7               	andlw	-57
  1770  000D2A  0928               	iorlw	40
  1771  000D2C  6EC0               	movwf	4032,c	;volatile
  1772                           
  1773                           ;config.c: 55: TRISAbits.RA1=1;
  1774  000D2E  8292               	bsf	3986,1,c	;volatile
  1775                           
  1776                           ;config.c: 56: ADCON2bits.ADCS=0b110;
  1777  000D30  50C0               	movf	4032,w,c	;volatile
  1778  000D32  0BF8               	andlw	-8
  1779  000D34  0906               	iorlw	6
  1780  000D36  6EC0               	movwf	4032,c	;volatile
  1781                           
  1782                           ;config.c: 57: ADCON1bits.VCFG1=0;
  1783  000D38  9AC1               	bcf	4033,5,c	;volatile
  1784                           
  1785                           ;config.c: 58: ADCON1bits.VCFG0=0;
  1786  000D3A  98C1               	bcf	4033,4,c	;volatile
  1787                           
  1788                           ;config.c: 60: ADCON2bits.ADFM=1;
  1789  000D3C  8EC0               	bsf	4032,7,c	;volatile
  1790                           
  1791                           ;config.c: 64: ADCON0bits.ADON=0;
  1792  000D3E  90C2               	bcf	4034,0,c	;volatile
  1793                           
  1794                           ;config.c: 66: PIE1bits.ADIE=0;
  1795  000D40  9C9D               	bcf	3997,6,c	;volatile
  1796                           
  1797                           ;config.c: 67: PIR1bits.ADIF=0;
  1798  000D42  9C9E               	bcf	3998,6,c	;volatile
  1799                           
  1800                           ;config.c: 69: ADCON2bits.ACQT=0b111;
  1801  000D44  86C0               	bsf	4032,3,c	;volatile
  1802  000D46  88C0               	bsf	4032,4,c	;volatile
  1803  000D48  8AC0               	bsf	4032,5,c	;volatile
  1804                           
  1805                           ;config.c: 70: ADCON0bits.GO=1;
  1806  000D4A  82C2               	bsf	4034,1,c	;volatile
  1807                           
  1808                           ;config.c: 72: RCIF=0;
  1809  000D4C  9A9E               	bcf	3998,5,c	;volatile
  1810                           
  1811                           ;config.c: 75: TRISD=0;
  1812  000D4E  0E00               	movlw	0
  1813  000D50  6E95               	movwf	3989,c	;volatile
  1814                           
  1815                           ;config.c: 76: PORTA=0;
  1816  000D52  0E00               	movlw	0
  1817  000D54  6E80               	movwf	3968,c	;volatile
  1818  000D56  0012               	return		;funcret
  1819  000D58                     __end_of_configBoard:
  1820                           	opt stack 0
  1821                           tblptru	equ	0xFF8
  1822                           tblptrh	equ	0xFF7
  1823                           tblptrl	equ	0xFF6
  1824                           tablat	equ	0xFF5
  1825                           intcon	equ	0xFF2
  1826                           wreg	equ	0xFE8
  1827                           status	equ	0xFD8
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           intcon	equ	0xFF2
  1833                           wreg	equ	0xFE8
  1834                           status	equ	0xFD8
  1835                           
  1836                           	psect	rparam
  1837  0000                     tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           intcon	equ	0xFF2
  1842                           wreg	equ	0xFE8
  1843                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_texto@cadena	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_lcd_texto
    _lcd_texto->_lcd_caracter
    _lcd_origen->_lcd_orden
    _lcd_iniciar->_lcd_orden
    _lcd_pulso->_wait_in_ms
    _wait_in_ms->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   43419
                        _configBoard
                        _lcd_iniciar
                         _lcd_origen
                          _lcd_texto
 ---------------------------------------------------------------------------------
 (1) _lcd_texto                                            2     0      2    7220
                                             59 COMRAM     2     0      2
                       _lcd_caracter
 ---------------------------------------------------------------------------------
 (2) _lcd_caracter                                         7     5      2    7099
                                             52 COMRAM     7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (1) _lcd_origen                                           0     0      0   14610
                          _lcd_orden
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (1) _lcd_iniciar                                          0     0      0   21589
                          _lcd_orden
                          _lcd_pulso
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_orden                                            7     5      2    7631
                                             52 COMRAM     7     5      2
                          _lcd_pulso
 ---------------------------------------------------------------------------------
 (3) _lcd_pulso                                            0     0      0    6979
                         _wait_in_ms
 ---------------------------------------------------------------------------------
 (4) _wait_in_ms                                          10     8      2    6979
                                             42 COMRAM    10     8      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     328
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    2946
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    2555
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _configBoard                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configBoard
   _lcd_iniciar
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _lcd_pulso
       _wait_in_ms
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_origen
     _lcd_orden
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
     _wait_in_ms
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _lcd_texto
     _lcd_caracter
       _lcd_pulso
         _wait_in_ms
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     3D      3D       1       64.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 23 19:12:50 2018

                     l27 0DAA                       l28 0D92                       l88 0DD8  
            __CFG_BORV$3 000000                      l132 0B2E                      l135 0B66  
                    l136 0B6E                      l340 0D6C                      l423 0924  
                    l360 0B9A                      l425 094C                      l362 0BD8  
                    l426 098A                      l363 0BC2                      l427 09B0  
                    l365 0C00                      l461 08AA                      l366 0BF6  
                    l470 08EA                      l462 089A                      l359 0BA4  
                    l467 08CE                      l459 0834                      l468 08C2  
                    u410 0B8C                      u501 0934                      u600 08D4  
                    u450 0C0A                      u541 0818                      u560 0852  
                    u481 090C                      u625 0ADC                      u650 0B5C  
                    u565 084A                      u675 0CA8                      u685 0C40  
                    wreg 000FE8           ??_lcd_caracter 0037             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0016             ___ftdiv@sign 001B             __CFG_WDT$OFF 000000  
                   l1254 0B6E                     STR_1 0801                     _RCIF 007CF5  
                   _main 0DBE             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
   lcd_caracter@caracter 0035             ___fttol@exp1 002A             ___fttol@lval 0026  
          __CFG_PLLDIV$2 000000                    ?_main 0001          __end_of___ftdiv 09E2  
        __end_of___fttol 08FC                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTD 000F83                    _TRISD 000F95           __CFG_FCMEN$OFF 000000  
          ___awtoft@sign 000C            ___ftpack@sign 0005                    tablat 000FF5  
                  status 000FD8          __initialization 0E22             __end_of_main 0DEA  
                 ??_main 003E            ___fttol@sign1 0025            __activetblptr 000001  
                 _ADCON0 000FC2                   _T08BIT 007EAE         __end_of___awtoft 0D90  
       __end_of___ftpack 0C2A                   _TMR0IF 007F92                   _TMR0ON 007EAF  
   __size_of_configBoard 0060     __end_of_lcd_caracter 0C92     __size_of_lcd_iniciar 00CE  
              ??___ftdiv 0013                ??___fttol 0020             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0E22            ___rparam_used 000001  
             ___ftdiv@f1 000D               ___ftdiv@f2 0010               ___ftdiv@f3 0017  
             ___awtoft@c 0009               ___fttol@f1 001C           __pcstackCOMRAM 0001  
     __size_of_lcd_orden 0066       __size_of_lcd_texto 002E       __size_of_lcd_pulso 001E  
         lcd_orden@orden 0035                ?___awtoft 0009                ?___ftpack 0001  
             _lcd_origen 0E08    __size_of_lcd_caracter 0068                  __Hparam 0000  
                __Lparam 0000        __end_of_lcd_orden 0CF8        __end_of_lcd_texto 0DBE  
      __end_of_lcd_pulso 0E08                  ___ftdiv 08FC                  ___fttol 0808  
           __psmallconst 0800                  __pcinit 0E22               ??___awtoft 000C  
             ??___ftpack 0006                  __ramtop 0800                  __ptext0 0DBE  
                __ptext1 0D90                  __ptext2 0C2A                  __ptext3 0E08  
                __ptext4 09E2                  __ptext5 0C92                  __ptext6 0DEA  
                __ptext7 0AB0                  __ptext8 0808                  __ptext9 08FC  
              _T0CONbits 000FD5             _lcd_caracter 0C2A     end_of_initialization 0E22  
   wait_in_ms@time_in_ms 002B               _wait_in_ms 0AB0                _PORTDbits 000F83  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISDbits 000F95              ?_lcd_origen 0001              ___ftdiv@exp 001A  
          ??_configBoard 0001            ??_lcd_iniciar 003C      start_initialization 0E22  
        wait_in_ms@count 0031       wait_in_ms@count_ms 0033      __end_of_configBoard 0D58  
    __size_of_lcd_origen 001A              ?_wait_in_ms 002B      __end_of_lcd_iniciar 0AB0  
      __size_of___awtoft 0038        __size_of___ftpack 00AE                 ?___ftdiv 000D  
               ?___fttol 001C                _lcd_orden 0C92                _lcd_texto 0D90  
              _lcd_pulso 0DEA              __smallconst 0800      __size_of_wait_in_ms 00CC  
            _configBoard 0CF8                 _PIE1bits 000F9D              _lcd_iniciar 09E2  
               _PIR1bits 000F9E               ?_lcd_orden 0035               ?_lcd_texto 003C  
             ?_lcd_pulso 0001               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0             ??_lcd_origen 003C           wait_in_ms@flag 002F  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
     __end_of_lcd_origen 0E22         __size_of___ftdiv 00E6         __size_of___fttol 00F4  
               ___awtoft 0D58                 ___ftpack 0B7C                 __ptext10 0D58  
               __ptext11 0B7C                 __ptext12 0CF8          lcd_texto@cadena 003C  
          __size_of_main 002C             ??_wait_in_ms 002D              ??_lcd_orden 0037  
            ??_lcd_texto 003E              ??_lcd_pulso 0035    __CFG_CPUDIV$OSC4_PLL6 000000  
             _INTCONbits 000FF2       __end_of_wait_in_ms 0B7C            ?_lcd_caracter 0035  
     __CFG_FOSC$HSPLL_HS 000000             ?_configBoard 0001             ?_lcd_iniciar 0001  
